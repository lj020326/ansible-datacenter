<?xml version="1.0" encoding="utf-8"?>
<configuration predefined="False" id="4603dc99-244c-4e87-b4ae-b4f0706b4103">
  <container name="PowerPack Info" predefined="False" id="f5f11900-7edc-47f6-9efa-87abd9d5df07">
    <items>
      <container name="PowerPack Name" predefined="False" id="01f58085-d817-4d04-8316-f978e8674b7e">
        <value>VMware vSphere Management</value>
      </container>
      <container name="Description" predefined="False" id="2a7a09ae-54f3-468b-a188-7c3b7c5eb6e3">
        <script><![CDATA[Remotely manage your VMware vSphere infrastructre. Generate vDiagrams in Visio and vReports in HTML to monitor and report on your infrastructure. Automate change in your infrastructure and generate scripts for offline scheduling.
Requirements: PowerGUI 2.3.0 or later and VMware vSphere PowerCLI 4.1 or later
Optional: Quest AD cmdlets 1.4 or later, Visio 2003 or later]]></script>
      </container>
      <container name="Required Snapins" predefined="False" id="2c4e1b31-79c0-46ad-aa27-eaacf1c10b59">
        <items>
          <container name="VMware.VimAutomation.Core" predefined="False" type="Snapin">
            <items>
              <item name="Author" predefined="False" id="514dab30-b238-4ae1-a6ac-38d5c3cfbed4">
                <value />
              </item>
              <item name="Version" predefined="False" id="8620403a-d313-44bb-8101-8b3090409c34">
                <value>0.0</value>
              </item>
            </items>
          </container>
        </items>
      </container>
      <container name="PowerPack Version" predefined="False" id="158620d6-6c0c-4c58-a3b0-8810fd17c3b1">
        <value>2.4.1.4</value>
      </container>
      <container name="PowerPack CreateDate" predefined="False" id="81ad5d68-143b-4c79-8a95-bef6c941282b">
        <value>2011-01-10 13:13:10Z</value>
      </container>
      <container name="Update URL" predefined="False" id="7600fdf1-ca11-4145-87fa-f3bc6b49d0f2" />
      <container name="PowerPack Home Page" predefined="False" id="8ae73fa1-67e8-4d3f-ad11-8245f7f5267f">
        <value>http://www.powergui.org/entry.jspa?externalID=1802&amp;categoryID=290</value>
      </container>
      <container name="PowerPack Icon" predefined="False" id="2840a004-5414-4758-b256-81fdcd9f8a87">
        <value>AAABAAEAHiAAAAEAIACoDwAAFgAAACgAAAAeAAAAQAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPLy8nfr6+v//v7+EgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO/v7xC0tLQw2NjY6tTT0/Tq6ur/xcXE7c7OznnU1NQw////AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wHz8/OFn56e3qyRif/jhmb/9IZg//O1of/q6ur/+I1p/++Laf/PjXj/pKKi/7a2tsz///8CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA09PTNaKgoPXLf2b//3lN//9+U///g1n//4dg//W3o//q6ur//pNv//+NZv//h2D//4NZ//eAV/+ri4H/xMTE1v///wEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADe3t66pnxt//5uPf//c0T//3hK//98UP//gFb//4Rb//W1n//q6ur//oxm//+HYP//hFv//4FW//98UP//eEv/7XZN/6Kfnf/s7OwcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANPT072/c1v//2Yz//9rOf//bz///3RF//93Sv//ek7//35S//Wxmv/q6ur//oNa//+AVf//flP//3tP//93Sv//c0X//29A//lsPP+ThH7/39/fGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwcHBOqt4aP//ZjP//2Yz//9mM///ajj//249//9xQf//dEX//3ZI//WslP/q6ur//ntO//93Sf//dkj//3RF//9xQf//bT3//2o3//9mM//8ZzX/m5qY/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD6+vo7mH52//9mM///ZjP//2Yz//9mM///ZjP//2Yz//9oNf/9dUb/9LCZ/+3Y0f/q6ur/8cS1//eaev//bDz//2s5//9oNv//ZjP//2Yz//9mM///ZjP/72o8/6+urtsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC+vr7/+Wc2//9mM///ZjP//2Yz//9mM///ZjP//m09/+3Vzf/q6ur/6unp/+ze2v/s3tn/6ufm/+rq6v/q6ur/9qKG//9mM///ZjP//2Yz//9mM///ZjP//2Yz/6x3ZP/Q0NAmAAAAAAAAAAAAAAAAAAAAAP7+/h2neGf//2Yz//9mM///ZjP//2Yz//9mM//+bj//6ufl/+vm5f/1oob//mo5//9lMv//ZTL//2Uy//5uP//u0MT/6urq/+7SyP//ZjP//2Yz//9mM///ZjP//2Yz//pnNv+YlpXmAAAAAAAAAAAAAAAAAAAAAMDAwJvwaTz//2Yz//9mM///ZjP//2Yz//5pN//r4t//6unp//1wQv//ZjP//2Yz//9mM///ZjP//2Yz//9mM///ZjP/9aWJ/+rq6v/zr5f//2Yz//9mM///ZjP//2Yz//9mM/+egHT/////AQAAAAAAAAAAAAAAAKCgoP//ZjP//2Yz//9mM///ZjP//2Yz//OynP/q6ur//HhL//9mM///ZjP//2Yz//9mM///ZjP//2Yz//9mM///ZjP//2Yz//G+rP/q6ur//mo5//9mM///ZjP//2Yz//9mM//ma0H/tra2WAAAAAAAAAAA2traB6F6bP//ZjP//2Yz//9mM///ZjP//2Yz/+vl5P/t1Mv//2k2//9sOv//bDr/+opi/+vq6f/q6uv/7s/E//5vP///bDr//2w6//9rOf/q6ur/9K+Z//9mM///ZjP//2Yz//9mM//6Zzb/vLy8/wAAAAD///8BzMzMFMFzWP//ZjP//2Yz//9mM///ZjP//H1S/+rq6v/6kG3//3BB//9wQf/+d0v/6unp/+rq6v/r6+v/6urq/+7Ty///cEH//3BB//9wQf/u1s7/7drU//9uP///ZzT//2Yz//9mM///ZjP/npqZ/////wH39/f/7Ozs/+ji4P/s4d//7OHf/+zh3//s4uD/6+Ti/+rq6v/7imT//3VI//91SP/4nH7/6urq/+rq6v/q6ur/6urq/+rq6v//dUj//3VI//91SP/xx7n/6urq/+zi4P/s4uD/7OHf/+zh3//s4d//5eTk/+3t7f/4+PiX7e3t/eDIwP/vxbb/78q+/+/Lv//vy7//7tHH/+rq6v/7kGz//3tP//97T//8jmn/6urq/+rq6v/q6ur/6urq/+rq6f//e0///3tP//97T//vzMD/6+jn/+/Lv//vy7//78u//+/Lv//vxbb/1NLQ//Hx8f0AAAAA1NTUErd1Xv//dkn//oBV//6AVf/+gFX//Ihf/+rq6v/2q5P//oBV//6AVf/+gFX/7dfP/+rq6v/q6ur/6urp//iihf/+gFX//oBV//6AVf/r5OD/7tTL//6AVf/+gFX//oBV//6AVf/9flP/p6am/wAAAAAAAAAA////Ap6Gf///hVz//4Vc//+FXP//hVz//4Vc/+vh3v/q6Of//4Vc//+FXP//hVz//4Zd//mdfv/2r5j//Y1o//+FXP//hVz//4Vc//2Oaf/q6ur/+KeN//+FXP//hVz//4Vc//+FXP/4hmD/zs7O3gAAAAAAAAAAAAAAAL++vv7/iWL//4li//+JYv//iWL//4li//mihf/q6ur/9rKb//+JYv//iWL//4li//+JYv//iWL//4li//+JYv//iWL//4pj/+zf2v/q6en//4li//+JYv//iWL//4li//+JYv/ZkXn/3t7eVwAAAAAAAAAAAAAAAOvr65rllHn//49q//+Pav//j2r//49q//+Pav/v0sn/6urq//eznP//j2r//49q//+Pav//j2r//49q//+Pav//kGz/7tvV/+rq6v/6pIj//49q//+Pav//j2r//49q//+Pav+zpqH/AAAAAAAAAAAAAAAAAAAAAAAAAAC2qqX//5Rx//+Ucf//lHH//5Rx//+Ucf//lHH/79TL/+rq6v/r5OP/+LKb//2dff/+mXn/+6OG//TCsf/q6ur/6uno//iwl///lHH//5Rx//+Ucf//lHH//5Rx/+6Yev/U1NTeAAAAAAAAAAAAAAAAAAAAAAAAAADPz8926Z2E//+Zd///mXf//5l3//+Zd///mXf//5l3//mxmv/s4+D/6urq/+rq6v/q6ur/6urq/+rp6f/v2NH//p19//+Zd///mXf//5l3//+Zd///mXf//5l3/7WvrP7+/v4dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvbq5/vqegP//nn3//559//+eff//nn3//559//+eff//nn3//KeL//LKvf/q6ur/+q+W//6ggf//nn3//559//+eff//nn3//559//+eff//nn3/3aWT/+fn56wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9PT0Gb+5t///pIX//6SF//+khf//pIX//6SF//+khf//pIX//6SF//XEtP/q6ur//qaH//+khf//pIX//6SF//+khf//pIX//6SF//+khf/xp47/zs7OuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL+/vwHDvbzE/KmO9P+pjP//qYz//6mM//+pjP//qYz//6mM//XHt//q6ur//quO//+pjP//qYz//6mM//+pjP//qYz//6mM/+aunP/U1NTeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4+PgDAAAAAP39/QH8/PwSycjHze+xm//+rZL//q2S//6tkv/+rZL//q2S//XJu//q6ur//a6U//6tkv/+rZL//q2S//6tkv/8rpT/07et/+vq6v/9/f1sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+/v4X+/v7IAAAAAD7+/sC+/v7RtHR0WXJv7v/9rWe//+ymf//spn//7KZ//XMvv/q6ur//rOb//+ymf//spn//7KZ/+O4qv/OzMz/6enpRvv7+xwAAAAA+/v7Avv7+wX+/v4PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3t7edNfX1//Twrz/4L60/+jSyv/q6ur/576w/9vAtv/Pycf/4ODg4PPz83EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOnp6Xbq6ur/+fn5MgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPf392Hv7+/R////BQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//v/8//x//P/gD/z/AAP8/gAA/PwAAHz4AAA88AAAPOAAABzgAAAMwAAADMAAAATAAAAEgAAABAAAAAAAAAAAAAAAAIAAAASAAAAEwAAABMAAAAzgAAAM4AAADPAAABzwAAA8+AAAfOgAAHzkAACM/8AH/P/8f/z//H/8/////A==</value>
      </container>
      <container name="Console Version" predefined="False" id="7b082250-5a98-48f5-8a3f-6ab5f1e4d90e">
        <value>2.4</value>
      </container>
    </items>
  </container>
  <items>
    <container name="Navigation Tree" predefined="False" id="b3b2283e-6f58-40c6-86b6-f01cd7f060fa">
      <items>
        <container name="VMware" predefined="False" ResultView="9285b124-a8f7-49ef-aca8-a922d7b524af" id="cfb83698-dd70-478b-9730-26ab61709041" type="Folder@">
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAACwAAAA8AAAARAAAAEgAAABEAAAAPAAAACwAAAAYAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAJej8CJLVZAnDAXACvxF0A38RbAPvEXQDfwFwAr7VZAnB6PwIkAAAACQAAAAMAAAAAAAAAAAAAAAIAAAAJr1cDUMJeALfPaQL/23sI/92JD//ajRT/34wR/96BCv/RbAT/wl4At69XA1AAAAAJAAAAAgAAAAAAAAAGsFgET8diAs/Xdwv/65oc//KmHv/VkR//9/f3/9aTIf/1qyP/7p0Y/9t8Cv/IYgLPsFgETwAAAAYAAAABjkkDH8RfAbfXdwj/6ZQY/+eWFf/ckhb/rW0Y//f39/+tbRn/3pUZ/+ueHv/qlRT/2noI/8RfAbeOSQMfAAAAAr9fBWzRawX/4YcQ/9+JEf/JfhL/176d/+3n3//39vb/7eff/9e+nf/LgRP/4Y0V/+KIDf/SbQX/v18FbAAAAATHYwSt13QH/96BDv/Oewz/1r2c/+je0f/JqYD/tHcl/8mpgf/n3dD/1r2c/899D//fggv/2HYH/8djBK0AAAAFzGcD3tB2EP/CcQ3/qGUM//Dq4v/LrIP/wnoY/8qAGP/Cehj/y6uD/+7o3/+oZg7/wnAJ/89yB//MZwPeAAAABtJsB/vIchX/+vr6//v7+//6+vr/uIAz/8mBI//7+/v/yYIj/7iAM//5+fn/+Pj4//f39//HbQb/0mwH+wAAAAXScAzeznIS/8iBNv+2gUP/9O/p/9S5lv/HhjX/zIgz/8eFM//SuJP/8uzl/7Z/Nv/GeiP/zW0I/9JwDN4AAAAEz28Nq9RyDv/gmlL/1ZhX/+PQvP/y6uL/2MCm/8SVX//Xv6P/7+jf/+DOtv/UlVD/3I07/9NwC//Pbw2rAAAAAstrDGfVdBH/46Rk/+KobP/UoGv/5tXE//j07//+/v7/9vLu/+TUwf/TnmT/4aRn/9+WTP/VdBH/y2sMZwAAAAHAYwYX03QSs92MOv/quon/5bOA/9+vf//Mpn///v7+/8ymfP/ernv/5a96/+i1gf/cijX/03UTs8BjBhcAAAAAAAAAAM5sCkXUeBXL4JdM/+zDmP/tw5j/4LqT///////guZH/7L+T/+y/kv/fl0z/1XkXy85sCkUAAAAAAAAAAAAAAAAAAAAA0GwLRNV3FLLchzD/5KZm/+e8kf/pyKb/57uP/+WmZ//chzD/1XgVstBsC0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADJZwYW0nIOZNZ2FajYexrd2n4d+9h7Gt3WdhWo0nIOZMlnBhYAAAAAAAAAAAAAAAAAAAAAwAdpY4ADdC4AAWF0AABsYQAAL2sAAD4KAAAJCQAAbnQAAGVyAAA8LwAAdGUAAHI+AAEJCYADZGnABz4K4A88Lw==</IconB64>
          <items>
            <container name="Managed Hosts" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="580e68ef-b82c-4bf8-986d-780b568a7a67" type="Script@ManagedVMwareHost" returntype="ManagedVMwareHost">
              <script><![CDATA[Initialize-VMwarePowerPackConfiguration

# Now add nodes for each of the computers we are connecting to
foreach ($key in ($global:VMwareManagedHosts.Keys | Sort-Object)) {

	$computerName = $global:VMwareManagedHosts[$key].Name
	$cachedCredentialRecord = Get-CachedCredential -AssociatedObjectId $computerName -EntireRecord

	# Add a node for the computer to the tree and the grid view

	Add-AdminConsoleVMwareHost -ComputerName $computerName

	$global:VMwareManagedHosts[$key] `
		| Add-Member -Force -Name CredentialsCached -MemberType NoteProperty -Value ([bool]$cachedCredentialRecord.Credential) -PassThru `
		| Add-Member -Force -Name DateCredentialsStored -MemberType NoteProperty -Value $cachedCredentialRecord.DateStored -PassThru `
		| Add-Member -Force -Name LastCredentialAccessDate -MemberType NoteProperty -Value $cachedCredentialRecord.LastAccessDate -PassThru

}]]></script>
              <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAEAAAADAAAABIAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEgAAAA4AAAAIbW1tm2xsbP9qamr/aGho/2ZmZv9kZGT/YmJi/2FhYf9eXl7/W1tb/1paWv9YWFj/V1dX/1FRUaMAAAAXAAAAE3Jycv/r6+v//////////////////f7//+bv8P/p7/D//f/////////3+fr//fz3/+vr6/9YWFj/WFhY/1BQUKN1dXX/6+vr/+RmHP/3dSL/8ncl//V5Jv/2eyj/9nsq//d/K//zfy3/94Aq/+6FQv/r6+v/Wlpa/+Dh4P9XV1f/eHh4/+vr6//naBr//MuX//zMmP/8y5P//c6d//3Qnv/+jDn//pA9//+ROf/5llH/6+vr/1xcXP/k5OT/WVlZ/3t7e//r6+v/6Gkc//zLl//2eyn/+IIw//yGNP/+0aH//tOi///RnP//1KL/+JZT/+vr6/9hYWH/4uPj/15eXv99fX3/6+vr/+tvI//9z5z//Yk3//+QPf//mEX//9qr//+lU///p1X//9ur//iZWf/r6+v/Y2Nj/+Lj4/9eXl7/f39//+vr6//tcyX//tGf///Tov//06D//9qq///dr///sGH//7ht///it///rW3/6+vr/2ZmZv/i4+L/YWFh/4GBgf/r6+v/8nYm//+PN///kz7//5xG///crf//37P//+K5///ku///5br//7p8/+vr6/9paWn/4eLh/2RkZP+BgYH/6+vr/+R3NP/yhj//9o5E//qSTf/8l1D//JhR//6dVv//pFr//5xU//iiZv/r6+v/bGxs/+Xm5f9nZ2f/gYGB/+bn5//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/3BwcP/o6ej/aWlp/4GBgZmBgYH/gYGB/4GBgf+BgYH/gICA/39/f/9+fn7/fX19/3t7e/96enr/d3d3/3V1df+mpqX/7e3s/2xsbP8AAAAAAAAAAAAAAAAAAAAAAAAAAH9/f//8+/v/8/Pz//Pz8v/z8vP/8/Lz//Py8v/z8vL/8/Pz//Hw8P9wcHD/AAAAAAAAAAAAAAAAAAAAAAAAAACBgYH//v7+/+fm5v/l5OT/5eTk/+Xk5P/l5OT/5eTk/+fm5v/18/P/cnJy/wAAAAAAAAAAAAAAAAAAAAAAAAAAgYGB//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+/v///////////3Z2dv8AAAAAAAAAAAAAAAAAAAAAAAAAAIGBgZmBgYH/gYGB/4CAgP+AgID/gICA/35+fv99fX3/fHx8/3p6ev93d3ebAAAAAAAA8L8AAAAAAAAAAAAAe8IAAAAAAAAAAAAAAAAAAAAAAAB/hAAAAAAAAAAA+AD///gA///4AINX+AAAAA==</IconB64>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[232]]></script>
                    </container>
                    <container name="Port" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Protocol" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ConnectionAccount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Connection" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="UseSingleSignOn" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Connected" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ConnectionDuration" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="SupportsProvisioning" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MultiHostSupported" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="UserShellAccessSupported" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="RootFolder" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Version" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Build" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ProductId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="OperatingSystemType" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="APIType" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ApiVersion" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CredentialsCached" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DateCredentialsStored" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="LastCredentialAccessDate" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
            </container>
            <container name="Sessions" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="362c5649-a9d8-4b70-9eff-7b658eeca12c" type="Script@VMware.Vim.UserSession#VMwarePowerPackExtension" returntype="VMware.Vim.UserSession#VMwarePowerPackExtension#@@@#VMware.Vim.UserSession#@@@#VMware.Vim.DynamicData#@@@#System.Object">
              <script><![CDATA[$noConnection = $true
if ($DefaultVIServers) {
	$noConnection = $false
	$DefaultVIServers | ForEach-Object {
		$sessionManager = Get-View SessionManager -Server $_
		$sessionManager.SessionList `
			| Add-Member -MemberType NoteProperty -Name SessionManager -Value $sessionManager -PassThru `
			| Add-Member -MemberType ScriptProperty -Name CurrentSession -Value {$this.SessionManager.CurrentSession.Key -eq $this.Key} -PassThru `
			| Add-Member -MemberType ScriptMethod -Name Disconnect -Value {
				$this.SessionManager.TerminateSession($this.Key)
				Start-Sleep -Seconds 1
			} -PassThru `
			| ForEach-Object {
				$_.PSTypeNames.Insert(0,"$($_.PSTypeNames[0])#VMwarePowerPackExtension")
				$_
			}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the objects on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <IconB64>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</IconB64>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Key" predefined="False">
                      <script><![CDATA[236]]></script>
                    </container>
                    <container name="CurrentSession" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="UserName" predefined="False">
                      <script><![CDATA[119]]></script>
                    </container>
                    <container name="FullName" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="LoginTime" predefined="False">
                      <script><![CDATA[133]]></script>
                    </container>
                    <container name="LastActiveTime" predefined="False">
                      <script><![CDATA[133]]></script>
                    </container>
                    <container name="Locale" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MessageLocale" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
            </container>
            <container name="Folders" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="4a240f6d-7150-447d-88e8-3054888cd97d" type="Script@VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.VIObjectImpl#@@@#VMware.VimAutomation.Sdk.Util10.VIObjectImpl#@@@#System.Object">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	foreach ($managedHost in $defaultVIServers)
	{
		Get-Folder -Server $managedHost  | Sort-Object -Property Name | ForEach-Object {
			$view = $_ | Get-View
			$_ `
				| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru `
				| Add-Member -MemberType NoteProperty -Name View -Value $view -PassThru `
				| Where-Object {$_.View.Parent.Type -ne 'Datacenter'} `
				| Add-Member -MemberType ScriptProperty -Name Type -Value {if ($this.IsChildTypeVm) {'VM'} elseif ($this.IsChildTypeComputeResource) {'Compute Resource'} elseif ($this.IsChildTypeDatacenter) {'Datacenter'} else {'Unknown'}} -PassThru
		}
	}

	
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the folders on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the Virtual Center servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAABAAAABAAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABQAAAAIAAAAAAAAABAAAAAwAAAASAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABEAAAAJAAAAAgB8sawAerH/AHqx/wB6sf8AerD/AHqw/wB6sP8AeK//AHiv/wB4r/8AeK//AHiv/wB4rv8AXYdIAAAAEgAAAAcAfLL/DZTL/17X+f9Pzfr/R8f5/0fH+f9Hx/n/R8f5/0fH+f9Hx/n/R8f5/0fH+f8orOD/AHiu/wAAABcAAAANAHyy/y6y5P8WntL/fez//1LP//9Sz///Us///1LP//9Sz///Us///1LP//9Sz///NLPm/yGbzv8AcKJ5AAAAEgB8s/9W0v//AH60/5r5//9f2f//X9n//1/Z//9f2f//X9n//1/Z//9f2f//X9n//zq36P9fvt7/AHiv/wAAABcAfLP/Ytv//wGIwf997P//eun//23h//9q3v//at7//23h//9q3v//at7//23h//9Au+v/ofD+/wB4r/8AcKJ5AHyz/2re//8mrN3/Or3t/5r5//936f//d+n//3fp//936f//d+n//3fp//936f//R8Dw/7f3/f9u0e3/AHiv/wB8s/905///Xdj//w2Uy//i+v3/z/r+/8/6/v/P+v7/z/r+/8/6/v/P+v7/z/r+/4Tq/P/i+v3/u/L//wB4r/8AfLP/f/D//3/w//8/ttn/AHyz/wB8sv8AfLL/AHyy/wB6sf8AerH/AHqx/wB6sP8AerD/AHqw/wB4r/8AeK6sAH60/4j3//+G9P//hvT//4j3//+J+P//hvT//4j3//+G9P//iPf//4b0//+G9P//AHqw/wAAABIAAAAGAAAAAAB+tP+S+v//j/r//4/6//+P+v//j/r//+f9///n/f//5/3//+f9///n/f//5/3//wB6sf8AAAAMAAAABAAAAAAAfrT/5/3//+f9///n/f//5/3//+f9//8AfLP/AHyz/wB8sv8AfLL/AHyy/wB6sf8AerCsAAAABAAAAAEAAAAAAH60qwB+tP8AfrT/AH60/wB8s/8AfLP/AHuygQAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF/PwAAfz8AAH8/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHE/AABxPwABcT8AAXE/AAFxPwB/cT///3E///9yPw==</IconB64>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[145]]></script>
                    </container>
                  </items>
                </container>
              </items>
            </container>
            <container name="Datacenters" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="d172cba0-9e30-4ef3-b1bd-e2ea75f5806b" type="Script@VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.VIObjectImpl#@@@#VMware.VimAutomation.Sdk.Util10.VIObjectImpl#@@@#System.Object">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	foreach ($managedHost in $defaultVIServers) {
		Get-Datacenter -Server $managedHost.Name | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ | Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the datacenters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the Virtual Center servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAADAAAACwAAABIAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEgAAAA8AAAANAAAADwAAABAAAAAPSmR+/0pkfv9KZH7/SmR+/0pkfv9KZH7/SmR+/0pkfv9KZH7/SmR+/0pkfv9KZH7/SmR+/0pkfv9KZH7/SmR+/0WyNWtdekH/qtGU/6rQlP+qz5L/Fmu3/zaa6v+oz5H/qM6R/1JwO/8+oDB2QqozcEOtM25ubm7/P6MxdEGnMnEAAAAAdVdO//Pp3v/z5tv/8eXa/xdsuv8qgtf/8eTX//Hk1/9fRUH/AAAAEwAAAAsAAAAPbm5u/wAAABcAAAAVAAAAAHpcUv/06uH/8+je//Hn3f8RWqP/EVqj//Hl2f/x5dj/Y0hD/wAAABOEhIT/fn5+/3d3d/9xcXH/ampq/wAAAACAYFX/9uzk//Pq4f/x6d7/8efd//Hm2//x5tr/8+fb/2dMRv8AAAATiIiI//Hx8f/s7Oz/7e3t/3R0dP8AAAAAh2VY//fu5v/9lk///YE9//Hp4f/9lk///YE9//Po3v9sUEn/AAAAE4iIiP+IiIj/iIiI/4SEhP9+fn7/AAAAAIxqXP/38Or//oE+//2ST//z6uP//YE9//2ST//06uH/clRM/wAAABMAAAALAAAADwAAABMAAAATAAAAEwAAAACSbl//+fPu//fx6//37+r/9+/p//bv5//27OX/9+zl/3dZUP8AAAAThISE/35+fv93d3f/cXFx/2pqav8AAAAAl3Ri//v28f/+l1H//rFv//fx7P/+l1D//rFu//fv6f98XlP/AAAAE4iIiP/x8fH/7Ozs/+3t7f90dHT/AAAAAJx4Zf/79/T//oNA//6TUf/59O///oI///6TUf/58ez/hGJW/wAAABOIiIj/iIiI/4iIiP+EhIT/fn5+/wAAAAChe2j//Pr3//v59v/7+fT/+/fz//v28f/69PD/+vTv/4lnWv8AAAATAAAACwAAAA8AAAATAAAAEwAAABMAAAAApYBq//77+v//mVL//7Jw//v59//+mFL//rJv//v38/+ObF3/AAAAE4SEhP9+fn7/d3d3/3Fxcf9qamr/AAAAAKqEbf/+/vz//4NB//+UUv/8+/n//4NA//6UUv/7+fb/lHFh/wAAABOIiIj/8fHx/+zs7P/t7e3/dHR0/wAAAACthm7//v7+//7+/v/+/vz//vz7//77+//8+/n//Pr5/5l1ZP8AAAAPiIiI/4iIiP+IiIj/hISE/35+fv8AAAAArodv/66Hb/+thm7/q4Rt/6eCbP+lgGv/o31p/6F7aP+feWb/AAAABQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAwAAAoMgAALGhgACxoYAAsaGAALGhgACxoYAAsaGAALGhgACxoYAAsaGAALGhgACxoYAAsaGAALGhgA+xoQ==</IconB64>
            </container>
            <container name="Clusters" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="1d4e18fa-4d49-4ceb-9bc3-e83316ee31f9" type="Script@VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VmwarePowerPackExtension" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.ComputeResourceImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.VIObjectImpl#@@@#VMware.VimAutomation.Sdk.Util10.VIObjectImpl#@@@#System.Object">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','DRSEnabled','HAEnabled','DPMEnabled','ConfiguredFailoverCapacity','CurrentFailoverCapacity','DRSMode','DRSStars','CPUCores','TotalCPU(MHz)','TotalMemory(GB)','HostCount','VMotionCount','TriggeredAlarmCount'))
	$PSStandardClusterMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		Get-Cluster -Server $managedHost.Name | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$view = $_ | Get-View
			$_ `
				| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardClusterMembers -PassThru `
				| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru `
				| Add-Member -MemberType NoteProperty -Name DPMEnabled -Value $view.ConfigurationEx.DpmConfigInfo.Enabled -PassThru `
				| Add-Member -MemberType NoteProperty -Name ConfiguredFailoverCapacity -Value $_.HAFailoverLevel -PassThru `
				| Add-Member -MemberType NoteProperty -Name CurrentFailoverCapacity -Value $view.Summary.CurrentFailoverLevel -PassThru `
				| Add-Member -MemberType NoteProperty -Name DRSStars -Value $view.ConfigurationEx.DrsConfig.VMotionRate -PassThru `
				| Add-Member -MemberType NoteProperty -Name CPUCores -Value $view.Summary.NumCpuCores -PassThru `
				| Add-Member -MemberType NoteProperty -Name 'TotalCPU(MHz)' -Value $view.Summary.TotalCpu -PassThru `
				| Add-Member -MemberType NoteProperty -Name 'TotalMemory(GB)' -Value ([double]('{0:#.##}' -f ($view.Summary.TotalMemory / 1GB))) -PassThru `
				| Add-Member -MemberType NoteProperty -Name HostCount -Value $view.Host.Count -PassThru `
				| Add-Member -MemberType NoteProperty -Name DatastoreCount -Value $view.Datastore.Count -PassThru `
				| Add-Member -MemberType NoteProperty -Name NetworkCount -Value $view.Network.Count -PassThru `
				| Add-Member -MemberType NoteProperty -Name VMotionCount -Value $view.Summary.NumVmotions -PassThru `
				| Add-Member -MemberType NoteProperty -Name TriggeredAlarmCount -Value $view.TriggeredAlarmState.Count -PassThru
		}
	}
}

if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the clusters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAEAAAADQAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATYWFhzF9fX/9bW1v/XFxc/15eXv9eXl7/Xl5e/15eXv9eXl7/Xl5e/15eXv9eXl7/XFxc/1paWv9dXV3/XV1dzWRkZP/29vb/7e3t/2BgYP/29vb/+fn5//f39//39vb/9/f2//f39//5+ff/9vb2/2BgYP/t7ev/9vb2/11dXf9oaGj/5OTk/8fHx/9hYWH/5OTk/8zMzP/Hx8f/x8fH/8fHxv/Hx8f/yMnI/+Tk5P9hYWH/w8XE/+Tk5P9dXV3/bW1t//Hy8f/g4OD/ZGRk//Hy8f/m5ub/4+Hj/9/f4f/f3+H/4ePj/+bl5v/x8vH/ZGRk/+Df4P/x8vH/XV1d/3Fxcf/u7u7/29rc/2ZmZv/u7u7/3t/f/9ra2v/a2tr/2tra/9na2v/f39//7u7u/2ZmZv/b2tz/7u7u/19fX/91dXX/9/f5/+Xl5v9paWn/6+vr/9rd2//V2Nj/1dfX/9TV1//X19j/293d/+vs7P9paWn/5eXm//f39/9iYmL/eXl5//r6+v/p6en/bGxs/+rr6//Y2dn/09TU//LHsv/s1Mn/09TU/9jZ2f/q6+v/bGxs/+np6f/6+vr/ZmZm/3x8fP/8/Pz/7e3t/3BwcP/19fX/6uvs/+bp5///ZiD//JZq/+fp5//q7Oz/9fX2/3BwcP/t7e3//Pz8/2tra/9/f3//6+vr/87Ozv9zc3P/9vb2/+7u7v/q6+v/1tbW/9vc3P/q6ur/7u7u//b29v9zc3P/ycnJ/+vr6/9vb2//gICA//v7+//u7u7/dnZ2//f3+f/x8fL/7u7w//Hx8v/x8fH/8PHw//Hx8v/39/f/dnZ2/+7u7v/7+/v/cnJy/4CAgMyAgID/eXl5/3l5ef/6+vr/9vb2//b39v/39/f/9/f3//b29v/19vb/+vr6/3l5ef91dXX/eXl5/3d3d8wAAAAAAAAAAAAAAAB7e3v//Pz8//r6+v/5+vn/+fn6//n5+f/6+fn/+vr6//z8/P97e3v/AAAAEwAAAAYAAAAAAAAAAAAAAAAAAAAAfn5+/+vr6//V1dX/z8/P/8/Pz//Pz8//z8/P/8/Pz//r6+v/fn5+/wAAABMAAAAGAAAAAAAAAAAAAAAAAAAAAH9/f//7+/v/+/v7//r6+v/6+vr/+vr6//r6+v/7+/v/+/v7/39/f/8AAAANAAAABAAAAAAAAAAAAAAAAAAAAACBgYHMgYGB/4GBgf+BgYH/gYGB/4GBgf+BgYH/gYGB/4GBgf+BgYHMAAAABAAAAAEAAAAAAAB0cgAAZz4AAAkJAABleQAAb20AAHBwAAAucAAAbnQAAGljAAB0LgAAZW0AAHJh4AEva+ABPgrgAQk84AFyYQ==</IconB64>
            </container>
            <container name="Hosts" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="3fae6bd7-0b27-4fbe-928c-9eeb7699ecb9" type="Script@VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.VIObjectImpl#@@@#VMware.VimAutomation.Sdk.Util10.VIObjectImpl#@@@#System.Object">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		Get-VMHost -Server $managedHost.Name | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ `
				| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru
		}
	}
}

if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the hosts themselves. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAEAAAADAAAABIAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEgAAAA4AAAAIbW1tm2xsbP9qamr/aGho/2ZmZv9kZGT/YmJi/2FhYf9eXl7/W1tb/1paWv9YWFj/V1dX/1FRUaMAAAAXAAAAE3Jycv/r6+v//////////////////f7//+bv8P/p7/D//f/////////3+fr//fz3/+vr6/9YWFj/WFhY/1BQUKN1dXX/6+vr/+RmHP/3dSL/8ncl//V5Jv/2eyj/9nsq//d/K//zfy3/94Aq/+6FQv/r6+v/Wlpa/+Dh4P9XV1f/eHh4/+vr6//naBr//MuX//zMmP/8y5P//c6d//3Qnv/+jDn//pA9//+ROf/5llH/6+vr/1xcXP/k5OT/WVlZ/3t7e//r6+v/6Gkc//zLl//2eyn/+IIw//yGNP/+0aH//tOi///RnP//1KL/+JZT/+vr6/9hYWH/4uPj/15eXv99fX3/6+vr/+tvI//9z5z//Yk3//+QPf//mEX//9qr//+lU///p1X//9ur//iZWf/r6+v/Y2Nj/+Lj4/9eXl7/f39//+vr6//tcyX//tGf///Tov//06D//9qq///dr///sGH//7ht///it///rW3/6+vr/2ZmZv/i4+L/YWFh/4GBgf/r6+v/8nYm//+PN///kz7//5xG///crf//37P//+K5///ku///5br//7p8/+vr6/9paWn/4eLh/2RkZP+BgYH/6+vr/+R3NP/yhj//9o5E//qSTf/8l1D//JhR//6dVv//pFr//5xU//iiZv/r6+v/bGxs/+Xm5f9nZ2f/gYGB/+bn5//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/3BwcP/o6ej/aWlp/4GBgZmBgYH/gYGB/4GBgf+BgYH/gICA/39/f/9+fn7/fX19/3t7e/96enr/d3d3/3V1df+mpqX/7e3s/2xsbP8AAAAAAAAAAAAAAAAAAAAAAAAAAH9/f//8+/v/8/Pz//Pz8v/z8vP/8/Lz//Py8v/z8vL/8/Pz//Hw8P9wcHD/AAAAAAAAAAAAAAAAAAAAAAAAAACBgYH//v7+/+fm5v/l5OT/5eTk/+Xk5P/l5OT/5eTk/+fm5v/18/P/cnJy/wAAAAAAAAAAAAAAAAAAAAAAAAAAgYGB//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+/v///////////3Z2dv8AAAAAAAAAAAAAAAAAAAAAAAAAAIGBgZmBgYH/gYGB/4CAgP+AgID/gICA/35+fv99fX3/fHx8/3p6ev93d3ebAAAAAAAA8L8AAAAAAAAAAAAAe8IAAAAAAAAAAAAAAAAAAAAAAAB/hAAAAAAAAAAA+AD///gA///4AINX+AAAAA==</IconB64>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[151]]></script>
                    </container>
                    <container name="State" predefined="False">
                      <script><![CDATA[82]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[116]]></script>
                    </container>
                    <container name="Host" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
            </container>
            <container name="Resource Pools" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="41dc4382-6cc2-4ea0-a984-314260c97621" type="Script@VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VmwarePowerPackExtension" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		Get-ResourcePool -Server $managedHost.Name | ForEach-Object {
			$view = $_ | Get-View
			$_ `
				| Add-Member -MemberType NoteProperty -Name View -Value $view -PassThru `
				| Where-Object {($parent = $_.View.Parent) -and ($parent.Type -eq 'ResourcePool')} `
				| ForEach-Object {
					$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
					$_ `
						| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru
				}
		}
	}
}

if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the resource pools on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAGAAAACgAAAA0AAAAQAAAAEgAAABMAAAATAAAAEgAAABAAAAANAAAACgAAAAYAAAADAAAAAQAAAASTUB4dvGYnXsdsKZXOcCvA0nMr4tR0LPjUdCz40nMr4s1wKsHFaymWs2ElY208FycAAAAQAAAACgAAAAPLci9k1Hgyw+Kjbv/cu5j/88Sb//rbvP/+5Mn//uTJ//rbvP/2y6f/77eJ/+WdZP/TdzHEvGosbAAAABPcfzlq3YE79vLNq//m4dD/0d3T//nPqP//4cb//+HF///hxf//4cX//+HF///hxf/30K3/9sum/96BOvbGczN25YlCy9e5nv/x3sb/4trG/9HVxv/PgEL/wWgl/71mJ/+4ZCr/smEu/7BgLv+vXy//v3dL//rZuv/quY//4YdAz+uQSsu8q5z/8da3/+LSt//Rzbf/zW0e///58v//+fL///ny///58v//+fL///ny/7ZiK//70av/3ap//+eOSc7wl1Bph4aK+nCUsv85fLn/E2m5/9NwG///9Ob///Tm///05v//9Ob///Tm///05v+8ZSf/bW1t/4J0aP3lkE1uAAAAACB3v9xMp9//YL7t/2bP+f/Zcxf//+/a///v2v//79r//+/a///v2v//79r/w2gk//b29v9ubm7/AAAAAwAAAAALdsr/i+D//6Hm//9t1///33YU///r0f//69H//+vR///r0f//69H//+vR/8lrIP/k5OT/cHBw/wAAAAAAAAAADHnM/8rx//+h5v//bdf//+N4Ev/Sbw//028P/81nBv/2uoj/tmsl/yiJ/f/NbR7/8fLx/3Nzc/8AAAAAAAAAAAx8z//K8f//oeb//23X///Bj07/9o4w//aPMP/2jSr/+J1N/+qNLv99g6D/1o1Q/+7u7v91dXX/AAAAAAAAAAANf9H/yvH//6Hm//9t1///XNL//0rM//85x///B2O6/8rKyv/o6Oj/9/f3//f39//6+vr/eHh4/wAAAAAAAAAADoLU/1Gz7v8ymeX/HYTc/xh+2P8dht3/IJbm/whmvf/X19f/7u/u//n5+v/5+fn//Pz8/3t7e/8AAAAAAAAAAA6F2L9Ssun/ruD2/6Xk/P+D2fv/Xr/w/zGb4P84gsP/ysrK/9DQ0P/U1NT/1NTU/+vr6/99fX3/AAAAAAAAAAAQiN4/DoTZiA2B1MQNfdDvDHnN7wt2zMRAeKf/t9Dm//f39//5+fn/+vr6//r6+v/7+/v/gICA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiIiIzIiIiP+Hh4f/h4eH/4aGhv+FhYX/hISE/4ODg8wAAAAAgABtLgAAcGwAAHByAAB0LgAAY2sAAC5jAABhdIAAPC+AAXk+gAEJPIABcmmAAT5jgAEuYYABbGWAAW9i/gFjaw==</IconB64>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Host" predefined="False">
                      <script><![CDATA[199]]></script>
                    </container>
                    <container name="Name" predefined="False">
                      <script><![CDATA[135]]></script>
                    </container>
                    <container name="CpuSharesLevel" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumCpuShares" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuReservationMHz" predefined="False">
                      <script><![CDATA[128]]></script>
                    </container>
                    <container name="CpuExpandableReservation" predefined="False">
                      <script><![CDATA[159]]></script>
                    </container>
                    <container name="CpuLimitMHz" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemSharesLevel" predefined="False">
                      <script><![CDATA[104]]></script>
                    </container>
                    <container name="NumMemShares" predefined="False">
                      <script><![CDATA[107]]></script>
                    </container>
                    <container name="MemReservationMB" predefined="False">
                      <script><![CDATA[122]]></script>
                    </container>
                    <container name="MemExpandableReservation" predefined="False">
                      <script><![CDATA[163]]></script>
                    </container>
                    <container name="MemLimitMB" predefined="False">
                      <script><![CDATA[96]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[167]]></script>
                    </container>
                    <container name="View" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ParentId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
            </container>
            <container name="Virtual Machines" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="e7c2814d-8186-4ed4-9725-eabe6a02f0b8" type="Script@VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.VIObjectImpl#@@@#VMware.VimAutomation.Sdk.Util10.VIObjectImpl#@@@#System.Object">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers)
	{
      $defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
      $PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
      $noConnection = $false
      Get-VM -server $managedHost | ForEach-Object {
            $_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
            $_ `
                  | Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardVMMembers -PassThru `
                  | Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru `
                  | Add-Member -MemberType ScriptProperty -Name OperatingSystem -Value {$this.Guest.OSFullName} -PassThru `
                  | Add-Member -MemberType ScriptProperty -Name IPAddress -Value {$this.Guest.IPAddress} -PassThru `
                  | Add-Member -MemberType ScriptProperty -Name DNSName -Value {$this.Guest.HostName} -PassThru `
                  | Add-Member -MemberType ScriptProperty -Name 'Memory(MB)' -Value {$this.MemoryMB} -PassThru `
                  | Add-Member -MemberType ScriptProperty -Name CPUCount -Value {$this.NumCpu} -PassThru `
                  | Add-Member -MemberType ScriptProperty -Name HDDCount -Value {$this.HardDisks.Count} -PassThru `
                  | Add-Member -MemberType ScriptProperty -Name NICCount -Value {$this.NetworkAdapters.Count} -PassThru `
                  | Add-Member -MemberType ScriptProperty -Name ParentHost -Value {$this.Host.Name} -PassThru
      }
     }       
      
}
if ($noConnection) {
      [System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the virtual machines on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <ChartPresetID>32312a0a-ba0f-4409-8add-17fd08a2429f</ChartPresetID>
              <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAHAAAAFQAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABUAAAAH14JM/7lZIP/mmWP/uVkg/+abZf+5WSD/5p5p/7lZIP/moGr/uVkg/+aeav+5WSD/5pxp/7lZIP8AAAAfAAAAEblZIP//47r//+zI///uzf//89T///XZ///53///++L///vl///75v///Ob///3p///75v/mnmn/AAAAJAAAAB/Zg0z//+K5///rx///7sz///HS///Trv/tn17//9Wc/+2gX///1Z//7aJi///Xn//soWL/uVkg/7lZIP/1sYL/uVkg///ftf//6cT//+zI///wz//un1r//9+o///iqf//46v//+Ou///jrv//5a///+Ou/+abZf//9eH/uVkg/+iTVv//2qr//+W7///pv///7Mf//8+R///epP//3qb//9+n///fqP//4qn//+Op///fqf+5WSD///PZ//axf/+5WSD//+K1///isP//4rP//+a7/+6aVf//2p7//9qg///eov//3qT//9+m///fp///36b/5Zdh///w0/+5WSD/5pNY///rx///68f//+W5///jtv//yIj//9eW///Zmf//2pz//9qg///doP//3qL//9qh/7lZIP//68r/9rF7/7lZIP//7Mf//+zJ///uzf//7s3/7p1Y///anP//2pz//9mc///ZnP//2pv//9qg///anv/ml1///+bG/7lZIP/nk1f//+7N///syP//7sz//+7M///Rk///3qT//96i///epP//3aH//92h///dof//3aH/uVkg///lvv/2rnf/uVkg///z1P//7s3//+7M///uzf/unVj//9qh///aoP//2qH//9qh///aoP//3aD//9qf/+OUXP//47n/uVkg/+KVX/+5WSD/6Ztl/7lZIP/pm2X/uVkg/+ucY/+5WSD/5plj/7lZIP/ml2H/uVkg/+WWYP+5WSD//9+1//asd/8AAAAAAAAAAAAAAAAAAAAAAAAAALlZIP//7Mz//+7N///wzf//8M///+7N///syP//68f//+vE///lvv+5WSD/AAAAAAAAAAAAAAAAAAAAAAAAAADnllr//+7R///wz///8M////DP///wzf//7s3//+7M///uyf//5sD/5pdh/wAAAAAAAAAAAAAAAAAAAAAAAAAAuVkg///z2f//8dT///DU///w1P//8NH//+7P///uzf//7Mn//+XD/7lZIP8AAAAAAAAAAAAAAAAAAAAAAAAAAOaXYv+5WSD/5ZZh/7lZIP/llmH/uVkg/+WWYP+5WSD/5ZZg/7lZIP/ll2H/AAAAAAAA8L8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+AD///gA///4AAAA+AAAAA==</IconB64>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[224]]></script>
                    </container>
                    <container name="PowerState" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="IPAddress" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="OperatingSystem" predefined="False">
                      <script><![CDATA[308]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[145]]></script>
                    </container>
                    <container name="Host" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ManagedHost" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
            </container>
            <container name="Templates" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="1a967199-b6d6-4ed7-9ff7-9fd3196cdc49" type="Script@VMware.VimAutomation.ViCore.Impl.V1.Inventory.TemplateImpl" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.TemplateImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.VIObjectImpl#@@@#VMware.VimAutomation.Sdk.Util10.VIObjectImpl#@@@#System.Object">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		if ($managedHost.IsConnected) {
			$noConnection = $false
			Get-Template -Server $managedHost.Name
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the templates on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAHAAAAFQAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABUAAAAHkZGR/2xsbP+kpKT/bGxs/6Wlpf9sbGz/p6en/2xsbP+oqKj/bGxs/6ioqP9sbGz/p6en/2xsbP8AAAAfAAAAEWxsbP/c3Nz/4+Pj/+bm5v/p6en/7Ozs/+/v7//w8PD/8vLy//Ly8v/y8vL/9PT0//Ly8v+np6f/AAAAJAAAAB+SkpL/3Nzc/+Pj4//l5eX/6Ojo/9bW1v+lpaX/zc3N/6ampv/Pz8//p6en/8/Pz/+np6f/bGxs/2xsbP+7u7v/bGxs/9ra2v/h4eH/4+Pj/+fn5/+kpKT/09PT/9TU1P/V1dX/1tbW/9bW1v/X19f/1tbW/6Wlpf/w8PD/bGxs/5+fn//U1NT/3d3d/9/f3//j4+P/yMjI/9HR0f/S0tL/09PT/9PT0//U1NT/1NTU/9TU1P9sbGz/7Ozs/7q6uv9sbGz/2tra/9fX1//Z2dn/3d3d/6Ghof/Ozs7/z8/P/9DQ0P/R0dH/0tLS/9PT0//S0tL/o6Oj/+np6f9sbGz/n5+f/+Pj4//j4+P/3Nzc/9ra2v/Dw8P/ysrK/8zMzP/Nzc3/z8/P/8/Pz//Q0ND/0NDQ/2xsbP/k5OT/uLi4/2xsbP/j4+P/5OTk/+bm5v/m5ub/o6Oj/83Nzf/Nzc3/zc3N/83Nzf/Nzc3/z8/P/87Ozv+ioqL/4uLi/2xsbP+fn5//5ubm/+Pj4//l5eX/5eXl/8nJyf/R0dH/0NDQ/9HR0f/Q0ND/0NDQ/9DQ0P/Q0ND/bGxs/97e3v+2trb/bGxs/+np6f/m5ub/5eXl/+bm5v+jo6P/0NDQ/8/Pz//Q0ND/0NDQ/8/Pz//Pz8//z8/P/5+fn//c3Nz/bGxs/6CgoP9sbGz/p6en/2xsbP+np6f/bGxs/6enp/9sbGz/pKSk/2xsbP+jo6P/bGxs/6Kiov9sbGz/2tra/7a2tv8AAAAAAAAAAAAAAAAAAAAAAAAAAGxsbP/l5eX/5ubm/+bm5v/n5+f/5ubm/+Pj4//j4+P/4eHh/97e3v9sbGz/AAAAAAAAAAAAAAAAAAAAAAAAAACgoKD/6Ojo/+fn5//n5+f/5+fn/+bm5v/m5ub/5eXl/+Tk5P/f39//o6Oj/wAAAAAAAAAAAAAAAAAAAAAAAAAAbGxs/+zs7P/p6en/6enp/+np6f/o6Oj/5+fn/+bm5v/k5OT/4eHh/2xsbP8AAAAAAAAAAAAAAAAAAAAAAAAAAKSkpP9sbGz/o6Oj/2xsbP+jo6P/bGxs/6Kiov9sbGz/oqKi/2xsbP+jo6P/AAAgIAAAICAAACAgAAAgIAAAICAAACAgAAAgIAAAICAAACAgAAAgIAAAICAAACAg+AAgIPgAICD4ACAg+AAgIA==</IconB64>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[176]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[145]]></script>
                    </container>
                  </items>
                </container>
              </items>
            </container>
            <container name="Networks" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="535bb658-f7fe-491c-bb1c-d4d7fef61db3" type="Script@VMware.Vim.Network#VmwarePowerPackExtension" returntype="VMware.Vim.Network#VmwarePowerPackExtension#@@@#VMware.Vim.Network#@@@#VMware.Vim.ManagedEntity#@@@#VMware.Vim.EntityViewBase#@@@#VMware.Vim.ExtensibleManagedObject#@@@#VMware.Vim.ViewBase#@@@#System.Object">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		if ($managedHost.IsConnected) {
			$noConnection = $false
			Get-View -ViewType Datacenter -Property Network -Server $managedHost.Name | ForEach-Object {
				if ($_.Network) {
					Get-View -Id $_.Network -Property Name,Host,Vm -Server $managedHost | ForEach-Object {
						$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
						$hostNames = $null
						if ($_.Host) {
							$hostNames = @(Get-View -Id $_.Host -Property Name -Server $managedHost | ForEach-Object {$_.Name})
						}
						$_ `
							| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru `
							| Add-Member -MemberType NoteProperty -Name VMCount -Value $_.Vm.Count -PassThru `
							| Add-Member -MemberType NoteProperty -Name HostCount -Value $_.Host.Count -PassThru `
							| Add-Member -MemberType NoteProperty -Name Hosts -Value $hostNames -PassThru
					}
				}
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the networks on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <IconB64>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</IconB64>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HostCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Hosts" predefined="False">
                      <script><![CDATA[524]]></script>
                    </container>
                  </items>
                </container>
              </items>
            </container>
            <container name="Datastores" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="adc4985c-abee-4c60-997b-ada7d27c333c" type="Script@VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#VmwarePowerPackExtension" returntype="VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.VIObjectImpl#@@@#VMware.VimAutomation.Sdk.Util10.VIObjectImpl#@@@#System.Object">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		if ($managedHost.IsConnected) {
			$noConnection = $false
			VMware.VimAutomation.Core\Get-Datastore -Server $managedHost.Name | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType NoteProperty -Name UsedSpaceMB -Value ($_.CapacityMB - $_.FreeSpaceMB) -PassThru `
					| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the datastores on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <ChartPresetID>3f15125e-7563-4607-aba6-a7eb685ffaa0</ChartPresetID>
              <IconB64>AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAAAABMLAAATCwAAAAEAAAAAAAD///8A/319AP9oaAD/tLQA/+joAP9mZgD/1NQA/7GxAP+SkgD/iooA/76+AP/R0QD/mJgA/6KiAP+GhgD/jIwA/7e3AP+npwD/r68A/+LiANZxcQD8ZmYA/93dAP+BgQD/7e0A/3V1AP+mpgD/e3sA/6CgAP+EhAD/qKgA/5mZAP6JiQD/paUAynNzAP/u7gD/d3cA/4eHAP61tQD/amoA/9PTAP98fAD/29sA/9XVAP/p6QDUaGgA+/v7AO/v7wD38PAA/7W1AP+AgAD//v4A/YWFAOyhoQD/ubkA/5OTALBwcAD/ysoA/6urAP+CggDagYEA1b6+AP+dnQD6oqIAyl1dAP+VlQD/lJQA/3R0AOO8vADxiIgA/39/AP+FhQD/3t4A/46OAP9paQD//PwA/+/vAP/19QDo4uIA/0ZGAPb29gD/b28A/7OzAP+DgwD/i4sA/5qaAPXW1gD+m5sA/GdnAP/DwwC4iIgA/35+AMd0dAD8l5cA7e3tAP/r6wD/zs4A/+bmAP9iYgDYcHAA+Xx8AP/5+QDOYWEA/11dAP+urgDHqKgA/2RkAPhycgD/9PQA/2dnANJubgD/eXkjLARfbAAAAAAAAABNElQMIQM6QSA0VxMAAAALFzlMSwAAM2FgJj9kDQAAAQQYBBMqK1k2BxEMXWsLAAgGPkY7DwkdGxltAgJYUgBDDxEQAxpVSVMBMiVbTwMAZ0goChINQg5vSmIFCA4HAGMWBgpoHDdHJCcFagFFVgBOPDUQMR4fCSlRAhUURAAAAAA9Wlwibi1mQDhpMAAAAAAAAAAALi9eUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEABAAAAAQAAFAA=</IconB64>
            </container>
            <container name="Files" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="9b6345f0-cfa2-4434-8299-c168aa0d4ebd" type="Script@VMware.Vim.FileInfo#VMwarePowerPackExtension" returntype="VMware.Vim.FileInfo#VMwarePowerPackExtension#@@@#VMware.Vim.FileInfo#@@@#VMware.Vim.DynamicData#@@@#System.Object">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		if ($managedHost.IsConnected) {
			$noConnection = $false
			$connection = $managedHost.Name
			VMware.VimAutomation.Core\Get-Datastore -Server $connection | ForEach-Object {
				function Get-DatastoreFiles {
					param(
						$DatastoreBrowser,
						$DatastoreName,
						$ParentPath = ''
					)

					trap {
						if ($_.Exception.MethodFault -is [VMware.Vim.FileNotFound]) {
							continue
						} elseif ($_.Exception.MethodFault -is [VMware.Vim.NoPermission]) {
							Write-Warning $_
							continue
						}
					}

					$folderSearchSpecification = New-Object VMware.Vim.HostDatastoreBrowserSearchSpec
					$folderSearchSpecification.details = New-Object VMware.Vim.FileQueryFlags
					$folderSearchSpecification.details.fileSize = $true
					$folderSearchSpecification.details.fileType = $true
					$folderSearchSpecification.details.modification = $true
					$folderSearchSpecification.query += New-Object VMware.Vim.FolderFileQuery
					$fileSearchSpecification = New-Object VMware.Vim.HostDatastoreBrowserSearchSpec
					$fileSearchSpecification.details = New-Object VMware.Vim.FileQueryFlags
					$fileSearchSpecification.details.fileSize = $true
					$fileSearchSpecification.details.fileType = $true
					$fileSearchSpecification.details.modification = $true
					$fileSearchSpecification.query += New-Object VMware.Vim.FileQuery
					$results = $DatastoreBrowser.SearchDatastore("[$DatastoreName]$ParentPath",$folderSearchSpecification)
					if ($? -and $results.File) {
						$results.File | ForEach-Object {
							Get-DatastoreFiles -DatastoreBrowser $DatastoreBrowser -DatastoreName $DatastoreName -ParentPath $(if ($ParentPath) {"$ParentPath\$($_.Path)"} else {$_.Path})
						}
					}
					$results = $DatastoreBrowser.SearchDatastore("[$DatastoreName]$ParentPath",$fileSearchSpecification)
					if ($? -and $results.File) {
						$results.File | ForEach-Object {
							$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VMwarePowerPackExtension")
							$_ `
								| Add-Member -MemberType NoteProperty -Name Name -Value $_.Path -PassThru `
								| Add-Member -MemberType NoteProperty -Name Folder -Value $ParentPath -PassThru `
								| Add-Member -MemberType NoteProperty -Name FullName -Value "[$DatastoreName]$(if ($ParentPath) {`"$ParentPath\$($_.Path)`"} else {$_.Path})" -PassThru `
								| Add-Member -MemberType NoteProperty -Name Datastore -Value $DatastoreName -PassThru
						}
					}
				}

				$view = $_ | Get-View
				$datastoreBrowser = Get-View -Id $view.Browser -Server $connection
				$datastoreName = $view.Info.Name
				Get-DatastoreFiles -DatastoreBrowser $datastoreBrowser -DatastoreName $datastoreName
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the files on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <IconB64>AAABAAEAGyEAAAEAIACYDgAAFgAAACgAAAAbAAAAQgAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAAxMTElsTExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMSWAAAAAAAAAAAAAAAAAAAAAAAAAADExMSWxMTE/87Kyv+6p6j/wa6x/8GusP/Bra7/wa2u/8Gtrv/Bra7/wa2u/8GtsP/Bra//wa2v/8Gtr//Bra//wa2v/8Gtrf++qqn/vrS1/+G9v//ExMT/xMTEgQAAAAAAAAAAAAAAAAAAAADExMT/zsPG/9L14f/s893/6e/g/+nw3v/p8OD/6fLf/+ny3//p8t//6fLf/+ny4P/p8eP/6fHi/+nx5P/p8eT/6fPj/+ny5//t9ej/4/fn/8vw6v/crrH/xMTE6gAAAAAAAAAAAAAAAAAAAADExMT/vqWm/+nq1v///+v///Xg////6/////P////0////9v////X////3////+P////n////5////+P////z////9/////P/////////0/8XMx//UoKP/xMTE0MTExLzExMSUxMTEKwAAAADExMT/xa2u/+Ho1P//9uH///Le//Lj0//Qxrz/1crA/9fNwf/WzcH/2M3C/9jMwv/azsT/2s7E/9rOwv/azsH/2s7F/9TIv//g1cv///zr/9Hh2//QdHr/146Q/+Cytf/Ph4f/xMTE/8TExFXExMT/xKuu/+Hi0P//9tv////m/8jCuP9rb33/dXmD/3t/h/97fob/eX6G/3l+hv95fIT/eXyE/3l+hP95foT/en+G/21wef+Gh4r//vnn/9/l3f/GdHj/uZuc/7za1//19vb/zGJi/8TExL7ExMT/xKuu/+Hmzv//9Nn//ezX//ns1P/m28r/6eHM/+rgz//q4M7/6OHS/+nh0f/p4dH/6eHR/+ni0f/p4tH/6eTT/+Xhz//z6Nn///zp/8jKyP/XhIb///Tl/+r/9v/B1dP/1mJj/8TExOTExMT/xKux/+Hmzf//9dn/+erS///v2f//+t7///nf///54P//+N////rj///74v///eX///3l///85P///OT///vl///96P///+3//vjh/8LHxP/biIf///vo//b/7//AxMH/3pSV/8TExM7ExMT/xK2t/+Hkyf//8tX/+unP//zt0v//7tT//+7V///u1v//7tb//+7X///t1v//79n//+7Y///u2v//8N3///Hc///w3f//9t//+vPe/9PW0f+6am7/2raw//L/7v/Fx8f/24iJ/8TExNDExMT/xK2u/+HlyP//8NP/+enN///w0v//8tT///PV///11v//9dX///TZ///02v//9tn///XZ///22v//9d7///fd///23P//++X//fbd/9vg1v+oXWX/uZ2X//T/7P/Iysj/24mK/8TExNDExMT/xK2u/+Hjx///8NL///jW/9bJu/+Fho//jZCU/5GSmP+Rkpf/kZOW/5GTmP+RlZb/kZWW/5GSlv+Rk5X/kpOW/4SIj/+dmpv///ba/8/Tzf/Uhoj///Lb//H56P/Cx8P/3ImK/8TExNDExMT/xK2v/+Hhw///78////TS/9rPvP+hnp//qaai/6umov+qpqH/qqej/6qno/+qpaH/qqSh/6qppf+qqKL/q6mj/6Kenv+2raf//PLZ/8/Tyf/ThIb//+TP/+364v/Dxsf/3ImK/8TExNDExMT/xK2w/+Hjv///7cr/+ePH///y0P//+9T///nW///51///+df///rY///81///+9n///vZ///72v//+9r///ra///93f///+L///bW/8DFwP/ah4v//+7T//D34P/DxsX/3ImM/8TExNDExMT/xK6w/+Hfvv//7sf/+uTG//nlxv/+5cr//ufJ//7nyP/+5sf//ujN//7nzP/+683//uvO//7pzf/+6c3//urN//3pzv//69H//e7P/8rMx//LfYH//97F/+/84P/FxsP/3ImM/8TExNDExMT/xK6v/+Leuv//7cT/9+HC///sx///+Mz///fN///3z///9s7///jR///40P//99P///fU///41v//99b///nV///82f///dn//O3N/9zd1P+lWmf/ro6K//L64f/IyMf/24mL/8TExNDExMT/xa2w/97ct///6sL//+rF//HcvP/NwbH/0saz/9LIsv/SyLL/0se1/9LHtP/Sx7b/0se1/9LHtf/Sx7X/0se1/83Dtf/Zz73///LP/9PUy//DdXz/8sy1//L22v/Dxsf/3ImL/8TExNDExMT/xKyu/+DZt///577///LG/8a6qf9pdYf/dn2M/3qBjf95gI3/eYCM/3mAjv95gI3/eYCN/3mAjP95gI//eoGN/2tzhP+HiJD//e3I/9LVyP/WhIr//+bC/+700v/Dxsb/3ImN/8TExNDExMT/xKyx/+DZtP//6b3/++K9//7lvP/13Ln/9N26//bgvf/24L3/9uC8//bgvf/438D/99/A//fhwv/34cH/+ODB//Xgwv/+6cr///DK/8fJwf/ThYf//92///Dw0f/DxMb/3IqN/8TExNDExMT/xKyx/+DatP//6Lr/9964//zluP//6r///+q+///pwf//6cH//+nA///rw///7Mb//+zF///sxf//68b//+/H///uyP//8cn//OrB/8LHwP/aion//+bB//H00f/CxMX/3IqN/8TExNDExMT/xK6y/+Darv//5rv/9966//3huv//5bv//+W7///nvP//5rz//+a7///mvP//57///+e+///nvv//58H//+jC///pw///7cf//Oe9/9bYy/+zanX/z6iZ//L01P/HycX/24mN/8TExNDExMT/xKyw/+DZr///5rX/+Ny0///lt///5rr//+e6///mu///5rv//+a9///ovP//6b3//+m////pv///6L7//+q+///owf//7cf//um7/9rbyv+sY3L/wZ2P//Pyzv/Hycn/24mN/8TExNDExMT/xK2z/+DWqv//4rP//+q5/9C+qP93gpP/gYuT/4WNl/+FjZf/hY2V/4WNlf+FjJT/hY6U/4WOlP+FjpT/ho+U/3mCkP+Sk5f//ei3/9LQwv/Whov//+G4//Hvxf/CxcX/3IqN/8TExNDExMT/xK2y/+DXp///4bD//+O1/+HMq/+qpZ7/sKyi/7Stof+zraH/s62h/7OtoP+zraT/s6yj/7Ouo/+zrqP/tK+i/6inof/Ataj//ue1/8zOwv/Tg4b//9qx/+/swf/DxsX/3IqN/8TExNDExMT/xK2x/+DVpf//4a3/9tis///hr///6rP//+m0///rt///67b//+u4///ruf//6rr//+q8///su///7L3//+y+///rv///8cL//eS0/8XDvv/Yhob//9uu//Dpwf/DxMX/3IqN/8TExNDExMT/xa2x/+DUpf//4Kv/+Nir//varf/62qz//Nyt//rcsP/63K//+tuv//rbsP/637P/+t6y//resv/63rP/+t62//vctP//5Lj/++Ox/8jLwv/Lf4b//9Cm//Lrvv/DxcT/3IqN/8TExNDExMT/wqux/+TQnv//4qf//9mp///Zqv//3an//9yq///crf//26z//92s///frf//3rD//96v///er///3bD//9+z///gsv//47f//+Ov/93Xwv+hXnb/rYuF//Luvv/IyMf/24qN/8TExNDExMT/wrG5/9rWm///4Z3/+t2i//reo//63qL/+96k//vgp//74Kb/+9+q//vgqP/74qz/++Kr//virf/74qz/++Gu//virf/86bP/9Oan/8zYx//GeoX/9MCW//Lquf/FxsP/3IqP/8TExNDExMT/5r2//83ez/+7tqX/wsOz/8W+sv++t7X/vLWy/723tP+9trP/vbi0/724tP+9uLT/vbi0/723tf+9t7X/vbi1/724tf+9tLH/ur+7/9LM2v/lfnL//+Sv/+7muf/DwsT/3IqO/8TExNDExMSWxMTE/92iqP/XqbL/1XqH/898hf/choH/3YiF/9qGhP/bhoP/24WG/9uFhv/bhYb/24WE/9uHhf/bh4X/24SF/9uFhf/ZhYT/24WK/9puZ//ss4n///rN/+3Wqv/ExsX/3IqO/8TExNAAAAAAxMTEaMTExNHExMS30paf/7WdjP/8xHv//8yK///GiP//xon//8qM///Ki///yo3//8mM///Ljv//yo///8yP///Mjv//zJL//8iP///WnP//98L///G///TVov+7vLj/3Y6S/8TExMwAAAAAAAAAAAAAAADExMTJ1ZKa/8nr3f/o8Kv/8Oau/+zpr//s6bH/7Oiy/+zosf/s6LP/7Oy0/+zrtf/s67f/7Oy4/+zsuP/s7rf/7fC7/+3tuv/p2qr/7d2s/9fTn//N5eD/4omO/8TExO0AAAAAAAAAAAAAAADExMRgxMTE/+musP/HsLL/wqSp/8WnrP/Fp6v/xaer/8Wnq//Fp6z/xaes/8WnrP/Fpqv/xait/8Worf/Fp6v/xaer/8Wmqv/Fqq7/w6ap/8ews//xzM7/xMTE/8TExIQAAAAAAAAAAAAAAAAAAAAAxMTElsTExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTElgAAAACAAAPgAAAB4AAAAeAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAADgAAAA4AAAAPAAACA=</IconB64>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[182]]></script>
                    </container>
                    <container name="Folder" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FullName" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Datastore" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Path" predefined="False">
                      <script><![CDATA[211]]></script>
                    </container>
                    <container name="FileSize" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Modification" predefined="False">
                      <script><![CDATA[136]]></script>
                    </container>
                    <container name="DynamicType" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DynamicProperty" predefined="False">
                      <script><![CDATA[123]]></script>
                    </container>
                  </items>
                </container>
              </items>
            </container>
            <container name="Tasks" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="5341fe09-09e2-4b9d-9e14-cf86330adb9a" type="Script@VMware.VimAutomation.ViCore.Impl.V1.Task.TaskImpl" returntype="VMware.VimAutomation.ViCore.Impl.V1.Task.TaskImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.VIObjectImpl#@@@#VMware.VimAutomation.Sdk.Util10.VIObjectImpl#@@@#System.Object">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		if ($managedHost.IsConnected) {
			$noConnection = $false
			VMware.VimAutomation.Core\Get-Task -Server $managedHost.Name
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the tasks on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <IconB64></IconB64>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[165]]></script>
                    </container>
                    <container name="State" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="% Complete" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Start Time" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Finish Time" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
            </container>
            <container name="Log Files" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="5a64f0fa-1932-4ba8-980b-74d55a85dc90" type="Script@VMware.VimAutomation.ViCore.Impl.V1.LogDescriptorImpl#VMwarePowerPackExtension" returntype="VMware.VimAutomation.ViCore.Impl.V1.LogDescriptorImpl#VMwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.LogDescriptorImpl#@@@#VMware.VimAutomation.ViCore.Util10.VersionedObjectImpl#@@@#System.Object">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Host','FileName','Type','Description'))
	$PSStandardMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
	foreach ($managedHost in $defaultVIServers) {
		if ($managedHost.IsConnected) {
			$noConnection = $false
			Get-VMHost -Server $managedHost.Name | ForEach-Object {
				Get-LogType -VMHost $(if (Test-VMwareManagementServerByName -ManagedHost $managedHost.Name) {$_} else {$null}) -Server $managedHost.Name `
					| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardMembers -PassThru `
					| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru `
					| Add-Member -MemberType NoteProperty -Name VMHost -Value $_.Name -PassThru `
					| Add-Member -MemberType ScriptProperty -Name Type -Value {$this.Info.Label} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name Description -Value {$this.Info.Summary} -PassThru `
					| ForEach-Object {
						$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VMwarePowerPackExtension")
						$_
					}
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the log files on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <IconB64>AAABAAEAGyEAAAEAIACYDgAAFgAAACgAAAAbAAAAQgAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAAxMTElsTExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMSWAAAAAAAAAAAAAAAAAAAAAAAAAADExMSWxMTE/87Kyv+6p6j/wa6x/8GusP/Bra7/wa2u/8Gtrv/Bra7/wa2u/8GtsP/Bra//wa2v/8Gtr//Bra//wa2v/8Gtrf++qqn/vrS1/+G9v//ExMT/xMTEgQAAAAAAAAAAAAAAAAAAAADExMT/zsPG/9L14f/s893/6e/g/+nw3v/p8OD/6fLf/+ny3//p8t//6fLf/+ny4P/p8eP/6fHi/+nx5P/p8eT/6fPj/+ny5//t9ej/4/fn/8vw6v/crrH/xMTE6gAAAAAAAAAAAAAAAAAAAADExMT/vqWm/+nq1v///+v///Xg////6/////P////0////9v////X////3////+P////n////5////+P////z////9/////P/////////0/8XMx//UoKP/xMTE0MTExLzExMSUxMTEKwAAAADExMT/xa2u/+Ho1P//9uH///Le//Lj0//Qxrz/1crA/9fNwf/WzcH/2M3C/9jMwv/azsT/2s7E/9rOwv/azsH/2s7F/9TIv//g1cv///zr/9Hh2//QdHr/146Q/+Cytf/Ph4f/xMTE/8TExFXExMT/xKuu/+Hi0P//9tv////m/8jCuP9rb33/dXmD/3t/h/97fob/eX6G/3l+hv95fIT/eXyE/3l+hP95foT/en+G/21wef+Gh4r//vnn/9/l3f/GdHj/uZuc/7za1//19vb/zGJi/8TExL7ExMT/xKuu/+Hmzv//9Nn//ezX//ns1P/m28r/6eHM/+rgz//q4M7/6OHS/+nh0f/p4dH/6eHR/+ni0f/p4tH/6eTT/+Xhz//z6Nn///zp/8jKyP/XhIb///Tl/+r/9v/B1dP/1mJj/8TExOTExMT/xKux/+Hmzf//9dn/+erS///v2f//+t7///nf///54P//+N////rj///74v///eX///3l///85P///OT///vl///96P///+3//vjh/8LHxP/biIf///vo//b/7//AxMH/3pSV/8TExM7ExMT/xK2t/+Hkyf//8tX/+unP//zt0v//7tT//+7V///u1v//7tb//+7X///t1v//79n//+7Y///u2v//8N3///Hc///w3f//9t//+vPe/9PW0f+6am7/2raw//L/7v/Fx8f/24iJ/8TExNDExMT/xK2u/+HlyP//8NP/+enN///w0v//8tT///PV///11v//9dX///TZ///02v//9tn///XZ///22v//9d7///fd///23P//++X//fbd/9vg1v+oXWX/uZ2X//T/7P/Iysj/24mK/8TExNDExMT/xK2u/+Hjx///8NL///jW/9bJu/+Fho//jZCU/5GSmP+Rkpf/kZOW/5GTmP+RlZb/kZWW/5GSlv+Rk5X/kpOW/4SIj/+dmpv///ba/8/Tzf/Uhoj///Lb//H56P/Cx8P/3ImK/8TExNDExMT/xK2v/+Hhw///78////TS/9rPvP+hnp//qaai/6umov+qpqH/qqej/6qno/+qpaH/qqSh/6qppf+qqKL/q6mj/6Kenv+2raf//PLZ/8/Tyf/ThIb//+TP/+364v/Dxsf/3ImK/8TExNDExMT/xK2w/+Hjv///7cr/+ePH///y0P//+9T///nW///51///+df///rY///81///+9n///vZ///72v//+9r///ra///93f///+L///bW/8DFwP/ah4v//+7T//D34P/DxsX/3ImM/8TExNDExMT/xK6w/+Hfvv//7sf/+uTG//nlxv/+5cr//ufJ//7nyP/+5sf//ujN//7nzP/+683//uvO//7pzf/+6c3//urN//3pzv//69H//e7P/8rMx//LfYH//97F/+/84P/FxsP/3ImM/8TExNDExMT/xK6v/+Leuv//7cT/9+HC///sx///+Mz///fN///3z///9s7///jR///40P//99P///fU///41v//99b///nV///82f///dn//O3N/9zd1P+lWmf/ro6K//L64f/IyMf/24mL/8TExNDExMT/xa2w/97ct///6sL//+rF//HcvP/NwbH/0saz/9LIsv/SyLL/0se1/9LHtP/Sx7b/0se1/9LHtf/Sx7X/0se1/83Dtf/Zz73///LP/9PUy//DdXz/8sy1//L22v/Dxsf/3ImL/8TExNDExMT/xKyu/+DZt///577///LG/8a6qf9pdYf/dn2M/3qBjf95gI3/eYCM/3mAjv95gI3/eYCN/3mAjP95gI//eoGN/2tzhP+HiJD//e3I/9LVyP/WhIr//+bC/+700v/Dxsb/3ImN/8TExNDExMT/xKyx/+DZtP//6b3/++K9//7lvP/13Ln/9N26//bgvf/24L3/9uC8//bgvf/438D/99/A//fhwv/34cH/+ODB//Xgwv/+6cr///DK/8fJwf/ThYf//92///Dw0f/DxMb/3IqN/8TExNDExMT/xKyx/+DatP//6Lr/9964//zluP//6r///+q+///pwf//6cH//+nA///rw///7Mb//+zF///sxf//68b//+/H///uyP//8cn//OrB/8LHwP/aion//+bB//H00f/CxMX/3IqN/8TExNDExMT/xK6y/+Darv//5rv/9966//3huv//5bv//+W7///nvP//5rz//+a7///mvP//57///+e+///nvv//58H//+jC///pw///7cf//Oe9/9bYy/+zanX/z6iZ//L01P/HycX/24mN/8TExNDExMT/xKyw/+DZr///5rX/+Ny0///lt///5rr//+e6///mu///5rv//+a9///ovP//6b3//+m////pv///6L7//+q+///owf//7cf//um7/9rbyv+sY3L/wZ2P//Pyzv/Hycn/24mN/8TExNDExMT/xK2z/+DWqv//4rP//+q5/9C+qP93gpP/gYuT/4WNl/+FjZf/hY2V/4WNlf+FjJT/hY6U/4WOlP+FjpT/ho+U/3mCkP+Sk5f//ei3/9LQwv/Whov//+G4//Hvxf/CxcX/3IqN/8TExNDExMT/xK2y/+DXp///4bD//+O1/+HMq/+qpZ7/sKyi/7Stof+zraH/s62h/7OtoP+zraT/s6yj/7Ouo/+zrqP/tK+i/6inof/Ataj//ue1/8zOwv/Tg4b//9qx/+/swf/DxsX/3IqN/8TExNDExMT/xK2x/+DVpf//4a3/9tis///hr///6rP//+m0///rt///67b//+u4///ruf//6rr//+q8///su///7L3//+y+///rv///8cL//eS0/8XDvv/Yhob//9uu//Dpwf/DxMX/3IqN/8TExNDExMT/xa2x/+DUpf//4Kv/+Nir//varf/62qz//Nyt//rcsP/63K//+tuv//rbsP/637P/+t6y//resv/63rP/+t62//vctP//5Lj/++Ox/8jLwv/Lf4b//9Cm//Lrvv/DxcT/3IqN/8TExNDExMT/wqux/+TQnv//4qf//9mp///Zqv//3an//9yq///crf//26z//92s///frf//3rD//96v///er///3bD//9+z///gsv//47f//+Ov/93Xwv+hXnb/rYuF//Luvv/IyMf/24qN/8TExNDExMT/wrG5/9rWm///4Z3/+t2i//reo//63qL/+96k//vgp//74Kb/+9+q//vgqP/74qz/++Kr//virf/74qz/++Gu//virf/86bP/9Oan/8zYx//GeoX/9MCW//Lquf/FxsP/3IqP/8TExNDExMT/5r2//83ez/+7tqX/wsOz/8W+sv++t7X/vLWy/723tP+9trP/vbi0/724tP+9uLT/vbi0/723tf+9t7X/vbi1/724tf+9tLH/ur+7/9LM2v/lfnL//+Sv/+7muf/DwsT/3IqO/8TExNDExMSWxMTE/92iqP/XqbL/1XqH/898hf/choH/3YiF/9qGhP/bhoP/24WG/9uFhv/bhYb/24WE/9uHhf/bh4X/24SF/9uFhf/ZhYT/24WK/9puZ//ss4n///rN/+3Wqv/ExsX/3IqO/8TExNAAAAAAxMTEaMTExNHExMS30paf/7WdjP/8xHv//8yK///GiP//xon//8qM///Ki///yo3//8mM///Ljv//yo///8yP///Mjv//zJL//8iP///WnP//98L///G///TVov+7vLj/3Y6S/8TExMwAAAAAAAAAAAAAAADExMTJ1ZKa/8nr3f/o8Kv/8Oau/+zpr//s6bH/7Oiy/+zosf/s6LP/7Oy0/+zrtf/s67f/7Oy4/+zsuP/s7rf/7fC7/+3tuv/p2qr/7d2s/9fTn//N5eD/4omO/8TExO0AAAAAAAAAAAAAAADExMRgxMTE/+musP/HsLL/wqSp/8WnrP/Fp6v/xaer/8Wnq//Fp6z/xaes/8WnrP/Fpqv/xait/8Worf/Fp6v/xaer/8Wmqv/Fqq7/w6ap/8ews//xzM7/xMTE/8TExIQAAAAAAAAAAAAAAAAAAAAAxMTElsTExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTElgAAAACAAAPgAAAB4AAAAeAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAADgAAAA4AAAAPAAACA=</IconB64>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="VMHost" predefined="False">
                      <script><![CDATA[141]]></script>
                    </container>
                    <container name="Filename" predefined="False">
                      <script><![CDATA[170]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[135]]></script>
                    </container>
                    <container name="Description" predefined="False">
                      <script><![CDATA[217]]></script>
                    </container>
                    <container name="Key" predefined="False">
                      <script><![CDATA[184]]></script>
                    </container>
                  </items>
                </container>
              </items>
            </container>
            <container name="Custom Attributes" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="6a9f809a-42fb-4ba5-9f87-5d33b98210ac" type="Script@" returntype="customField#VmwarePowerPackExtension#@@@#System.Management.Automation.PSCustomObject#@@@#System.Object">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
	$PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
	foreach ($managedHost in $defaultVIServers) {
		if ($managedHost.IsConnected) {
			$noConnection = $false
			if ($managedHost.ProductLine -eq "vpx") {
				$customFieldMgr = Get-View -Server $managedHost.Name (Get-View -Server $managedHost.Name ServiceInstance).Content.CustomFieldsManager
				$customFieldMgr.Field | foreach-object {
					$type = "Global"
					if ($_.ManagedObjectType) {$type = $_.ManagedObjectType}
					$customField = New-Object psobject
					$customField.PSObject.TypeNames.Insert(0,"customField#VmwarePowerPackExtension")
					$customField `
					| Add-Member -MemberType NoteProperty -Name "Managed Host" -Value $managedHost.Name -PassThru `
					| Add-Member -MemberType NoteProperty -Name Key -Value $_.Key -PassThru `
					| Add-Member -MemberType NoteProperty -Name Name -Value $_.Name -PassThru `
					| Add-Member -MemberType NoteProperty -Name Type -Value $type -PassThru
				}
			}
			else {
				$msg = $managedHost.Name + " is not a Virtual Center"
				[System.Windows.Forms.MessageBox]::Show($msg,'Data is not retrieved.',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the virtual machines on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <IconB64>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enp6EQAAAAATe3t7e3slJSUlJSUlJSUlJSUlJSUlJSUle3sVAAAAABx+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fhoAAAAAABx+f39/f39+f39+f35+fn5/f35/f35/f34cAAAAAAAAABwcHhwcHhwcHhwcHhwcHhwcHhwcHhwcHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////////////////////////////////////////3////8/////H////w////8H///8AAAD+AAAAfAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPgAAAH8AAAD////////////////////////////////ygAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAAAAEGamABpsqQAmc60ANHuyAEGDtwBbkcAAZZjDAG2cxgCO+f8AnPn/AKz6/wDM/P4A2foKBAQEBAQEBAAAAAAFCwsLCwsLCwsLCwsFAAAABQsICAgICAgICAgLBQAAAAULCwsLCwsLCwsLCwUAAAAGDAgICAgICAgICAwGAAAABw0NDQ0NDQ0NDQ0NBwAAAAAICAgICAgICAgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAO//AADn/wAA4/8AAMAHAACAAwAAgAMAAIADAACAAwAAgAMAAMAHAAD//wAA//8AAP//AAA=</IconB64>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Managed Host" predefined="False">
                      <script><![CDATA[160]]></script>
                    </container>
                    <container name="Name" predefined="False">
                      <script><![CDATA[382]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
            </container>
            <container name="Best Practice Queries" Description="" predefined="False" ResultView="9285b124-a8f7-49ef-aca8-a922d7b524af" id="5256202a-c795-40a2-8bcc-1f83b7487d09" type="Folder@">
              <IconB64>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</IconB64>
              <items>
                <container name="WasteFinder" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="92bd78fc-b190-43bb-935d-aadbad501765" type="Script@" returntype="WasteFinder#VmwarePowerPackExtension#@@@#System.Management.Automation.PSCustomObject#@@@#System.Object">
                  <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$totCapMB = 0
		$totFreeMB = 0
		$GuestCapB = 0
		$GuestFreeB = 0
		$noConnection = $false
		
		VMware.VimAutomation.Core\Get-Datastore -Server $managedHost | ForEach-Object {
			$totCapMB += $_.CapacityMB
			$totFreeMB += $_.FreeSpaceMB
		}

		Get-VM -Server $managedHost | where {($_.PowerState -eq "PoweredOn") -and ($_.Guest.OSFullName -match "Windows")} | ForEach-Object {
			$_.Guest.Disks | ForEach-Object {
				$GuestCapB += $_.Capacity
				$GuestFreeB += $_.FreeSpace
			}
		}
		$totUsedMB = $totCapMB - $totFreeMB
		$GuestUsedB = $GuestCapB - $GuestFreeB
		$reclaimB = ($GuestCapB - ($GuestUsedB/.8))
		
		$waste = New-Object PSObject
		$waste.PSObject.TypeNames.Insert(0,"WasteFinder#VmwarePowerPackExtension")
		$waste `
			| Add-Member -MemberType NoteProperty -Name VirtualCenter -Value $managedHost.Name -PassThru `
			| Add-Member -MemberType NoteProperty -Name "ReclaimableGB (20% Quota)" -Value ([math]::Round(($ReclaimB/1024/1024/1024), 2)) -PassThru `
			| Add-Member -MemberType NoteProperty -Name TotalCapacityGB -Value ([math]::Round(($totCapMB/1024), 2)) -PassThru `
			| Add-Member -MemberType NoteProperty -Name TotalUsedGB -Value ([math]::Round(($totUsedMB/1024), 2)) -PassThru `
			| Add-Member -MemberType NoteProperty -Name TotalFreeGB -Value ([math]::Round(($totFreeMB/1024), 2)) -PassThru `
			| Add-Member -MemberType NoteProperty -Name GuestCapacityGB -Value ([math]::Round(($GuestCapB/1024/1024/1024), 2)) -PassThru `
			| Add-Member -MemberType NoteProperty -Name GuestUsedGB -Value ([math]::Round(($GuestUsedB/1024/1024/1024), 2)) -PassThru `
			| Add-Member -MemberType NoteProperty -Name GuestFreeGB -Value ([math]::Round(($GuestFreeB/1024/1024/1024), 2)) -PassThru
	}
}
if ($noConnection){
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the virtual machines on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
                  <IconB64>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PP/FhDz/xYQ8/8WEPP/Fgzv/w34z/9uzhv/+/fv//////////////v3/3LWL/8J/M//Egzr/xYQ8/8WEPP/FhDz/xYQ8/8WEPP/FhDz/xYQ8/8WEPP/GhDr/xIZB/5OGeP+Wl5n/5OXl/9jY2PSwsLDzqKmq/5eTj//Ag0H/xoQ6/8WEPP/FhDz/xYQ8/8WEPP/FhDz/xYM7/8J+M//btIj//v37/////////////v38/9y2i//CfjP/xYM7/8WEPP/FhDz/xYQ8/8WEPP/FhDz/xYQ8/8WEPP/FhDz/yYQ4/5eAaf+Bgob/4+Pj/+Pj4/K4uLjyr7Cx/5uQhP/Agj3/xoQ7/8WEPP/FhDz/xYQ8/8WEPP/FhDz/xYQ8/8SDOv/CfjP/3LSI//79/P////////////79/P/ctYn/wXsv/8F8Lv/DgDX/xYQ8/8WEPP/FhDz/xYQ8/8WEPP/FhDz/yoU4/5h5WP99foH/6Ojn/+zs7PLAwMDztre5/5aNhP++gT3/xoQ7/8WEPP/FhD3/xYQ8/8WEPP/FhDz/xYQ8/8WEPP/Fgzr/wn4z/9y1if/+/fz////////////+/fv/4b+a/9qwgv/OmV3/w380/8WDO//FhDz/xYQ8/8WEPP/FhDz/yoU5/5NzUP92d3r/7Ozt//Pz8/LJycnvwcLD/5COjP+5fj3/x4Q7/8WFPv/Jj03/x4lF/8WEPf/FhDz/xYQ8/8WEPP/FhDz/xYM6/8J+M//ctov//v79///////////////////////79/L/2bCC/8OANf/FhDz/xYQ8/8WEPP/FhDz/y4Y6/4xsSv95en3/9/f4//n5+fPQ0NDOzc3O/5eWlv+reUT/x4M4/8iNTP/OnWb/y5NW/8eKR//FhT7/xYQ8/8WEPP/FhDz/xYQ8/8SDOv/CfzP/3LOI//369/////////////Lk1P//////+vTu/8qQT//DgTf/xYQ8/8WEPP/FhDz/zIc6/31jSP+LjZH///////z8/PDZ2dmg1NTV/6iqrP+adlH/yYM1/8uUV//UrH//z6Br/8uVWP/IjUr/xYZA/8WEPP/FhDz/xYQ8/8WEPP/Fgzr/w4E2//jx6f//////582v/8WFPv/euZH//////9Oia//CfjP/xYQ8/8WEPP/GhDz/xoU8/3NiUP+pq6////////7+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</IconB64>
                  <items>
                    <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                      <items>
                        <container name="VirtualCenter" predefined="False">
                          <script><![CDATA[146]]></script>
                        </container>
                        <container name="ReclaimableGB (20% Quota)" predefined="False">
                          <script><![CDATA[100]]></script>
                        </container>
                        <container name="TotalCapacityGB" predefined="False">
                          <script><![CDATA[100]]></script>
                        </container>
                        <container name="TotalUsedGB" predefined="False">
                          <script><![CDATA[100]]></script>
                        </container>
                        <container name="TotalFreeGB" predefined="False">
                          <script><![CDATA[100]]></script>
                        </container>
                        <container name="GuestCapacityGB" predefined="False">
                          <script><![CDATA[100]]></script>
                        </container>
                        <container name="GuestUsedGB" predefined="False">
                          <script><![CDATA[100]]></script>
                        </container>
                        <container name="GuestFreeGB" predefined="False">
                          <script><![CDATA[100]]></script>
                        </container>
                      </items>
                    </container>
                  </items>
                </container>
                <container name="Host Queries" Description="" predefined="False" id="676514d3-0d39-4d2e-8bbb-e03ba1af7a28" type="Folder@">
                  <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAABAAAABAAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABQAAAAIAAAAAAAAABAAAAAwAAAASAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABEAAAAJAAAAAh5bds4hXnv/IF16/x5bd/8eXHj/Hlt2/xNYdv8AbZ//AHiv/wB4r/8AeK//AHiv/wB4rv8AXYdIAAAAEgAAAAewrqz/+cCc//fDnf/vu5X/9reK//nDnf+sqqj/YHeB/0fH+f9Hx/n/R8f5/0fH+f8orOD/AHiu/wAAABcAAAANqKOg//ueXP/9m07//65q//+rYP//qWP/ubKt/5CXmv9Sz///Us///1LP//9Sz///NLPm/yGbzv8AcKJ5AAAAEqmkov/9qWv//6xl///IjP//xoT//86b/7mwrP+MlZn/X9n//1/Z//9f2f//X9n//zq36P9fvt7/AHiv/wAAABezr63//59c//+rZP//xpD//8qT///Omv+8t7T/kZib/23h//9q3v//at7//23h//9Au+v/ofD+/wB4r/8AcKJ5fZSf/7S1tP+yr63/vbKs/72yrP+8tK//s7Oy/6Cnp/936f//d+n//3fp//936f//R8Dw/7f3/f9u0e3/AHiv/wR8sf904ff/cam8/+jp6v/o6ev/5ubo//j39/+5ubn/z/r+/8/6/v/P+v7/z/r+/4Tq/P/i+v3/u/L//wB4r/8AfLP/f/D//4HH0P+1vL7/tLu+/7O6vf+zur3/fJSf/wB6sf8AerH/AHqx/wB6sP8AerD/AHqw/wB4r/8AeK6sAH60/4j3//+G9P//hvT//4j3//+J+P//hvT//4j3//+G9P//iPf//4b0//+G9P//AHqw/wAAABIAAAAGAAAAAAB+tP+S+v//j/r//4/6//+P+v//j/r//+f9///n/f//5/3//+f9///n/f//5/3//wB6sf8AAAAMAAAABAAAAAAAfrT/5/3//+f9///n/f//5/3//+f9//8AfLP/AHyz/wB8sv8AfLL/AHyy/wB6sf8AerCsAAAABAAAAAEAAAAAAH60qwB+tP8AfrT/AH60/wB8s/8AfLP/AHuygQAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAB/AAD//wAA//8AAA==</IconB64>
                  <items>
                    <container name="Hosts with NTP Service Stopped" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="0ed8f961-cd76-4642-8a5a-a7fc6e66f341" type="Script@">
                      <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		Get-VMHost -Server $managedHost | ForEach-Object {
			$vmhost = $_.Name
			$_ | Get-VMHostService | Where {($_.key -eq "ntpd") -and ($_.Running -eq $false)} | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType NoteProperty -Name VMHost -Value $vmhost -PassThru `
					| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru
			}
		}
	}
}
if ($noConnection){
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the virtual machines on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
                      <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAEAAAADAAAABIAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEgAAAA4AAAAIbW1tm2xsbP9qamr/aGho/2ZmZv9kZGT/YmJi/2FhYf9eXl7/W1tb/1paWv9YWFj/V1dX/1FRUaMAAAAXAAAAE3Jycv/r6+v//////////////////f7//+bv8P/p7/D//f/////////3+fr//fz3/+vr6/9YWFj/WFhY/1BQUKN1dXX/6+vr/+RmHP/3dSL/8ncl//V5Jv/2eyj/9nsq//d/K//zfy3/94Aq/+6FQv/r6+v/Wlpa/+Dh4P9XV1f/eHh4/+vr6//naBr//MuX//zMmP/8y5P//c6d//3Qnv/+jDn//pA9//+ROf/5llH/6+vr/1xcXP/k5OT/WVlZ/3t7e//r6+v/6Gkc//rPof/mkVn/5o5Q/+2NS//wzqv//NOl///RnP//1KL/+JZT/+vr6/9hYWH/4uPj/15eXv99fX3/6+vr/9BsLv+rn5L/cHJx/5aWkP+Fe3L/ppuL//ipYf/5sm///9ur//iZWf/r6+v/Y2Nj/+Lj4/9eXl7/f39//87Ozv99gIH/ua6V/+rXrf/BsIz/zr2X/7qzoP95c2v/4K98//7juv//rW3/6+vr/2ZmZv/i4+L/YWFh/4GBgf+Vl5r/xLeZ/+XSqv/m1Kv/69iu/+vYrv/r2K7/r6mY/56YjP/037z//7p8/+vr6/9paWn/4eLh/2RkZP95eXn/n5+a/9vMrP/r3Lv/18in/7+vjf/r2K7/49Co/9vJov9+e3j/7KJs//iiZv/r6+v/bGxs/+Xm5f9nZ2f/YWFh/7e0rf/PxbD/6+HM/+vgxv+Jfmj/49Gq/+vYrv+7q4j/jIyI/+Dg4P/r6+v/6+vr/3BwcP/o6ej/aWlp/2hoaKa5uLT/6+XZ/+vn3f/DvK3/08ev/+vatf/p163/59Wr/29xcf+BgYH/d3d3/3V1df+mpqX/7e3s/2xsbP8AAAAAj5CQz767tv/p6un/2tXK/+vgyf/r27n/69iu/7mvmP+qrK7/8vHy//Py8v/z8vL/8/Pz//Hw8P9wcHD/AAAAAFVWVkC5ubfvw7+5/+vk1P/Mwar/28up/8C0mP+TlZj/19bW/+Xk5P/l5OT/5eTk/+fm5v/18/P/cnJy/wAAAAAAAAAAVlZWQJGRkc+3trH/vruz/5ualf+anZ//39/f//7+/v/+/v7//v7+//7+/v///////////3Z2dv8AAAAAAAAAAAAAAAAAAAAAGRoaIFNTU7N9fX3/gYGB/4CAgP+AgID/gICA/35+fv99fX3/fHx8/3p6ev93d3ebAAAAAAAAAAAAAP//AAB4cAAAa2UAAGJlAABuPQAAu78AAGlkAABXNQAATXAAAGhp+AByZfgATlT4AGtj+AAiPw==</IconB64>
                      <items>
                        <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                          <items>
                            <container name="VMHost" predefined="False">
                              <script><![CDATA[142]]></script>
                            </container>
                            <container name="Key" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Label" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Policy" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Running" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Required" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                          </items>
                        </container>
                      </items>
                    </container>
                    <container name="Hosts with NIC under 1Gb/s" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="2532d89a-9cf1-49a0-80e1-f5cac19acc41" type="Script@">
                      <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		Get-VMHost -Server $managedHost | ForEach-Object {
			$vmh = Get-View -id $_.id -Server $managedHost
			$vmh.Config.Network.Pnic | ForEach-Object {
				$pNicDevId = $_.Pci
				$key = $_.key
				$PCIDevice = $vmh.Hardware.PciDevice | Where-Object {$_.id -eq $pNicDevId}
				$vSwitch = $vmh.Config.Network.Vswitch | Where-Object {$_.Pnic -contains $key}
				$Duplex = "Half"
				if ($_.LinkSpeed.Duplex -eq $True){$Duplex = "Full"}
				$LinkStatus = "Up"
				if ($_.LinkSpeed -eq $null){
					$LinkStatus = "Down"
					$Duplex = $null
				}
				$LinkConfig = "Auto Negotiate"
				if ($_.Spec.LinkSpeed -ne $null){
					$SpecDuplex = "Half"
					if ($_.Spec.LinkSpeed.Duplex -eq $True){$SpecDuplex = "Full"}
					$LinkConfig = "$($_.Spec.LinkSpeed.SpeedMb, $SpecDuplex)"
				}
				if ($_.LinkSpeed.SpeedMb -ne 1000) {
					$pNic = New-Object PSObject
					$pNic.PSObject.TypeNames.Insert(0,"PhysicalNIC#VmwarePowerPackExtension")
					$pNic `
						| Add-Member -MemberType NoteProperty -Name VMHost -Value $vmh.Name -PassThru `
						| Add-Member -MemberType NoteProperty -Name Device -Value $_.Device -PassThru `
						| Add-Member -MemberType NoteProperty -Name LinkSpeed -Value $_.LinkSpeed.SpeedMb -PassThru `
						| Add-Member -MemberType NoteProperty -Name Duplex -Value $Duplex -PassThru `
						| Add-Member -MemberType NoteProperty -Name "Hardware Vendor" -Value $PCIDevice.VendorName -PassThru `
						| Add-Member -MemberType NoteProperty -Name "Hardware Model" -Value $PCIDevice.DeviceName -PassThru `
						| Add-Member -MemberType NoteProperty -Name Location -Value $_.Pci -PassThru `
						| Add-Member -MemberType NoteProperty -Name Driver -Value $_.Driver -PassThru `
						| Add-Member -MemberType NoteProperty -Name Status -Value $LinkStatus -PassThru `
						| Add-Member -MemberType NoteProperty -Name "Wake On LAN" -Value $_.WakeOnLanSupported -PassThru `
						| Add-Member -MemberType NoteProperty -Name LinkConfig -Value $LinkConfig -PassThru `
						| Add-Member -MemberType NoteProperty -Name "Virtual Switch" -Value $vSwitch.name -PassThru `
						| Add-Member -MemberType NoteProperty -Name MACAddress -Value $_.Mac -PassThru `
						| Add-Member -MemberType NoteProperty -Name key -Value $_.key -PassThru `
						| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru 
				}
			}	
		}
	}
}
if ($noConnection){
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the virtual machines on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
                      <IconB64>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</IconB64>
                      <items>
                        <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                          <items>
                            <container name="VMHost" predefined="False">
                              <script><![CDATA[169]]></script>
                            </container>
                            <container name="Device" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="LinkSpeed" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Duplex" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Hardware Vendor" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Hardware Model" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Location" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Driver" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Status" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Wake On LAN" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="LinkConfig" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Virtual Switch" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="MACAddress" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="key" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Host" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                          </items>
                        </container>
                      </items>
                    </container>
                    <container name="Hosts with NIC at Half Duplex" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="4eaaf7c3-7839-4c30-9fc6-a364819a4931" type="Script@">
                      <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		Get-VMHost -Server $managedHost | ForEach-Object {
			$vmh = Get-View -id $_.id -Server $managedHost
			$vmh.Config.Network.Pnic | ForEach-Object {
				$pNicDevId = $_.Pci
				$key = $_.key
				$PCIDevice = $vmh.Hardware.PciDevice | Where-Object {$_.id -eq $pNicDevId}
				$vSwitch = $vmh.Config.Network.Vswitch | Where-Object {$_.Pnic -contains $key}
				$Duplex = "Half"
				if ($_.LinkSpeed.Duplex -eq $True){$Duplex = "Full"}
				$LinkStatus = "Up"
				if ($_.LinkSpeed -eq $null){
					$LinkStatus = "Down"
					$Duplex = $null
				}
				$LinkConfig = "Auto Negotiate"
				if ($_.Spec.LinkSpeed -ne $null){
					$SpecDuplex = "Half"
					if ($_.Spec.LinkSpeed.Duplex -eq $True){$SpecDuplex = "Full"}
					$LinkConfig = "$($_.Spec.LinkSpeed.SpeedMb, $SpecDuplex)"
				}
				if ($Duplex -eq "Half") {
					$pNic = New-Object PSObject
					$pNic.PSObject.TypeNames.Insert(0,"PhysicalNIC#VmwarePowerPackExtension")
					$pNic `
						| Add-Member -MemberType NoteProperty -Name VMHost -Value $vmh.Name -PassThru `
						| Add-Member -MemberType NoteProperty -Name Device -Value $_.Device -PassThru `
						| Add-Member -MemberType NoteProperty -Name LinkSpeed -Value $_.LinkSpeed.SpeedMb -PassThru `
						| Add-Member -MemberType NoteProperty -Name Duplex -Value $Duplex -PassThru `
						| Add-Member -MemberType NoteProperty -Name "Hardware Vendor" -Value $PCIDevice.VendorName -PassThru `
						| Add-Member -MemberType NoteProperty -Name "Hardware Model" -Value $PCIDevice.DeviceName -PassThru `
						| Add-Member -MemberType NoteProperty -Name Location -Value $_.Pci -PassThru `
						| Add-Member -MemberType NoteProperty -Name Driver -Value $_.Driver -PassThru `
						| Add-Member -MemberType NoteProperty -Name Status -Value $LinkStatus -PassThru `
						| Add-Member -MemberType NoteProperty -Name "Wake On LAN" -Value $_.WakeOnLanSupported -PassThru `
						| Add-Member -MemberType NoteProperty -Name LinkConfig -Value $LinkConfig -PassThru `
						| Add-Member -MemberType NoteProperty -Name "Virtual Switch" -Value $vSwitch.name -PassThru `
						| Add-Member -MemberType NoteProperty -Name MACAddress -Value $_.Mac -PassThru `
						| Add-Member -MemberType NoteProperty -Name key -Value $_.key -PassThru `
						| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru 
				}
			}	
		}
	}
}
if ($noConnection){
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the virtual machines on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
                      <IconB64>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</IconB64>
                      <items>
                        <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                          <items>
                            <container name="VMHost" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Device" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="LinkSpeed" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Duplex" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Hardware Vendor" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Hardware Model" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Location" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Driver" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Status" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Wake On LAN" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="LinkConfig" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Virtual Switch" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="MACAddress" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="key" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Host" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                          </items>
                        </container>
                      </items>
                    </container>
                  </items>
                </container>
                <container name="VM Queries" Description="" predefined="False" id="4a310607-eb09-4c0b-bf67-69588fce0429" type="Folder@">
                  <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAABmPCF/aUMpjmlFLI9pSTKPaUgyj2tJNI9hPieIAAAAEQAAAAYAAAAGAAAABgAAAAYAAAAGAAAABQAAAAIAAAAA76t3///40v//58H//9uq///fsf//5bv/6ap3/2k+JJgAAAATAAAAEwAAABMAAAATAAAAEwAAABEAAAAJAAAAAt+oePr/9dD//NSi//3Tlv//3aT//+Sq/+y5hP/vsYT/AHiv/wB4r/8AeK//AHiv/wB4rv8AXYdIAAAAEgAAAAfaq3////DI//zOl//+1JT//92h///kqP/tuYX/3a6H/0fH+f9Hx/n/R8f5/0fH+f8orOD/AHiu/wAAABcAAAAN37OK////5f//2qr//9qa///gpP//5qj/7riA/9ypf/9Sz///Us///1LP//9Sz///NLPm/yGbzv8AcKJ5AAAAEsCSbP/fvJf/3qNx/+qsc//qsnv/6rJ6/+Slbv/eq37/X9n//1/Z//9f2f//X9n//zq36P9fvt7/AHiv/wAAABcMfKz/aNTz/3KBfP/54sD//O3M//zox//98c//5LWK/23h//9q3v//at7//23h//9Au+v/ofD+/wB4r/8AcKJ5AHyz/2re//92lpj/27KN/+O7lf/huZH/4LuU/8+ddP936f//d+n//3fp//936f//R8Dw/7f3/f9u0e3/AHiv/wB8s/905///Xdj//w2Uy//i+v3/z/r+/8/6/v/P+v7/z/r+/8/6/v/P+v7/z/r+/4Tq/P/i+v3/u/L//wB4r/8AfLP/f/D//3/w//8/ttn/AHyz/wB8sv8AfLL/AHyy/wB6sf8AerH/AHqx/wB6sP8AerD/AHqw/wB4r/8AeK6sAH60/4j3//+G9P//hvT//4j3//+J+P//hvT//4j3//+G9P//iPf//4b0//+G9P//AHqw/wAAABIAAAAGAAAAAAB+tP+S+v//j/r//4/6//+P+v//j/r//+f9///n/f//5/3//+f9///n/f//5/3//wB6sf8AAAAMAAAABAAAAAAAfrT/5/3//+f9///n/f//5/3//+f9//8AfLP/AHyz/wB8sv8AfLL/AHyy/wB6sf8AerCsAAAABAAAAAEAAAAAAH60qwB+tP8AfrT/AH60/wB8s/8AfLP/AHuygQAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDQAAAA0EAAANBAAADQQAAA0EAAJtAAAADQQAA/0AAADFBAADDQAAB2UAAASVBAAEAAAB/MUH//9BA//+0QA==</IconB64>
                  <items>
                    <container name="VMs with CDROM Connected" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="7367a532-5c15-4f47-959a-37de00b2aee3" type="Script@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.CDDriveImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.CDDriveImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.VirtualDeviceImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object">
                      <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		Get-VM -Server $managedHost | ForEach-Object {
			$vmname = $_.Name
			$cd = $_ | Get-CDDrive | where {$_.ConnectionState.Connected -eq $true}
			if ($cd) {
				$cd.PSObject.TypeNames.Insert(0,"$($cd.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$cd `
					| Add-Member -MemberType NoteProperty -Name VM -Value $vmname -PassThru `
					| Add-Member -MemberType NoteProperty -Name Connected $cd.ConnectionState.Connected -PassThru `
					| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru
			}
		}
	}
}
if ($noConnection){
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the virtual machines on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
                      <IconB64>AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAABAAAAAQAAAAAAAD0jMgBTRU4AYkZYAG1tbQB2a3EAcXBxAHV1dQB5eXkAfHt8AIB6fQAcok4AFKlTABG/UQAlq10AUJpsAGyLdQBjnnkACN1XAIGBgQCGhoYAiYmJAIuKjACPkI8AkpGQAJWVlQCekpkAnJiYAJucmwCbnJ0AoZ+gAKKhoQCppaUAq6qmAKinqACpqakArqusALGurgC7q7IAtbCwALO1tQC6tLQAubm5AL65uQC8vb0AybK7AMG7uwDFwLsAvr/AAMDBwQDHwMAAxMXFAM7ExQDPyMcAxsnJAMrLzADMy8wA0MTGANTKywDVzs0AztDQANDQ0ADT1NUA1tbWAN7Q0gDX2doA3dvZAN3d3gDo2tsA6d3dAN/g3wDm4NwA39/gAOTl5QDu4uQA4eXoAOfo6QDp6eoA6+3tAPLl5gD26OcA+ezsAPLy8gD28fEA/vHwAP719QDy9vkkHhYXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCArKRoFCRkHAAAAAAAAAAAAAAAAAAAAAAAAAAAfJS4rJCkmDwsCHhYHEwAAAAAAAAAAAAAAAAAAHykuKSkkKTQ0NC0ODQEWCRMJBwAAAAAAAAAAAAAfMjQlKSkuRE9RREA0LQwSAxwfCQkTBxYAAAAAAAAANB8nKzVEU1NVU1BEQDo5ERAKOEgfFgkTEwUAAAAAAAAkHzpERFFTVVVTU086KR4ZFiRNU0wyHxMTEwcWAAAAACElOkJKUVVRSjolHhYZHykrKys4TVNIKxwTFhMGAAAAHyA0KysrHxweJCsyODg4NDAnLCcrPFNTQScZFRwJAAAyHB8kKzY9SUtCPD1BPURHRz0yLCQgJDJMUzwfHxwAAAAyLCs8U1VWQj1ES09MSUI9PTg1MisjGRk4VU1BJwAAAAAAADMnMkFOVlVVVlNNTExGQj08PDwyJCM2TVU8AAAAAAAAAAAAMys2TVZVVVVVVVZNTUxCSD02MzMrQTYAAAAAAAAAAAAAAAAzKz1TU0EzM0hNSD08NjMoKCszAAAAAAAAAAAAAAAAAAAAODMoHQcTJzwzMjwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEsNjg8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//////////////////////////////////////////////////w////AH//+AAf/4AAD/wAAAP4AAAB+AAAAHgAAAA4AAAAGAAAABwAAAAfgAAAH/AAAB/+AAA//4AP///g///////////////////////////////////////ygAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAAAAUk9PAFxXVwBdWloAYmNhAGdkZABxY2wAd3NzAHlxcQB7e3sAgX1/ABS8VgA7sWAAX45sAGCOcQAvwF4ACOpSAHuRggCBgYEAhYWFAJKLiwCRkZEAlpWVAJ2XlwCZlpgAmZiYAJ2cmwCdnJ0AoZqaAKWiowCopaYAqqusAK6srACwra0As7CvALSvsAC1sLEAu7O0ALu3uAC+uLkAu729AL69vQDBt7YAxb+/AJfGpQDLu8AAwsHBAMbCwQDGxsYAycXFAMjIyADNyskA1c3NANjNzgDS0NAA1dPSANXV1gDY1tUA2dnZAN3a2QDe3d4A49fYAOXZ2ADJ99kA4eDhAOTj4wDl5+kA5ujoAOvr7QDu7+8A8+rqAPbu7gDw8PAA+PX3APz09AD+/vgICAgICAgICAgIFwAcAiMjIyMjIyMjIyMsIwIcCCM5KioqKksqPj4HDAMjCAgjBwUFBQUFBQc+DRABIwgIJzkqKioqKio+PgcPBSIICCs5S0tLS0tLS0tLPzkvCDImIyMjIyMjHhoVFRodJjIAQTkyPkRERERERERAMjkAAAAAADo5NjY5NjY5OQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAP//AACAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAEAAPAHAAD//wAA//8AAP//AAA=</IconB64>
                      <items>
                        <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                          <items>
                            <container name="VM" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Name" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Connected" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="IsoPath" predefined="False">
                              <script><![CDATA[173]]></script>
                            </container>
                            <container name="HostDevice" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="RemoteDevice" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                          </items>
                        </container>
                      </items>
                    </container>
                    <container name="VMs with FDD Connected" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="c03ba826-7ff1-427f-802d-59e0d0933682" type="Script@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.FloppyDriveImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.FloppyDriveImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.VirtualDeviceImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object">
                      <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		Get-VM -Server $managedHost | ForEach-Object {
			$vmname = $_.Name
			$flop = $_ | Get-FloppyDrive | where {$_.ConnectionState.Connected -eq $true}
			if ($flop) {
				$flop.PSObject.TypeNames.Insert(0,"$($flop.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$flop `
					| Add-Member -MemberType NoteProperty -Name VM -Value $vmname -PassThru `
					| Add-Member -MemberType NoteProperty -Name Connected $flop.ConnectionState.Connected -PassThru `
					| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru
			}
		}
	}
}
if ($noConnection){
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the virtual machines on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
                      <IconB64>AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAABAAAAAQAAAAAAAD0jMgBTRU4AYkZYAG1tbQB2a3EAcXBxAHV1dQB5eXkAfHt8AIB6fQAcok4AFKlTABG/UQAlq10AUJpsAGyLdQBjnnkACN1XAIGBgQCGhoYAiYmJAIuKjACPkI8AkpGQAJWVlQCekpkAnJiYAJucmwCbnJ0AoZ+gAKKhoQCppaUAq6qmAKinqACpqakArqusALGurgC7q7IAtbCwALO1tQC6tLQAubm5AL65uQC8vb0AybK7AMG7uwDFwLsAvr/AAMDBwQDHwMAAxMXFAM7ExQDPyMcAxsnJAMrLzADMy8wA0MTGANTKywDVzs0AztDQANDQ0ADT1NUA1tbWAN7Q0gDX2doA3dvZAN3d3gDo2tsA6d3dAN/g3wDm4NwA39/gAOTl5QDu4uQA4eXoAOfo6QDp6eoA6+3tAPLl5gD26OcA+ezsAPLy8gD28fEA/vHwAP719QDy9vkkHhYXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCArKRoFCRkHAAAAAAAAAAAAAAAAAAAAAAAAAAAfJS4rJCkmDwsCHhYHEwAAAAAAAAAAAAAAAAAAHykuKSkkKTQ0NC0ODQEWCRMJBwAAAAAAAAAAAAAfMjQlKSkuRE9RREA0LQwSAxwfCQkTBxYAAAAAAAAANB8nKzVEU1NVU1BEQDo5ERAKOEgfFgkTEwUAAAAAAAAkHzpERFFTVVVTU086KR4ZFiRNU0wyHxMTEwcWAAAAACElOkJKUVVRSjolHhYZHykrKys4TVNIKxwTFhMGAAAAHyA0KysrHxweJCsyODg4NDAnLCcrPFNTQScZFRwJAAAyHB8kKzY9SUtCPD1BPURHRz0yLCQgJDJMUzwfHxwAAAAyLCs8U1VWQj1ES09MSUI9PTg1MisjGRk4VU1BJwAAAAAAADMnMkFOVlVVVlNNTExGQj08PDwyJCM2TVU8AAAAAAAAAAAAMys2TVZVVVVVVVZNTUxCSD02MzMrQTYAAAAAAAAAAAAAAAAzKz1TU0EzM0hNSD08NjMoKCszAAAAAAAAAAAAAAAAAAAAODMoHQcTJzwzMjwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEsNjg8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//////////////////////////////////////////////////w////AH//+AAf/4AAD/wAAAP4AAAB+AAAAHgAAAA4AAAAGAAAABwAAAAfgAAAH/AAAB/+AAA//4AP///g///////////////////////////////////////ygAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAAAAUk9PAFxXVwBdWloAYmNhAGdkZABxY2wAd3NzAHlxcQB7e3sAgX1/ABS8VgA7sWAAX45sAGCOcQAvwF4ACOpSAHuRggCBgYEAhYWFAJKLiwCRkZEAlpWVAJ2XlwCZlpgAmZiYAJ2cmwCdnJ0AoZqaAKWiowCopaYAqqusAK6srACwra0As7CvALSvsAC1sLEAu7O0ALu3uAC+uLkAu729AL69vQDBt7YAxb+/AJfGpQDLu8AAwsHBAMbCwQDGxsYAycXFAMjIyADNyskA1c3NANjNzgDS0NAA1dPSANXV1gDY1tUA2dnZAN3a2QDe3d4A49fYAOXZ2ADJ99kA4eDhAOTj4wDl5+kA5ujoAOvr7QDu7+8A8+rqAPbu7gDw8PAA+PX3APz09AD+/vgICAgICAgICAgIFwAcAiMjIyMjIyMjIyMsIwIcCCM5KioqKksqPj4HDAMjCAgjBwUFBQUFBQc+DRABIwgIJzkqKioqKio+PgcPBSIICCs5S0tLS0tLS0tLPzkvCDImIyMjIyMjHhoVFRodJjIAQTkyPkRERERERERAMjkAAAAAADo5NjY5NjY5OQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAP//AACAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAEAAPAHAAD//wAA//8AAP//AAA=</IconB64>
                      <items>
                        <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                          <items>
                            <container name="VM" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Name" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Connected" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="FloppyImagePath" predefined="False">
                              <script><![CDATA[170]]></script>
                            </container>
                            <container name="HostDevice" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="RemoteDevice" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                          </items>
                        </container>
                      </items>
                    </container>
                    <container name="VMs with Limited Memory" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="f974896f-f00e-4b1b-be5e-46232c712b9c" type="Script@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VM.VMResourceConfigurationImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.VM.VMResourceConfigurationImpl#@@@#System.Object">
                      <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
	$PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		Get-VM -Server $managedHost | ForEach-Object {
			$vmName = $_.Name
			trap {
				Write-Warning "VM $vmName Ecnountered and Error: $_"
				continue
			}
			Get-VMResourceConfiguration -VM $_ | where {$_.MemLimitMB -ne -1 } | ForEach-Object {
	 			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ | Add-Member -MemberType NoteProperty -Name VMName -Value $vmName
				$_ | Add-Member -MemberType scriptProperty -Name "CPU Limit (Mhz)" -Value {if ($this.CpuLimitMhz -eq -1) {"Unlimited"} else {$this.CpuLimitMhz}} 
				$_
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the virtual machines on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}
]]></script>
                      <IconB64>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</IconB64>
                      <items>
                        <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                          <items>
                            <container name="VMName" predefined="False">
                              <script><![CDATA[79]]></script>
                            </container>
                            <container name="NumCpuShares" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="CpuReservationMhz" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="CPU Limit (MHZ)" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="CpuSharesLevel" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="NumMemShares" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="MemReservationMB" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="MemLimitMB" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="MemSharesLevel" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="DiskResourceConfiguration" predefined="False">
                              <script><![CDATA[131]]></script>
                            </container>
                            <container name="HTCoreSharing" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="CpuAffinity" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                          </items>
                        </container>
                      </items>
                    </container>
                    <container name="VMs with Out of Date Tools" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="aec6c2c5-abb5-407e-b01a-84a7eb9e3a5a" type="Script@" returntype="VMware.Vim.VirtualMachine#VmwarePowerPackExtension#@@@#VMware.Vim.VirtualMachine#@@@#VMware.Vim.ManagedEntity#@@@#VMware.Vim.EntityViewBase#@@@#VMware.Vim.ExtensibleManagedObject#@@@#VMware.Vim.ViewBase#@@@#System.Object">
                      <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		Get-VM -Server $managedHost | Get-View | ForEach-Object {
			if ($_.Guest.ToolsStatus -eq "ToolsOld"){
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType NoteProperty -Name ToolsStatus -Value $_.Guest.ToolsStatus -PassThru `
					| Add-Member -MemberType NoteProperty -Name ToolsVersion -Value $_.Guest.ToolsVersion -PassThru `
					| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru
			}
		}
	}
}
if ($noConnection){
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the virtual machines on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
                      <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAHAAAAFQAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHF1dXSp+fn44AAAAHAAAABUAAAAH14JM/7lZIP/mmWP/uVkg/+abZf+5WSD/5p5p/7lZIP/moGr/uVkg/+ejc/+CWD//yZp7/7thK/8AAAAfAAAAEblZIP//47r//+zI///uzf//89T//vTa///53///++L///vl//775/+wr6L/3+bq/46Pjf/mnmn/AAAAJAAAAB/Zg0z//+K5///rx///7sz/8eTH/7ajkv/UqIP/+9Sf/+2gX//fvZH/ubm4/66ztv/EkGX/wGw6/7lZIP/1sYL/uVkg///ftf//6cT/0cKk/4uQkv+krLL/saCC/9zMrP/84q3/oqCX/9vi5v+jnIv//+Ou/+abZf//9eH/uVkg/+iTVv//2qr//+W7/8O1mP/Aspn/kZme/4eEe/+5q5L/oZeF/9LY3P+qppn/9+K3///fqf+5WSD///PZ//axf/+5WSD//+K1///isP//4rP/p5qC/6Orsv+ut77/g4N//5WXlf+zuLv/uamM//7gq///36b/5Jtp///w0/+5WSD/5pNY///rx///68f/wrGT/5mWjv+ujGT/hYF2/663vv+epqz/bW1q/826mP/Uw6b/48ec/8B+V//+68z/9rF7/7lZIP//7Mf//+zJ///uzf/+7s//7qJi/+HAiv+eo6f/pKyy/6WttP9+enD/hoaC/3F2ev+oe1v//+bG/7lZIP/nk1f//+7N///syP/+7s7//OzM//fPmf+tqqD/uL3A/5WJc/+bn6H/rre+/4iLjP/LuJb/v3dN//7lwf/2rnf/uVkg///z1P//7s3/ubWo/5+bkf+Tf27/09rd/6eahf/12a//0rmS/4+Wm/+Kiob/pZV7/695Uv//47n/uVkg/+KVX/+5WSD/v4Vc/8bMz/+2u77/0tnd/6iopv+4fFn/56N0/7lZIP+Ff3z/rre+/4SEhf+vZzz//9+1//asd/8AAAAAAAAAAE5PT4CrsLL/3+bq/9/m6v+Qj4n/6d3G//zv0P//8M//8ODA/52Sfv/w3bv//+vE///lvv+5WSD/AAAAAAAAAAAAAAAATU9OcNzj5v/f5ur/pJ+V/7u2rP/g07b///DP///wzf//7s3//+7M///uyf//5sD/5pdh/wAAAAAAAAAAAAAAAAAAAABgYmKPw8nM/8XLzv9wcW//08ew///w1P//8NH//+7P///uzf//7Mn//+XD/7lZIP8AAAAAAAAAAAAAAAAAAAAAAAAAAM2IWf+NRBn/35Rj/7lZIP/llmH/uVkg/+WWYP+5WSD/5ZZg/7lZIP/ll2H/AADj5AAA4uEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcnIAAPb3+AD09PgA8/P4APHx+AB9fQ==</IconB64>
                      <items>
                        <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                          <items>
                            <container name="Name" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="ToolsStatus" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="ToolsVersion" predefined="False">
                              <script><![CDATA[73]]></script>
                            </container>
                            <container name="ManagedHost" predefined="False">
                              <script><![CDATA[168]]></script>
                            </container>
                          </items>
                        </container>
                      </items>
                    </container>
                  </items>
                </container>
                <container name="Disk Queries" Description="" predefined="False" id="fe50e317-3cce-419c-a179-a774da2024fd" type="Folder@">
                  <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAA7OTltgHp694F7e/mBe3v3gXt79353d/aAenr4fnd494V+fvaGg4H2i4SE9zs5OWsAAAAGAAAABQAAAAIAAAAAjYWG/6unp//Mxsb/w7u7/8K6uv/c2Nn/zMTE/9jPz/+kpaH/dq+H/4qBhf+Si4v/AAAAEwAAABEAAAAJAAAAAoWCg/ytqqr/gHt6/3x2dv99d3b/ioeH/395ef/LvL3/fKKD/wmjO/+KeoL/iYeK/wB4rv8AXYdIAAAAEgAAAAd+e37/z8vK/9HLyv/NxsX/zsfG/8rDwv/Tzcz/9uzr/624rv9Zunn/pZuf/4SDhf8orOD/AHiu/wAAABcAAAANsayt/8O+vv/Z1tb/29ra/9rY2P/a2Nn/09HS/8bHx//HyMj/vcjA/8XBwf+yra3/NLPm/yGbzv8AcKJ5AAAAEiVvkP/Q0tX/s7W2/93V1f/d293/3dvd/9bV1//Y2Nn/2NjZ/87KzP/Cxsb/XaK3/zq36P9fvt7/AHiv/wAAABcAfLP/XtL1/wJ+sv+Ztbr/udLX/63Gzf+9197/mLG5/6G7wv95qLT/Z9f3/2rb+P9Au+v/ofD+/wB4r/8AcKJ5AHuy/2re//8mrN3/Or3t/5r5//936f//d+n//3fp//936f//d+n//3Lf9P925vz/R8Dw/7f3/f9u0e3/AHiv/wB8sv9v3vX/WtL4/w2Tyf/h+fz/x/D0/8nz9//G7/P/xOzw/7/m6v+33uH/yfL2/4Tq/P/i+v3/u/L//wB4r/8AfLP/f/D//3/w//8/ttn/AHyz/wB8sv8AfLL/AHyy/wB6sf8AerH/AHqx/wB6sP8AerD/AHqw/wB4r/8AeK6sAH60/4j3//+G9P//hvT//4j3//+J+P//hvT//4j3//+G9P//iPf//4b0//+G9P//AHqw/wAAABIAAAAGAAAAAAB+tP+S+v//j/r//4/6//+P+v//j/r//+f9///n/f//5/3//+f9///n/f//5/3//wB6sf8AAAAMAAAABAAAAAAAfrT/5/3//+f9///n/f//5/3//+f9//8AfLP/AHyz/wB8sv8AfLL/AHyy/wB6sf8AerCsAAAABAAAAAEAAAAAAH60qwB+tP8AfrT/AH60/wB8s/8AfLP/AHuygQAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEWHQAAEB0AAP//AADz8wAAaGgAADQ0AAAyMgAALy8AAC4uAAAsLAABKioAAScnAAEmJgB/JCT//yIi//8fHw==</IconB64>
                  <items>
                    <container name="Orphaned VMDK Files" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="587baf90-0c97-4038-8418-f0e84acd9891" type="Script@" returntype="VMwareOrphanedVMDK#VmwarePowerPackExtension#@@@#System.Management.Automation.PSCustomObject#@@@#System.Object">
                      <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		Get-View -ViewType VirtualMachine -Server $managedHost | ForEach-Object {
			$_.Layout.Disk | ForEach-Object {
				$usedDisk += $_.DiskFile
			}
		}
	}
	
	$uniqueUsedDisk = @()

	foreach ($managedHost in $defaultVIServers) {
			VMware.VimAutomation.Core\Get-Datastore -Server $managedHost | ForEach-Object {
			$dsName = $_.Name
			$dsv = $_ | Get-View
			
			$fqFlags = New-Object VMware.Vim.FileQueryFlags
			$fqFlags.FileSize = $true
			$fqFlags.FileType = $true
			$fqFlags.Modification = $true
			$searchSpec = New-Object VMware.Vim.HostDatastoreBrowserSearchSpec
			$searchSpec.details = $fqFlags
			$searchSpec.matchPattern = "*.vmdk"
			$dsBrowser = Get-View -Server $managedHost $dsv.browser
			$rootPath = "["+$dsv.summary.Name+"]"
			
			## Special thanks to Yasen Kalchev @ VMware for a vSphere fix
			if ($dsBrowser.Client.Version -eq "Vim4") {
				$searchSpec = [VMware.Vim.VIConvert]::ToVim4($searchSpec)
				$searchSpec.details.fileOwnerSpecified = $true
				$dsBrowserMoRef = [VMware.Vim.VIConvert]::ToVim4($dsBrowser.MoRef);
				$searchTaskMoRef = $dsBrowser.Client.VimService.SearchDatastoreSubFolders_Task($dsBrowserMoRef, $rootPath, $searchSpec)
				$searchResult = [VMware.Vim.VIConvert]::ToVim($dsBrowser.WaitForTask([VMware.Vim.VIConvert]::ToVim($searchTaskMoRef)))
			} else {
				trap {
					if ($_.Exception.MethodFault -is [VMware.Vim.FileNotFound]) {
						continue
					} elseif ($_.Exception.MethodFault -is [VMware.Vim.NoPermission]) {
						Write-Warning $_
						continue
					}
					else {
						Write-Warning $_
						continue
					}
				}
				$searchResult = $dsBrowser.SearchDatastoreSubFolders($rootPath, $searchSpec)
			}
			foreach ($fPath in $searchResult){
				$folderPath = $fPath.folderPath
				if ($fPath.File){
					$fPath.File | ForEach-Object {
						$fileSize = $_.FileSize/1024/1024
						$lastModified = $_.Modification
						$_.Path | ForEach-Object {
							$finalFolderPath = ($folderPath + $_)
							if (($usedDisk -notcontains $finalFolderPath) -and ($uniqueUsedDisk -notcontains $finalFolderPath) -and ($finalFolderPath -notlike "*-rdm*")){
								$uniqueUsedDisk += $finalFolderPath
								$orphanedVMDK = New-Object PSObject
								$orphanedVMDK.TypeNames.Clear
								$orphanedVMDK.PSObject.TypeNames.Insert(0,"VMwareOrphanedVMDK#VmwarePowerPackExtension")
								$orphanedVMDK `
									| Add-Member -MemberType NoteProperty -Name Datastore -Value $dsname -PassThru `
									| Add-Member -MemberType NoteProperty -Name Folder -Value $folderPath -PassThru `
									| Add-Member -MemberType NoteProperty -Name File -Value $_ -PassThru `
									| Add-Member -MemberType NoteProperty -Name SizeMB -Value $fileSize -PassThru `
									| Add-Member -MemberType NoteProperty -Name Modified -Value $lastModified -PassThru
							}
						}
					}
				}
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the snapshots on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
                      <IconB64>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</IconB64>
                      <items>
                        <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                          <items>
                            <container name="Datastore" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Folder" predefined="False">
                              <script><![CDATA[174]]></script>
                            </container>
                            <container name="File" predefined="False">
                              <script><![CDATA[169]]></script>
                            </container>
                            <container name="Modified" predefined="False">
                              <script><![CDATA[150]]></script>
                            </container>
                            <container name="SizeMB" predefined="False">
                              <script><![CDATA[92]]></script>
                            </container>
                          </items>
                        </container>
                      </items>
                    </container>
                    <container name="Raw Device Mappings (RDMs)" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="7fc1f7e5-e6c9-4003-9f20-4b2ce11e07e0" type="Script@" returntype="VMware.Vim.VirtualDisk_RDM#VmwarePowerPackExtension#@@@#VMware.Vim.VirtualDisk#@@@#VMware.Vim.VirtualDevice#@@@#VMware.Vim.DynamicData#@@@#System.Object">
                      <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		Get-VM -Server $managedHost | Get-View | ForEach-Object {
			$vmname = $_.Name
			$_.Config.Hardware.Device | Where {($_.GetType()).Name -eq "VirtualDisk"} | ForEach-Object {
				if(($_.Backing.CompatibilityMode -eq "physicalMode") -or ($_.Backing.CompatibilityMode -eq "virtualMode")){
					$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])_RDM#VmwarePowerPackExtension")
					$_ `
						| Add-Member -MemberType NoteProperty -Name RDMType -Value $_.Backing.CompatibilityMode -PassThru `
						| Add-Member -MemberType NoteProperty -Name StubFile -Value $_.Backing.FileName -PassThru `
						| Add-Member -MemberType NoteProperty -Name DeviceName -Value $_.DeviceInfo.Label -PassThru `
						| Add-Member -MemberType NoteProperty -Name VMName -Value $vmname -PassThru `
						| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru
				}
			}
		}
	}
}
if ($noConnection){
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the virtual machines on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
                      <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAFAAAAAwAAAAMAAAABAAAAAQAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAACAAAAAQAAAAEAAAAAkJCQ/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/wAAABvMzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP+QkJD/AAAAAAAAAAwAAAAIAAAAEQAAAAQAAAACAAAABYSEhP/MzMz/hISE/wAAABoAAAAMAAAACAAAABYAAAAEAAAAAQAAAAcAAAANAAAAAQAAAAMAAAAHAAAAAgAAAAYaqkL/GqpC/xqqQv8AAAAXAAAABgAAAAMAAAAHAAAAAgAAAAIAAAAKAAAAEgAAAAQAAAAEAAAAAQAAAAIAAAACHb9K/x2/Sv8dv0r/AAAACQAAAAQAAAAJAAAAAAAAAAIAAAABAAAAAQAAABAAAAAGAAAADgAAAAYAAAADAAAAAoSEhP/MzMz/hISE/wAAABEAAAAIAAAAEwAAAAMAAAACAAAABwAAAAQAAAAjkouL/3Zubv94cHD/d29v/3NsbP+EhIT/zMzM/4SEhP95cXH/eHBw/3Fpaf9zbGz/eXFx/5eRkf8AAAAJlY+P/1pVVf+uqar/tK+w/6ahov+uqqr/oZyd/6mkpf+zrq//s66v/7Our/+zrq//lcSj/7Our/9ZVFT/oZqa/3Zubv+xrK3/0M7N/8G3tv+zqqn/vrSz/7mvrv/x8fH/v7a1/+PX1v/b0M//dXFx/zuxYP9dWlr/oZyd/3lxcf93b2//sKyt/3BsbP9nZGT/ZGFh/2ViYv9nZGT/ZWJi/2RhYf90cHD/2M3M/12Laf8I5lH/Uk9P/6SfoP95cXH/eHBw/7u1tv/X1dT/tq2s/7yysf/AtrX/v7a1/72zsv+/trX/49fW/+TY1/93c3P/L79e/2ZjY/+tqqr/eXFx/3Vtbf/Dvr7/1dPS//X19f/9/f3//Pz8//z8/P/7+/v//Pz8//r6+v/+/v7//Pz8/8j22P/V09L/ubW0/3lxcf/IyMj/u7e4/7SvsP+0r7D/tK+w/7SvsP+0r7D/tK+w/6ilpv+dnJv/kZGR/5GRkf+dnJv/paKj/7u3uP/IyMj/AAAAAuTj4//Y1tX/yMjI/+XZ2P/r6+3/6+vt/+vr7f/r6+3/6+vt/+vr7f/r6+3/4eDh/8jIyP/Y1tX/AAAAAgAAAAIAAAABAAAAAgAAAAfZ2dn/2NbV/9LQ0P/S0ND/2NbV/9LQ0P/S0ND/2NbV/9jW1f8AAAABAAAAAQAAAAIAAAACAAAAAQAAAA8AAAABAAAAAQAAAAsAAAAEAAAABgAAAAQAAAADAAAAAgAAAAIAAAABAAAAAQAAAAEAAAADBnEAAAAB8L8AAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAB6egAAAAAAAAAAAAD//wAA//8AAAAAAAAAAA==</IconB64>
                      <items>
                        <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                          <items>
                            <container name="VMName" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="DeviceName" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="RDMType" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="StubFile" predefined="False">
                              <script><![CDATA[243]]></script>
                            </container>
                            <container name="CapacityInKB" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                          </items>
                        </container>
                      </items>
                    </container>
                    <container name="Thin Provisioned VMDKs" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="ffd878ad-3f9f-46a1-8e6b-d7c426b5a903" type="Script@" returntype="VMware.Vim.VirtualDisk_Thin#VmwarePowerPackExtension#@@@#VMware.Vim.VirtualDisk#@@@#VMware.Vim.VirtualDevice#@@@#VMware.Vim.DynamicData#@@@#System.Object">
                      <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		Get-VM -Server $managedHost | Get-View | ForEach-Object {
			$vmname = $_.Name
			$uncommittedKB = ($_.Summary.Storage.Uncommitted/1024)
			$_.Config.Hardware.Device | Where {($_.GetType()).Name -eq "VirtualDisk"} | ForEach-Object {
				if($_.Backing.ThinProvisioned -eq $true){
					$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])_Thin#VmwarePowerPackExtension")
					$_ `
						| Add-Member -MemberType NoteProperty -Name ThinProvisioned -Value $_.Backing.ThinProvisioned -PassThru `
						| Add-Member -MemberType NoteProperty -Name FileName -Value $_.Backing.FileName -PassThru `
						| Add-Member -MemberType NoteProperty -Name DeviceName -Value $_.DeviceInfo.Label -PassThru `
						| Add-Member -MemberType NoteProperty -Name VMName -Value $vmname -PassThru `
						| Add-Member -MemberType NoteProperty -Name UncommittedKB -value $uncommittedKB -PassThru `
						| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru
				}
			}
		}
	}
}
if ($noConnection){
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the virtual machines on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
                      <IconB64>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</IconB64>
                      <items>
                        <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                          <items>
                            <container name="VMName" predefined="False">
                              <script><![CDATA[91]]></script>
                            </container>
                            <container name="FileName" predefined="False">
                              <script><![CDATA[220]]></script>
                            </container>
                            <container name="DeviceName" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="ThinProvisioned" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="CapacityInKB" predefined="False">
                              <script><![CDATA[92]]></script>
                            </container>
                            <container name="UncommittedKB" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                          </items>
                        </container>
                      </items>
                    </container>
                  </items>
                </container>
                <container name="Snapshot Queries" Description="" predefined="False" id="86fd5fe1-aff5-4a15-a1c8-a0db7059b730" type="Folder@">
                  <IconB64>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</IconB64>
                  <items>
                    <container name="All Snapshots" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="b8eeeadb-aa78-48ba-8a90-64413916c7ff" type="Script@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object">
                      <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		Get-VM -Server $managedHost | Get-Snapshot | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ `
				| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the snapshots on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
                      <IconB64>AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAABAAAAAQAAAAAAAABmmQAATKEAAFCkAABargAQWakAAFuxAABdsgAAXrQACVu0AABooAAGbKIABm2kAABiswAAYbUADmO0AA1ptwAQYbIAA3C7AAByvQAbe7YAK2uuAC9trwAxb6kANXyqACtssAAxf7EAQWqWAEBwswBAfbwAUHy6AARb0wAAZMMAAGfEAABrwwAJZs4ABWjNAAB5xAAAfckAAXncABBz1gAWctQAH3TWAClywgA1edYABX7oACmQvAAvkb8AUIyyAFuFuQBQlLoAYpq9AHCfvgAAgMsAFJTOAAmJ0QAPi9IAAIvcAA6K2gAKi94AGoDQABGN0gATi9QAEInZAAub2QAvi8wAL5HAACmcywAoncwAJYvRADGJ3QAundYAHaLOABOz3QA3ossAI6nVACar2gAlsNsAJrHdACy03wA/t90AB4PmAACX4AAAkecAAIvyACmL4QA6leAAAK7iAACo5wAAqegAALPvABaz5AAWpv8AALL0AAC09QAAvPsACL79AC204AAytuEANLfiADu75QA9uuUAPbzlAC2m8QAwuf8AVI/FAEGC1gB4nc8Af5/MAHCgzwBFoe4ASbHlAEK+5wBUseAARrD7AAjC6wAAxPIAAMj1AArF/wAczfAAEMT/ABXE/wAbz/0AAdL/AAvW/wAN1/8AL8jrAD/G5QA2zfAAOMv/ADnM/wA9zv8AO9XyADfY/wBEwOkAScHqAEzC6wBRw+0AUsbtAFTF7QBV0u4AWsjwAFzJ8ABQ0/AAXd30AFLR/wBX1P8AXdP/AGbK8gBizPIAac70AGzR9QBj1f8AZtX/AGnW/wBq2P8ActP2AH/a8gBw2v8AeN7/AH/h/wChutwAmrniAJ3R6gCO3fQAgNP/AIDc/wCK2fgAjN3/AJHa+ACX2/gAmt76AIDl9gCH5P8Ahu3/AJzg9QCU4f8Am+L/AJ/n/wCc9f8AquT2AKbl/wCq4/oAreP6AK7k+gCo7PoAteb4ALbq/wC77P8AvOz/AMna8wDG5PQAwez/AMbu/wDN7fwAxfL/AMjy/ADO9P8Azfj/ANny/ADZ9f8A4PT9AOT4/QDv+v8A8vv/APH//wD1/P8A+v3+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AAAAAAAAAAAAAAAAAAAAAACiakZWR0A5OyOhAAAAAAAAAAAAAAAAAAAAAAAAAAAALHKlsMHNs3tXEyIxAAAAAAAAAAAAAAAAAAAAAAAAABel/8WwyciufXVaNwkwAAAAAAAAAAAAAABsaQEBAQEBJcbNvajIyK58dFk9FgoAAAAAAAAAAB4PQXGj/8rEuawlxM29qMjIrn10WTcWCgAAAAAAAAAQv8u4qcj/ycW5rCbEzb2oyMiufXRZPRYKAAAAAAAAAavJy7ipyP/KxLmsJsTNvajIyK59dFk3FgoAAAAAAAABq8nLuKnIzcnEuawmxM29qMjIrn10WT0WCgAAAAAAAAGrycu4qcf/ysW5rCbEzb2oyMiufXRZNxYKAAAAAAAAAavJy7ipyP/JxLmsJsTNvajIyK59dFk9FgoAAAAAAAABq8nLuKnH/8rEuawmxM29qMjIrn10WTcWCgAAAAAAAAGrycu4qcj/ycW5rCbEzb2oyMiufXRZPRYKAAAAAAAAAavJy7ipx//KxLmsJsTNvajIyK59dFk3FgoAAAAAAAABq8nLuKnIzcnEuawmxM29qMjIrn10WT0WCgAAAAAAAAGrycu4qcf/ysW5rCbEzb2oyMiufXRXNxYKAAAAAAAAAavJy7ipyP/JxLmsNcXMu7HBsqCFeic/FgoAAAAAAAABq8nLuKnH/8rEuawlvbWmmpmRgXlgUR8rDAAAAAAAAAGrycu4qcj/ycW5rDutmZmampGBeXZdUykKAAAAAAAAAavJy7ipx//KxLmsPFybn56bkYF5dl9TDTQAAAAAAAABq8nLuKnIzcnEuayMPy1UaJORgXldDSRsAAAAAAAAAAGrycu4qcf/ysW5rJCAW2duKiEiKSlVAAAAAAAAAAAAAavJy7ipyP/JxLmskIR3c0lILhgbAQAAAAAAAAAAAAABq8nLuKnH/8rEuayQhHdzSUguGBsBAAAAAAAAAAAAAAGrycu4qcj/ycW5rJCEd3NJSC4YGwEAAAAAAAAAAAAAAavJy7ipx//KxLmskIR3c0lILhgbAQAAAAAAAAAAAAABq8nLuLjCx7i0r6SdjI9+f0guGBsBAAAAAAAAAAAAAAGrwriol5yXlY6LiIZmY2FOUEoyGwEAAAAAAAAAAAAAAamcnJycnJeVjouIcGZjT05LREIzAQAAAAAAAAAAAAAFl5ecnJycl5WOi4hwZmNPTktELhoBAAAAAAAAAAAAAAAEb5ycnJyXlY6LhnBmY09OS0QUAgAAAAAAAAAAAAAAAAAdBkVvl5eOjoiIcGZjTDYTAh4AAAAAAAAAAAAAAAAAAAAAAG0cHAQNBgYGDxwcbAAAAAAAAAAAAAAAAAD//wA///4AH//8AA/+AAAP8AAAD+AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAH8AAAH/AAAD/wAAA/8AAAP/AAAD/wAAA/8AAAP/AAAD/wAAA/+AAAf/wAAP//gAf/ygAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAAAAATOXAAA2mgAAOpwABz+fAAc4sgAgaJcAEFOlAB5SuwAXa6gAGGypAA9iuQARb7cAGm22ABFrvAAXdbsAIm+tACh0oQABQcIAA1TPAAFS0QALfs8AFX/KAAVr3wAqf8oAL4azAEyMugANgc0AGIXOAAGH1gAIjdoAFoLUAAac3gAVkdcAJo/PACaRwwA3mcQANpDIACWM3wAuk9EAIJLfACWa2wAYqtUAFaPfACOv1wAvod8AJKzYACuw2wADguQAAojlAASf4wADneUAA6PkAAKk5QADqecABLDoABm67AAFo/MABbLwAAS/8gAQvPkAJaDlAC+14AAwteAAP7zmADqw9gBMnc8AU57TAF2f0gBMockAX6zaAHmmzwB/sswAQL3mAEWz6gBUtecAWr3vAGiv7ABituMAcL7nAHG77gASx+0AAcb2AAHJ9AANwf0ABc34AAHR9gAD2/kAA974AAzY+AAX0PsAENv5ACjK7QAF5fsAHuj6ACjl/gAu6vwATsPrAEXO/wBeyvEAWc//AErX8gBM2fMAR9D/AFvX8QBZ0/kAccvrAGjK8QBu0fUAaNb/AHPT9gB82v8AReX9AEHw+wCEr9gAj7XaAJOy1wCUvNcAn9/5ALzY9ACP5P8AlOP2AJTo+ACf6/8AkvH+AJv1/gCd9P4ApeH5ALHn/wC26v8Ap/P9AKH2/gCk9P4AqfP+AK/y/wCq9P4ArPX+AKn4/wC28/0AtfT+ALrz/QC69v4Avff9AMLZ7QDV3+0AzN30AMLt+QDf5/IA2u/5AML0/gDN9f4Ayvj+ANL3/gDV9fwA3/b/ANz5/wDn9/4A6vj+AOv8/wDw/f8A+fwMDAAAAAAAAAAAAAAAVaYldOgMAAAAAAAAVFQMVlouDVjYOAwAAAAAVaXiJFf+DflM0FgIAAAAVlouYgwj/g4NTNBYCAAAAFf+DmH4b/4x+UzccAgAAABX/hZV+G5t8ORQSCwIAAAAV/4OMfiGDhYxbMgMCAAAAFf+DjH4tX5+fcV4rBwAAAAj/g4x+WB88YDsyBQAAAAAb/4yYflhTTBcoSgAAAAAAG5t8cDkwFBILAgAAAAAAACGDhZeMcVkyAwIAAAAAAAAtX5+fn59xXisHAAAAAAAAAB88X2BbOzIFAAAAAAAAAAAATCYXEyhKAAAAAAAAAP8PAAD+BwAA4AMAAMADAACAAwAAgAMAAIADAACAAwAAgAMAAIAHAACADwAAgB8AAIAfAACAHwAAwD8AAOB/AAA=</IconB64>
                      <items>
                        <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                          <items>
                            <container name="Name" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Description" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="PowerState" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Created" predefined="False">
                              <script><![CDATA[169]]></script>
                            </container>
                          </items>
                        </container>
                      </items>
                    </container>
                    <container name="Older than 7 days" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="7949ac91-8473-4dae-baaf-4088699c764d" type="Script@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object">
                      <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		$today = Get-Date
		Get-VM -Server $managedHost | Get-Snapshot | where {$_.Created -le ($today.addDays(-7))} | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ `
				| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the snapshots on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
                      <IconB64>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</IconB64>
                      <items>
                        <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                          <items>
                            <container name="Name" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Created" predefined="False">
                              <script><![CDATA[114]]></script>
                            </container>
                            <container name="Description" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="PowerState" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="ManagedHost" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                          </items>
                        </container>
                      </items>
                    </container>
                    <container name="Older than 30 days" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="6f476ccc-2206-4162-80d8-cae1f442bf35" type="Script@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object">
                      <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		$today = Get-Date
		Get-VM -Server $managedHost | Get-Snapshot | where {$_.Created -le ($today.addDays(-30))} | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ `
				| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the snapshots on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
                      <IconB64>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</IconB64>
                      <items>
                        <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                          <items>
                            <container name="Name" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="Description" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                            <container name="PowerState" predefined="False">
                              <script><![CDATA[100]]></script>
                            </container>
                          </items>
                        </container>
                      </items>
                    </container>
                  </items>
                </container>
              </items>
            </container>
          </items>
        </container>
      </items>
    </container>
    <container name="Actions" predefined="False" id="1ef02fe0-c6fc-4cdc-88bc-a9e4313bee18">
      <items>
        <container name="Links" predefined="False" id="481eccc0-43f8-47b8-9660-f100dff38e14">
          <items>
            <container name="Removed VMware PowerPack Deprecated Link" predefined="False" id="50bd0925-a2a3-40eb-8c48-33dfb36355c8" type="Action@" DisplayResults="NestedView">
              <script><![CDATA["This item from previous version has been removed"]]></script>
              <Types>
                <type>AdminConsole.Internal.Removed.Item</type>
              </Types>
            </container>
            <container name="Removed VMware PowerPack Deprecated Link" predefined="False" id="6802b309-1578-436f-9f63-be41d2746361" type="Action@" DisplayResults="NestedView">
              <script><![CDATA["This item from previous version has been removed"]]></script>
              <Types>
                <type>AdminConsole.Internal.Removed.Item</type>
              </Types>
            </container>
            <container name="Removed VMware PowerPack Deprecated Link" predefined="False" id="07dd3f9e-f8cb-4167-ac97-380e1a0893fa" type="Action@" DisplayResults="NestedView">
              <script><![CDATA["This item from previous version has been removed"]]></script>
              <Types>
                <type>AdminConsole.Internal.Removed.Item</type>
              </Types>
            </container>
            <container name="Removed VMware PowerPack Deprecated Link" predefined="False" id="540271a7-727d-4a1c-ab07-4af9c348fd27" type="Action@" DisplayResults="NestedView">
              <script><![CDATA["This item from previous version has been removed"]]></script>
              <Types>
                <type>AdminConsole.Internal.Removed.Item</type>
              </Types>
            </container>
            <container name="Removed VMware PowerPack Deprecated Link" predefined="False" id="008a71bf-2a11-428f-8eee-f563fb2b8f96" type="Action@" DisplayResults="NestedView">
              <script><![CDATA["This item from previous version has been removed"]]></script>
              <Types>
                <type>AdminConsole.Internal.Removed.Item</type>
              </Types>
            </container>
            <container name="Summary" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="e680efc9-af85-4cb6-adda-d6ee6a1d37ad" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[# Host grid - Datacenters - Clusters - Hosts : Summary Action
$input | ForEach-Object {
	if (-not ($_.PSObject.Properties | Where-Object {$_.Name -match '^Tools'})) {
		$view = Get-View -ViewType VirtualMachine -Filter @{'Name'=$_.Name} -Property Runtime,Guest,Network,TriggeredAlarmState
		$networks = $(if ($view.Network) {@(Get-View -Id $view.Network)} else {@()})
		$datastores = @($_ | Get-Datastore)
		$_ `
			| Add-Member -MemberType NoteProperty -Name ToolsStatus -Value $view.Guest.ToolsStatus -PassThru `
			| Add-Member -MemberType NoteProperty -Name ToolsVersion -Value $view.Guest.ToolsVersion -PassThru `
			| Add-Member -MemberType NoteProperty -Name Uptime -Value $view.Runtime.BootTime -PassThru `
			| Add-Member -MemberType NoteProperty -Name Datastores -Value $datastores -PassThru `
			| Add-Member -MemberType NoteProperty -Name Networks -Value ($networks | ForEach-Object {$_.Name}) -PassThru `
			| Add-Member -MemberType NoteProperty -Name TriggeredAlarmCount -Value $view.TriggeredAlarmState.Count -PassThru
	} else {
		$_
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="7298bfde-cdec-4759-b14b-4d72b8cbd70d">
                  <items>
                    <container name="Name" predefined="False" id="43e8f289-2581-4934-add6-05add5db2a01">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ToolsStatus" predefined="False" id="da6fc076-bb34-4dd3-b60a-f7f39a97e98b">
                      <script><![CDATA[105]]></script>
                    </container>
                    <container name="ToolsVersion" predefined="False" id="1699002c-19bd-4873-8c71-1bd998b29171">
                      <script><![CDATA[83]]></script>
                    </container>
                    <container name="Uptime" predefined="False" id="544c3757-7ce3-4329-8d54-30165c60604c">
                      <script><![CDATA[111]]></script>
                    </container>
                    <container name="Datastores" predefined="False" id="b797a827-1192-469e-aba1-6ecad4d41902">
                      <script><![CDATA[72]]></script>
                    </container>
                    <container name="Networks" predefined="False" id="7828923e-7be4-498b-b96d-45b55dfb060d">
                      <script><![CDATA[131]]></script>
                    </container>
                    <container name="TriggeredAlarmCount" predefined="False" id="36ade53d-530f-4a02-a556-0ccd0211ac08">
                      <script><![CDATA[135]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Snapshots" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="142343f9-429c-48d4-a71f-042d6e053a7c" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_ | Get-Snapshot | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ 
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Description" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="PowerState" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Created" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VM" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Parent" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Children" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[204]]></script>
                    </container>
                    <container name="IsCurrent" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="IsReplaySupported" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ParentSnapshotId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Quiesced" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="SizeMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Guest information" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="d0e1d13b-d835-4b17-bee2-590e80723090" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VM.Guest.VMGuestImpl#@@@#System.Object" DisplayResults="NestedView">
              <command name="Get-VMGuest" notprompted="true">
                <parameters />
              </command>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="VmName" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="State" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="IPAddress" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="OSFullName" predefined="False">
                      <script><![CDATA[273]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Network adapters" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="6a5621a6-cd1f-4563-90c8-3061c10a2fd4" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.NetworkAdapterImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.VirtualDeviceImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <command name="Get-NetworkAdapter" notprompted="true">
                <parameters />
              </command>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="MacAddress" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="WakeOnLanEnabled" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NetworkName" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ConnectionState" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Port groups" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="0ca9f36f-2353-4c75-9604-cf609dae5ef7" type="Action@" returntype="VMware.Vim.HostPortGroup#VMwarePowerPackExtension#@@@#VMware.Vim.HostPortGroup#@@@#VMware.Vim.DynamicData#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$vmHost = $_ | Get-VMHost 
	$vmh = $vmHost | Get-View
	$vmHostID = $_.HostId
	Get-VirtualPortGroup -VM $_ | ForEach-Object {
		$key = $_.key
		$vmh.Config.Network.PortGroup | ForEach-Object {
      		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VMwarePowerPackExtension")
      		$_ `
         	| Add-Member -MemberType NoteProperty -Name VMHost -Value $vmh -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Name" -Value $_.spec.Name -PassThru `
        	| Add-Member -MemberType NoteProperty -Name "Virtual Switch" -Value $_.spec.VswitchName -PassThru `
         	| Add-Member -MemberType NoteProperty -Name "VLAN ID" -Value $_.spec.VLANID -PassThru `
			| Add-Member -MemberType NoteProperty -Name VMHostID -Value $vmHostID -PassThru 
   		}
	
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Key" predefined="False">
                      <script><![CDATA[212]]></script>
                    </container>
                    <container name="Port" predefined="False">
                      <script><![CDATA[80]]></script>
                    </container>
                    <container name="Virtual Switch" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMHost" predefined="False">
                      <script><![CDATA[141]]></script>
                    </container>
                    <container name="VMHostID" predefined="False">
                      <script><![CDATA[124]]></script>
                    </container>
                    <container name="Vswitch" predefined="False">
                      <script><![CDATA[182]]></script>
                    </container>
                    <container name="ComputedPolicy" predefined="False">
                      <script><![CDATA[159]]></script>
                    </container>
                    <container name="DynamicProperty" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DynamicType" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Spec" predefined="False">
                      <script><![CDATA[164]]></script>
                    </container>
                    <container name="VLAN ID" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Hard disks" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="1bc9212d-d1fa-4347-a06b-7de9b64c31c4" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.FlatHardDiskImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.HardDiskImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.VirtualDeviceImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <command name="Get-HardDisk" notprompted="true">
                <parameters />
              </command>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CapacityKB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Persistence" predefined="False">
                      <script><![CDATA[141]]></script>
                    </container>
                    <container name="DiskType" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Filename" predefined="False">
                      <script><![CDATA[250]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="CD drives" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="6278a916-69ec-4bb0-8bb8-5e70c46c326f" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.CDDriveImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.VirtualDeviceImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <command name="Get-CDDrive" notprompted="true">
                <parameters />
              </command>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="00e61202-054f-41ea-93c6-46429b8798ce">
                  <items>
                    <container name="IsoPath" predefined="False" id="03c16397-7bad-445d-a83b-66ba32169c41">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HostDevice" predefined="False" id="545f6f96-a212-4d50-a4ce-218d21f0d74a">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="RemoteDevice" predefined="False" id="44c31a76-efbd-4ed3-a05a-70b63e12701a">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ConnectionState" predefined="False" id="3f402732-bb80-4a83-a582-80be5367f735">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False" id="f068156a-aaee-4177-a282-ec791949e52c">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Name" predefined="False" id="a2329d25-92ea-4f23-92fd-eb435b5aafa7">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Floppy drives" predefined="False" id="731de5b8-c12b-4117-a2da-d2a12a10d561" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.FloppyDriveImpl" DisplayResults="NestedView">
              <command name="Get-FloppyDrive" notprompted="true">
                <parameters />
              </command>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="aaba26d5-e040-4754-bcec-97f6e1d3a677">
                  <items>
                    <container name="FloppyImagePath" predefined="False" id="0bd572a9-c788-489b-bb0b-4bc67666caf7">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HostDevice" predefined="False" id="61b077ae-b2dc-4b64-8488-b5b771b0e557">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="RemoteDevice" predefined="False" id="8f6c55c1-56ab-4db8-b95d-e8f094c5387e">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ConnectionState" predefined="False" id="23206746-e5fb-4bcb-a752-167b8f9eebea">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False" id="a05d720e-ec64-493f-9160-d8bef7e24c61">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Name" predefined="False" id="57cc8497-7cd8-4877-aaf7-7c221a95e502">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Performance data" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="f5338d9e-27c7-4f65-9f67-be5d563e0a07" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Stat.FloatSampleImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Stat.SampleImpl#@@@#System.Object" DisplayResults="NestedView">
              <command name="Get-Stat" notprompted="true">
                <parameters />
              </command>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="MetricId " predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Timestamp " predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Value" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Unit" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Datastore" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="774637b6-3083-4477-bde8-40cb9fa1c7a2" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_ | VMware.VimAutomation.Core\Get-Datastore | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ `
				| Add-Member -MemberType NoteProperty -Name UsedSpaceMB -Value ($_.CapacityMB - $_.FreeSpaceMB) -PassThru 
	}
}]]></script>
              <ChartPresetID>3f15125e-7563-4607-aba6-a7eb685ffaa0</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FreeSpaceMB" predefined="False">
                      <script><![CDATA[78]]></script>
                    </container>
                    <container name="UsedSpaceMB" predefined="False">
                      <script><![CDATA[79]]></script>
                    </container>
                    <container name="CapacityMB" predefined="False">
                      <script><![CDATA[63]]></script>
                    </container>
                    <container name="Accessible" predefined="False">
                      <script><![CDATA[73]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[49]]></script>
                    </container>
                    <container name="DatacenterId" predefined="False">
                      <script><![CDATA[153]]></script>
                    </container>
                    <container name="DatastoreBrowserPath" predefined="False">
                      <script><![CDATA[308]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[141]]></script>
                    </container>
                    <container name="ParentFolderId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Find in Active Directory" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="1fd5c5ec-83ec-456f-aa95-7af8495c73c3" type="Action@" returntype="Quest.ActiveRoles.ArsPowerShellSnapIn.Data.ArsComputerObject#@@@#Quest.ActiveRoles.ArsPowerShellSnapIn.UI.SecurityPrincipalObject#@@@#Quest.ActiveRoles.ArsPowerShellSnapIn.Data.ArsDirectoryObject#@@@#Quest.ActiveRoles.ArsPowerShellSnapIn.UI.GenericDirectoryObject#@@@#Quest.ActiveRoles.ArsPowerShellSnapIn.UI.DirectoryObjectBase#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[if (-not (Get-Command -CommandType Cmdlet -Name Get-QADComputer -ErrorAction SilentlyContinue)) {
	throw 'The Quest AD cmdlets are required to be able to search for a virtual machine in Active Directory.  Please install the Quest AD cmdlets, make sure they are loaded, and try again.'
	return
}

$input | Get-VMGuest | ForEach-Object {
	If (($_.HostName) -ne $null) {
		Get-QADComputer -DNSName $_.HostName
	}
} 
]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DN" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Events" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="90631831-2511-4ed7-aaad-fd5c04fc430a" type="Action@" returntype="VMware.Vim.VmOrphanedEvent#@@@#VMware.Vim.VmEvent#@@@#VMware.Vim.Event#@@@#VMware.Vim.DynamicData#@@@#System.Object" DisplayResults="NestedView">
              <command name="Get-VIEvent" notprompted="true">
                <parameters />
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Connection state" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="e3042653-f686-4013-a331-a1e3ea931fe2" type="Action@" returntype="VMware.VimAutomation.Client20.ConnectInfoImpl" DisplayResults="NestedView">
              <script><![CDATA[# Get connection state info
$input | ForEach-Object { $_.ConnectionState }
]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.NetworkAdapterImpl</type>
              </Types>
            </container>
            <container name="Summary" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="4f91503e-678c-43a5-9b5b-febb1dd42513" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','ClusterCount','HostCount','VMCount','DatastoreCount','NetworkCount'))
$PSStandardDatacenterMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)

$input | ForEach-Object {
	if (-not (@($_.PSObject.Properties | ForEach-Object {$_.Name}) -match 'Count$')) {
		$clusters = @($_ | Get-Cluster)
		$hosts = @($_ | Get-VMHost)
		$virtualMachines = @($_ | Get-VM)
		$view = Get-View -ViewType Datacenter -Filter @{'Name'=$_.Name} -Property Datastore,Network,TriggeredAlarmState
		$_ `
			| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardDatacenterMembers -PassThru `
			| Add-Member -MemberType NoteProperty -Name ClusterCount -Value $clusters.Count -PassThru `
			| Add-Member -MemberType NoteProperty -Name HostCount -Value $hosts.Count -PassThru `
			| Add-Member -MemberType NoteProperty -Name VMCount -Value $virtualMachines.Count -PassThru `
			| Add-Member -MemberType NoteProperty -Name DatastoreCount -Value $view.Datastore.Count -PassThru `
			| Add-Member -MemberType NoteProperty -Name NetworkCount -Value $view.Network.Count -PassThru `
			| Add-Member -MemberType NoteProperty -Name TriggeredAlarmCount -Value $view.TriggeredAlarmState.Count -PassThru
	} else {
		$_
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ClusterCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HostCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DatastoreCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NetworkCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="TriggeredAlarmCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Folders" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="ac1df362-9601-4b1e-bbfe-eaede78d92e3" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input `
	| Get-Folder -NoRecursion `
	| Get-Folder  `
	| Add-Member -MemberType ScriptProperty -Name Type -Value {if ($this.IsChildTypeVm) {'VM'} elseif ($this.IsChildTypeComputeResource) {'Compute Resource'} elseif ($this.IsChildTypeDatacenter) {'Datacenter'} else {'Unknown'}} -PassThru]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="11a8c852-3f29-44ab-93e2-597cf3c1b9e2">
                  <items>
                    <container name="Name" predefined="False" id="676f3f9b-b512-4e91-81b6-6de94a8933da">
                      <script><![CDATA[172]]></script>
                    </container>
                    <container name="Type" predefined="False" id="dfdbd479-7fa7-4167-ac67-ade5e08ecdcf">
                      <script><![CDATA[139]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Clusters" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="dd856c27-09b4-49ed-ba7f-4fd0051a8b76" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.ComputeResourceImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','DRSEnabled','HAEnabled','DPMEnabled','ConfiguredFailoverCapacity','CurrentFailoverCapacity','DRSMode','DRSStars','CPUCores','TotalCPU(MHz)','TotalMemory(GB)','HostCount','VMotionCount'))
$PSStandardClusterMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)

$input | ForEach-Object {
	$_ | Get-Cluster | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$view = Get-View -ViewType ClusterComputeResource -Filter @{'Name'=$_.Name} 
		$_ `
			| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardClusterMembers -PassThru `
			| Add-Member -MemberType NoteProperty -Name DPMEnabled -Value $view.ConfigurationEx.DpmConfigInfo.Enabled -PassThru `
			| Add-Member -MemberType NoteProperty -Name ConfiguredFailoverCapacity -Value $_.HAFailoverLevel -PassThru `
			| Add-Member -MemberType NoteProperty -Name CurrentFailoverCapacity -Value $view.Summary.CurrentFailoverLevel -PassThru `
			| Add-Member -MemberType NoteProperty -Name DRSStars -Value $view.ConfigurationEx.DrsConfig.VMotionRate -PassThru `
			| Add-Member -MemberType NoteProperty -Name CPUCores -Value $view.Summary.NumCpuCores -PassThru `
			| Add-Member -MemberType NoteProperty -Name 'TotalCPU(MHz)' -Value $view.Summary.TotalCpu -PassThru `
			| Add-Member -MemberType NoteProperty -Name 'TotalMemory(GB)' -Value ([double]('{0:#.##}' -f ($view.Summary.TotalMemory / 1GB))) -PassThru `
			| Add-Member -MemberType NoteProperty -Name HostCount -Value $view.Host.Count -PassThru `
			| Add-Member -MemberType NoteProperty -Name DatastoreCount -Value $view.Datastore.Count -PassThru `
			| Add-Member -MemberType NoteProperty -Name NetworkCount -Value $view.Network.Count -PassThru `
			| Add-Member -MemberType NoteProperty -Name VMotionCount -Value $view.Summary.NumVmotions -PassThru `
			| Add-Member -MemberType NoteProperty -Name TriggeredAlarmCount -Value $view.TriggeredAlarmState.Count -PassThru
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="1c6d2c26-6a2e-4b57-8329-5f159fec2427">
                  <items>
                    <container name="Name" predefined="False" id="c0a52bf3-8101-4e28-b0cb-c9787a44fdcd">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DrsEnabled" predefined="False" id="f9396aeb-93d0-48cf-bab3-1d44a3066ecf">
                      <script><![CDATA[74]]></script>
                    </container>
                    <container name="HAEnabled" predefined="False" id="a2632e27-d35a-4e90-94be-d62ae2a32d57">
                      <script><![CDATA[76]]></script>
                    </container>
                    <container name="DPMEnabled" predefined="False" id="532b6f03-b856-46dd-9c58-cd0214c98232">
                      <script><![CDATA[84]]></script>
                    </container>
                    <container name="ConfiguredFailoverCapacity" predefined="False" id="196842c1-0d22-410f-8c06-d1a41cf97de0">
                      <script><![CDATA[163]]></script>
                    </container>
                    <container name="CurrentFailoverCapacity" predefined="False" id="30e6ae42-8062-410f-a62c-fb36afe52276">
                      <script><![CDATA[145]]></script>
                    </container>
                    <container name="DrsMode" predefined="False" id="8f18f836-961e-4eb0-a1fb-e6142e3defa3">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DRSStars" predefined="False" id="04ec6b0e-c6bc-4960-a0a3-2812b1bca746">
                      <script><![CDATA[65]]></script>
                    </container>
                    <container name="CPUCores" predefined="False" id="ffffa0c8-c886-4038-b143-7c30e934cc8f">
                      <script><![CDATA[70]]></script>
                    </container>
                    <container name="TotalCPU(MHz)" predefined="False" id="964bac71-240d-4275-82c4-ab4678c2a6d4">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="TotalMemory(GB)" predefined="False" id="5b91018b-3c82-4de5-801b-1ad254a066f9">
                      <script><![CDATA[111]]></script>
                    </container>
                    <container name="HostCount" predefined="False" id="abdd2eef-99a6-454f-a0cb-3260b6122290">
                      <script><![CDATA[73]]></script>
                    </container>
                    <container name="DatastoreCount" predefined="False" id="825db137-8439-49ed-ba24-2cd5ccc48020">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NetworkCount" predefined="False" id="fe160b47-304b-4bb2-a16b-f7944399615f">
                      <script><![CDATA[96]]></script>
                    </container>
                    <container name="VMotionCount" predefined="False" id="bf8801c2-7cae-40a4-8974-35f9700c41a7">
                      <script><![CDATA[96]]></script>
                    </container>
                    <container name="TriggeredAlarmCount" predefined="False" id="b3127bef-745e-4e32-a586-e88ae3884c49">
                      <script><![CDATA[132]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Hosts" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="54bbd976-2e24-477d-903e-efdd57ea2ce5" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_ | Get-VMHost | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ 
	}	
}
]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="8c448ad0-3c83-4b89-a1c2-54c9c828fbe4">
                  <items>
                    <container name="Name" predefined="False" id="6918c230-9b41-4f8a-9b81-4c61a14fe479">
                      <script><![CDATA[138]]></script>
                    </container>
                    <container name="State" predefined="False" id="971b2260-3d83-49d3-8aa9-4d34eb0c74ab">
                      <script><![CDATA[91]]></script>
                    </container>
                    <container name="Id" predefined="False" id="f50f79eb-0d60-4a1d-b80e-c012e6ddb3bb">
                      <script><![CDATA[122]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Resource pools" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="37db97c7-69c9-445a-b7d1-3d0765133380" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_ | Get-ResourcePool | ForEach-Object {
		$view = $_ | Get-View
		$_ `
			| Add-Member -MemberType NoteProperty -Name View -Value $view -PassThru `
			| Where-Object {($parent = $_.View.Parent) -and ($parent.Type -eq 'ResourcePool')} `
			| ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ 
			}
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="a22e59ae-82bf-4c15-bedf-3796f7fbe8cb">
                  <items>
                    <container name="Name" predefined="False" id="6e7a73c9-598b-4051-bf96-0c9815982f77">
                      <script><![CDATA[122]]></script>
                    </container>
                    <container name="CpuSharesLevel" predefined="False" id="0d2af122-bbcf-4334-8f7b-78577d512c74">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumCpuShares" predefined="False" id="d3c4a105-45ea-40d1-8048-3e415db2f533">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuReservationMHz" predefined="False" id="f6c61050-636e-4658-ad47-3889e49b2e9f">
                      <script><![CDATA[124]]></script>
                    </container>
                    <container name="CpuExpandableReservation" predefined="False" id="0a11b65d-829c-4a88-a5cb-661cc0af4388">
                      <script><![CDATA[164]]></script>
                    </container>
                    <container name="CpuLimitMHz" predefined="False" id="839320a8-2ff1-40d4-96b5-79a1987b8b8b">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemSharesLevel" predefined="False" id="28e32bc4-f050-406a-bfeb-ff98a26875c9">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumMemShares" predefined="False" id="54bb486c-a0a0-4a16-bf73-2f5aa85a2d19">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemReservationMB" predefined="False" id="86268e6d-4722-4e6c-a54d-1253fd0f83ce">
                      <script><![CDATA[126]]></script>
                    </container>
                    <container name="MemExpandableReservation" predefined="False" id="3dce8694-2cb8-480c-8da9-4c13ce304ca0">
                      <script><![CDATA[164]]></script>
                    </container>
                    <container name="MemLimitMB" predefined="False" id="4719007b-6c0a-4050-94ff-987efc3961f8">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Virtual machines" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="92eb862f-bc1a-40ef-bf30-5625d6926ed6" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
$PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)

$input | ForEach-Object {
	$_ | Get-VM | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
			| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardVMMembers -PassThru `
			| Add-Member -MemberType ScriptProperty -Name OperatingSystem -Value {$this.Guest.OSFullName} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name IPAddress -Value {$this.Guest.IPAddress} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name DNSName -Value {$this.Guest.HostName} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name 'Memory(MB)' -Value {$this.MemoryMB} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name CPUCount -Value {$this.NumCpu} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name HDDCount -Value {$this.HardDisks.Count} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name NICCount -Value {$this.NetworkAdapters.Count} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name ParentHost -Value {$this.Host.Name} -PassThru
	}
}]]></script>
              <ChartPresetID>32312a0a-ba0f-4409-8add-17fd08a2429f</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Description" predefined="False">
                      <script><![CDATA[170]]></script>
                    </container>
                    <container name="OperatingSystem" predefined="False">
                      <script><![CDATA[308]]></script>
                    </container>
                    <container name="IPAddress" predefined="False">
                      <script><![CDATA[88]]></script>
                    </container>
                    <container name="DNSName" predefined="False">
                      <script><![CDATA[162]]></script>
                    </container>
                    <container name="PowerState" predefined="False">
                      <script><![CDATA[77]]></script>
                    </container>
                    <container name="CPUCount" predefined="False">
                      <script><![CDATA[74]]></script>
                    </container>
                    <container name="Memory(MB)" predefined="False">
                      <script><![CDATA[86]]></script>
                    </container>
                    <container name="HDDCount" predefined="False">
                      <script><![CDATA[77]]></script>
                    </container>
                    <container name="NICCount" predefined="False">
                      <script><![CDATA[71]]></script>
                    </container>
                    <container name="CDDrives" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CustomFields" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DatastoreIdList" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DrsAutomationLevel" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FloppyDrives" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FolderId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Guest" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HAIsolationResponse" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HardDisks" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HARestartPriority" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Host" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HostId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemoryMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NetworkAdapters" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Notes" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumCpu" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ParentHost" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ResourcePoolId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="UsbDevices" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMHostId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMSwapfilePolicy" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Templates" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="030a566d-2c58-4213-9ce9-1a50910d0447" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.TemplateImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <command name="Get-Template" notprompted="true">
                <parameters />
              </command>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Snapshots" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="fa6ef7cb-a825-40f6-bd8e-9ecf181ed502" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_ | Get-VM | Get-Snapshot | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ 
	}
}
]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Description" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="PowerState" predefined="False">
                      <script><![CDATA[96]]></script>
                    </container>
                    <container name="Created" predefined="False">
                      <script><![CDATA[114]]></script>
                    </container>
                    <container name="VM" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Parent" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Children" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="IsCurrent" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="IsReplaySupported" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ParentSnapshotId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Quiesced" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="SizeMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Networks" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="490724c2-c4e4-4cea-81c6-4019e50c1daf" type="Action@" returntype="VMware.Vim.Network#VmwarePowerPackExtension#@@@#VMware.Vim.Network#@@@#VMware.Vim.ManagedEntity#@@@#VMware.Vim.EntityViewBase#@@@#VMware.Vim.ExtensibleManagedObject#@@@#VMware.Vim.ViewBase#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$managedHost = $_.Host
	$view = $_ | Get-View -Property Network
	Get-View -Id $view.Network -Property Name,Host,Vm -Server $_.Host | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
			| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost -PassThru `
			| Add-Member -MemberType NoteProperty -Name VMCount -Value $_.Vm.Count -PassThru `
			| Add-Member -MemberType NoteProperty -Name HostCount -Value $_.Host.Count -PassThru `
			| Add-Member -MemberType NoteProperty -Name Hosts -Value @(Get-View -Id $managedHost -Property Name -Server $managedHost | ForEach-Object {$_.Name}) -PassThru
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="66fc0324-ce10-46b4-9fd7-0083f31eb88e">
                  <items>
                    <container name="Name" predefined="False" id="19a5051c-eb8a-447e-89ec-27139c265c05">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HostCount" predefined="False" id="1dbcb873-b5b5-4323-9cde-0d90da5caad0">
                      <script><![CDATA[76]]></script>
                    </container>
                    <container name="VMCount" predefined="False" id="4cbdb7a2-ec57-4bf3-b8ff-7d8d17197029">
                      <script><![CDATA[68]]></script>
                    </container>
                    <container name="Hosts" predefined="False" id="46e5ffc3-3783-4348-b1b0-320eba4c2ef0">
                      <script><![CDATA[530]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Datastores" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="b3991669-d11d-4d44-b92b-b10e35d412d0" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	VMware.VimAutomation.Core\Get-Datastore -Datacenter $_ | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
			| Add-Member -MemberType NoteProperty -Name UsedSpaceMB -Value ($_.CapacityMB - $_.FreeSpaceMB) -PassThru
	}
}]]></script>
              <ChartPresetID>3f15125e-7563-4607-aba6-a7eb685ffaa0</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FreeSpaceMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CapacityMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Accessible" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DatacenterId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DatastoreBrowserPath" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ParentFolderId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Events" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="d0ab4e94-5e20-400c-b471-8ec2ca438b14" type="Action@" returntype="VMware.Vim.TaskEvent#@@@#VMware.Vim.Event#@@@#VMware.Vim.DynamicData#@@@#System.Object" DisplayResults="NestedView">
              <command name="Get-VIEvent" notprompted="true">
                <parameters />
              </command>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="bf34fab2-8190-4ec5-ad27-bab967f7c07b">
                  <items>
                    <container name="info" predefined="False" id="57b4c0fe-9167-4713-9a27-e29fa3bb72f4">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="key" predefined="False" id="57d12c75-949f-4239-918a-e145a320f4f0">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="chainId" predefined="False" id="530ae7f4-1ca5-4f5c-926b-6630e289bd76">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="createdTime" predefined="False" id="b7e52d78-4937-40b9-a259-c26e150295f6">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="userName" predefined="False" id="12fa1d87-dd53-4692-a868-ff9b58fb4188">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="datacenter" predefined="False" id="47aba492-eeb6-4f84-bdb7-375ca028f66c">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="computeResource" predefined="False" id="7e45dcb1-033a-4f59-9e5b-d5a76cfca5ab">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="host" predefined="False" id="4c1312a0-3741-4d2f-8278-b9b030d8269e">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="vm" predefined="False" id="eea85331-f3f2-4679-8a75-c9fc2ad43a27">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="fullFormattedMessage" predefined="False" id="907a61f0-45e8-4ac1-8f4a-0a441e034ba8">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="dynamicType" predefined="False" id="174d8a59-b892-4f9d-8727-9481725bc3ec">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="dynamicProperty" predefined="False" id="94c92a70-a9ac-44e2-955e-cdf8f8c9c1b4">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Hosts" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="e2522d57-30f3-4904-b8fb-b3a6ce1dba6e" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_ | Get-VMHost -NoRecursion | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ 
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="356fdf14-d0c3-40b9-aac0-79e27a765299">
                  <items>
                    <container name="Name" predefined="False" id="add3d9a7-124f-41f2-97a6-dc50e101efc0">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="State" predefined="False" id="aa45b2e3-3628-4b56-b6f0-d77a04e8a6e1">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False" id="8653434c-1a31-47b6-8f58-19b700074544">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Resource pools" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="1ff23a1f-eeb8-4ae3-b36c-a94a42a39e12" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_ | Get-ResourcePool | ForEach-Object {
		$view = $_ | Get-View
		$_ `
			| Add-Member -MemberType NoteProperty -Name View -Value $view -PassThru `
			| Where-Object {($parent = $_.View.Parent) -and ($parent.Type -eq 'ResourcePool')} `
			| ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ 
			}
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="47cba2fb-7e53-43d8-a1b2-fedca606bdcb">
                  <items>
                    <container name="Name" predefined="False" id="83392688-9d59-4770-a348-58952607021d">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuSharesLevel" predefined="False" id="19047e55-d3c1-4740-bd7f-0dc65a30fa5b">
                      <script><![CDATA[103]]></script>
                    </container>
                    <container name="NumCpuShares" predefined="False" id="5ed30bb2-928e-4976-831c-5e9ed12e2dc9">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuReservationMHz" predefined="False" id="2ab9f919-3345-4151-9073-2bc82f6ee823">
                      <script><![CDATA[121]]></script>
                    </container>
                    <container name="CpuExpandableReservation" predefined="False" id="0a8c1dbd-b183-46da-86a7-39856c8676f3">
                      <script><![CDATA[157]]></script>
                    </container>
                    <container name="CpuLimitMHz" predefined="False" id="e887ac6f-1ac9-4cfd-ae5d-d2e40e34e09b">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemSharesLevel" predefined="False" id="3d8cf7b5-f25b-4250-8ba5-8a75883054ce">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumMemShares" predefined="False" id="6c6d8a1f-9e6c-4074-bbe9-abeaf220281c">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemReservationMB" predefined="False" id="509c8e14-8b3c-472a-8166-4d0795902dea">
                      <script><![CDATA[120]]></script>
                    </container>
                    <container name="MemExpandableReservation" predefined="False" id="64b2ddc0-3b73-40cd-8b8c-b90cee348a7a">
                      <script><![CDATA[164]]></script>
                    </container>
                    <container name="MemLimitMB" predefined="False" id="97dfed4b-54a7-4391-8f3d-90efa2181941">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Virtual machines" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="e5b32645-8f1d-4a69-9db5-125cba193edc" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
$PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
$input | ForEach-Object {
	$_ | Get-VM | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
			| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardVMMembers -PassThru `
			| Add-Member -MemberType ScriptProperty -Name OperatingSystem -Value {$this.Guest.OSFullName} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name IPAddress -Value {$this.Guest.IPAddress} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name DNSName -Value {$this.Guest.HostName} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name 'Memory(MB)' -Value {$this.MemoryMB} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name CPUCount -Value {$this.NumCpu} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name HDDCount -Value {$this.HardDisks.Count} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name NICCount -Value {$this.NetworkAdapters.Count} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name ParentHost -Value {$this.Host.Name} -PassThru
	}
}]]></script>
              <ChartPresetID>32312a0a-ba0f-4409-8add-17fd08a2429f</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="751041ad-e08c-446c-81ec-9d04050a1f33">
                  <items>
                    <container name="Name" predefined="False" id="21d25d73-5f62-4597-93e9-77593cd7f89d">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Description" predefined="False" id="1424615c-21b3-4763-bcb5-1fd92c8a5955">
                      <script><![CDATA[150]]></script>
                    </container>
                    <container name="OperatingSystem" predefined="False" id="ac6c2b94-8d78-4cfa-8164-648e7c3623d3">
                      <script><![CDATA[308]]></script>
                    </container>
                    <container name="IPAddress" predefined="False" id="17f7fd69-aaff-4b95-adfd-f012d0cceecf">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DNSName" predefined="False" id="9c9c32eb-117a-4be8-9fcb-d9784f0c0bc9">
                      <script><![CDATA[142]]></script>
                    </container>
                    <container name="PowerState" predefined="False" id="29a5859c-394b-4f8a-8a48-fd884d3be7f8">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CPUCount" predefined="False" id="f5729981-ec47-45bf-9458-5b8b23d0981a">
                      <script><![CDATA[78]]></script>
                    </container>
                    <container name="Memory(MB)" predefined="False" id="2094d552-7de3-4087-ad77-26668c67e18c">
                      <script><![CDATA[93]]></script>
                    </container>
                    <container name="HDDCount" predefined="False" id="9897d783-9d38-4629-871c-c4f3ddc155c8">
                      <script><![CDATA[84]]></script>
                    </container>
                    <container name="NICCount" predefined="False" id="e28308e7-29b9-4b67-b51f-38f69ba3d5ea">
                      <script><![CDATA[75]]></script>
                    </container>
                    <container name="ParentHost" predefined="False" id="7466e976-a3df-4045-8d9c-d57872d8717e">
                      <script><![CDATA[132]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Snapshots" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="ccb14e82-2b2b-483e-821d-5c39f47ae9dd" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_ | Get-VM | Get-Snapshot | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ 
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="525eefe7-164e-42e6-a236-3814b01c95e8">
                  <items>
                    <container name="Name" predefined="False" id="07aade46-e234-40ba-8dc9-714c2813d6d3">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Description" predefined="False" id="f91697d5-62b1-4c99-8ecd-4240d41af2cf">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="PowerState" predefined="False" id="9f6d43e8-13c7-4e45-aae8-d491a70ac824">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Created" predefined="False" id="7a49cf53-84f8-49b7-81d9-834191a3e865">
                      <script><![CDATA[116]]></script>
                    </container>
                    <container name="VM" predefined="False" id="8cfa3912-4a12-4c01-9641-a33d370b0e5e">
                      <script><![CDATA[79]]></script>
                    </container>
                    <container name="Parent" predefined="False" id="55208833-210c-4c5f-aa1b-71b28544d364">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Datastores" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="653f5195-2eac-4016-ae6c-fcef48ff2d4a" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_ | Get-VMHost | VMware.VimAutomation.Core\Get-Datastore | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
			| Add-Member -MemberType NoteProperty -Name UsedSpaceMB -Value ($_.CapacityMB - $_.FreeSpaceMB) -PassThru
	}
}]]></script>
              <ChartPresetID>3f15125e-7563-4607-aba6-a7eb685ffaa0</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="a076386c-9d39-4fd9-b903-a15d0e79b8d9">
                  <items>
                    <container name="Name" predefined="False" id="bb79b339-6e8e-4308-9587-22112300254a">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FreeSpaceMB" predefined="False" id="442daed3-20db-47b6-8dc2-f9cd6db52305">
                      <script><![CDATA[89]]></script>
                    </container>
                    <container name="CapacityMB" predefined="False" id="95a03d2c-5914-41f6-9477-d3d5e8d51fcc">
                      <script><![CDATA[84]]></script>
                    </container>
                    <container name="Accessible" predefined="False" id="caa00de4-bf82-4392-b2b7-3dae884c2554">
                      <script><![CDATA[76]]></script>
                    </container>
                    <container name="Type" predefined="False" id="9457cf63-00c7-44a9-8cc8-cb63bd0c0b77">
                      <script><![CDATA[58]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Events" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="7d11493e-4df5-4888-801c-34d3fd3252de" type="Action@" DisplayResults="NestedView">
              <command name="Get-VIEvent" notprompted="true">
                <parameters />
              </command>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Info" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Key" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ChainId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CreatedTime" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="UserName" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Datacenter" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ComputeResource" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Host" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Vm" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Ds" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Net" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Dvs" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FullFormattedMessage" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ChangeTag" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DynamicType" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DynamicProperty" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Performance data" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="5ea03ebc-a3a3-40c0-97c1-0a50af46c96c" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Stat.LongSampleImpl" DisplayResults="NestedView">
              <command name="Get-Stat" notprompted="true">
                <parameters />
              </command>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="1d6fe47c-f336-4f66-82b0-2803d9aae300">
                  <items>
                    <container name="MetricId " predefined="False" id="2458bdfa-9fa3-4ab1-93b0-961515476f2b">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Timestamp " predefined="False" id="64704f20-5642-4723-95c8-90dbbbe32be7">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Value" predefined="False" id="359be644-be4c-40ff-abf1-d905a5d26a9a">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Unit" predefined="False" id="04211374-474c-4dd6-ac33-1c9e1aa207b9">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Summary" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="8ea1dfde-bc75-498b-982f-53971dc86de3" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','State','Manufacturer','Model','CPUType','CPUSpeed','CPUCount','CPUCores','CPUThreads(HyperThreading)','NICCount','Memory(GB)','IPAddress','VMwareVersion','VMotionEnabled','Uptime','VMCount','DatastoreCount','PortGroupCount','OverallCpuUsage','OverallMemoryUsage','RebootRequired'))
$PSStandardDatacenterMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
$input | ForEach-Object {
	if (-not ($_.PSObject.Properties | Where-Object {$_.Name -match 'Count$'})) {
		$view = Get-View -ViewType HostSystem -Filter @{'Name'=$_.Name} -Property Summary,Vm,Datastore,TriggeredAlarmState -Server $_.Host
		$hostNetwork = $_ | Get-VMHostNetwork
		$portGroup = $_ | Get-VirtualPortGroup
		$_ `
			| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardDatacenterMembers -PassThru `
			| Add-Member -MemberType NoteProperty -Name UUID -Value $view.Summary.Hardware.UUID -PassThru `
			| Add-Member -MemberType NoteProperty -Name CPUType -Value $view.Summary.Hardware.CpuModel -PassThru `
			| Add-Member -MemberType NoteProperty -Name CPUSpeed -Value $view.Summary.Hardware.CpuMhz -PassThru `
			| Add-Member -MemberType NoteProperty -Name CPUCount -Value $view.Summary.Hardware.NumCpuPkgs -PassThru `
			| Add-Member -MemberType NoteProperty -Name CPUCores -Value $view.Summary.Hardware.NumCpuCores -PassThru `
			| Add-Member -MemberType NoteProperty -Name 'CPUThreads(HyperThreading)' -Value $view.Summary.Hardware.NumCpuThreads -PassThru `
			| Add-Member -MemberType NoteProperty -Name NICCount -Value $view.Summary.Hardware.NumNics -PassThru `
			| Add-Member -MemberType NoteProperty -Name 'Memory(GB)' -Value ([double]('{0:#.##}' -f ($view.Summary.Hardware.MemorySize / 1GB))) -PassThru `
			| Add-Member -MemberType NoteProperty -Name IPAddress -Value @($hostNetwork.ConsoleNic | ForEach-Object {$_.IP}) -PassThru `
			| Add-Member -MemberType NoteProperty -Name DNSName -Value $view.Summary.Config.Name -PassThru `
			| Add-Member -MemberType NoteProperty -Name VMwareVersion -Value $view.Summary.Config.Product.FullName -PassThru `
			| Add-Member -MemberType NoteProperty -Name APIVersion -Value $view.Summary.Config.Product.ApiVersion -PassThru `
			| Add-Member -MemberType NoteProperty -Name VMotionEnabled -Value $view.Summary.Config.VmotionEnabled -PassThru `
			| Add-Member -MemberType NoteProperty -Name Uptime -Value $view.Summary.Runtime.BootTime -PassThru `
			| Add-Member -MemberType NoteProperty -Name VMCount -Value $view.VM.Count -PassThru `
			| Add-Member -MemberType NoteProperty -Name DatastoreCount -Value $view.Datastore.Count -PassThru `
			| Add-Member -MemberType NoteProperty -Name PortGroupCount -Value $portGroup.Count -PassThru `
			| Add-Member -MemberType NoteProperty -Name TriggeredAlarmCount -Value $view.TriggeredAlarmState.Count -PassThru `
			| Add-Member -MemberType NoteProperty -Name MaintenanceMode -Value $view.Summary.Runtime.InMaintenanceMode -PassThru `
			| Add-Member -MemberType NoteProperty -Name OverallCpuUsage -Value $view.Summary.QuickStats.OverallCpuUsage -PassThru `
			| Add-Member -MemberType NoteProperty -Name OverallMemoryUsage -Value $view.Summary.QuickStats.OverallMemoryUsage -PassThru `
			| Add-Member -MemberType NoteProperty -Name RebootRequired -Value $view.Summary.RebootRequired -PassThru
	} else {
		$_
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="State" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Manufacturer" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Model" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CPUType" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CPUSpeed" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CPUCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CPUCores" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CPUThreads(HyperThreading)" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NICCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Memory(GB)" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="IPAddress" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DNSName" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMwareVersion" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="APIVersion" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMotionEnabled" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Uptime" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DatastoreCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="PortGroupCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="TriggeredAlarmCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MaintenanceMode" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="OverallCpuUsage" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="OverallMemoryUsage" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="RebootRequired" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Resource pools" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="3e945022-76b9-4c74-880e-e7152514f51e" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$resourcePoolList = @()
$input | ForEach-Object {
	$_ | Get-ResourcePool | ForEach-Object {
		$view = $_ | Get-View
		$_ `
			| Add-Member -MemberType NoteProperty -Name View -Value $view -PassThru `
			| Where-Object {($parent = $_.View.Parent) -and ($parent.Type -eq 'ResourcePool') -and ($resourcePoolList -notcontains "$managedHost-$($_.Id)")} `
			| ForEach-Object {
				$resourcePoolList += "$managedHost-$($_.Id)"
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ 
			}
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="0927ee70-a3e1-4c20-b621-2179e366d52c">
                  <items>
                    <container name="Name" predefined="False" id="61b48330-e4ba-4d89-9df4-e92428ec635f">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuSharesLevel" predefined="False" id="ed362329-c5ec-4a95-bdb0-8e1af1a5e429">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumCpuShares" predefined="False" id="ab3987c6-3f2b-4f62-b7c8-3327eaf44874">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuReservationMHz" predefined="False" id="d3845931-ba2d-4899-a09b-c434daaa4e7f">
                      <script><![CDATA[127]]></script>
                    </container>
                    <container name="CpuExpandableReservation" predefined="False" id="c728bdd8-e236-4c6b-9174-d1204c2d7f39">
                      <script><![CDATA[160]]></script>
                    </container>
                    <container name="CpuLimitMHz" predefined="False" id="9615b4ca-8c66-4864-8a1f-5f0509c0999f">
                      <script><![CDATA[93]]></script>
                    </container>
                    <container name="MemSharesLevel" predefined="False" id="c4a1b70b-5cbe-41fc-a529-12788b7e64d2">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumMemShares" predefined="False" id="6c76c0f8-eed9-4251-b202-097354f2562a">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemReservationMB" predefined="False" id="f8e5a61f-a196-496f-8089-810a42472572">
                      <script><![CDATA[125]]></script>
                    </container>
                    <container name="MemExpandableReservation" predefined="False" id="b97d7e37-70f3-4cc6-8fe3-2857d4dea0ce">
                      <script><![CDATA[168]]></script>
                    </container>
                    <container name="MemLimitMB" predefined="False" id="c7fa33c0-0b38-43c2-bd1e-651f7836aafe">
                      <script><![CDATA[88]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Virtual machines" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="8c908130-e8b3-4c7e-8d5d-2acd970257cf" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
$PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
$input | ForEach-Object {
	$_ | Get-VM -NoRecursion | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
			| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardVMMembers -PassThru `
			| Add-Member -MemberType ScriptProperty -Name OperatingSystem -Value {$this.Guest.OSFullName} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name IPAddress -Value {$this.Guest.IPAddress} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name DNSName -Value {$this.Guest.HostName} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name 'Memory(MB)' -Value {$this.MemoryMB} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name CPUCount -Value {$this.NumCpu} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name HDDCount -Value {$this.HardDisks.Count} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name NICCount -Value {$this.NetworkAdapters.Count} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name ParentHost -Value {$this.Host.Name} -PassThru
	}
}]]></script>
              <ChartPresetID>32312a0a-ba0f-4409-8add-17fd08a2429f</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="cbed7bad-8675-486e-84e5-9bc53a1f88be">
                  <items>
                    <container name="Name" predefined="False" id="4fdec062-736a-48b0-bb75-2f7b0110080a">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Description" predefined="False" id="e574c6a0-566e-4a9d-b8bd-b0480ea92852">
                      <script><![CDATA[155]]></script>
                    </container>
                    <container name="OperatingSystem" predefined="False" id="c2b1afd4-e03a-459c-b91b-4e721fd4e8e3">
                      <script><![CDATA[308]]></script>
                    </container>
                    <container name="IPAddress" predefined="False" id="c58ab817-b930-48f9-af29-a4094075480b">
                      <script><![CDATA[84]]></script>
                    </container>
                    <container name="DNSName" predefined="False" id="170fb7c5-f2e0-4c5f-b3b7-0ad08f32e17a">
                      <script><![CDATA[141]]></script>
                    </container>
                    <container name="PowerState" predefined="False" id="a9d29ce1-5e6d-4d86-88b7-e8531b8f1c6b">
                      <script><![CDATA[91]]></script>
                    </container>
                    <container name="Memory(MB)" predefined="False" id="937642bb-de1f-40f3-819b-5d43fb495cf3">
                      <script><![CDATA[89]]></script>
                    </container>
                    <container name="CPUCount" predefined="False" id="ef081435-94d3-4650-b3f8-7135cdc75390">
                      <script><![CDATA[73]]></script>
                    </container>
                    <container name="HDDCount" predefined="False" id="a6ff25db-c1b0-4c20-8052-6ed2a0a07ff8">
                      <script><![CDATA[78]]></script>
                    </container>
                    <container name="NICCount" predefined="False" id="ef66d617-bd42-4408-b089-c830e50c9108">
                      <script><![CDATA[70]]></script>
                    </container>
                    <container name="ParentHost" predefined="False" id="dbae880a-b793-43b0-8a4d-df8d16eb5018">
                      <script><![CDATA[132]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Snapshots" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="286921a5-7903-4e7b-bce5-0aa4ce4f3b36" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_ | Get-VM -NoRecursion | Get-Snapshot | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ 
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="75aaff5c-b468-4a60-8dc5-33f6a32ddd34">
                  <items>
                    <container name="Name" predefined="False" id="d510ea01-cc4e-419b-87bd-cc619336e791">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Description" predefined="False" id="2fc2c8f6-a09f-4bfd-a482-11b94b348ba2">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="PowerState" predefined="False" id="88ec9ef0-a6ad-4387-a85f-f6633ea93a6f">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Created" predefined="False" id="d1dbdf77-5f9d-4526-a73e-a9f365ae0c73">
                      <script><![CDATA[134]]></script>
                    </container>
                    <container name="VM" predefined="False" id="734c22aa-ce3c-4a90-9dce-3e85cd336e09">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Parent" predefined="False" id="3e6d7148-9328-415e-8fc6-797a11f92738">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Datastores" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="b43aa8d7-2f6c-4d03-a24a-af0747965a35" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_ | VMware.VimAutomation.Core\Get-Datastore | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
			| Add-Member -MemberType NoteProperty -Name UsedSpaceMB -Value ($_.CapacityMB - $_.FreeSpaceMB) -PassThru
	}
}]]></script>
              <ChartPresetID>3f15125e-7563-4607-aba6-a7eb685ffaa0</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="795885ac-7537-4289-a4a1-3fe46ff8b675">
                  <items>
                    <container name="Name" predefined="False" id="51fb0a15-20c0-40e8-aa8e-52c9169d3f9d">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FreeSpaceMB" predefined="False" id="2b9728ce-1938-4dc7-b1ef-77ff935eaaca">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CapacityMB" predefined="False" id="69176512-ee67-41bf-91f2-0d26f23b1943">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Accessible" predefined="False" id="31df8162-1813-4b9e-a1b4-5fe31cd73f88">
                      <script><![CDATA[71]]></script>
                    </container>
                    <container name="Type" predefined="False" id="fcc491ab-bbdf-4937-9e18-1e7a24d02268">
                      <script><![CDATA[58]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Log files" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="66e283c8-7593-4b72-85ea-1b65132c1907" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.LogDescriptorImpl#VMwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.LogDescriptorImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('VMHost','FileName','Type','Description'))
$PSStandardMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
$input | ForEach-Object {
	$_ | Get-LogType `
		| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardMembers -PassThru `
		| Add-Member -MemberType NoteProperty -Name VMHost -Value $_.Name -PassThru `
		| Add-Member -MemberType ScriptProperty -Name Type -Value {$this.Info.Label} -PassThru `
		| Add-Member -MemberType ScriptProperty -Name Description -Value {$this.Info.Summary} -PassThru `
		| ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VMwarePowerPackExtension")
			$_
		}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="772e61ec-768e-4143-b081-7c044a2b2444">
                  <items>
                    <container name="VMHost" predefined="False" id="ff6e84b8-e555-4d6e-a6a5-b49d078e31bc">
                      <script><![CDATA[146]]></script>
                    </container>
                    <container name="Filename" predefined="False" id="480af03b-0c5c-4589-8723-9e2246a2d560">
                      <script><![CDATA[170]]></script>
                    </container>
                    <container name="Type" predefined="False" id="5f271a69-49d6-4f82-b051-16b558aeda51">
                      <script><![CDATA[135]]></script>
                    </container>
                    <container name="Description" predefined="False" id="f9d4d786-6ef4-48b2-a72d-5908da805470">
                      <script><![CDATA[217]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Events" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="7f347649-8d8a-455a-ae55-0a21b1487374" type="Action@" DisplayResults="NestedView">
              <command name="Get-VIEvent" notprompted="true">
                <parameters />
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Performance data" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="582bb9d5-2e54-4ed7-bbf1-7982f69ffee2" type="Action@" DisplayResults="NestedView">
              <command name="Get-Stat" notprompted="true">
                <parameters />
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Host networks" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="1a4b6833-f07b-427c-8116-3117808a6cbf" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Host.Networking.VMHostNetworkInfoImpl#@@@#System.Object" DisplayResults="NestedView">
              <command name="Get-VMHostNetwork" notprompted="true">
                <parameters />
              </command>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="HostName" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DomainName" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DnsFromDhcp" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ConsoleGateway" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ConsoleGatewayDevice" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DnsAddress" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Host services" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="578c1b80-1d80-451e-981b-6e4dca0576f7" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Host.HostServiceImpl#@@@#System.Object" DisplayResults="NestedView">
              <command name="Get-VMHostService" notprompted="true">
                <parameters />
              </command>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Key" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Label" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Policy" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Running" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Required" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Virtual machines" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="db6b8d8b-e649-4db1-b063-1385c323138f" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
$PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)

$input | ForEach-Object {
	$_ | Get-VM -NoRecursion | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
			| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardVMMembers -PassThru `
			| Add-Member -MemberType ScriptProperty -Name OperatingSystem -Value {$this.Guest.OSFullName} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name IPAddress -Value {$this.Guest.IPAddress} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name DNSName -Value {$this.Guest.HostName} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name 'Memory(MB)' -Value {$this.MemoryMB} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name CPUCount -Value {$this.NumCpu} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name HDDCount -Value {$this.HardDisks.Count} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name NICCount -Value {$this.NetworkAdapters.Count} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name ParentHost -Value {$this.Host.Name} -PassThru
	}
}]]></script>
              <ChartPresetID>32312a0a-ba0f-4409-8add-17fd08a2429f</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Description" predefined="False">
                      <script><![CDATA[148]]></script>
                    </container>
                    <container name="OperatingSystem" predefined="False">
                      <script><![CDATA[308]]></script>
                    </container>
                    <container name="IPAddress" predefined="False">
                      <script><![CDATA[87]]></script>
                    </container>
                    <container name="DNSName" predefined="False">
                      <script><![CDATA[162]]></script>
                    </container>
                    <container name="PowerState" predefined="False">
                      <script><![CDATA[78]]></script>
                    </container>
                    <container name="CPUCount" predefined="False">
                      <script><![CDATA[77]]></script>
                    </container>
                    <container name="Memory(MB)" predefined="False">
                      <script><![CDATA[85]]></script>
                    </container>
                    <container name="HDDCount" predefined="False">
                      <script><![CDATA[79]]></script>
                    </container>
                    <container name="NICCount" predefined="False">
                      <script><![CDATA[71]]></script>
                    </container>
                    <container name="ParentHost" predefined="False">
                      <script><![CDATA[132]]></script>
                    </container>
                    <container name="CDDrives" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CustomFields" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DatastoreIdList" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DrsAutomationLevel" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FloppyDrives" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FolderId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Guest" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HAIsolationResponse" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HardDisks" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HARestartPriority" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Host" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HostId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemoryMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NetworkAdapters" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Notes" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumCpu" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ResourcePoolId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="UsbDevices" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMHostId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMSwapfilePolicy" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Virtual machines (recursive)" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="4a795fc8-01e7-493b-b85c-81a328d1f3f2" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
$PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)

$input | ForEach-Object {
	$_ | Get-VM | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
			| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardVMMembers -PassThru `
			| Add-Member -MemberType ScriptProperty -Name OperatingSystem -Value {$this.Guest.OSFullName} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name IPAddress -Value {$this.Guest.IPAddress} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name DNSName -Value {$this.Guest.HostName} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name 'Memory(MB)' -Value {$this.MemoryMB} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name CPUCount -Value {$this.NumCpu} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name HDDCount -Value {$this.HardDisks.Count} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name NICCount -Value {$this.NetworkAdapters.Count} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name ParentHost -Value {$this.Host.Name} -PassThru
	}
}]]></script>
              <ChartPresetID>32312a0a-ba0f-4409-8add-17fd08a2429f</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="3558528a-0da9-417e-8af3-e6d7ef852943">
                  <items>
                    <container name="Name" predefined="False" id="6eca0b1a-7c58-4b73-8e27-52e7eec46d43">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Description" predefined="False" id="a3acf955-8274-4162-bbf0-d1daec5e66b7">
                      <script><![CDATA[148]]></script>
                    </container>
                    <container name="OperatingSystem" predefined="False" id="58e5313f-586d-4da4-ac40-9fa429c6458d">
                      <script><![CDATA[308]]></script>
                    </container>
                    <container name="IPAddress" predefined="False" id="cf3aa3d3-d871-447a-a8da-a11df0eee7ce">
                      <script><![CDATA[87]]></script>
                    </container>
                    <container name="DNSName" predefined="False" id="c26db369-04ea-4749-85c2-97242499d459">
                      <script><![CDATA[162]]></script>
                    </container>
                    <container name="PowerState" predefined="False" id="493168a8-53d2-49bf-adbc-ea6bc329955e">
                      <script><![CDATA[78]]></script>
                    </container>
                    <container name="CPUCount" predefined="False" id="a35cba84-889e-4c7d-a647-315a919de902">
                      <script><![CDATA[77]]></script>
                    </container>
                    <container name="Memory(MB)" predefined="False" id="21fa272f-9548-4f74-a6b4-d496917ec497">
                      <script><![CDATA[85]]></script>
                    </container>
                    <container name="HDDCount" predefined="False" id="38eecf2a-e03c-4e87-ab83-3efbfdef2261">
                      <script><![CDATA[79]]></script>
                    </container>
                    <container name="NICCount" predefined="False" id="938fc368-4196-477e-960e-260598174674">
                      <script><![CDATA[71]]></script>
                    </container>
                    <container name="ParentHost" predefined="False" id="1f1a0a3e-b253-4bd4-b04e-33d2cee13812">
                      <script><![CDATA[132]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Resource pools" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="7ace19f1-33fc-4525-a911-c6e3f290be45" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_ `
		| Get-ResourcePool -NoRecursion `
		| ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ 
		}
}
]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuSharesLevel" predefined="False">
                      <script><![CDATA[103]]></script>
                    </container>
                    <container name="NumCpuShares" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuReservationMHz" predefined="False">
                      <script><![CDATA[121]]></script>
                    </container>
                    <container name="CpuExpandableReservation" predefined="False">
                      <script><![CDATA[157]]></script>
                    </container>
                    <container name="CpuLimitMHz" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemSharesLevel" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumMemShares" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemReservationMB" predefined="False">
                      <script><![CDATA[120]]></script>
                    </container>
                    <container name="MemExpandableReservation" predefined="False">
                      <script><![CDATA[164]]></script>
                    </container>
                    <container name="MemLimitMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Resource pools (recursive)" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="223b67cd-fe2d-4abc-8862-9ed49ef98ccd" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_ `
		| Get-ResourcePool `
		| ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ 		
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuSharesLevel" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumCpuShares" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuReservationMHz" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuExpandableReservation" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuLimitMHz" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemSharesLevel" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumMemShares" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemReservationMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemExpandableReservation" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemLimitMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Virtual machines" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="6b6cf2c3-0489-40e7-8ee4-890e0eca00ad" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
$PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)

$input | ForEach-Object {
	$_ | Get-VM | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
			| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardVMMembers -PassThru `
			| Add-Member -MemberType ScriptProperty -Name OperatingSystem -Value {$this.Guest.OSFullName} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name IPAddress -Value {$this.Guest.IPAddress} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name DNSName -Value {$this.Guest.HostName} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name 'Memory(MB)' -Value {$this.MemoryMB} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name CPUCount -Value {$this.NumCpu} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name HDDCount -Value {$this.HardDisks.Count} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name NICCount -Value {$this.NetworkAdapters.Count} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name ParentHost -Value {$this.Host.Name} -PassThru
	}
}]]></script>
              <ChartPresetID>32312a0a-ba0f-4409-8add-17fd08a2429f</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Description" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="OperatingSystem" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="IPAddress" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DNSName" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="PowerState" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CPUCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Memory(MB)" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HDDCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NICCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ParentHost" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CDDrives" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CustomFields" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DatastoreIdList" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DrsAutomationLevel" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FloppyDrives" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FolderId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Guest" predefined="False">
                      <script><![CDATA[230]]></script>
                    </container>
                    <container name="HAIsolationResponse" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HardDisks" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HARestartPriority" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Host" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HostId" predefined="False">
                      <script><![CDATA[124]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[123]]></script>
                    </container>
                    <container name="MemoryMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NetworkAdapters" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Notes" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumCpu" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ResourcePoolId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="UsbDevices" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMHostId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMSwapfilePolicy" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Sessions" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="09288d13-20dd-49d1-95cf-4a49f7201716" type="Action@" returntype="VMware.Vim.UserSession#@@@#VMware.Vim.DynamicData#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	$input | ForEach-Object {
		$hostName = $_.Name
		if ($DefaultVIServers | where {$_.Name -eq $hostName}) {
			$DefaultVIServers | ForEach-Object {Get-View SessionManager -Server $_ | ForEach-Object {$_.SessionList}}	}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the clusters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Key" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="UserName" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FullName" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="LoginTime" predefined="False">
                      <script><![CDATA[111]]></script>
                    </container>
                    <container name="LastActiveTime" predefined="False">
                      <script><![CDATA[113]]></script>
                    </container>
                    <container name="Locale" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MessageLocale" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Folders" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="a7a51f58-cc7e-4de0-bdcb-e96201c5c9f0" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	$input | ForEach-Object {
		$hostName = $_.Name
		$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
		if ($_.Connected) {
			Get-Folder -Server $viServer | Sort-Object -Property Name | ForEach-Object {
				$view = $_ | Get-View
				$_ `
					| Add-Member -MemberType NoteProperty -Name View -Value $view -PassThru `
					| Where-Object {$_.View.Parent.Type -ne 'Datacenter'} `
					| Add-Member -MemberType ScriptProperty -Name Type -Value {if ($this.IsChildTypeVm) {'VM'} elseif ($this.IsChildTypeComputeResource) {'Compute Resource'} elseif ($this.IsChildTypeDatacenter) {'Datacenter'} else {'Unknown'}} -PassThru
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the clusters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[255]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[257]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Datacenters" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="15425868-766a-4eef-afe8-d3a1947f1b33" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	$input | ForEach-Object {
		$hostName = $_.Name
		$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
		if ($_.Connected -and  ($_.APIType -eq "VirtualCenter")) {
			Get-Datacenter -Server $viServer | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ | Add-Member -MemberType NoteProperty -Name Host -Value $_.Name -PassThru
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the clusters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[167]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[149]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Clusters" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="6a6c126a-2b0b-4102-8660-dd28f40be4a9" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.ComputeResourceImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	$input | ForEach-Object {
		$hostName = $_.Name
		$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
		if ($_.Connected -and  ($_.ApiType -eq "VirtualCenter")) {
			Get-Cluster -Server $viServer | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$view = $_ | Get-View
				$_ `
					| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardClusterMembers -PassThru `
					| Add-Member -MemberType NoteProperty -Name Host -Value $_.Name -PassThru `
					| Add-Member -MemberType NoteProperty -Name DPMEnabled -Value $view.ConfigurationEx.DpmConfigInfo.Enabled -PassThru `
					| Add-Member -MemberType NoteProperty -Name ConfiguredFailoverCapacity -Value $_.HAFailoverLevel -PassThru `
					| Add-Member -MemberType NoteProperty -Name CurrentFailoverCapacity -Value $view.Summary.CurrentFailoverLevel -PassThru `
					| Add-Member -MemberType NoteProperty -Name DRSStars -Value $view.ConfigurationEx.DrsConfig.VMotionRate -PassThru `
					| Add-Member -MemberType NoteProperty -Name CPUCores -Value $view.Summary.NumCpuCores -PassThru `
					| Add-Member -MemberType NoteProperty -Name 'TotalCPU(MHz)' -Value $view.Summary.TotalCpu -PassThru `
					| Add-Member -MemberType NoteProperty -Name 'TotalMemory(GB)' -Value ([double]('{0:#.##}' -f ($view.Summary.TotalMemory / 1GB))) -PassThru `
					| Add-Member -MemberType NoteProperty -Name HostCount -Value $view.Host.Count -PassThru `
					| Add-Member -MemberType NoteProperty -Name DatastoreCount -Value $view.Datastore.Count -PassThru `
					| Add-Member -MemberType NoteProperty -Name NetworkCount -Value $view.Network.Count -PassThru `
					| Add-Member -MemberType NoteProperty -Name VMotionCount -Value $view.Summary.NumVmotions -PassThru `
					| Add-Member -MemberType NoteProperty -Name TriggeredAlarmCount -Value $view.TriggeredAlarmState.Count -PassThru
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the clusters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[136]]></script>
                    </container>
                    <container name="DrsEnabled" predefined="False">
                      <script><![CDATA[75]]></script>
                    </container>
                    <container name="HAEnabled" predefined="False">
                      <script><![CDATA[76]]></script>
                    </container>
                    <container name="DPMEnabled" predefined="False">
                      <script><![CDATA[84]]></script>
                    </container>
                    <container name="ConfiguredFailoverCapacity" predefined="False">
                      <script><![CDATA[162]]></script>
                    </container>
                    <container name="CurrentFailoverCapacity" predefined="False">
                      <script><![CDATA[141]]></script>
                    </container>
                    <container name="DrsMode" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DRSStars" predefined="False">
                      <script><![CDATA[63]]></script>
                    </container>
                    <container name="CPUCores" predefined="False">
                      <script><![CDATA[70]]></script>
                    </container>
                    <container name="TotalCPU(MHz)" predefined="False">
                      <script><![CDATA[99]]></script>
                    </container>
                    <container name="TotalMemory(GB)" predefined="False">
                      <script><![CDATA[110]]></script>
                    </container>
                    <container name="HostCount" predefined="False">
                      <script><![CDATA[73]]></script>
                    </container>
                    <container name="DatastoreCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NetworkCount" predefined="False">
                      <script><![CDATA[94]]></script>
                    </container>
                    <container name="VMotionCount" predefined="False">
                      <script><![CDATA[95]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Hosts" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="3d524f29-0faa-4a89-9863-729f6db5a52f" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	$input | ForEach-Object {
		$hostName = $_.Name
		$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
		if ($_.Connected) {
			Get-VMHost -Server $viServer | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType NoteProperty -Name Host -Value $hostName -PassThru
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the clusters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="27ecdf8b-73ff-4128-b63c-fe9840a3ff02">
                  <items>
                    <container name="Name" predefined="False" id="e22182ef-72d5-4c9e-8dbd-68545a529a49">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="State" predefined="False" id="f5c3a723-08fa-441d-a627-14b0d34ec27a">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False" id="7391f62b-0288-4d0d-a2d7-0ac2e9b7504e">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Resource pools" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="4bb48ab7-802a-4f16-9da2-18b9ef11b355" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	$input | ForEach-Object {
		$hostName = $_.Name
		$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
		if ($_.Connected) {
			$managedHost = $_
			Get-ResourcePool -Server $viServer | ForEach-Object {
				$view = $_ | Get-View
				$_ `
					| Add-Member -MemberType NoteProperty -Name View -Value $view -PassThru `
					| Where-Object {($parent = $_.View.Parent) -and ($parent.Type -eq 'ResourcePool')} `
					| ForEach-Object {
						$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
						$_ `
							| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru
					}
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the clusters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Host" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Name" predefined="False">
                      <script><![CDATA[233]]></script>
                    </container>
                    <container name="CpuSharesLevel" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumCpuShares" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuReservationMHz" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuExpandableReservation" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuLimitMHz" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemSharesLevel" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumMemShares" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemReservationMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemExpandableReservation" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemLimitMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[160]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Virtual machines" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="19be36d3-74e1-4c32-99bb-5865a5fc633e" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
	$PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
	$input | ForEach-Object {
		$hostName = $_.Name
		$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
		if ($_.Connected) {
			Get-VM -Server $viServer | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardVMMembers -PassThru `
					| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $viServer -PassThru `
					| Add-Member -MemberType ScriptProperty -Name OperatingSystem -Value {$this.Guest.OSFullName} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name IPAddress -Value {$this.Guest.IPAddress} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name DNSName -Value {$this.Guest.HostName} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name 'Memory(MB)' -Value {$this.MemoryMB} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name CPUCount -Value {$this.NumCpu} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name HDDCount -Value {$this.HardDisks.Count} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name NICCount -Value {$this.NetworkAdapters.Count} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name ParentHost -Value {$this.Host.Name} -PassThru
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the clusters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <ChartPresetID>32312a0a-ba0f-4409-8add-17fd08a2429f</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Description" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="OperatingSystem" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="IPAddress" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DNSName" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="PowerState" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CPUCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Memory(MB)" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HDDCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NICCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ParentHost" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ManagedHost" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Templates" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="c994dab5-db3e-4411-a024-1a96960815d4" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.TemplateImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	$input | ForEach-Object {
		$hostName = $_.Name
		$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
		if ($_.Connected -and  ($_.ApiType -eq "VirtualCenter")) {
			Get-Template -Server $viServer
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the clusters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[328]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Snapshots" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="9ca19761-1595-4ecc-99e4-dcb144f93cdd" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	$input | ForEach-Object {
		$hostName = $_.Name
		$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
		if ($_.Connected) {
			$managedHost = $_
			Get-VM -Server $viServer | Get-Snapshot | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the clusters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Description" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="PowerState" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="SizeMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Networks" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="55b4c21b-c8c8-4520-a590-96928ca81e95" type="Action@" returntype="VMware.Vim.Network#VmwarePowerPackExtension#@@@#VMware.Vim.Network#@@@#VMware.Vim.ManagedEntity#@@@#VMware.Vim.EntityViewBase#@@@#VMware.Vim.ExtensibleManagedObject#@@@#VMware.Vim.ViewBase#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	$input | ForEach-Object {
		$hostName = $_.Name
		$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
		if ($_.Connected) {
			Get-View -ViewType Datacenter -Property Network -Server $viServer | ForEach-Object {
				if ($_.Network) {
					Get-View -Id $_.Network -Property Name,Host,Vm -Server $viServer | ForEach-Object {
						$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
						$hostNames = $null
						if ($_.Host) {
							$hostNames = @(Get-View -Id $_.Host -Property Name -Server $viServer | ForEach-Object {$_.Name})
						}
						$_ `
							| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $hostName -PassThru `
							| Add-Member -MemberType NoteProperty -Name VMCount -Value $_.Vm.Count -PassThru `
							| Add-Member -MemberType NoteProperty -Name HostCount -Value $_.Host.Count -PassThru `
							| Add-Member -MemberType NoteProperty -Name Hosts -Value $hostNames -PassThru
					}
				}
			}
		}
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[121]]></script>
                    </container>
                    <container name="VMCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HostCount" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Hosts" predefined="False">
                      <script><![CDATA[530]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Datastores" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="d89edf0a-d4be-4bd7-b72b-f407123d688c" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	$input | ForEach-Object {
		$hostName = $_.Name
		$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
		if ($_.Connected) {
			VMware.VimAutomation.Core\Get-Datastore -Server $viServer | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType NoteProperty -Name UsedSpaceMB -Value ($_.CapacityMB - $_.FreeSpaceMB) -PassThru `
					| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $_.Name -PassThru
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the clusters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <ChartPresetID>3f15125e-7563-4607-aba6-a7eb685ffaa0</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FreeSpaceMB" predefined="False">
                      <script><![CDATA[86]]></script>
                    </container>
                    <container name="CapacityMB" predefined="False">
                      <script><![CDATA[78]]></script>
                    </container>
                    <container name="Accessible" predefined="False">
                      <script><![CDATA[71]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[46]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Files" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="bdd29cd6-af37-4a8f-91f0-32200505f3ae" type="Action@" returntype="VMware.Vim.FileInfo#VMwarePowerPackExtension#@@@#VMware.Vim.FileInfo#@@@#VMware.Vim.DynamicData#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	$input | ForEach-Object {
		$hostName = $_.Name
		$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
		if ($_.Connected) {
			$connection = $_.Connection
			VMware.VimAutomation.Core\Get-Datastore -Server $viServer | ForEach-Object {
				function Get-DatastoreFiles {
					param(
						$DatastoreBrowser,
						$DatastoreName,
						$ParentPath = ''
					)
	
					trap {
						if ($_.Exception.MethodFault -is [VMware.Vim.FileNotFound]) {
							continue
						} elseif ($_.Exception.MethodFault -is [VMware.Vim.NoPermission]) {
							Write-Warning $_
							continue
						}
					}
	
					$folderSearchSpecification = New-Object VMware.Vim.HostDatastoreBrowserSearchSpec
					$folderSearchSpecification.details = New-Object VMware.Vim.FileQueryFlags
					$folderSearchSpecification.details.fileSize = $true
					$folderSearchSpecification.details.fileType = $true
					$folderSearchSpecification.details.modification = $true
					$folderSearchSpecification.query += New-Object VMware.Vim.FolderFileQuery
					$fileSearchSpecification = New-Object VMware.Vim.HostDatastoreBrowserSearchSpec
					$fileSearchSpecification.details = New-Object VMware.Vim.FileQueryFlags
					$fileSearchSpecification.details.fileSize = $true
					$fileSearchSpecification.details.fileType = $true
					$fileSearchSpecification.details.modification = $true
					$fileSearchSpecification.query += New-Object VMware.Vim.FileQuery
					$results = $DatastoreBrowser.SearchDatastore("[$DatastoreName]$ParentPath",$folderSearchSpecification)
					if ($? -and $results.File) {
						$results.File | ForEach-Object {
							Get-DatastoreFiles -DatastoreBrowser $DatastoreBrowser -DatastoreName $DatastoreName -ParentPath $(if ($ParentPath) {"$ParentPath\$($_.Path)"} else {$_.Path})
						}
					}
					$results = $DatastoreBrowser.SearchDatastore("[$DatastoreName]$ParentPath",$fileSearchSpecification)
					if ($? -and $results.File) {
						$results.File | ForEach-Object {
							$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VMwarePowerPackExtension")
							$_ `
								| Add-Member -MemberType NoteProperty -Name Name -Value $_.Path -PassThru `
								| Add-Member -MemberType NoteProperty -Name Folder -Value $ParentPath -PassThru `
								| Add-Member -MemberType NoteProperty -Name FullName -Value "[$DatastoreName]$(if ($ParentPath) {`"$ParentPath\$($_.Path)`"} else {$_.Path}))" -PassThru `
								| Add-Member -MemberType NoteProperty -Name Datastore -Value $DatastoreName -PassThru
						}
					}
				}
	
				$view = $_ | Get-View
				$datastoreBrowser = Get-View -Id $view.Browser -Server $viServer
				$datastoreName = $view.Info.Name
				Get-DatastoreFiles -DatastoreBrowser $datastoreBrowser -DatastoreName $datastoreName
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the clusters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="27dc7ab5-fbaf-403b-b2d8-1dd6aa659fcd">
                  <items>
                    <container name="Name" predefined="False" id="98dbbc34-cba5-4ac3-a2e4-64afa70b455a">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Folder" predefined="False" id="022a9eba-eac5-4da8-b11a-8ba204fbff74">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FullName" predefined="False" id="6f63179e-fed2-411d-b4ec-7f02dc767506">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Datastore" predefined="False" id="9034ba7c-dfb0-4caf-864c-9eaf13ff7820">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Path" predefined="False" id="0707366a-bc35-4724-9aee-a119eeb93e7f">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FileSize" predefined="False" id="79942220-3c46-4871-8e47-bd36e1b08637">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Modification" predefined="False" id="d09ad456-c671-41ca-8e8a-ee851749a4e6">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DynamicType" predefined="False" id="ecad8899-0edd-4482-b97b-0e2ef1fa3a58">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DynamicProperty" predefined="False" id="30c1e6c7-91d5-45e1-b62a-0cfcc30909e5">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Tasks" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="8491ed83-ddae-4662-ba60-c0baebc725a4" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Task.TaskImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	$input | ForEach-Object {
		$hostName = $_.Name
		$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
		if ($_.Connected) {
			VMware.VimAutomation.Core\Get-Task -Server $viServer
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the clusters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="State" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="% Complete" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Start Time" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Finish Time" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Log files" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="988599da-9244-409b-80d1-3e01f49e134b" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.LogDescriptorImpl#VMwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.LogDescriptorImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$noConnection = $true
if ($defaultVIServers) {
	$noConnection = $false
	$input | ForEach-Object {
		$hostName = $_.Name
		$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
		if ($_.Connected) {
			$managedHost = $_
			Get-VMHost -Server $viServer | ForEach-Object {
				Get-LogType -VMHost $(if ($viServer.ProductLine -eq "vpx") {$_} else {$null}) -Server $viServer `
					| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardMembers -PassThru `
					| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru `
					| Add-Member -MemberType NoteProperty -Name VMHost -Value $_.Name -PassThru `
					| Add-Member -MemberType ScriptProperty -Name Type -Value {$this.Info.Label} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name Description -Value {$this.Info.Summary} -PassThru `
					| ForEach-Object {
						$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VMwarePowerPackExtension")
						$_
					}
			}
		}
	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more Virtual Center servers before you can manage the clusters on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Virtual Center connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="VMHost" predefined="False">
                      <script><![CDATA[132]]></script>
                    </container>
                    <container name="Filename" predefined="False">
                      <script><![CDATA[170]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[135]]></script>
                    </container>
                    <container name="Description" predefined="False">
                      <script><![CDATA[217]]></script>
                    </container>
                    <container name="SourceEntityId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Virtual machines" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="8ca49da6-c8ba-447c-a8c7-44c62cdbe53c" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
$PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
$input | ForEach-Object {
	$managedHost = $_.ManagedHost
	$_.VM | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
			| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardVMMembers -PassThru `
			| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost -PassThru `
			| Add-Member -MemberType ScriptProperty -Name OperatingSystem -Value {$this.Guest.OSFullName} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name IPAddress -Value {$this.Guest.IPAddress} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name DNSName -Value {$this.Guest.HostName} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name 'Memory(MB)' -Value {$this.MemoryMB} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name CPUCount -Value {$this.NumCpu} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name HDDCount -Value {$this.HardDisks.Count} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name NICCount -Value {$this.NetworkAdapters.Count} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name ParentHost -Value {$this.Host.Name} -PassThru
	}
}]]></script>
              <ChartPresetID>32312a0a-ba0f-4409-8add-17fd08a2429f</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="e0c80d8a-77d4-4591-b083-6f840b0b48b6">
                  <items>
                    <container name="Name" predefined="False" id="99f8a077-ccbb-4722-aedf-7bea5d375c4f">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Description" predefined="False" id="b7d079e1-80b5-4ddf-ac29-17f450d18fb1">
                      <script><![CDATA[149]]></script>
                    </container>
                    <container name="OperatingSystem" predefined="False" id="2f9988d3-7bbb-44ab-8fd2-3393d70da357">
                      <script><![CDATA[308]]></script>
                    </container>
                    <container name="IPAddress" predefined="False" id="4c3298fc-54b9-4efe-8da6-3048568451c2">
                      <script><![CDATA[84]]></script>
                    </container>
                    <container name="DNSName" predefined="False" id="72771296-7c2c-428b-a60c-d4b6edff17ad">
                      <script><![CDATA[162]]></script>
                    </container>
                    <container name="PowerState" predefined="False" id="35f3d2ea-771e-4e13-88d4-78d7179e718a">
                      <script><![CDATA[91]]></script>
                    </container>
                    <container name="CPUCount" predefined="False" id="8becab7c-498a-432e-aee0-5b59430858d4">
                      <script><![CDATA[78]]></script>
                    </container>
                    <container name="Memory(MB)" predefined="False" id="545f2752-e7c4-4aad-bb4c-34ac78ba3f51">
                      <script><![CDATA[89]]></script>
                    </container>
                    <container name="HDDCount" predefined="False" id="465719ff-62b8-4091-8ec8-43529a0167a8">
                      <script><![CDATA[78]]></script>
                    </container>
                    <container name="NICCount" predefined="False" id="6b4b2b42-490a-427d-8d32-634b7cf843b3">
                      <script><![CDATA[70]]></script>
                    </container>
                    <container name="ParentHost" predefined="False" id="65260e80-9c19-4819-b7a8-da4eba250bcd">
                      <script><![CDATA[132]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Hard drives" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="d8510bbd-56c0-41e6-ba0f-103eefa8be01" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VM.Guest.DiskInfoImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_.Disks
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="3fa82288-b4c1-4ce7-b114-5bf56adcd9ed">
                  <items>
                    <container name="Path" predefined="False" id="8e97e5c6-189f-4743-9cf5-3ffd73971cf7">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Capacity" predefined="False" id="af950ba2-86bb-48c7-8ab3-76c02efbcbd9">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FreeSpace" predefined="False" id="7a7ffeb3-0642-4bef-a1f2-4266c648b631">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.Client20.VmGuestImpl</type>
              </Types>
            </container>
            <container name="Network adapters" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="62b73f7e-9a4c-42cb-a5cc-98bfcfe4de48" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VM.Guest.NicInfoImpl" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_.NICs
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False" id="d438c529-63f3-4b2c-ba6f-3296ee401f75">
                  <items>
                    <container name="Connected" predefined="False" id="c21cebf5-0942-4866-8e4a-2df691c88e4a">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Device" predefined="False" id="373e3886-636b-448b-8918-fa3a838d22ea">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="IPAddress" predefined="False" id="85b330fb-51f7-49c2-9136-28970f0b6d08">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MacAddress" predefined="False" id="23fb2e06-da1e-4ba9-8298-d479a2fe945c">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NetworkName" predefined="False" id="1ed683ec-ed54-45df-be57-47d9623e17c1">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.Client20.VmGuestImpl</type>
              </Types>
            </container>
            <container name="Find in Active Directory" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="f3aaa73b-d553-4017-ab35-672b29d7b2d9" type="Action@" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	if (($_.HostName) -ne $null) {
		Get-QADComputer -DNSName $_.HostName
	}
}]]></script>
              <Types>
                <type>VMware.VimAutomation.Client20.VmGuestImpl</type>
              </Types>
            </container>
            <container name="Log entries..." Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="aa464422-a8a5-43d5-b292-f9f25a1437dd" type="Action@" returntype="VMwareLogEntry" DisplayResults="NestedView">
              <script><![CDATA[$numLines = 0
switch (Read-Choice 'How many entries?' 'How many log entries would you like to retrieve from each of the selected logs?' '10','100','1000','All' 1) {
	0 { $numLines = 10 }
	1 { $numLines = 100 }
	2 { $numLines = 1000 }
	3 { $numLines = 0 }
}

$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('VMHost','FileName','Message'))
$PSStandardMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)

$processEntriesScriptBlock = {
	if (($_.Entries.Count -gt 1) -or (($_.Entries -eq 1) -and ($_.Entries[0] -ne 0))) {
		foreach ($item in $_.Entries) {
			$entry = New-Object -TypeName System.Management.Automation.PSObject
			$entry.PSObject.TypeNames.Clear()
			$entry.PSObject.TypeNames.Insert(0,'VMwareLogEntry')
			$entry `
				| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardMembers -PassThru `
				| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru `
				| Add-Member -MemberType NoteProperty -Name VMHost -Value $vmHost -PassThru `
				| Add-Member -MemberType NoteProperty -Name FileName -Value $filename -PassThru `
				| Add-Member -MemberType NoteProperty -Name Message -Value $item -PassThru
			
		}
	}
}

$input | ForEach-Object {
		$vmHost = Get-VMHost -Id $_.SourceEntityId
		$filename = $_.Filename
		$key = $_.Key
		if ($numLines) {
			Get-Log -VMHost $vmHost -Key $key -NumLines $numLines -Server $managedHost.Name | ForEach-Object -Process $processEntriesScriptBlock
		} else {
			Get-Log -VMHost $vmHost -Key $key -Server $managedHost.Name | ForEach-Object -Process $processEntriesScriptBlock
		}
	
} ]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="VMHost" predefined="False">
                      <script><![CDATA[142]]></script>
                    </container>
                    <container name="FileName" predefined="False">
                      <script><![CDATA[187]]></script>
                    </container>
                    <container name="Message" predefined="False">
                      <script><![CDATA[559]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.LogDescriptorImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Hosts" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="670d1c72-cfdf-4d20-b0cd-50c7eeef74bb" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$_.Host | ForEach-Object {
		Get-VMHost -Id "$($_.Type)-$($_.Value)" | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ 
		}
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[136]]></script>
                    </container>
                    <container name="State" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[149]]></script>
                    </container>
                    <container name="Build" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ConnectionState" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuTotalMhz" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuUsageMhz" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CustomFields" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HyperthreadingActive" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Manufacturer" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemoryTotalMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemoryUsageMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Model" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumCpu" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ParentId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="PowerState" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ProcessorType" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="TimeZone" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Version" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMSwapfileDatastoreId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMSwapfilePolicy" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.Vim.Network#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Virtual machines" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="6936dda6-9e68-4662-8317-b3f5001ff2ce" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" DisplayResults="NestedView">
              <script><![CDATA[$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
$PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)

$input | ForEach-Object {
	$_.Vm | ForEach-Object {
		Get-VM -Id "$($_.Type)-$($_.Value)" | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ `
				| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardVMMembers -PassThru `
				| Add-Member -MemberType ScriptProperty -Name OperatingSystem -Value {$this.Guest.OSFullName} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name IPAddress -Value {$this.Guest.IPAddress} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name DNSName -Value {$this.Guest.HostName} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name 'Memory(MB)' -Value {$this.MemoryMB} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name CPUCount -Value {$this.NumCpu} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name HDDCount -Value {$this.HardDisks.Count} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name NICCount -Value {$this.NetworkAdapters.Count} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name ParentHost -Value {$this.Host.Name} -PassThru
		}
	}
}]]></script>
              <ChartPresetID>32312a0a-ba0f-4409-8add-17fd08a2429f</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Description" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="OperatingSystem" predefined="False">
                      <script><![CDATA[308]]></script>
                    </container>
                    <container name="IPAddress" predefined="False">
                      <script><![CDATA[86]]></script>
                    </container>
                    <container name="DNSName" predefined="False">
                      <script><![CDATA[115]]></script>
                    </container>
                    <container name="PowerState" predefined="False">
                      <script><![CDATA[73]]></script>
                    </container>
                    <container name="Memory(MB)" predefined="False">
                      <script><![CDATA[86]]></script>
                    </container>
                    <container name="CPUCount" predefined="False">
                      <script><![CDATA[74]]></script>
                    </container>
                    <container name="HDDCount" predefined="False">
                      <script><![CDATA[73]]></script>
                    </container>
                    <container name="NICCount" predefined="False">
                      <script><![CDATA[70]]></script>
                    </container>
                    <container name="ParentHost" predefined="False">
                      <script><![CDATA[106]]></script>
                    </container>
                    <container name="CDDrives" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CustomFields" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DatastoreIdList" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DrsAutomationLevel" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FloppyDrives" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FolderId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Guest" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HAIsolationResponse" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HardDisks" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HARestartPriority" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Host" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="HostId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Id" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemoryMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NetworkAdapters" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Notes" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumCpu" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ResourcePoolId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="UsbDevices" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMHostId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMSwapfilePolicy" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.Vim.Network#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Virtual Machines" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="05bb7ed4-11e9-49a0-b590-9c1377b8fca8" type="Action@Link" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
   $managedHost = $_.Host
   $key = $_.key
   $vmh = $_.VMHost
   Get-VM -server $_.Host `
   | where { Get-VMHost -VM $_ | where {$_.Name -eq $vmh}} `
   | where {  $_ | Get-VirtualSwitch | where {$_.key -eq $key} } `
   | ForEach-Object {
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ `
				| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost -PassThru `
				| Add-Member -MemberType ScriptProperty -Name OperatingSystem -Value {$this.Guest.OSFullName} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name IPAddress -Value {$this.Guest.IPAddress} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name DNSName -Value {$this.Guest.HostName} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name 'Memory(MB)' -Value {$this.MemoryMB} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name CPUCount -Value {$this.NumCpu} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name HDDCount -Value {$this.HardDisks.Count} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name NICCount -Value {$this.NetworkAdapters.Count} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name ParentHost -Value {$this.Host.Name} -PassThru
   }
}]]></script>
              <ChartPresetID>32312a0a-ba0f-4409-8add-17fd08a2429f</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="PowerState" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ManagedHost" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.Vim.HostVirtualSwitch#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Physical Adapters" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="ebde3228-555a-4e0c-881b-8f634f0d607e" type="Action@Link" returntype="PhysicalNIC#VmwarePowerPackExtension#@@@#System.Management.Automation.PSCustomObject#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$hostIP = $_.Host
	$hostID = $_.ID
	$vmHost = Get-VMHost -Id $hostID -server $_.Host 
	$vSwitchKey = $_.key
	$vmh = $vmHost | Get-View
	$vSwitch = Get-VirtualSwitch -VMHost $vmHost | where {$_.key -eq $vSwitchKey }
	
	foreach ($Nic in $vSwitch.Nic){
		$vmh.Config.Network.Pnic | where {$_.device -eq $Nic} | ForEach-Object {
			$pNicDevId = $_.Pci
			$PCIDevice = $vmh.Hardware.PciDevice | Where-Object {$_.id -eq $pNicDevId}
			$Duplex = "Half"
			if ($_.LinkSpeed.Duplex -eq $True){$Duplex = "Full"}
			$LinkStatus = "Up"
			if ($_.LinkSpeed -eq $null){
				$LinkStatus = "Down"
				$Duplex = $null
			}
			$LinkConfig = "Auto Negotiate"
			if ($_.Spec.LinkSpeed -ne $null){
				$SpecDuplex = "Half"
				if ($_.Spec.LinkSpeed.Duplex -eq $True){$SpecDuplex = "Full"}
				$LinkConfig = "$($_.Spec.LinkSpeed.SpeedMb, $SpecDuplex)"
			}
			$pNic = New-Object PSObject
			$pNic.PSObject.TypeNames.Insert(0,"PhysicalNIC#VmwarePowerPackExtension")
			$pNic `
			| Add-Member -MemberType NoteProperty -Name VMHost -Value $vmh.Name -PassThru `
			| Add-Member -MemberType NoteProperty -Name Host -Value $hostIP -PassThru `
			| Add-Member -MemberType NoteProperty -Name HostID -Value $hostID -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Adapter/Device" -Value $_.Device -PassThru `
			| Add-Member -MemberType NoteProperty -Name LinkSpeed -Value $_.LinkSpeed.SpeedMb -PassThru `
			| Add-Member -MemberType NoteProperty -Name Duplex -Value $Duplex -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Hardware Vendor" -Value $PCIDevice.VendorName -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Hardware Model" -Value $PCIDevice.DeviceName -PassThru `
			| Add-Member -MemberType NoteProperty -Name Location -Value $_.Pci -PassThru `
			| Add-Member -MemberType NoteProperty -Name Driver -Value $_.Driver -PassThru `
			| Add-Member -MemberType NoteProperty -Name Status -Value $LinkStatus -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Wake On LAN" -Value $_.WakeOnLanSupported -PassThru `
			| Add-Member -MemberType NoteProperty -Name LinkConfig -Value $LinkConfig -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Virtual Switch" -Value $vSwitch.name -PassThru `
			| Add-Member -MemberType NoteProperty -Name MACAddress -Value $_.Mac -PassThru `
			| Add-Member -MemberType NoteProperty -Name key -Value $_.key -PassThru `
		}
	}
}#id="ebde3228-555a-4e0c-881b-8f634f0d607e" name="Physical Adapters" Description="" type="Action@Link"]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="VMHost" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Adapter/Device" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="LinkSpeed" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Duplex" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Hardware Vendor" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Hardware Model" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Location" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Driver" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Status" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Wake On LAN" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Virtual Switch" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MACAddress" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.Vim.HostVirtualSwitch#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Virtual Switches" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="26a93c72-44f3-4d01-8dd1-ab8c37c84b85" type="Action@Link" returntype="VMware.Vim.HostVirtualSwitch#VmwarePowerPackExtension#@@@#VMware.Vim.HostVirtualSwitch#@@@#VMware.Vim.DynamicData#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	#$hostName = $_.Host
	#$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
	#$hostIP = $managedHost.Name
	$vmHostID = $_.id 
	$vmHostName = $_.Name
	#$vmHost = Get-VMHost -Id $vmHostID -Server $_.Host
	#$vmh = $vmHost | Get-View
	$vmh = $_ | Get-View
	$vmh.Config.Network.Vswitch | ForEach-Object {
		$pNicKeys = $_.Pnic
		
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
			| Add-Member -MemberType NoteProperty -Name VMHost -Value $vmHostName -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Physical Adapters" -Value ([system.string]::Join(',',@($vmh.config.network.pnic | where {$pnicKeys -contains $_.key} | ForEach-Object {$_.Device}))) -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Physical Adapter Count" -Value $_.Pnic.Length -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Port Group Count" -Value $_.Portgroup.Length -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Port Count" -Value $_.NumPorts -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Ports Available" -Value $_.NumPortsAvailable -PassThru `
			| Add-Member -MemberType NoteProperty -Name ID -Value $vmHostID -PassThru 
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="VMHost" predefined="False">
                      <script><![CDATA[157]]></script>
                    </container>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Physical Adapters" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Physical Adapter Count" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Port Group Count" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Port Count" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Ports Available" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Mtu" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Port Groups" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="f12599e2-c585-4911-a0e4-d672b80041be" type="Action@Link" returntype="VMware.Vim.HostPortGroup#VMwarePowerPackExtension#@@@#VMware.Vim.HostPortGroup#@@@#VMware.Vim.DynamicData#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
   	$vmHostID = $_.id 
  	$vmHostName = $_.Name
	$vmh = $_ | Get-View
	$vmh.Config.Network.PortGroup | ForEach-Object {
      		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VMwarePowerPackExtension")
      		$_ `
         	| Add-Member -MemberType NoteProperty -Name VMHost -Value $vmHostName -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Name" -Value $_.spec.Name -PassThru `
        	| Add-Member -MemberType NoteProperty -Name "Virtual Switch" -Value $_.spec.VswitchName -PassThru `
         	| Add-Member -MemberType NoteProperty -Name "VLAN ID" -Value $_.spec.VLANID -PassThru `
			| Add-Member -MemberType NoteProperty -Name "VMHostID" -Value $vmHostID -PassThru 
    }
}
]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="VMHost" predefined="False">
                      <script><![CDATA[158]]></script>
                    </container>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Virtual Switch" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VLAN ID" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Physical Adapters" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="d41aa607-dde3-4e64-926d-15fc60148b7d" type="Action@Link" returntype="PhysicalNIC#VmwarePowerPackExtension#@@@#System.Management.Automation.PSCustomObject#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$hostID = $_.id
	$vmh = $_ | Get-View 
	$vmh.Config.Network.Pnic | ForEach-Object {
		$pNicDevId = $_.Pci
		$key = $_.key
		$PCIDevice = $vmh.Hardware.PciDevice | Where-Object {$_.id -eq $pNicDevId}
		$vSwitch = $vmh.Config.Network.Vswitch | Where-Object {$_.Pnic -contains $key}
		$Duplex = "Half"
		if ($_.LinkSpeed.Duplex -eq $True){$Duplex = "Full"}
		$LinkStatus = "Up"
		if ($_.LinkSpeed -eq $null){
			$LinkStatus = "Down"
			$Duplex = $null
		}
		$LinkConfig = "Auto Negotiate"
		if ($_.Spec.LinkSpeed -ne $null){
			$SpecDuplex = "Half"
			if ($_.Spec.LinkSpeed.Duplex -eq $True){$SpecDuplex = "Full"}
			$LinkConfig = "$($_.Spec.LinkSpeed.SpeedMb, $SpecDuplex)"
		}
		$pNic = New-Object PSObject
		$pNic.PSObject.TypeNames.Insert(0,"PhysicalNIC#VmwarePowerPackExtension")
		$pNic `
			| Add-Member -MemberType NoteProperty -Name VMHost -Value $vmh.Name -PassThru `
			| Add-Member -MemberType NoteProperty -Name HostID -Value $hostID -PassThru `
			| Add-Member -MemberType NoteProperty -Name Device -Value $_.Device -PassThru `
			| Add-Member -MemberType NoteProperty -Name LinkSpeed -Value $_.LinkSpeed.SpeedMb -PassThru `
			| Add-Member -MemberType NoteProperty -Name Duplex -Value $Duplex -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Hardware Vendor" -Value $PCIDevice.VendorName -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Hardware Model" -Value $PCIDevice.DeviceName -PassThru `
			| Add-Member -MemberType NoteProperty -Name Location -Value $_.Pci -PassThru `
			| Add-Member -MemberType NoteProperty -Name Driver -Value $_.Driver -PassThru `
			| Add-Member -MemberType NoteProperty -Name Status -Value $LinkStatus -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Wake On LAN" -Value $_.WakeOnLanSupported -PassThru `
			| Add-Member -MemberType NoteProperty -Name LinkConfig -Value $LinkConfig -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Virtual Switch" -Value $vSwitch.name -PassThru `
			| Add-Member -MemberType NoteProperty -Name MACAddress -Value $_.Mac -PassThru `
			| Add-Member -MemberType NoteProperty -Name key -Value $_.key -PassThru `
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="VMHost" predefined="False">
                      <script><![CDATA[159]]></script>
                    </container>
                    <container name="Device" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="LinkConfig" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="LinkSpeed" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Duplex" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Hardware Vendor" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Hardware Model" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Location" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Driver" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Status" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Wake On LAN" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Virtual Switch" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MACAddress" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Port Groups" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="e90e1066-da0a-4a3f-9a50-e5ed669506b4" type="Action@Link" returntype="VMware.Vim.HostPortGroup#VMwarePowerPackExtension#@@@#VMware.Vim.HostPortGroup#@@@#VMware.Vim.DynamicData#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
   	$managedHost = $_.Host
   	$vmHostID = $_.id 
	$key = $_.key
  	$vmHost = Get-VMHost -Id $vmHostID -Server $_.Host
	$vmh = $vmHost | Get-View
	$vmh.Config.Network.PortGroup  | where {$_.Vswitch -eq $key}| ForEach-Object {
      		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VMwarePowerPackExtension")
      		$_ `
			| Add-Member -MemberType NoteProperty -Name VMHost -Value $vmHost.Name -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Name" -Value $_.spec.Name -PassThru `
        	| Add-Member -MemberType NoteProperty -Name "Virtual Switch" -Value $_.spec.VswitchName -PassThru `
         	| Add-Member -MemberType NoteProperty -Name "VLAN ID" -Value $_.spec.VLANID -PassThru `
			| Add-Member -MemberType NoteProperty -Name VMHostID -Value $vmHostID -PassThru `
         	| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost -PassThru
    }
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Virtual Switch" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VLAN ID" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Host" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMHost" predefined="False">
                      <script><![CDATA[228]]></script>
                    </container>
                    <container name="VMHostID" predefined="False">
                      <script><![CDATA[305]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.Vim.HostVirtualSwitch#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Security policy" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="285d49a3-2369-4547-8cde-9addbc965173" type="Action@Link" returntype="VMware.Vim.HostNetworkSecurityPolicy#VmwarePowerPackExtension#@@@#VMware.Vim.HostNetworkSecurityPolicy#@@@#VMware.Vim.DynamicData#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
   $vsName = $_.Name
   $VMHost = $_.VMHost
   $_.Spec.Policy.Security | foreach-object {
   		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
   			| Add-Member -MemberType NoteProperty -Name "Virtual Switch" -Value $vsName -PassThru `
   			| Add-Member -MemberType NoteProperty -Name "VMHost" -Value $VMHost -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Promiscuous Mode" -Value $_.AllowPromiscuous -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Mac Address Changes" -Value $_.MacChanges -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Forged Transmits" -Value $_.ForgedTransmits -PassThru 
			
   }
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="VMHost" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Virtual Switch" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Promiscuous Mode" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Mac Address Changes" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Forged Transmits" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="AllowPromiscuous" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MacChanges" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="ForgedTransmits" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.Vim.HostVirtualSwitch#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Traffic shaping policy" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="7aa0d88e-2662-4a15-b05c-3344de77570a" type="Action@Link" returntype="VMware.Vim.HostNetworkTrafficShapingPolicy#VmwarePowerPackExtension#@@@#VMware.Vim.HostNetworkTrafficShapingPolicy#@@@#VMware.Vim.DynamicData#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
   $vsName = $_.Name
   $VMHost = $_.VMHost
   $_.Spec.Policy.ShapingPolicy | foreach-object {
   		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
   			| Add-Member -MemberType NoteProperty -Name "Virtual Switch" -Value $vsName -PassThru `
			| Add-Member -MemberType NoteProperty -Name "VMHost" -Value $VMHost -PassThru `
			| Add-Member -MemberType ScriptProperty -Name "Status" -Value {if ($_.Enabled -eq $true) {"Enabled"} else {"Not Enabled"}} -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Average Bandwidth" -Value $_.AverageBandwidth  -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Peak Bandwidth" -Value $_.PeakBandwidth -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Burst Size" -Value $_.BurstSize -PassThru 
   }
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="VMHost" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Virtual Switch" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Status" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Average Bandwidth" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Peak Bandwidth" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Burst Size" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Enabled" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="AverageBandwidth" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="PeakBandwidth" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="BurstSize" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.Vim.HostVirtualSwitch#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Teaming policy" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="8dbae24c-07b7-4cbf-808f-2aaaad406f71" type="Action@Link" returntype="VMware.Vim.HostNicTeamingPolicy#VmwarePowerPackExtension#@@@#VMware.Vim.HostNicTeamingPolicy#@@@#VMware.Vim.DynamicData#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
   $vsName = $_.Name
   $VMHost = $_.VMHost
   $_.Spec.Policy.NicTeaming | foreach-object {
   		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
   			| Add-Member -MemberType NoteProperty -Name "Virtual Switch" -Value $vsName -PassThru `
			| Add-Member -MemberType NoteProperty -Name "VMHost" -Value $VMHost -PassThru `
   			| Add-Member -MemberType NoteProperty -Name "Port Group" -Value $pgName -PassThru `
			| Add-Member -MemberType ScriptProperty -Name "Load Balancing Method" -Value  {switch ($markPolicy.Policy) { {$_ -eq "loadbalance_ip"} { "Route based on ip hash";break} {$_ -eq "loadbalance_srcmac"}{"Route based on source MAC hash";break;} {$_ -eq "loadbalance_srcid"}{"Route based on the originating virtual port id";break;} {$_ -eq "failover_explicit"}{"Use explicit failover order";break;}  }} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name "Failver Detection" -Value {if ($this.FailureCriteria.CheckBeacon) { "Beacon Probing" } else { "Link Status Only" }} -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Notify Switches" -Value $_.NotifySwitches -PassThru `
			| Add-Member -MemberType ScriptProperty -Name "Failback" -Value {if ($this.RollingOrder) { "No" } else { "Yes" }} -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Active Adapters" -Value $_.NicOrder.ActiveNic -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Standby Adapters" -Value $_.NicOrder.StandbyNic -PassThru `
   }
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="VMHost" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Virtual Switch" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Load Balancing Method" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Failver Detection" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Notify Switches" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Failback" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Active Adapters" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Standby Adapters" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.Vim.HostVirtualSwitch#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Virtual Machines" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="ebb9b155-4a99-4aab-9bd3-d5902963d0f8" type="Action@Link" returntype="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#@@@#VMware.VimAutomation.ViCore.Impl.V1.Inventory.InventoryItemImpl#@@@#VMware.VimAutomation.Client20.ManagedObjectBaseImpl#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
   $key = $_.key
   $HostID = $_.VMHostID
   Get-VM -server $_.Host `
   | where { Get-VMHost -VM $_ | where {$_.ID -eq $hostID}} `
   | where {  $_ | Get-VirtualPortGroup | where {$_.key -eq $key} } `
   | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ `
				| Add-Member -MemberType ScriptProperty -Name OperatingSystem -Value {$this.Guest.OSFullName} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name IPAddress -Value {$this.Guest.IPAddress} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name DNSName -Value {$this.Guest.HostName} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name 'Memory(MB)' -Value {$this.MemoryMB} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name CPUCount -Value {$this.NumCpu} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name HDDCount -Value {$this.HardDisks.Count} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name NICCount -Value {$this.NetworkAdapters.Count} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name ParentHost -Value {$this.Host.Name} -PassThru
   }
}]]></script>
              <ChartPresetID>32312a0a-ba0f-4409-8add-17fd08a2429f</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="PowerState" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Num CPUs" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Memory (MB)" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.Vim.HostPortGroup#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Security policy" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="3450a637-5108-49c0-9b41-a9b4b657a0e1" type="Action@Link" returntype="VMware.Vim.HostNetworkSecurityPolicy#VmwarePowerPackExtension#@@@#VMware.Vim.HostNetworkSecurityPolicy#@@@#VMware.Vim.DynamicData#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {

   $pgName = $_.Name
   $_.ComputedPolicy.Security | foreach-object {
  		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
   			| Add-Member -MemberType NoteProperty -Name "Port Group" -Value $pgName -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Promiscuous Mode" -Value $_.AllowPromiscuous -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Mac Address Changes" -Value $_.MacChanges -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Forged Transmits" -Value $_.ForgedTransmits -PassThru 
   }
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Port Group" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Promiscuous Mode" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Mac Address Changes" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Forged Transmits" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.Vim.HostPortGroup#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Traffic shaping policy" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="83c9ecfa-be1d-48fe-8fc6-cfd629f40057" type="Action@Link" returntype="VMware.Vim.HostNetworkTrafficShapingPolicy#VmwarePowerPackExtension#@@@#VMware.Vim.HostNetworkTrafficShapingPolicy#@@@#VMware.Vim.DynamicData#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
   $pgName = $_.Name
   $_.ComputedPolicy.ShapingPolicy | foreach-object {
   		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
   			| Add-Member -MemberType NoteProperty -Name "Port Group" -Value $pgName -PassThru `
			| Add-Member -MemberType ScriptProperty -Name "Status" -Value {if ($_.Enabled -eq $true) {"Enabled"} else {"Not Enabled"}} -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Average Bandwidth" -Value $_.AverageBandwidth  -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Peak Bandwidth" -Value $_.PeakBandwidth -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Burst Size" -Value $_.BurstSize -PassThru 
   }
}
]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Port Group" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Status" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Average Bandwidth" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Peak Bandwidth" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Burst Size" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.Vim.HostPortGroup#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Teaming policy" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="dc36387f-5af5-4c74-b71f-82784853e702" type="Action@Link" returntype="VMware.Vim.HostNicTeamingPolicy#VmwarePowerPackExtension#@@@#VMware.Vim.HostNicTeamingPolicy#@@@#VMware.Vim.DynamicData#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
   $pgName = $_.Name
   $_.ComputedPolicy.NicTeaming | foreach-object {
   		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
   			| Add-Member -MemberType NoteProperty -Name "Port Group" -Value $pgName -PassThru `
			| Add-Member -MemberType ScriptProperty -Name "Load Balancing Method" -Value  {switch ($markPolicy.Policy) { {$_ -eq "loadbalance_ip"} { "Route based on ip hash";break} {$_ -eq "loadbalance_srcmac"}{"Route based on source MAC hash";break;} {$_ -eq "loadbalance_srcid"}{"Route based on the originating virtual port id";break;} {$_ -eq "failover_explicit"}{"Use explicit failover order";break;}  }} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name "Failver Detection" -Value {if ($this.FailureCriteria.CheckBeacon) { "Beacon Probing" } else { "Link Status Only" }} -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Notify Switches" -Value $_.NotifySwitches -PassThru `
			| Add-Member -MemberType ScriptProperty -Name "Failback" -Value {if ($this.RollingOrder) { "No" } else { "Yes" }} -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Active Adapters" -Value $_.NicOrder.ActiveNic -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Standby Adapters" -Value $_.NicOrder.StandbyNic -PassThru `
   }
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Port Group" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Load Balancing Method" predefined="False">
                      <script><![CDATA[140]]></script>
                    </container>
                    <container name="Failver Detection" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Notify Switches" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Failback" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Active Adapters" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Standby Adapters" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.Vim.HostPortGroup#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Virtual Switches" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="27bdd8fe-2b31-4d34-9724-293ce1a56deb" type="Action@" returntype="VMware.Vim.HostVirtualSwitch#VmwarePowerPackExtension#@@@#VMware.Vim.HostVirtualSwitch#@@@#VMware.Vim.DynamicData#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$hostID = $_.HostID
	$vmHost = Get-VMHost -Name $_.VMHost 
	$vmh = $vmHost | Get-View
	$key = $_.key
	$vmh.Config.Network.Vswitch  | Where-Object {$_.Pnic -contains $key} | ForEach-Object {
		$pNicKeys = $_.Pnic
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
			| Add-Member -MemberType NoteProperty -Name VMHost -Value $vmHost.Name -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Physical Adapters" -Value ([system.string]::Join(',',@($vmh.config.network.pnic | where {$pnicKeys -contains $_.key} | ForEach-Object {$_.Device}))) -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Physical Adapter Count" -Value $_.Pnic.Length -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Port Group Count" -Value $_.Portgroup.Length -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Port Count" -Value $_.NumPorts -PassThru `
			| Add-Member -MemberType NoteProperty -Name "Ports Available" -Value $_.NumPortsAvailable -PassThru `
			| Add-Member -MemberType NoteProperty -Name ID -Value $HostID -PassThru 
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMHost" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Physical Adapters" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Physical Adapter Count" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Port Group Count" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Port Count" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Ports Available" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Mtu" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>PhysicalNIC#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Custom Attributes" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="502be073-4e49-4d03-89ff-42ab8c7c12e9" type="Action@" returntype="customAttribute#VmwarePowerPackExtension#@@@#System.Management.Automation.PSCustomObject#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$DCName = $_.Name
	$DCID = $_.ID
	foreach ($viServer in $defaultVIServers) {
		if (Get-Datacenter -Server $viServer -Name $DCName -Id $DCID) {
			break
		}
	}
	$customFieldMgr = Get-View -Server $viServer (Get-View -Server $viServer ServiceInstance).Content.CustomFieldsManager
	$name = $_.Name
	$customFields = $_.CustomFields
	$customFields.Keys | ForEach-Object {
		$type = "Global"
		$name = $_
		
		$customFieldMgr.Field | where { $name -eq $_.Name} | foreach-object {
			if ($_.ManagedObjectType) {$type = $_.ManagedObjectType}
		}
		
    	$customAttrib = New-Object psobject
		$customAttrib.PSObject.TypeNames.Insert(0,"customAttribute#VmwarePowerPackExtension")
		$customAttrib | Add-Member -MemberType noteproperty -Name Name -Value $_ 
		$customAttrib | Add-Member -MemberType noteproperty -Name Type -Value $type
		$customAttrib | Add-Member -MemberType noteproperty -Name Value -Value $customFields[$_]
		$customAttrib | Add-Member -MemberType noteproperty -Name "Parent Object" -Value $dcName 
		$customAttrib | Add-Member -MemberType noteproperty -Name "Parent Type" -Value "Datacenter" 
		$customAttrib | Add-Member -MemberType NoteProperty -Name Host -Value $managedHost
		$customAttrib
	}
}
]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Value" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[72]]></script>
                    </container>
                    <container name="Parent Object" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Parent Type" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Custom Attributes Manager" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="c3697353-9fa1-4ec7-ad30-1f350e49eb2a" type="Action@" returntype="customField#VmwarePowerPackExtension#@@@#System.Management.Automation.PSCustomObject#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[
$noConnection = $true
if ($defaultVIServers) {
	$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
	$PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
	foreach ($managedHost in $defaultVIServers) {
		$noConnection = $false
		$customFieldMgr = Get-View -Server $managedHost.Name (Get-View -Server $managedHost.Name ServiceInstance).Content.CustomFieldsManager
		$customFieldMgr.Field | foreach-object {
			$type = "Global"
			if ($_.ManagedObjectType) {$type = $_.ManagedObjectType}
			$customField = New-Object psobject
			$customField.PSObject.TypeNames.Insert(0,"customField#VmwarePowerPackExtension")
			$customField `
			| Add-Member -MemberType NoteProperty -Name Key -Value $_.Key -PassThru `
			| Add-Member -MemberType NoteProperty -Name Name -Value $_.Name -PassThru `
			| Add-Member -MemberType NoteProperty -Name Type -Value $type -PassThru
		}

	}
}
if ($noConnection) {
	[System.Windows.Forms.MessageBox]::Show('You must connect to one or more hosts before you can manage the virtual machines on those servers. Please click on the ''Managed Hosts'' node, connect to one or more of the servers you have configured there, and then try again.','Connection not established',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[214]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Key" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>customAttribute#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Custom Attributes" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="44c34e86-ec65-4ded-9db6-b2dc42bb7bcf" type="Action@" returntype="customAttribute#VmwarePowerPackExtension#@@@#System.Management.Automation.PSCustomObject#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$hostName = $_.Name
	$hostID = $_.ID
	foreach ($viServer in $defaultVIServers) {
		if (Get-VMHost -Server $viServer -Name $hostName -Id $hostID) {
			break
		}
	}
	$customFieldMgr = Get-View -Server $viServer (Get-View -Server $viServer ServiceInstance).Content.CustomFieldsManager

	$customFields = $_.CustomFields
	$customFields.Keys | ForEach-Object {
		$type = "Global"
		$name = $_
		
		$customFieldMgr.Field | where { $name -eq $_.Name} | foreach-object {
			if ($_.ManagedObjectType) {$type = $_.ManagedObjectType}
		}
		
    	$customAttrib = New-Object psobject
		$customAttrib.PSObject.TypeNames.Insert(0,"customAttribute#VmwarePowerPackExtension")
		$customAttrib | Add-Member -MemberType noteproperty -Name Name -Value $_ 
		$customAttrib | Add-Member -MemberType noteproperty -Name Type -Value $type
		$customAttrib | Add-Member -MemberType noteproperty -Name Value -Value $customFields[$_]
		$customAttrib | Add-Member -MemberType noteproperty -Name "Parent Object" -Value $hostName 
		$customAttrib | Add-Member -MemberType noteproperty -Name "Parent Type" -Value "Host" 
		$customAttrib | Add-Member -MemberType NoteProperty -Name Host -Value $managedHost
		$customAttrib
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Value" predefined="False">
                      <script><![CDATA[150]]></script>
                    </container>
                    <container name="Parent Object" predefined="False">
                      <script><![CDATA[120]]></script>
                    </container>
                    <container name="Parent Type" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Host" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Custom attributes" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="18f1871a-90a3-4a27-a9b7-7ff59109a530" type="Action@" returntype="customAttribute#VmwarePowerPackExtension#@@@#System.Management.Automation.PSCustomObject#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$vmName = $_.name
	foreach ($viServer in $defaultVIServers) {
		$vm1 = Get-VM -Id $_.Id -Name $_.Name -Server $viServer
		if ($vm1) {
			$break
		}
	}	
	$customFieldMgr = Get-View -Server $viServer (Get-View -Server $viServer ServiceInstance).Content.CustomFieldsManager
	$vm = $_
	$customFields = $vm.CustomFields
	$customFields.Keys | ForEach-Object {
		$type = "Global"
		$name = $_
		
		$customFieldMgr.Field | where { $name -eq $_.Name} | foreach-object {
			if ($_.ManagedObjectType) {$type = $_.ManagedObjectType}
		}
		
    	$customAttrib = New-Object psobject
		$customAttrib.PSObject.TypeNames.Insert(0,"customAttribute#VmwarePowerPackExtension")
		$customAttrib | Add-Member -MemberType noteproperty -Name Name -Value $_ 
		$customAttrib | Add-Member -MemberType noteproperty -Name Type -Value $type
		$customAttrib | Add-Member -MemberType noteproperty -Name Value -Value $customFields[$_]
		$customAttrib | Add-Member -MemberType noteproperty -Name "Parent Object" -Value $vmName 
		$customAttrib | Add-Member -MemberType noteproperty -Name "Parent Type" -Value "Virtual Machine" 
		$customAttrib
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Type" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Value" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Parent Object" predefined="False">
                      <script><![CDATA[130]]></script>
                    </container>
                    <container name="Parent Type" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Host" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Resource configurations" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="90e5223e-ceb4-416c-9bed-d213d5a6fd39" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VM.VMResourceConfigurationImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.VM.VMResourceConfigurationImpl#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$vmName = $_.name
	trap {
		Write-Warning "VM $vmName Ecnountered and Error: $_"
		continue
	}
	$_ | Get-VMResourceConfiguration | ForEach-Object{
		$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
		$_ `
			| Add-Member -MemberType NoteProperty -Name VMName -Value $vmName -PassThru `
			| Add-Member -MemberType scriptProperty -Name "CPULimit(Mhz)" -Value {if ($this.CpuLimitMhz -eq -1) {"Unlimited"} else {$this.CpuLimitMhz}} -PassThru `
			| Add-Member -MemberType scriptProperty -Name "MemLimit(MB)" -Value {if ($this.MemLimitMB -eq -1) {"Unlimited"} else {$this.MemLimitMB}} -PassThru 
	}
}]]></script>
              <ChartPresetID>a87a5231-89f9-4920-8728-3fa78fc95224</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="VMName" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CPULimit(Mhz)" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemLimit(MB)" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VirtualMachineId" predefined="False">
                      <script><![CDATA[129]]></script>
                    </container>
                    <container name="NumCpuShares" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuReservationMhz" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuSharesLevel" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="NumMemShares" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemReservationMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemSharesLevel" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="DiskResourceConfiguration" predefined="False">
                      <script><![CDATA[671]]></script>
                    </container>
                    <container name="HTCoreSharing" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuAffinity" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="CpuLimitMhz" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="MemLimitMB" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="VMId" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Group by operating system" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="1ae24039-c19e-43bc-8837-3831ffc57218" type="Action@" returntype="OSGrouping#VmwarePowerPackExtension#@@@#Microsoft.PowerShell.Commands.GroupInfo#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | Group-Object -Property OperatingSystem | ForEach-Object {
	$_.PSObject.TypeNames.Insert(0,"OSGrouping#VmwarePowerPackExtension")
	$_
}]]></script>
              <ChartPresetID>d869eed0-3429-4ae7-be0e-43336c6fb37a</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[361]]></script>
                    </container>
                    <container name="Count" predefined="False">
                      <script><![CDATA[59]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Group by power state" Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb,5fd595f1-be24-437d-bd63-f820393d32dd" id="e5c12737-955a-41f9-9eca-c0cde98ed5d5" type="Action@" returntype="PowerStateGrouping#VmwarePowerPackExtension#@@@#Microsoft.PowerShell.Commands.GroupInfo#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | Group-Object -Property PowerState | ForEach-Object {
	$_.PSObject.TypeNames.Insert(0,"PowerStateGrouping#VmwarePowerPackExtension")
	$_
}]]></script>
              <ChartPresetID>3dc2d51c-c0fb-47f1-967b-d773996b384d</ChartPresetID>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="Name" predefined="False">
                      <script><![CDATA[132]]></script>
                    </container>
                    <container name="Count" predefined="False">
                      <script><![CDATA[60]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Powered on Windows VM util." Description="" predefined="False" ResultView="6daa7380-b4f9-422e-a7b7-1a86193e14eb" id="7286cca0-fcc4-41c4-a3c2-afb8454bf631" type="Action@" returntype="VMware.VimAutomation.ViCore.Impl.V1.VM.Guest.DiskInfoImpl#VmwarePowerPackExtension#@@@#VMware.VimAutomation.ViCore.Impl.V1.VM.Guest.DiskInfoImpl#@@@#System.Object" RequireSelection="Yes" DisplayResults="NestedView">
              <script><![CDATA[$input | ForEach-Object {
	$managedHost = $_.VirtualCenter
	Get-VM -Server $managedHost | where {($_.PowerState -eq "PoweredOn") -and ($_.Guest.OSFullName -match "Windows")} | Get-VMGuest | ForEach-Object {
		$vmName = $_.VmName
		$_.Disks | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ `
				| Add-Member -MemberType NoteProperty -Name VirtualMachine -Value $vmName -PassThru `
				| Add-Member -MemberType NoteProperty -Name UsedSpace -Value ($_.Capacity - $_.FreeSpace) -PassThru `
				| Add-Member -MemberType NoteProperty -Name "Free%" -Value ([Math]::Round((($_.FreeSpace / $_.Capacity)*100),0)) -PassThru 
		}
	}
}]]></script>
              <items>
                <container name="properties_a807f902-4b43-4b22-86d8-724abc4c3d4a" predefined="False">
                  <items>
                    <container name="VirtualMachine" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Path" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Capacity" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="UsedSpace" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="FreeSpace" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                    <container name="Free%" predefined="False">
                      <script><![CDATA[100]]></script>
                    </container>
                  </items>
                </container>
              </items>
              <Types>
                <type>WasteFinder#VmwarePowerPackExtension</type>
              </Types>
            </container>
          </items>
        </container>
        <container name="Actions" predefined="False" id="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece">
          <items>
            <container name="Add property..." Description="" predefined="False" id="2fa54311-1aeb-424c-82cd-3bf8d579aed0" type="Action@" RequireSelection="Yes" DisplayResults="Refresh">
              <script><![CDATA[
[string[]]$objectTypeNames = @("HostSystem", "VirtualMachine" )

$objectTypeNamesEnum = New-Enum -Name "objectTypeNamesEnum" -Values $objectTypeNames

$fieldDescriptions = @(
			(New-FieldDescription -Name 'Hosts' -HelpMessage 'The hosts on which to create the custom attribute.' -Type 'System.String[]' -DefaultValue $defaultVIServers -IsMandatory $true)
			(New-FieldDescription -Name 'Name' -HelpMessage 'The name of the custom attribute.' -Type 'System.String' -DefaultValue "" -IsMandatory $true)
			(New-FieldDescription -Name 'Type' -HelpMessage 'The type of the custom attribute.' -Type $managedObjectTypeNamesEnum -DefaultValue $managedObjectTypeNamesEnum -IsMandatory $true)
		)
		
$result = Read-Input -Caption "Create Custom Attribute" -Message "Please choose the name of the attribute, the managed object type to which this attribute will apply and the hosts on which to create the custom attribute." -FieldDescription $FieldDescriptions


foreach ($managedHost in $result.Hosts) {
		$customFieldMgr = Get-View -Server $managedHost (Get-View -Server $managedHost ServiceInstance).Content.CustomFieldsManager
		
		if ($result.Type -eq "Global"){
			$customFieldMgr.AddCustomFieldDef($result.Name,$null, $null, $null)
		}
		else {
			$customFieldMgr.AddCustomFieldDef($result.Name, $result.Type,$null,$null)
		}
}]]></script>
              <Types>
                <type>customField#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Removed VMware PowerPack Action (Refresh,VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl,Remove-Snapshot,New-Snapshot)" predefined="False" id="af671125-bf7d-417d-886a-d911d5b217f7" type="Action@" DisplayResults="Refresh">
              <script><![CDATA["This item from previous version has been removed"]]></script>
              <Types>
                <type>AdminConsole.Internal.Removed.Item</type>
              </Types>
            </container>
            <container name="Removed VMware PowerPack Action (New Folder,VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl,New-Folder)" predefined="False" id="766a6a93-9dad-4ed6-bb95-f163327a6b2e" type="Action@" DisplayResults="Refresh">
              <script><![CDATA["This item from previous version has been removed"]]></script>
              <Types>
                <type>AdminConsole.Internal.Removed.Item</type>
              </Types>
            </container>
            <container name="Removed VMware PowerPack Action (Move,VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl,Move-Datacenter)" predefined="False" id="5e3e3cd6-6806-41ca-a305-b4d8fa027585" type="Action@" DisplayResults="Refresh">
              <script><![CDATA["This item from previous version has been removed"]]></script>
              <Types>
                <type>AdminConsole.Internal.Removed.Item</type>
              </Types>
            </container>
            <container name="Removed VMware PowerPack Deprecated Action" predefined="False" id="3657eaca-ef56-4974-843d-4060fc8af378" type="Action@" DisplayResults="Refresh">
              <script><![CDATA["This item from previous version has been removed"]]></script>
              <Types>
                <type>AdminConsole.Internal.Removed.Item</type>
              </Types>
            </container>
            <container name="Removed VMware PowerPack Deprecated Action" predefined="False" id="7534b418-1386-4e55-86be-e0ca6f5fffb3" type="Action@" DisplayResults="Refresh">
              <script><![CDATA["This item from previous version has been removed"]]></script>
              <Types>
                <type>AdminConsole.Internal.Removed.Item</type>
              </Types>
            </container>
            <container name="Removed VMware PowerPack Deprecated Action (Export to vControl)" predefined="False" id="bbdbb28c-43ae-45d1-be01-3ad5bcf37d61" type="Action@" DisplayResults="Refresh">
              <script><![CDATA["This item from previous version has been removed"]]></script>
              <Types>
                <type>AdminConsole.Internal.Removed.Item</type>
              </Types>
            </container>
            <container name="New virtual machine..." Description="" predefined="False" id="0621a3d7-780b-4847-ac03-9d11bc28ae9b" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param (
	[String]$Name = 'New VM',
	[String]$HostName,
	[Int32]$MemoryMB = 256,
	[Int32]$DiskMB = 1024,
	$GuestID,
	$Pool,
	$Folder,
	[String[]]$ParentHost
)

foreach ($managedHost in $ParentHost) {

	$viServer = $DefaultVIServers | where {$_.Name -eq $managedHost}
	if ($viServer) {
		Get-VMHost -Name $HostName -Server $viServer `
			| New-VM -Name $Name -MemoryMB $MemoryMB -DiskMB $DiskMB -GuestId $GuestID -ResourcePool $(if ($Pool) {Get-ResourcePool $Pool -Server $viServer} else {$null}) -Location $(if ($Folder) {Get-Folder $Folder -Server $viServer} else {$null}) -RunAsync
	}
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Modify..." predefined="False" id="18f4c17e-8270-4796-8e76-ab332c7ffda9" type="Action@" DisplayResults="Refresh">
              <command name="Set-VM" notprompted="false">
                <parameters>
                  <parameter name="MemoryMB" type="System.Int64" prompted="True" />
                  <parameter name="NumCpu" type="System.Int32" prompted="True" />
                  <parameter name="GuestId" type="System.String" prompted="True" />
                  <parameter name="AlternateGuestName" type="System.String" prompted="True" />
                  <parameter name="OSCustomizationSpec" type="VMware.VimAutomation.ViCore.Types.V1.OSCustomization.OSCustomizationSpec" prompted="True" />
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="Description" type="System.String" prompted="True" />
                  <parameter name="Snapshot" type="VMware.VimAutomation.ViCore.Types.V1.VM.Snapshot" prompted="True" />
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Rename..." predefined="False" id="b6c64d6a-d080-484a-81d1-a79d7b72b661" type="Action@" DisplayResults="Refresh">
              <command name="Set-VM" notprompted="false">
                <parameters>
                  <parameter name="Name" type="System.String" prompted="True" />
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="VMotion..." Description="" predefined="False" id="26da9b51-20d8-47e9-a30a-8e3d3d327078" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param (
	[String]$DestinationHost
)
$input | ForEach-Object {
	if ($vMotionTarget = Get-VMHost -Name $DestinationHost) {
		$_ | Move-VM -Destination $vMotionTarget
	}
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Apply prefix or suffix to name..." predefined="False" id="c1afea5c-fc1d-4140-9507-062fc76bde12" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param(
	[string]$Prefix,
	[string]$Suffix
)
$input | ForEach-Object {$_ | Set-VM -Name "$Prefix$($_.Name)$Suffix" -RunAsync}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Add new hard disk..." predefined="False" id="cde2f713-6201-4f38-a9dd-d3cda07cde75" type="Action@" DisplayResults="Refresh">
              <command name="New-HardDisk" notprompted="false">
                <parameters>
                  <parameter name="Persistence" type="System.String" prompted="True" />
                  <parameter name="DiskType" type="VMware.VimAutomation.ViCore.Types.V1.VirtualDevice.DiskType" prompted="True" />
                  <parameter name="CapacityKB" type="System.Int64" prompted="True" />
                  <parameter name="Split" type="System.Management.Automation.SwitchParameter" prompted="True">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                  <parameter name="ThinProvisioned" type="System.Management.Automation.SwitchParameter" prompted="True">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                  <parameter name="DeviceName" type="System.String" prompted="True" />
                  <parameter name="Datastore" type="VMware.VimAutomation.ViCore.Types.V1.DatastoreManagement.Datastore" prompted="True" />
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Add new CD drive..." predefined="False" id="f216f8ed-6db3-476d-9663-2c1feec4b7af" type="Action@" DisplayResults="Refresh">
              <command name="New-CDDrive" notprompted="false">
                <parameters>
                  <parameter name="IsoPath" type="System.String" prompted="True" />
                  <parameter name="HostDevice" type="System.String" prompted="True" />
                  <parameter name="StartConnected" type="System.Management.Automation.SwitchParameter" prompted="True">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Add new floppy drive..." predefined="False" id="c6a307a3-35f0-4221-b322-b1c6fc0e7ebc" type="Action@" DisplayResults="Refresh">
              <command name="New-FloppyDrive" notprompted="false">
                <parameters>
                  <parameter name="FloppyImagePath" type="System.String" prompted="True" />
                  <parameter name="HostDevice" type="System.String" prompted="True" />
                  <parameter name="StartConnected" type="System.Management.Automation.SwitchParameter" prompted="True">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Create snapshot..." predefined="False" id="b347864c-93e8-4243-9f23-a62828cac53b" type="Action@" DisplayResults="Refresh">
              <command name="New-Snapshot" notprompted="false">
                <parameters>
                  <parameter name="Name" type="System.String" prompted="True" />
                  <parameter name="Description" type="System.String" prompted="True" />
                  <parameter name="Memory" type="System.Management.Automation.SwitchParameter" prompted="True">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                  <parameter name="Quiesce" type="System.Management.Automation.SwitchParameter" prompted="True">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Launch remote desktop session..." predefined="False" id="37ec20ea-0243-4cdc-8c6c-b3f144df65fa" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param (
	[UInt16]$Width = 1024,
	[UInt16]$Height = 768
)

$input | ForEach-Object {
	if ($_.Guest.OSFullName -match 'Windows') {
  		Invoke-Expression "mstsc /v:$($_.Guest.IPAddress) /w:$Width /h:$Height"
	}
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Generate vReport" Description="" predefined="False" id="a276c974-5867-4010-9f4f-9d589dfaa0b0" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$selectedItemGroups = @($Input `
	| Sort-Object -Property Name `
	| ForEach-Object {
		if (($_.PSObject.TypeNames[0] -eq 'ManagedVMwareHost') -and (-not (Test-VMwareManagementServer -ManagedHost $_))) {
			$managedHost = $_
			Get-VMHost -Server $managedHost.Connection | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru
			}
		} else {
			$_
		}
	} `
	| Group-Object -Property {if ($_ -eq $null) {'Null'} elseif ($_.PSObject.TypeNames[0] -eq 'ManagedVMwareHost') {'ManagedVMwareHost'} else {$_.GetType().FullName}})

foreach ($group in $selectedItemGroups) {
	$selectedItems = $group.Group
	if ($selectedItems[0].PSObject.TypeNames -contains 'ManagedVMwareHost') {
		$selectedItems = @($selectedItems | ForEach-Object {
			$_.Connect()
			if ($_.Connected -and (Test-VMwareManagementServer -ManagedHost $_)) {
				$_
			}
		})
	}
	if (-not $selectedItems) {
		continue
	}
	$selectedItems | Out-VReport
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Start" predefined="False" id="1177766c-69e1-4a17-b604-de3ce00656fb" type="Action@" DisplayResults="Refresh">
              <command name="Start-VM" notprompted="true">
                <parameters>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Suspend..." predefined="False" id="e4de743c-e99b-4720-ac30-dc6aeae4d346" type="Action@" DisplayResults="Refresh">
              <command name="Suspend-VM" notprompted="true">
                <parameters>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Reboot..." predefined="False" id="6d4e607e-448b-4073-a066-2baf39198868" type="Action@" DisplayResults="Refresh">
              <command name="Restart-VMGuest" notprompted="true">
                <parameters>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Shutdown..." predefined="False" id="2ddeeb56-4ea7-4ce2-b4b9-20e4c78563e3" type="Action@" DisplayResults="Refresh">
              <command name="Shutdown-VMGuest" notprompted="true">
                <parameters>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Restart..." predefined="False" id="ef6580e2-9eb1-4e66-9c33-78c1aa946ecb" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[if ([System.Windows.Forms.MessageBox]::Show("Are you sure you want to restart the selected virtual machines?`n`nNote that the virtual machines may not appear as powered on right away. Refreshing the list will show them as powered on once they have restarted.",'Restart virtual machines',[System.Windows.Forms.MessageBoxButtons]::YesNo,[System.Windows.Forms.MessageBoxIcon]::Question) -eq [System.Windows.Forms.DialogResult]::Yes) {
	$input | Stop-VM -Confirm:$false | Start-VM -RunAsync
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Stop..." predefined="False" id="9776417d-e1c5-421f-9747-ad14216dfd8f" type="Action@" DisplayResults="Refresh">
              <command name="Stop-VM" notprompted="true">
                <parameters>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Remove..." predefined="False" id="f5f24ec2-39eb-4e7e-a7b9-6300c4b9e6d0" type="Action@" DisplayResults="Refresh">
              <command name="Remove-VM" notprompted="true">
                <parameters>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Delete..." predefined="False" id="8d10d572-73b7-4dcc-afaf-d0b0fee03316" type="Action@" DisplayResults="Refresh">
              <command name="Remove-VM" notprompted="true">
                <parameters>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="DeleteFromDisk" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Change Properties" predefined="False" id="4423b5da-1ff3-4b9e-b79d-42dcda5cf2eb" type="Action@" DisplayResults="Refresh">
              <command name="Set-NetworkAdapter" notprompted="false">
                <parameters>
                  <parameter name="NetworkAdapter" type="VMware.VimAutomation.ViCore.Types.V1.VirtualDevice.NetworkAdapter[]" prompted="True" />
                  <parameter name="MacAddress" type="System.String" prompted="True" />
                  <parameter name="NetworkName" type="System.String" prompted="True" />
                  <parameter name="StartConnected" type="System.Boolean" prompted="True" />
                  <parameter name="Connected" type="System.Boolean" prompted="True" />
                  <parameter name="WakeOnLan" type="System.Boolean" prompted="True" />
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.NetworkAdapterImpl</type>
              </Types>
            </container>
            <container name="Modify..." predefined="False" id="6c60c882-9cc3-4056-b950-5d0111fb357b" type="Action@" DisplayResults="Refresh">
              <command name="Set-CDDrive" notprompted="false">
                <parameters>
                  <parameter name="IsoPath" type="System.String" prompted="True" />
                  <parameter name="HostDevice" type="System.String" prompted="True" />
                  <parameter name="NoMedia" type="System.Management.Automation.SwitchParameter" prompted="True">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                  <parameter name="StartConnected" type="System.Boolean" prompted="True" />
                  <parameter name="Connected" type="System.Boolean" prompted="True" />
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.CDDriveImpl</type>
              </Types>
            </container>
            <container name="Remove..." Description="" predefined="False" id="9f844e53-a3cc-4c3c-ba25-df935f9a9df3" type="Action@" DisplayResults="Refresh">
              <command name="Remove-CDDrive" notprompted="true">
                <parameters>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.CDDriveImpl</type>
              </Types>
            </container>
            <container name="Disconnect" Description="" predefined="False" id="5d69dc6b-7786-47a7-a831-e3d38205e3dc" type="Action@" DisplayResults="Refresh">
              <command name="Set-CDDrive" notprompted="true">
                <parameters>
                  <parameter name="Connected" type="System.Boolean" prompted="False">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.CDDriveImpl</type>
              </Types>
            </container>
            <container name="Modify..." predefined="False" id="8ee37527-e829-4bd0-8c9b-2c9028b6c603" type="Action@" DisplayResults="Refresh">
              <command name="Set-FloppyDrive" notprompted="false">
                <parameters>
                  <parameter name="FloppyImagePath" type="System.String" prompted="True" />
                  <parameter name="HostDevice" type="System.String" prompted="True" />
                  <parameter name="NoMedia" type="System.Management.Automation.SwitchParameter" prompted="True">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                  <parameter name="StartConnected" type="System.Boolean" prompted="True" />
                  <parameter name="Connected" type="System.Boolean" prompted="True" />
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.FloppyDriveImpl</type>
              </Types>
            </container>
            <container name="Remove..." predefined="False" id="a36e8be3-ffa5-49b1-8e1d-f3897c9c28f6" type="Action@" DisplayResults="Refresh">
              <command name="Remove-FloppyDrive" notprompted="true">
                <parameters>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.FloppyDriveImpl</type>
              </Types>
            </container>
            <container name="New..." Description="" predefined="False" id="de121a61-31ad-4d56-b561-26d06c12a972" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param (
	[String]$Location,
	[String]$Name,
	[String[]]$HostName
)

function GetHostServerImpl($itemHost)
{
	if ($defaultVIServers) {
		foreach ($h in $defaultVIServers) {
			if ($itemHost -eq $h.Name -and $h.IsConnected) {
				return $h
			}
		}
	}
	return $null
}

foreach ($item in $HostName) {
	$hostObj = GetHostServerImpl($item)
	if ($hostObj -eq $null) {
		Connect-VIServer $item 
	}
	if ($hostObj.IsConnected) {
		if ($cluster = Get-Cluster -Name $Location -Server $hostObj.Name -ErrorAction SilentlyContinue) {
			New-ResourcePool -Location ($cluster | Get-ResourcePool -NoRecursion) -Name $Name
		} elseif ($vmHost = Get-VMHost -Name $Location -Server $hostObj.Name -ErrorAction SilentlyContinue) {
			New-ResourcePool -Location ($vmHost | Get-ResourcePool -NoRecursion) -Name $Name
		} elseif ($resourcePool = Get-ResourcePool -Name $Location -Server $hostObj.Name -ErrorAction SilentlyContinue) {
			New-ResourcePool -Location $resourcePool -Name $Name
		}
	}
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Move..." Description="" predefined="False" id="0de94844-8af2-4aa5-a6f3-63c5d050f5af" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param (
	[String]$TargetFolder
)

$input | ForEach-Object {
	Move-Datacenter -Datacenter $_ -Location (Get-Folder -Name $TargetFolder -Server $_.Host | Where-Object {$_.IsChildTypeDatacenter}) -RunAsync
}
]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Generate vDiagram..." Description="" predefined="False" id="10f355a5-390f-4fb0-8635-80383b5e3019" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param(
	[bool]$HostToVM = $true,
	[bool]$NetworkToVM = $false,
	[bool]$DatastoreToVM = $false,
	[bool]$HostToDatastore = $false,
	[UInt16]$MaximumLeafDepth = 10
)

#region Import the Visio assembly if it is not already loaded.
$visioAssembly = Import-VisioAssembly -PassThru
#endregion

#region Return immediately if the Visio assembly was not found.
if (-not $visioAssembly) {
	return
}
#endregion

#region Install the stencil file(s) that are required.
Install-VMwarePowerPackStencilFile -Filename 'Virtualization Visio Stencil.vss'
#endregion

#region Generate the requested Visio diagrams using VI Infrastructure data.
$pageIndex = 1
$selectedItems = $input | Sort-Object -Property Name
$visio = Visio {
	DefaultPageDiagramStyle 'Flowchart' -Direction 'Left to Right' -PlacementDepth 'Shallow'
	DefaultPageConnectorStyle 'Simple' -Spacing '20mm' -Curvature 'Straight'
	DefaultPageAutoEnlarge $true
	
	Document {
		$pageIndex = 1
		Stencil 'Virtualization Visio Stencil.vss'
		$selectedItems | Group-Object -Property Host | ForEach-Object {
			$managedHost = $_.Name
			$dataCache = @{}
			Write-Progress -Activity 'Caching managed host infrastructure' -Status 'Adding datacenters to the cache.'
			$dataCache['Datacenter'] = @(Get-Datacenter)
			Write-Progress -Activity 'Caching managed host infrastructure' -Status 'Adding clusters to the cache.'
			$dataCache['Cluster'] = @($dataCache.Datacenter | ForEach-Object {$_ | Get-Cluster | Add-Member -MemberType NoteProperty -Name DatacenterId -Value $_.Id -PassThru})
			Write-Progress -Activity 'Caching managed host infrastructure' -Status 'Adding hosts to the cache.'
			$dataCache['VMHost'] = @($dataCache.Cluster | ForEach-Object {$_ | Get-VMHost -NoRecursion | Add-Member -MemberType NoteProperty -Name DatacenterId -Value $_.DatacenterId -PassThru | Add-Member -MemberType NoteProperty -Name ClusterId -Value $_.Id -PassThru})
			$dataCache['VMHost'] += @($dataCache.Datacenter | ForEach-Object {$datacenterId = $_.Id; $hostIds = @($dataCache.VMHost | Where-Object {$_.DatacenterId -eq $datacenterId} | ForEach-Object {$_.Id}); $_ | Get-VMHost | Where-Object {$hostIds -notcontains $_.Id} | Add-Member -MemberType NoteProperty -Name DatacenterId -Value $_.Id -PassThru | Add-Member -MemberType NoteProperty -Name ClusterId -Value $null -PassThru})
			Write-Progress -Activity 'Caching managed host infrastructure' -Status 'Adding virtual machines to the cache.'
			$dataCache['VM'] = @($dataCache.VMHost | ForEach-Object {$_ | Get-VM -NoRecursion | Add-Member -MemberType NoteProperty -Name DatacenterId -Value $_.DatacenterId -PassThru | Add-Member -MemberType NoteProperty -Name ClusterId -Value $_.ClusterId -PassThru})
			$virtualCenter = Test-VMwareManagementServer -ManagedHost $managedHost
			$infrastructurePageName = "Infrastructure ($($_.Name))"
			$networkPageName = "Network ($($_.Name))"
			$storageVMotionPageName = "Storage - VMotion ($($_.Name))"
			$hostStoragePageName = "Storage - Hosts ($($_.Name))"
			$rootShapeName = 'Virtual Center Management Console'
			if (-not $virtualCenter) {
				$rootShapeName = 'ESX Host'
			}
			$rootShapeLabel = $_.Name
			$rootObjects = $_.Group
			$processVirtualMachineScriptBlock = {
				param(
					$CurrentObject = $null,
					$ParentShape = $null,
					[REF]$LastShape,
					[REF]$CurrentLeafDepth
				)
				$CurrentLeafDepth.Value++
				$vmShapeName = 'Other Server'
				switch -regex ($CurrentObject.Guest.OSFullName) {
					'Microsoft' {$vmShapeName = 'Microsoft Server'; break}
					'Linux'     {$vmShapeName = 'Linux Server';     break}
				}
				$vmShape = Shape $vmShapeName -Label $CurrentObject.Name {
					Connect -ToShape $LastShape.Value
				}
				if (($MaximumLeafDepth -ne 0) -and ($CurrentLeafDepth.Value -eq $MaximumLeafDepth)) {
					$CurrentLeafDepth.Value = 0
					$LastShape.Value = $ParentShape
				} else {
					$LastShape.Value = $vmShape
				}
			}
			if ($HostToVM) {
				Page $pageIndex {
					Name $infrastructurePageName
					$rootShape = Shape $rootShapeName -Label $rootShapeLabel
					$processVMHostScriptBlock = {
						param(
							$ParentObject = $null,
							$ParentShape = $null
						)
						$vmHostShape = Shape 'ESX Host' -Label $ParentObject.Name {
							Connect -ToShape $ParentShape
						}
						$lastShape = $vmHostShape
						$currentLeafDepth = 0
						$dataCache.VM | Where-Object {$_.HostId -eq $ParentObject.Id} | Sort-Object -Property Name | ForEach-Object {
							& $processVirtualMachineScriptBlock $_ $vmHostShape ([REF]$lastShape) ([REF]$currentLeafDepth)
						}
					}
					$rootObjects | ForEach-Object {
						if ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl]) {
							$dataCenterShape = Shape 'Datacenter' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							$datacenterId = $_.Id
							$dataCache.Cluster | Where-Object {$_.DatacenterId -eq $datacenterId} | Sort-Object -Property Name | ForEach-Object {
								$clusterShape = Shape 'Cluster' -Label $_.Name {
									Connect -ToShape $datacenterShape
								}
								$clusterId = $_.Id
								$dataCache.VMHost | Where-Object {$_.ClusterId -eq $clusterId} | Sort-Object -Property Name | ForEach-Object {
									& $processVMHostScriptBlock $_ $clusterShape
								}
							}
							$dataCache.VMHost | Where-Object {($_.DatacenterId -eq $datacenterId) -and (-not $_.ClusterId)} | Sort-Object -Property Name | ForEach-Object {
								& $processVMHostScriptBlock $_ $datacenterShape
							}
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl]) {
							$clusterShape = Shape 'Cluster' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							$clusterId = $_.Id
							$dataCache.VMHost | Where-Object {$_.ClusterId -eq $clusterId} | Sort-Object -Property Name | ForEach-Object {
								& $processVMHostScriptBlock $_ $clusterShape
							}
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl]) {
							if ($virtualCenter) {
								& $processVMHostScriptBlock $_ $rootShape
							} else {
								$lastShape = $rootShape
								$currentLeafDepth = 0
								$hostId = $_.Id
								$dataCache.VM | Where-Object {$_.HostId -eq $hostId} | Sort-Object -Property Name | ForEach-Object {
									& $processVirtualMachineScriptBlock $_ $rootShape ([REF]$LastShape) ([REF]$CurrentLeafDepth)
								}
							}
						}
					}
					Layout -ArrangeShapes -CenterDrawing
				}
				$pageIndex++
			}
			if ($NetworkToVM) {
				Page $pageIndex {
					Name $networkPageName
					$rootShape = Shape $rootShapeName -Label $rootShapeLabel
					$processVMHostScriptBlock = {
						param(
							$ParentObject = $null,
							$ParentShape = $null
						)
						$ParentObject | Get-View -Property Network | Select-Object -ExpandProperty Network | ConvertFrom-ManagedObjectReference -Property Name,Host,Vm   | Sort-Object -Property Name | ForEach-Object {
							$networkShape = Shape 'Physical Switch' -Label $_.Name {
								Connect -ToShape $ParentShape
							}
							$networkVmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
							$networkVmHostIds = @($_.Host | ForEach-Object {"$($_.Type)-$($_.Value)"})
							$dataCache.VMHost | Where-Object {$networkVmHostIds -contains $_.Id} | Sort-Object -Property Name | ForEach-Object {
								$vmHostShape = Shape 'ESX Host' -Label $_.Name {
									Connect -ToShape $networkShape
								}
								$vmHostId = $_.Id
								$lastShape = $vmHostShape
								$currentLeafDepth = 0
								$dataCache.VM | Where-Object {($networkVmIds -contains $_.Id) -and ($_.HostId -eq $vmHostId)} | Sort-Object -Property Name | ForEach-Object {
									& $processVirtualMachineScriptBlock $_ $vmHostShape ([REF]$lastShape) ([REF]$currentLeafDepth)
								}
							}
						}
					}
					$rootObjects | ForEach-Object {
						if ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl]) {
							$dataCenterShape = Shape 'Datacenter' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							& $processVMHostScriptBlock $_ $dataCenterShape
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl]) {
							$clusterShape = Shape 'Cluster' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							& $processVMHostScriptBlock $_ $clusterShape
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl]) {
							if ($virtualCenter) {
								& $processVMHostScriptBlock $_ $rootShape
							} else {
								$_ | Get-View -Property Network | Select-Object -ExpandProperty Network | ConvertFrom-ManagedObjectReference -Property Name,Vm   | Sort-Object -Property Name | ForEach-Object {
									$networkShape = Shape 'Physical Switch' -Label $_.Name {
										Connect -ToShape $rootShape
									}
									$networkVmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
									$lastShape = $networkShape
									$currentLeafDepth = 0
									$dataCache.VM | Where-Object {$networkVmIds -contains $_.Id} | Sort-Object -Property Name | ForEach-Object {
										& $processVirtualMachineScriptBlock $_ $networkShape ([REF]$lastShape) ([REF]$currentLeafDepth)
									}
								}
							}
						}
					}
					Layout -ArrangeShapes -CenterDrawing
				}
				$pageIndex++
			}
			if ($DatastoreToVM) {
				Page $pageIndex {
					Name $storageVMotionPageName
					$rootShape = Shape $rootShapeName -Label $rootShapeLabel
					$processVMHostScriptBlock = {
						param(
							$ParentObject = $null,
							$ParentShape = $null
						)
						$ParentObject | Get-View -Property Datastore | Select-Object -ExpandProperty Datastore | ConvertFrom-ManagedObjectReference -Property Info,Host,Vm   | Sort-Object -Property {$_.Info.Name} | ForEach-Object {
							$datastoreShape = Shape 'Datastore' -Label $_.Info.Name {
								Connect -ToShape $ParentShape
							}
							$vmHostIds = @($_.Host | ForEach-Object {"$($_.Key.Type)-$($_.Key.Value)"})
							$vmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
							$dataCache.VMHost | Where-Object {$vmHostIds -contains $_.Id} | Sort-Object -Property Name | ForEach-Object {
								$vmHostShape = Shape 'ESX Host' -Label $_.Name {
									Connect -ToShape $datastoreShape
								}
								$vmHostId = $_.Id
								$lastShape = $vmHostShape
								$currentLeafDepth = 0
								$dataCache.VM | Where-Object {($vmIds -contains $_.Id) -and ($_.HostId -eq $vmHostId)} | Sort-Object -Property Name | ForEach-Object {
									& $processVirtualMachineScriptBlock $_ $vmHostShape ([REF]$lastShape) ([REF]$currentLeafDepth)
								}
							}
						}
					}
					$rootObjects | ForEach-Object {
						if ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl]) {
							$dataCenterShape = Shape 'Datacenter' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							& $processVMHostScriptBlock $_ $dataCenterShape
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl]) {
							$clusterShape = Shape 'Cluster' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							& $processVMHostScriptBlock $_ $clusterShape
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl]) {
							if ($virtualCenter) {
								& $processVMHostScriptBlock $_ $rootShape
							} else {
								$vmHostId = $_.Id
								$_ | Get-View -Property Datastore | Select-Object -ExpandProperty Datastore | ConvertFrom-ManagedObjectReference -Property Info,Vm   | Sort-Object -Property {$_.Info.Name} | ForEach-Object {
									$datastoreShape = Shape 'Datastore' -Label $_.Info.Name {
										Connect -ToShape $rootShape
									}
									$vmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
									$lastShape = $datastoreShape
									$currentLeafDepth = 0
									$dataCache.VM | Where-Object {($vmIds -contains $_.Id) -and ($_.HostId -eq $vmHostId)} | Sort-Object -Property Name | ForEach-Object {
										& $processVirtualMachineScriptBlock $_ $datastoreShape ([REF]$lastShape) ([REF]$currentLeafDepth)
									}
								}
							}
						}
					}
					Layout -ArrangeShapes -CenterDrawing
				}
				$pageIndex++
			}
			if ($HostToDatastore) {
				Page $pageIndex {
					Name $hostStoragePageName
					$rootShape = Shape $rootShapeName -Label $rootShapeLabel
					$processVMHostScriptBlock = {
						param(
							$ParentObject = $null,
							$ParentShape = $null
						)
						$vmHostShape = Shape 'ESX Host' -Label $ParentObject.Name {
							Connect -ToShape $ParentShape
						}
						$ParentObject | Get-View -Property Datastore | Select-Object -ExpandProperty Datastore | ConvertFrom-ManagedObjectReference -Property Info,Host,Vm   | Sort-Object -Property {$_.Info.Name} | ForEach-Object {
							$datastoreShape = Shape 'Datastore' -Label $_.Info.Name {
								Connect -ToShape $vmHostShape
							}
							$vmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
							$lastShape = $datastoreShape
							$currentLeafDepth = 0
							$dataCache.VM | Where-Object {($vmIds -contains $_.Id) -and ($_.HostId -eq $ParentObject.Id)} | Sort-Object -Property Name | ForEach-Object {
								& $processVirtualMachineScriptBlock $_ $datastoreShape ([REF]$lastShape) ([REF]$currentLeafDepth)
							}
						}
					}
					$rootObjects | ForEach-Object {
						if ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl]) {
							$dataCenterShape = Shape 'Datacenter' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							$datacenterId = $_.Id
							$dataCache.Cluster | Where-Object {$_.DatacenterId -eq $datacenterId} | Sort-Object -Property Name | ForEach-Object {
								$clusterShape = Shape 'Cluster' -Label $_.Name {
									Connect -ToShape $datacenterShape
								}
								$clusterId = $_.Id
								$dataCache.VMHost | Where-Object {$_.ClusterId -eq $clusterId} | Sort-Object -Property Name | ForEach-Object {
									& $processVMHostScriptBlock $_ $clusterShape
								}
							}
							$dataCache.VMHost | Where-Object {($_.DatacenterId -eq $datacenterId) -and (-not $_.ClusterId)} | Sort-Object -Property Name | ForEach-Object {
								& $processVMHostScriptBlock $_ $datacenterShape
							}
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl]) {
							$clusterShape = Shape 'Cluster' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							$clusterId = $_.Id
							$dataCache.VMHost | Where-Object {$_.ClusterId -eq $clusterId} | Sort-Object -Property Name | ForEach-Object {
								& $processVMHostScriptBlock $_ $clusterShape
							}
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl]) {
							if ($virtualCenter) {
								& $processVMHostScriptBlock $_ $rootShape
							} else {
								$vmHostId = $_.Id
								$_ | Get-View -Property Datastore | Select-Object -ExpandProperty Datastore | ConvertFrom-ManagedObjectReference -Property Info,Vm   | Sort-Object -Property {$_.Info.Name} | ForEach-Object {
									$datastoreShape = Shape 'Datastore' -Label $_.Info.Name {
										Connect -ToShape $rootShape
									}
									$vmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
									$lastShape = $datastoreShape
									$currentLeafDepth = 0
									$dataCache.VM | Where-Object {($vmIds -contains $_.Id) -and ($_.HostId -eq $vmHostId)} | Sort-Object -Property Name | ForEach-Object {
										& $processVirtualMachineScriptBlock $_ $datastoreShape ([REF]$lastShape) ([REF]$currentLeafDepth)
									}
								}
							}
						}
					}
					Layout -ArrangeShapes -CenterDrawing
				}
				$pageIndex++
			}
		}
	}
}
#endregion]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Generate vReport" Description="" predefined="False" id="b803f03e-afc4-4a0e-8604-2f93eef6dc65" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$selectedItemGroups = @($Input `
	| Sort-Object -Property Name `
	| ForEach-Object {
		if (($_.PSObject.TypeNames[0] -eq 'ManagedVMwareHost') -and (-not (Test-VMwareManagementServer -ManagedHost $_))) {
			$managedHost = $_
			Get-VMHost -Server $managedHost.Connection | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru
			}
		} else {
			$_
		}
	} `
	| Group-Object -Property {if ($_ -eq $null) {'Null'} elseif ($_.PSObject.TypeNames[0] -eq 'ManagedVMwareHost') {'ManagedVMwareHost'} else {$_.GetType().FullName}})

foreach ($group in $selectedItemGroups) {
	$selectedItems = $group.Group
	if ($selectedItems[0].PSObject.TypeNames -contains 'ManagedVMwareHost') {
		$selectedItems = @($selectedItems | ForEach-Object {
			$_.Connect()
			if ($_.Connected -and (Test-VMwareManagementServer -ManagedHost $_)) {
				$_
			}
		})
	}
	if (-not $selectedItems) {
		continue
	}
	$selectedItems | Out-VReport
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Rename..." predefined="False" id="63e84bbc-0465-407b-8a05-f2567af65fc0" type="Action@" DisplayResults="Refresh">
              <command name="Set-Datacenter" notprompted="false">
                <parameters>
                  <parameter name="Name" type="System.String" prompted="True" />
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Remove..." predefined="False" id="f90b26e2-c711-47c3-b922-c87e6ae7815b" type="Action@" DisplayResults="Refresh">
              <command name="Remove-Datacenter" notprompted="true">
                <parameters>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Modify..." predefined="False" id="78ce44c1-98b8-4824-a0d9-0ae396f34382" type="Action@" DisplayResults="Refresh">
              <command name="Set-HardDisk" notprompted="false">
                <parameters>
                  <parameter name="CapacityKB" type="System.Int64" prompted="True" />
                  <parameter name="Persistence" type="System.String" prompted="True" />
                  <parameter name="Datastore" type="VMware.VimAutomation.ViCore.Types.V1.DatastoreManagement.Datastore" prompted="True" />
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.HardDiskImpl</type>
              </Types>
            </container>
            <container name="Disconnect" Description="" predefined="False" id="46bc5a24-6aa5-4ef7-8dd8-d9349be3a58a" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$input | ForEach-Object {
	$_.Disconnect()
}]]></script>
              <Types>
                <type>VMware.Vim.UserSession#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="New..." Description="" predefined="False" id="5fcf1c27-f960-45f5-9a5b-eaef0c309ad9" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param (
	[String]$Location,
	[String]$Name,
	[String[]]$HostName
)

foreach ($item in $HostName) {
	$managedHost = $item
	#$managedHost.Connect()
	$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
	if (-not $viServer)
	{
		# toDo: use the stored credentials and update them
		Connect-VIServer –Server $hostName –Protocol https  
	}
	$viServer = $DefaultVIServers | where {$_.Name -eq $hostName}
	if ($viServer) {
		if ($datacenter = Get-Datacenter -Name $Location -Server $managedHost -ErrorAction SilentlyContinue) {
			New-Cluster -Location $datacenter -Name $Name
		} elseif ($computeResourceFolder = (Get-Folder -Name $Location -Server $managedHost -ErrorAction SilentlyContinue | Where-Object {$_.IsChildTypeComputeResource})) {
			New-Cluster -Location $computeResourceFolder -Name $Name
		}		
	}
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Move..." Description="" predefined="False" id="4a7a4ad4-b89d-4d28-b27c-0d11983e8fd7" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param (
	[String]$Destination
)
if ($Destination -eq $null) {
	return
}
$input | ForEach-Object {
	foreach ($viServer in $defaultVIServers) {
		if (Get-Cluster -name $_.Name -Id $_.Id -Server $viServer) {
			break
		}
	}
	if ($datacenter = Get-Datacenter -Name $Destination -Server $viServer -ErrorAction Inquire) {
		Move-Cluster -Cluster $_ -Destination $datacenter -RunAsync
	} elseif ($computeResourceFolder = (Get-Folder -Name $Destination -Server $viServer -ErrorAction Inquire | Where-Object {$_.IsChildTypeComputeResource})) {
		Move-Cluster -Cluster $_ -Destination $computeResourceFolder -RunAsync
	}
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Generate vDiagram..." Description="" predefined="False" id="d514156c-e83e-46ea-a05e-9323bb3d5f3b" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param(
	[bool]$HostToVM = $true,
	[bool]$NetworkToVM = $false,
	[bool]$DatastoreToVM = $false,
	[bool]$HostToDatastore = $false,
	[UInt16]$MaximumLeafDepth = 10
)

#region Import the Visio assembly if it is not already loaded.
$visioAssembly = Import-VisioAssembly -PassThru
#endregion

#region Return immediately if the Visio assembly was not found.
if (-not $visioAssembly) {
	return
}
#endregion

#region Install the stencil file(s) that are required.
Install-VMwarePowerPackStencilFile -Filename 'Virtualization Visio Stencil.vss'
#endregion

#region Generate the requested Visio diagrams using VI Infrastructure data.
$pageIndex = 1
$selectedItems = $input | Sort-Object -Property Name
$visio = Visio {
	DefaultPageDiagramStyle 'Flowchart' -Direction 'Left to Right' -PlacementDepth 'Shallow'
	DefaultPageConnectorStyle 'Simple' -Spacing '20mm' -Curvature 'Straight'
	DefaultPageAutoEnlarge $true
	Document {
		$pageIndex = 1
		Stencil 'Virtualization Visio Stencil.vss'
		$selectedItems | Group-Object -Property Host | ForEach-Object {
			$managedHost = $_.Name
			$dataCache = @{}
			Write-Progress -Activity 'Caching managed host infrastructure' -Status 'Adding datacenters to the cache.'
			$dataCache['Datacenter'] = @(Get-Datacenter)
			Write-Progress -Activity 'Caching managed host infrastructure' -Status 'Adding clusters to the cache.'
			$dataCache['Cluster'] = @($dataCache.Datacenter | ForEach-Object {$_ | Get-Cluster | Add-Member -MemberType NoteProperty -Name DatacenterId -Value $_.Id -PassThru})
			Write-Progress -Activity 'Caching managed host infrastructure' -Status 'Adding hosts to the cache.'
			$dataCache['VMHost'] = @($dataCache.Cluster | ForEach-Object {$_ | Get-VMHost -NoRecursion | Add-Member -MemberType NoteProperty -Name DatacenterId -Value $_.DatacenterId -PassThru | Add-Member -MemberType NoteProperty -Name ClusterId -Value $_.Id -PassThru})
			$dataCache['VMHost'] += @($dataCache.Datacenter | ForEach-Object {$datacenterId = $_.Id; $hostIds = @($dataCache.VMHost | Where-Object {$_.DatacenterId -eq $datacenterId} | ForEach-Object {$_.Id}); $_ | Get-VMHost | Where-Object {$hostIds -notcontains $_.Id} | Add-Member -MemberType NoteProperty -Name DatacenterId -Value $_.Id -PassThru | Add-Member -MemberType NoteProperty -Name ClusterId -Value $null -PassThru})
			Write-Progress -Activity 'Caching managed host infrastructure' -Status 'Adding virtual machines to the cache.'
			$dataCache['VM'] = @($dataCache.VMHost | ForEach-Object {$_ | Get-VM -NoRecursion | Add-Member -MemberType NoteProperty -Name DatacenterId -Value $_.DatacenterId -PassThru | Add-Member -MemberType NoteProperty -Name ClusterId -Value $_.ClusterId -PassThru})
			$virtualCenter = Test-VMwareManagementServerByName  -ManagedHost $managedHost
			$infrastructurePageName = "Infrastructure ($($_.Name))"
			$networkPageName = "Network ($($_.Name))"
			$storageVMotionPageName = "Storage - VMotion ($($_.Name))"
			$hostStoragePageName = "Storage - Hosts ($($_.Name))"
			$rootShapeName = 'Virtual Center Management Console'
			if (-not $virtualCenter) {
				$rootShapeName = 'ESX Host'
			}
			$rootShapeLabel = $_.Name
			$rootObjects = $_.Group
			$processVirtualMachineScriptBlock = {
				param(
					$CurrentObject = $null,
					$ParentShape = $null,
					[REF]$LastShape,
					[REF]$CurrentLeafDepth
				)
				$CurrentLeafDepth.Value++
				$vmShapeName = 'Other Server'
				switch -regex ($CurrentObject.Guest.OSFullName) {
					'Microsoft' {$vmShapeName = 'Microsoft Server'; break}
					'Linux'     {$vmShapeName = 'Linux Server';     break}
				}
				$vmShape = Shape $vmShapeName -Label $CurrentObject.Name {
					Connect -ToShape $LastShape.Value
				}
				if (($MaximumLeafDepth -ne 0) -and ($CurrentLeafDepth.Value -eq $MaximumLeafDepth)) {
					$CurrentLeafDepth.Value = 0
					$LastShape.Value = $ParentShape
				} else {
					$LastShape.Value = $vmShape
				}
			}
			if ($HostToVM) {
				Page $pageIndex {
					Name $infrastructurePageName
					$rootShape = Shape $rootShapeName -Label $rootShapeLabel
					$processVMHostScriptBlock = {
						param(
							$ParentObject = $null,
							$ParentShape = $null
						)
						$vmHostShape = Shape 'ESX Host' -Label $ParentObject.Name {
							Connect -ToShape $ParentShape
						}
						$lastShape = $vmHostShape
						$currentLeafDepth = 0
						$dataCache.VM | Where-Object {$_.HostId -eq $ParentObject.Id} | Sort-Object -Property Name | ForEach-Object {
							& $processVirtualMachineScriptBlock $_ $vmHostShape ([REF]$lastShape) ([REF]$currentLeafDepth)
						}
					}
					$rootObjects | ForEach-Object {
						if ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl]) {
							$dataCenterShape = Shape 'Datacenter' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							$datacenterId = $_.Id
							$dataCache.Cluster | Where-Object {$_.DatacenterId -eq $datacenterId} | Sort-Object -Property Name | ForEach-Object {
								$clusterShape = Shape 'Cluster' -Label $_.Name {
									Connect -ToShape $datacenterShape
								}
								$clusterId = $_.Id
								$dataCache.VMHost | Where-Object {$_.ClusterId -eq $clusterId} | Sort-Object -Property Name | ForEach-Object {
									& $processVMHostScriptBlock $_ $clusterShape
								}
							}
							$dataCache.VMHost | Where-Object {($_.DatacenterId -eq $datacenterId) -and (-not $_.ClusterId)} | Sort-Object -Property Name | ForEach-Object {
								& $processVMHostScriptBlock $_ $datacenterShape
							}
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl]) {
							$clusterShape = Shape 'Cluster' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							$clusterId = $_.Id
							$dataCache.VMHost | Where-Object {$_.ClusterId -eq $clusterId} | Sort-Object -Property Name | ForEach-Object {
								& $processVMHostScriptBlock $_ $clusterShape
							}
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl]) {
							if ($virtualCenter) {
								& $processVMHostScriptBlock $_ $rootShape
							} else {
								$lastShape = $rootShape
								$currentLeafDepth = 0
								$hostId = $_.Id
								$dataCache.VM | Where-Object {$_.HostId -eq $hostId} | Sort-Object -Property Name | ForEach-Object {
									& $processVirtualMachineScriptBlock $_ $rootShape ([REF]$LastShape) ([REF]$CurrentLeafDepth)
								}
							}
						}
					}
					Layout -ArrangeShapes -CenterDrawing
				}
				$pageIndex++
			}
			if ($NetworkToVM) {
				Page $pageIndex {
					Name $networkPageName
					$rootShape = Shape $rootShapeName -Label $rootShapeLabel
					$processVMHostScriptBlock = {
						param(
							$ParentObject = $null,
							$ParentShape = $null
						)
						$ParentObject | Get-View -Property Network | Select-Object -ExpandProperty Network | ConvertFrom-ManagedObjectReference -Property Name,Host,Vm    | Sort-Object -Property Name | ForEach-Object {
							$networkShape = Shape 'Physical Switch' -Label $_.Name {
								Connect -ToShape $ParentShape
							}
							$networkVmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
							$networkVmHostIds = @($_.Host | ForEach-Object {"$($_.Type)-$($_.Value)"})
							$dataCache.VMHost | Where-Object {$networkVmHostIds -contains $_.Id} | Sort-Object -Property Name | ForEach-Object {
								$vmHostShape = Shape 'ESX Host' -Label $_.Name {
									Connect -ToShape $networkShape
								}
								$vmHostId = $_.Id
								$lastShape = $vmHostShape
								$currentLeafDepth = 0
								$dataCache.VM | Where-Object {($networkVmIds -contains $_.Id) -and ($_.HostId -eq $vmHostId)} | Sort-Object -Property Name | ForEach-Object {
									& $processVirtualMachineScriptBlock $_ $vmHostShape ([REF]$lastShape) ([REF]$currentLeafDepth)
								}
							}
						}
					}
					$rootObjects | ForEach-Object {
						if ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl]) {
							$dataCenterShape = Shape 'Datacenter' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							& $processVMHostScriptBlock $_ $dataCenterShape
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl]) {
							$clusterShape = Shape 'Cluster' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							& $processVMHostScriptBlock $_ $clusterShape
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl]) {
							if ($virtualCenter) {
								& $processVMHostScriptBlock $_ $rootShape
							} else {
								$_ | Get-View -Property Network | Select-Object -ExpandProperty Network | ConvertFrom-ManagedObjectReference -Property Name,Vm    | Sort-Object -Property Name | ForEach-Object {
									$networkShape = Shape 'Physical Switch' -Label $_.Name {
										Connect -ToShape $rootShape
									}
									$networkVmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
									$lastShape = $networkShape
									$currentLeafDepth = 0
									$dataCache.VM | Where-Object {$networkVmIds -contains $_.Id} | Sort-Object -Property Name | ForEach-Object {
										& $processVirtualMachineScriptBlock $_ $networkShape ([REF]$lastShape) ([REF]$currentLeafDepth)
									}
								}
							}
						}
					}
					Layout -ArrangeShapes -CenterDrawing
				}
				$pageIndex++
			}
			if ($DatastoreToVM) {
				Page $pageIndex {
					Name $storageVMotionPageName
					$rootShape = Shape $rootShapeName -Label $rootShapeLabel
					$processVMHostScriptBlock = {
						param(
							$ParentObject = $null,
							$ParentShape = $null
						)
						$ParentObject | Get-View -Property Datastore | Select-Object -ExpandProperty Datastore | ConvertFrom-ManagedObjectReference -Property Info,Host,Vm    | Sort-Object -Property {$_.Info.Name} | ForEach-Object {
							$datastoreShape = Shape 'Datastore' -Label $_.Info.Name {
								Connect -ToShape $ParentShape
							}
							$vmHostIds = @($_.Host | ForEach-Object {"$($_.Key.Type)-$($_.Key.Value)"})
							$vmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
							$dataCache.VMHost | Where-Object {$vmHostIds -contains $_.Id} | Sort-Object -Property Name | ForEach-Object {
								$vmHostShape = Shape 'ESX Host' -Label $_.Name {
									Connect -ToShape $datastoreShape
								}
								$vmHostId = $_.Id
								$lastShape = $vmHostShape
								$currentLeafDepth = 0
								$dataCache.VM | Where-Object {($vmIds -contains $_.Id) -and ($_.HostId -eq $vmHostId)} | Sort-Object -Property Name | ForEach-Object {
									& $processVirtualMachineScriptBlock $_ $vmHostShape ([REF]$lastShape) ([REF]$currentLeafDepth)
								}
							}
						}
					}
					$rootObjects | ForEach-Object {
						if ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl]) {
							$dataCenterShape = Shape 'Datacenter' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							& $processVMHostScriptBlock $_ $dataCenterShape
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl]) {
							$clusterShape = Shape 'Cluster' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							& $processVMHostScriptBlock $_ $clusterShape
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl]) {
							if ($virtualCenter) {
								& $processVMHostScriptBlock $_ $rootShape
							} else {
								$vmHostId = $_.Id
								$_ | Get-View -Property Datastore | Select-Object -ExpandProperty Datastore | ConvertFrom-ManagedObjectReference -Property Info,Vm    | Sort-Object -Property {$_.Info.Name} | ForEach-Object {
									$datastoreShape = Shape 'Datastore' -Label $_.Info.Name {
										Connect -ToShape $rootShape
									}
									$vmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
									$lastShape = $datastoreShape
									$currentLeafDepth = 0
									$dataCache.VM | Where-Object {($vmIds -contains $_.Id) -and ($_.HostId -eq $vmHostId)} | Sort-Object -Property Name | ForEach-Object {
										& $processVirtualMachineScriptBlock $_ $datastoreShape ([REF]$lastShape) ([REF]$currentLeafDepth)
									}
								}
							}
						}
					}
					Layout -ArrangeShapes -CenterDrawing
				}
				$pageIndex++
			}
			if ($HostToDatastore) {
				Page $pageIndex {
					Name $hostStoragePageName
					$rootShape = Shape $rootShapeName -Label $rootShapeLabel
					$processVMHostScriptBlock = {
						param(
							$ParentObject = $null,
							$ParentShape = $null
						)
						$vmHostShape = Shape 'ESX Host' -Label $ParentObject.Name {
							Connect -ToShape $ParentShape
						}
						$ParentObject | Get-View -Property Datastore | Select-Object -ExpandProperty Datastore | ConvertFrom-ManagedObjectReference -Property Info,Host,Vm    | Sort-Object -Property {$_.Info.Name} | ForEach-Object {
							$datastoreShape = Shape 'Datastore' -Label $_.Info.Name {
								Connect -ToShape $vmHostShape
							}
							$vmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
							$lastShape = $datastoreShape
							$currentLeafDepth = 0
							$dataCache.VM | Where-Object {($vmIds -contains $_.Id) -and ($_.HostId -eq $ParentObject.Id)} | Sort-Object -Property Name | ForEach-Object {
								& $processVirtualMachineScriptBlock $_ $datastoreShape ([REF]$lastShape) ([REF]$currentLeafDepth)
							}
						}
					}
					$rootObjects | ForEach-Object {
						if ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl]) {
							$dataCenterShape = Shape 'Datacenter' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							$datacenterId = $_.Id
							$dataCache.Cluster | Where-Object {$_.DatacenterId -eq $datacenterId} | Sort-Object -Property Name | ForEach-Object {
								$clusterShape = Shape 'Cluster' -Label $_.Name {
									Connect -ToShape $datacenterShape
								}
								$clusterId = $_.Id
								$dataCache.VMHost | Where-Object {$_.ClusterId -eq $clusterId} | Sort-Object -Property Name | ForEach-Object {
									& $processVMHostScriptBlock $_ $clusterShape
								}
							}
							$dataCache.VMHost | Where-Object {($_.DatacenterId -eq $datacenterId) -and (-not $_.ClusterId)} | Sort-Object -Property Name | ForEach-Object {
								& $processVMHostScriptBlock $_ $datacenterShape
							}
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl]) {
							$clusterShape = Shape 'Cluster' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							$clusterId = $_.Id
							$dataCache.VMHost | Where-Object {$_.ClusterId -eq $clusterId} | Sort-Object -Property Name | ForEach-Object {
								& $processVMHostScriptBlock $_ $clusterShape
							}
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl]) {
							if ($virtualCenter) {
								& $processVMHostScriptBlock $_ $rootShape
							} else {
								$vmHostId = $_.Id
								$_ | Get-View -Property Datastore | Select-Object -ExpandProperty Datastore | ConvertFrom-ManagedObjectReference -Property Info,Vm    | Sort-Object -Property {$_.Info.Name} | ForEach-Object {
									$datastoreShape = Shape 'Datastore' -Label $_.Info.Name {
										Connect -ToShape $rootShape
									}
									$vmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
									$lastShape = $datastoreShape
									$currentLeafDepth = 0
									$dataCache.VM | Where-Object {($vmIds -contains $_.Id) -and ($_.HostId -eq $vmHostId)} | Sort-Object -Property Name | ForEach-Object {
										& $processVirtualMachineScriptBlock $_ $datastoreShape ([REF]$lastShape) ([REF]$currentLeafDepth)
									}
								}
							}
						}
					}
					Layout -ArrangeShapes -CenterDrawing
				}
				$pageIndex++
			}
		}
	}
}
#endregion]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Generate vReport" Description="" predefined="False" id="cea2c573-bdda-4b56-9fc6-7a5fdf7f1f39" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$selectedItemGroups = @($Input `
	| Sort-Object -Property Name `
	| ForEach-Object {
		if (($_.PSObject.TypeNames[0] -eq 'ManagedVMwareHost') -and (-not (Test-VMwareManagementServer -ManagedHost $_))) {
			$managedHost = $_
			Get-VMHost -Server $managedHost.Connection | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru
			}
		} else {
			$_
		}
	} `
	| Group-Object -Property {if ($_ -eq $null) {'Null'} elseif ($_.PSObject.TypeNames[0] -eq 'ManagedVMwareHost') {'ManagedVMwareHost'} else {$_.GetType().FullName}})

foreach ($group in $selectedItemGroups) {
	$selectedItems = $group.Group
	if ($selectedItems[0].PSObject.TypeNames -contains 'ManagedVMwareHost') {
		$selectedItems = @($selectedItems | ForEach-Object {
			$_.Connect()
			if ($_.Connected -and (Test-VMwareManagementServer -ManagedHost $_)) {
				$_
			}
		})
	}
	if (-not $selectedItems) {
		continue
	}
	$selectedItems | Out-VReport
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Configure HA..." predefined="False" id="e8ef5a04-a237-4b4a-8b95-7dd98201bb06" type="Action@" DisplayResults="Refresh">
              <command name="Set-Cluster" notprompted="false">
                <parameters>
                  <parameter name="HAEnabled" type="System.Boolean" prompted="True" />
                  <parameter name="HAAdmissionControlEnabled" type="System.Boolean" prompted="True" />
                  <parameter name="HAFailoverLevel" type="System.Int32" prompted="True" />
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Configure DRS..." predefined="False" id="11caab64-ef21-4d8f-8332-0d73764f2c54" type="Action@" DisplayResults="Refresh">
              <command name="Set-Cluster" notprompted="false">
                <parameters>
                  <parameter name="DrsEnabled" type="System.Boolean" prompted="True" />
                  <parameter name="DrsMode" type="VMware.VimAutomation.ViCore.Types.V1.Cluster.DrsMode" prompted="True" />
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Rename..." predefined="False" id="8b2e3346-9e14-4377-84ef-00e3ca5c9958" type="Action@" DisplayResults="Refresh">
              <command name="Set-Cluster" notprompted="false">
                <parameters>
                  <parameter name="Name" type="System.String" prompted="True" />
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Remove..." predefined="False" id="7a1fb801-fca5-4909-b8fa-89a0f3e3a45d" type="Action@" DisplayResults="Refresh">
              <command name="Remove-Cluster" notprompted="true">
                <parameters>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Start" predefined="False" id="530feda2-13e1-480c-add4-a29c6300243d" type="Action@" DisplayResults="Refresh">
              <command name="Start-VMHostService" notprompted="true">
                <parameters />
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Host.HostServiceImpl</type>
              </Types>
            </container>
            <container name="Restart" predefined="False" id="ca5244d2-f737-4f90-9635-e906966ceb8d" type="Action@" DisplayResults="Refresh">
              <command name="Restart-VMHostService" notprompted="true">
                <parameters>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Host.HostServiceImpl</type>
              </Types>
            </container>
            <container name="Stop" predefined="False" id="bc391452-2aab-4665-86bf-f2ab9f4f991e" type="Action@" DisplayResults="Refresh">
              <command name="Stop-VMHostService" notprompted="true">
                <parameters>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Host.HostServiceImpl</type>
              </Types>
            </container>
            <container name="Add..." Description="" predefined="False" id="398a34d4-8cfc-4a3f-a30c-baa94037f60b" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param (
	[String]$Location,
	[String]$Name,
	[String[]]$HostName,
	[String]$UserName
)

$credential = Get-Credential -Credential $UserName
foreach ($managedHost in $HostName) {
	$viServer = $DefaultVIServers | where {$_.Name -eq $managedHost}
	if (-not $viServer)
	{
		Connect-VIServer –Server $hostName –Protocol https 
		$viServer = $DefaultVIServers | where {$_.Name -eq $managedHost}
	}
	if ($viServer) {
		if ($datacenter = Get-Datacenter -Name $Location -Server $managedHost.Connection -ErrorAction SilentlyContinue) {
			Add-VMHost -Location $datacenter -Name $Name -Credential $credential -RunAsync -Force
		} elseif ($cluster = Get-Cluster -Name $Location -Server $managedHost.Connection -ErrorAction SilentlyContinue) {
			Add-VMHost -Location $cluster -Name $Name -Credential $credential -RunAsync
		} elseif ($computeResourceFolder = (Get-Folder -Name $Location -Server $managedHost.Connection -ErrorAction SilentlyContinue | Where-Object {$_.IsChildTypeComputeResource})) {
			Add-VMHost -Location $computeResourceFolder -Name $Name -Credential $credential -RunAsync
		}
	}
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Connect" predefined="False" id="9286326b-7af3-458c-afc9-6fe65397f18a" type="Action@" DisplayResults="Refresh">
              <command name="Set-VMHost" notprompted="true">
                <parameters>
                  <parameter name="State" type="VMware.VimAutomation.ViCore.Types.V1.Host.VMHostState" prompted="False">
                    <values>
                      <item value="Connected" />
                    </values>
                  </parameter>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Disconnect" predefined="False" id="9e71f33f-4ca7-46fd-a1ac-427c0d881d12" type="Action@" DisplayResults="Refresh">
              <command name="Set-VMHost" notprompted="true">
                <parameters>
                  <parameter name="State" type="VMware.VimAutomation.ViCore.Types.V1.Host.VMHostState" prompted="False">
                    <values>
                      <item value="Disconnected" />
                    </values>
                  </parameter>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Enter maintenance mode" predefined="False" id="3663bb4f-3be8-4838-9daa-d7b8cc277b42" type="Action@" DisplayResults="Refresh">
              <command name="Set-VMHost" notprompted="true">
                <parameters>
                  <parameter name="State" type="VMware.VimAutomation.ViCore.Types.V1.Host.VMHostState" prompted="False">
                    <values>
                      <item value="Maintenance" />
                    </values>
                  </parameter>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Exit maintenance mode" predefined="False" id="f1c73899-a11b-4fda-8d6b-c57c59f47b3b" type="Action@" DisplayResults="Refresh">
              <command name="Set-VMHost" notprompted="true">
                <parameters>
                  <parameter name="State" type="VMware.VimAutomation.ViCore.Types.V1.Host.VMHostState" prompted="False">
                    <values>
                      <item value="Connected" />
                    </values>
                  </parameter>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Rescan HBAs" predefined="False" id="f7ae9a66-0607-4641-9603-aafcb9625fb7" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$input | Get-VMHostStorage -RescanAllHba -RescanVmfs]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Reboot..." predefined="False" id="9a2d9fcc-34a4-4d0e-b309-e757ddff3422" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[if ([System.Windows.Forms.MessageBox]::Show('Are you sure you want to reboot the selected hosts?','Reboot hosts',[System.Windows.Forms.MessageBoxButtons]::YesNo,[System.Windows.Forms.MessageBoxIcon]::Question) -eq [System.Windows.Forms.DialogResult]::Yes) {
	$input | ForEach-Object {
		if (($_.State -eq 'Maintenance') -or ([System.Windows.Forms.MessageBox]::Show("The host $($_.Name) is not in maintenance mode. Are you sure you want to reboot the host?",'Confirm reboot',[System.Windows.Forms.MessageBoxButtons]::YesNo,[System.Windows.Forms.MessageBoxIcon]::Warning) -eq [System.Windows.Forms.DialogResult]::Yes)) {
			$view = $_ | Get-View
			$view.RebootHost_Task($true)
		}
	}
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Shut down..." predefined="False" id="442fbf9f-fba4-490e-8048-58bdccd8025b" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[if ([System.Windows.Forms.MessageBox]::Show('Are you sure you want to shutdown the selected hosts?','Shutdown hosts',[System.Windows.Forms.MessageBoxButtons]::YesNo,[System.Windows.Forms.MessageBoxIcon]::Question) -eq [System.Windows.Forms.DialogResult]::Yes) {
	$input | ForEach-Object {
		if (($_.State -eq 'Maintenance') -or ([System.Windows.Forms.MessageBox]::Show("The host $($_.Name) is not in maintenance mode. Are you sure you want to shutdown the host?",'Confirm shutdown',[System.Windows.Forms.MessageBoxButtons]::YesNo,[System.Windows.Forms.MessageBoxIcon]::Warning) -eq [System.Windows.Forms.DialogResult]::Yes)) {
			$view = $_ | Get-View
			$view.ShutdownHost_Task($true)
		}
	}
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Remove..." predefined="False" id="d79b0a00-c0a2-4808-8153-ef637ddd7127" type="Action@" DisplayResults="Refresh">
              <command name="Remove-VMHost" notprompted="true">
                <parameters>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Generate vDiagram..." Description="" predefined="False" id="345c5df8-140f-445a-84d4-3078124bf235" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param(
	[bool]$HostToVM = $true,
	[bool]$NetworkToVM = $false,
	[bool]$DatastoreToVM = $false,
	[bool]$HostToDatastore = $false,
	[UInt16]$MaximumLeafDepth = 10
)

#region Import the Visio assembly if it is not already loaded.
$visioAssembly = Import-VisioAssembly -PassThru
#endregion

#region Return immediately if the Visio assembly was not found.
if (-not $visioAssembly) {
	return
}
#endregion

#region Install the stencil file(s) that are required.
Install-VMwarePowerPackStencilFile -Filename 'Virtualization Visio Stencil.vss'
#endregion

#region Generate the requested Visio diagrams using VI Infrastructure data.
$pageIndex = 1
$selectedItems = $input | Sort-Object -Property Name
$visio = Visio {
	DefaultPageDiagramStyle 'Flowchart' -Direction 'Left to Right' -PlacementDepth 'Shallow'
	DefaultPageConnectorStyle 'Simple' -Spacing '20mm' -Curvature 'Straight'
	DefaultPageAutoEnlarge $true
	Document {
		$pageIndex = 1
		Stencil 'Virtualization Visio Stencil.vss'
		$selectedItems | Group-Object -Property Host | ForEach-Object {
			$managedHost = $_.Name
			$dataCache = @{}
			Write-Progress -Activity 'Caching managed host infrastructure' -Status 'Adding datacenters to the cache.'
			$dataCache['Datacenter'] = @(Get-Datacenter -Server $managedHost)
			Write-Progress -Activity 'Caching managed host infrastructure' -Status 'Adding clusters to the cache.'
			$dataCache['Cluster'] = @($dataCache.Datacenter | ForEach-Object {$_ | Get-Cluster | Add-Member -MemberType NoteProperty -Name DatacenterId -Value $_.Id -PassThru})
			Write-Progress -Activity 'Caching managed host infrastructure' -Status 'Adding hosts to the cache.'
			$dataCache['VMHost'] = @($dataCache.Cluster | ForEach-Object {$_ | Get-VMHost -NoRecursion | Add-Member -MemberType NoteProperty -Name DatacenterId -Value $_.DatacenterId -PassThru | Add-Member -MemberType NoteProperty -Name ClusterId -Value $_.Id -PassThru})
			$dataCache['VMHost'] += @($dataCache.Datacenter | ForEach-Object {$datacenterId = $_.Id; $hostIds = @($dataCache.VMHost | Where-Object {$_.DatacenterId -eq $datacenterId} | ForEach-Object {$_.Id}); $_ | Get-VMHost | Where-Object {$hostIds -notcontains $_.Id} | Add-Member -MemberType NoteProperty -Name DatacenterId -Value $_.Id -PassThru | Add-Member -MemberType NoteProperty -Name ClusterId -Value $null -PassThru})
			Write-Progress -Activity 'Caching managed host infrastructure' -Status 'Adding virtual machines to the cache.'
			$dataCache['VM'] = @($dataCache.VMHost | ForEach-Object {$_ | Get-VM -NoRecursion | Add-Member -MemberType NoteProperty -Name DatacenterId -Value $_.DatacenterId -PassThru | Add-Member -MemberType NoteProperty -Name ClusterId -Value $_.ClusterId -PassThru})
			$virtualCenter = Test-VMwareManagementServerByName -ManagedHost $managedHost
			$infrastructurePageName = "Infrastructure ($($_.Name))"
			$networkPageName = "Network ($($_.Name))"
			$storageVMotionPageName = "Storage - VMotion ($($_.Name))"
			$hostStoragePageName = "Storage - Hosts ($($_.Name))"
			$rootShapeName = 'Virtual Center Management Console'
			if (-not $virtualCenter) {
				$rootShapeName = 'ESX Host'
			}
			$rootShapeLabel = $_.Name
			$rootObjects = $_.Group
			$processVirtualMachineScriptBlock = {
				param(
					$CurrentObject = $null,
					$ParentShape = $null,
					[REF]$LastShape,
					[REF]$CurrentLeafDepth
				)
				$CurrentLeafDepth.Value++
				$vmShapeName = 'Other Server'
				switch -regex ($CurrentObject.Guest.OSFullName) {
					'Microsoft' {$vmShapeName = 'Microsoft Server'; break}
					'Linux'     {$vmShapeName = 'Linux Server';     break}
				}
				$vmShape = Shape $vmShapeName -Label $CurrentObject.Name {
					Connect -ToShape $LastShape.Value
				}
				if (($MaximumLeafDepth -ne 0) -and ($CurrentLeafDepth.Value -eq $MaximumLeafDepth)) {
					$CurrentLeafDepth.Value = 0
					$LastShape.Value = $ParentShape
				} else {
					$LastShape.Value = $vmShape
				}
			}
			if ($HostToVM) {
				Page $pageIndex {
					Name $infrastructurePageName
					$rootShape = Shape $rootShapeName -Label $rootShapeLabel
					$processVMHostScriptBlock = {
						param(
							$ParentObject = $null,
							$ParentShape = $null
						)
						$vmHostShape = Shape 'ESX Host' -Label $ParentObject.Name {
							Connect -ToShape $ParentShape
						}
						$lastShape = $vmHostShape
						$currentLeafDepth = 0
						$dataCache.VM | Where-Object {$_.HostId -eq $ParentObject.Id} | Sort-Object -Property Name | ForEach-Object {
							& $processVirtualMachineScriptBlock $_ $vmHostShape ([REF]$lastShape) ([REF]$currentLeafDepth)
						}
					}
					$rootObjects | ForEach-Object {
						if ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl]) {
							$dataCenterShape = Shape 'Datacenter' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							$datacenterId = $_.Id
							$dataCache.Cluster | Where-Object {$_.DatacenterId -eq $datacenterId} | Sort-Object -Property Name | ForEach-Object {
								$clusterShape = Shape 'Cluster' -Label $_.Name {
									Connect -ToShape $datacenterShape
								}
								$clusterId = $_.Id
								$dataCache.VMHost | Where-Object {$_.ClusterId -eq $clusterId} | Sort-Object -Property Name | ForEach-Object {
									& $processVMHostScriptBlock $_ $clusterShape
								}
							}
							$dataCache.VMHost | Where-Object {($_.DatacenterId -eq $datacenterId) -and (-not $_.ClusterId)} | Sort-Object -Property Name | ForEach-Object {
								& $processVMHostScriptBlock $_ $datacenterShape
							}
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl]) {
							$clusterShape = Shape 'Cluster' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							$clusterId = $_.Id
							$dataCache.VMHost | Where-Object {$_.ClusterId -eq $clusterId} | Sort-Object -Property Name | ForEach-Object {
								& $processVMHostScriptBlock $_ $clusterShape
							}
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl]) {
							if ($virtualCenter) {
								& $processVMHostScriptBlock $_ $rootShape
							} else {
								$lastShape = $rootShape
								$currentLeafDepth = 0
								$hostId = $_.Id
								$dataCache.VM | Where-Object {$_.HostId -eq $hostId} | Sort-Object -Property Name | ForEach-Object {
									& $processVirtualMachineScriptBlock $_ $rootShape ([REF]$LastShape) ([REF]$CurrentLeafDepth)
								}
							}
						}
					}
					Layout -ArrangeShapes -CenterDrawing
				}
				$pageIndex++
			}
			if ($NetworkToVM) {
				Page $pageIndex {
					Name $networkPageName
					$rootShape = Shape $rootShapeName -Label $rootShapeLabel
					$processVMHostScriptBlock = {
						param(
							$ParentObject = $null,
							$ParentShape = $null
						)
						$ParentObject | Get-View -Property Network | Select-Object -ExpandProperty Network | ConvertFrom-ManagedObjectReference -Property Name,Host,Vm -Server $managedHost | Sort-Object -Property Name | ForEach-Object {
							$networkShape = Shape 'Physical Switch' -Label $_.Name {
								Connect -ToShape $ParentShape
							}
							$networkVmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
							$networkVmHostIds = @($_.Host | ForEach-Object {"$($_.Type)-$($_.Value)"})
							$dataCache.VMHost | Where-Object {$networkVmHostIds -contains $_.Id} | Sort-Object -Property Name | ForEach-Object {
								$vmHostShape = Shape 'ESX Host' -Label $_.Name {
									Connect -ToShape $networkShape
								}
								$vmHostId = $_.Id
								$lastShape = $vmHostShape
								$currentLeafDepth = 0
								$dataCache.VM | Where-Object {($networkVmIds -contains $_.Id) -and ($_.HostId -eq $vmHostId)} | Sort-Object -Property Name | ForEach-Object {
									& $processVirtualMachineScriptBlock $_ $vmHostShape ([REF]$lastShape) ([REF]$currentLeafDepth)
								}
							}
						}
					}
					$rootObjects | ForEach-Object {
						if ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl]) {
							$dataCenterShape = Shape 'Datacenter' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							& $processVMHostScriptBlock $_ $dataCenterShape
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl]) {
							$clusterShape = Shape 'Cluster' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							& $processVMHostScriptBlock $_ $clusterShape
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl]) {
							if ($virtualCenter) {
								& $processVMHostScriptBlock $_ $rootShape
							} else {
								$_ | Get-View -Property Network | Select-Object -ExpandProperty Network | ConvertFrom-ManagedObjectReference -Property Name,Vm -Server $managedHost | Sort-Object -Property Name | ForEach-Object {
									$networkShape = Shape 'Physical Switch' -Label $_.Name {
										Connect -ToShape $rootShape
									}
									$networkVmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
									$lastShape = $networkShape
									$currentLeafDepth = 0
									$dataCache.VM | Where-Object {$networkVmIds -contains $_.Id} | Sort-Object -Property Name | ForEach-Object {
										& $processVirtualMachineScriptBlock $_ $networkShape ([REF]$lastShape) ([REF]$currentLeafDepth)
									}
								}
							}
						}
					}
					Layout -ArrangeShapes -CenterDrawing
				}
				$pageIndex++
			}
			if ($DatastoreToVM) {
				Page $pageIndex {
					Name $storageVMotionPageName
					$rootShape = Shape $rootShapeName -Label $rootShapeLabel
					$processVMHostScriptBlock = {
						param(
							$ParentObject = $null,
							$ParentShape = $null
						)
						$ParentObject | Get-View -Property Datastore | Select-Object -ExpandProperty Datastore | ConvertFrom-ManagedObjectReference -Property Info,Host,Vm -Server $managedHost | Sort-Object -Property {$_.Info.Name} | ForEach-Object {
							$datastoreShape = Shape 'Datastore' -Label $_.Info.Name {
								Connect -ToShape $ParentShape
							}
							$vmHostIds = @($_.Host | ForEach-Object {"$($_.Key.Type)-$($_.Key.Value)"})
							$vmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
							$dataCache.VMHost | Where-Object {$vmHostIds -contains $_.Id} | Sort-Object -Property Name | ForEach-Object {
								$vmHostShape = Shape 'ESX Host' -Label $_.Name {
									Connect -ToShape $datastoreShape
								}
								$vmHostId = $_.Id
								$lastShape = $vmHostShape
								$currentLeafDepth = 0
								$dataCache.VM | Where-Object {($vmIds -contains $_.Id) -and ($_.HostId -eq $vmHostId)} | Sort-Object -Property Name | ForEach-Object {
									& $processVirtualMachineScriptBlock $_ $vmHostShape ([REF]$lastShape) ([REF]$currentLeafDepth)
								}
							}
						}
					}
					$rootObjects | ForEach-Object {
						if ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl]) {
							$dataCenterShape = Shape 'Datacenter' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							& $processVMHostScriptBlock $_ $dataCenterShape
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl]) {
							$clusterShape = Shape 'Cluster' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							& $processVMHostScriptBlock $_ $clusterShape
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl]) {
							if ($virtualCenter) {
								& $processVMHostScriptBlock $_ $rootShape
							} else {
								$vmHostId = $_.Id
								$_ | Get-View -Property Datastore | Select-Object -ExpandProperty Datastore | ConvertFrom-ManagedObjectReference -Property Info,Vm -Server $managedHost | Sort-Object -Property {$_.Info.Name} | ForEach-Object {
									$datastoreShape = Shape 'Datastore' -Label $_.Info.Name {
										Connect -ToShape $rootShape
									}
									$vmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
									$lastShape = $datastoreShape
									$currentLeafDepth = 0
									$dataCache.VM | Where-Object {($vmIds -contains $_.Id) -and ($_.HostId -eq $vmHostId)} | Sort-Object -Property Name | ForEach-Object {
										& $processVirtualMachineScriptBlock $_ $datastoreShape ([REF]$lastShape) ([REF]$currentLeafDepth)
									}
								}
							}
						}
					}
					Layout -ArrangeShapes -CenterDrawing
				}
				$pageIndex++
			}
			if ($HostToDatastore) {
				Page $pageIndex {
					Name $hostStoragePageName
					$rootShape = Shape $rootShapeName -Label $rootShapeLabel
					$processVMHostScriptBlock = {
						param(
							$ParentObject = $null,
							$ParentShape = $null
						)
						$vmHostShape = Shape 'ESX Host' -Label $ParentObject.Name {
							Connect -ToShape $ParentShape
						}
						$ParentObject | Get-View -Property Datastore | Select-Object -ExpandProperty Datastore | ConvertFrom-ManagedObjectReference -Property Info,Host,Vm -Server $managedHost | Sort-Object -Property {$_.Info.Name} | ForEach-Object {
							$datastoreShape = Shape 'Datastore' -Label $_.Info.Name {
								Connect -ToShape $vmHostShape
							}
							$vmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
							$lastShape = $datastoreShape
							$currentLeafDepth = 0
							$dataCache.VM | Where-Object {($vmIds -contains $_.Id) -and ($_.HostId -eq $ParentObject.Id)} | Sort-Object -Property Name | ForEach-Object {
								& $processVirtualMachineScriptBlock $_ $datastoreShape ([REF]$lastShape) ([REF]$currentLeafDepth)
							}
						}
					}
					$rootObjects | ForEach-Object {
						if ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl]) {
							$dataCenterShape = Shape 'Datacenter' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							$datacenterId = $_.Id
							$dataCache.Cluster | Where-Object {$_.DatacenterId -eq $datacenterId} | Sort-Object -Property Name | ForEach-Object {
								$clusterShape = Shape 'Cluster' -Label $_.Name {
									Connect -ToShape $datacenterShape
								}
								$clusterId = $_.Id
								$dataCache.VMHost | Where-Object {$_.ClusterId -eq $clusterId} | Sort-Object -Property Name | ForEach-Object {
									& $processVMHostScriptBlock $_ $clusterShape
								}
							}
							$dataCache.VMHost | Where-Object {($_.DatacenterId -eq $datacenterId) -and (-not $_.ClusterId)} | Sort-Object -Property Name | ForEach-Object {
								& $processVMHostScriptBlock $_ $datacenterShape
							}
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl]) {
							$clusterShape = Shape 'Cluster' -Label $_.Name {
								Connect -ToShape $rootShape
							}
							$clusterId = $_.Id
							$dataCache.VMHost | Where-Object {$_.ClusterId -eq $clusterId} | Sort-Object -Property Name | ForEach-Object {
								& $processVMHostScriptBlock $_ $clusterShape
							}
						} elseif ($_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl]) {
							if ($virtualCenter) {
								& $processVMHostScriptBlock $_ $rootShape
							} else {
								$vmHostId = $_.Id
								$_ | Get-View -Property Datastore | Select-Object -ExpandProperty Datastore | ConvertFrom-ManagedObjectReference -Property Info,Vm -Server $managedHost | Sort-Object -Property {$_.Info.Name} | ForEach-Object {
									$datastoreShape = Shape 'Datastore' -Label $_.Info.Name {
										Connect -ToShape $rootShape
									}
									$vmIds = @($_.Vm | ForEach-Object {"$($_.Type)-$($_.Value)"})
									$lastShape = $datastoreShape
									$currentLeafDepth = 0
									$dataCache.VM | Where-Object {($vmIds -contains $_.Id) -and ($_.HostId -eq $vmHostId)} | Sort-Object -Property Name | ForEach-Object {
										& $processVirtualMachineScriptBlock $_ $datastoreShape ([REF]$lastShape) ([REF]$currentLeafDepth)
									}
								}
							}
						}
					}
					Layout -ArrangeShapes -CenterDrawing
				}
				$pageIndex++
			}
		}
	}
}
#endregion]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Generate vReport" Description="" predefined="False" id="ae723934-9516-47cf-82aa-c473069ba8be" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$selectedItemGroups = @($Input `
	| Sort-Object -Property Name `
	| ForEach-Object {
		if (($_.PSObject.TypeNames[0] -eq 'ManagedVMwareHost') -and (-not (Test-VMwareManagementServer -ManagedHost $_))) {
			$managedHost = $_
			Get-VMHost -Server $managedHost.Connection | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru
			}
		} else {
			$_
		}
	} `
	| Group-Object -Property {if ($_ -eq $null) {'Null'} elseif ($_.PSObject.TypeNames[0] -eq 'ManagedVMwareHost') {'ManagedVMwareHost'} else {$_.GetType().FullName}})

foreach ($group in $selectedItemGroups) {
	$selectedItems = $group.Group
	if ($selectedItems[0].PSObject.TypeNames -contains 'ManagedVMwareHost') {
		$selectedItems = @($selectedItems | ForEach-Object {
			$_.Connect()
			if ($_.Connected -and (Test-VMwareManagementServer -ManagedHost $_)) {
				$_
			}
		})
	}
	if (-not $selectedItems) {
		continue
	}
	$selectedItems | Out-VReport
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="New virtual machine..." Description="" predefined="False" id="6c354f9b-b0ab-47f0-b479-dbac5e83b1ae" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param (
	[String]$Name = 'New VM',
	[Int32]$MemoryMB = 256,
	[Int32]$DiskMB = 1024,
	$GuestID,
	$Pool,
	$Folder
)

$input | ForEach-Object {
	$managedHost = $_.Host
	$_ `
		| New-VM -Name $Name -MemoryMB $MemoryMB -DiskMB $DiskMB -GuestId $GuestID -ResourcePool (Get-ResourcePool $Pool -Server $managedHost) -Location (Get-Folder $Folder -Server $managedHost) -RunAsync
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="New..." Description="" predefined="False" id="50a8f11b-0d0d-4aa3-8b01-74d4d649ca71" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param (
	[String]$Location,
	[String]$Name,
	[String[]]$HostName
)

function IsThisHostConnected($itemHost)
{
	if ($defaultVIServers) {
		foreach ($h in $defaultVIServers) {
			if ($itemHost -eq $h.Name -and $h.IsConnected) {
				return $true;
			}
		}
	}
	return $false
}

foreach ($item in $HostName) {
	if (IsThisHostConnected($item) -eq $false) {
		Connect-VIServer $item 
	}
	if ($item.IsConnected) {
		if ($cluster = Get-Cluster -Name $Location -Server $managedHost.Connection -ErrorAction SilentlyContinue) {
			New-ResourcePool -Location ($cluster | Get-ResourcePool -NoRecursion) -Name $Name
		} elseif ($vmHost = Get-VMHost -Name $Location -Server $managedHost.Connection -ErrorAction SilentlyContinue) {
			New-ResourcePool -Location ($vmHost | Get-ResourcePool -NoRecursion) -Name $Name
		} elseif ($resourcePool = Get-ResourcePool -Name $Location -Server $managedHost.Connection -ErrorAction SilentlyContinue) {
			New-ResourcePool -Location $resourcePool -Name $Name
		}
	}
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Modify..." predefined="False" id="0daaa3f7-b936-4734-8124-78d588d268a6" type="Action@" DisplayResults="Refresh">
              <command name="Set-ResourcePool" notprompted="false">
                <parameters>
                  <parameter name="CpuExpandableReservation" type="System.Boolean" prompted="True" />
                  <parameter name="CpuLimitMhz" type="System.Int64" prompted="True" />
                  <parameter name="CpuReservationMhz" type="System.Int64" prompted="True" />
                  <parameter name="CpuSharesLevel" type="VMware.VimAutomation.ViCore.Types.V1.SharesLevel" prompted="True" />
                  <parameter name="MemExpandableReservation" type="System.Boolean" prompted="True" />
                  <parameter name="MemLimitMB" type="System.Int64" prompted="True" />
                  <parameter name="MemReservationMB" type="System.Int64" prompted="True" />
                  <parameter name="MemSharesLevel" type="VMware.VimAutomation.ViCore.Types.V1.SharesLevel" prompted="True" />
                  <parameter name="NumCpuShares" type="System.Int32" prompted="True" />
                  <parameter name="NumMemShares" type="System.Int32" prompted="True" />
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Generate vReport" Description="" predefined="False" id="543a238f-69fb-4225-9122-b89b150a5214" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$selectedItemGroups = @($Input `
	| Sort-Object -Property Name `
	| ForEach-Object {
		if (($_.PSObject.TypeNames[0] -eq 'ManagedVMwareHost') -and (-not (Test-VMwareManagementServer -ManagedHost $_))) {
			$managedHost = $_
			Get-VMHost -Server $managedHost.Connection | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru
			}
		} else {
			$_
		}
	} `
	| Group-Object -Property {if ($_ -eq $null) {'Null'} elseif ($_.PSObject.TypeNames[0] -eq 'ManagedVMwareHost') {'ManagedVMwareHost'} else {$_.GetType().FullName}})

foreach ($group in $selectedItemGroups) {
	$selectedItems = $group.Group
	if ($selectedItems[0].PSObject.TypeNames -contains 'ManagedVMwareHost') {
		$selectedItems = @($selectedItems | ForEach-Object {
			$_.Connect()
			if ($_.Connected -and (Test-VMwareManagementServer -ManagedHost $_)) {
				$_
			}
		})
	}
	if (-not $selectedItems) {
		continue
	}
	$selectedItems | Out-VReport
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Rename..." predefined="False" id="2ee098ac-00d3-4299-a95a-a6fe8df262f5" type="Action@" DisplayResults="Refresh">
              <command name="Set-ResourcePool" notprompted="false">
                <parameters>
                  <parameter name="Name" type="System.String" prompted="True" />
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Remove..." predefined="False" id="bc9b94c3-b236-492a-aaad-816db9e53fbf" type="Action@" DisplayResults="Refresh">
              <command name="Remove-ResourcePool" notprompted="true">
                <parameters>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Rename..." predefined="False" id="ce9512ae-c444-43d8-a6d1-078a5d449544" type="Action@" DisplayResults="Refresh">
              <command name="Set-Template" notprompted="false">
                <parameters>
                  <parameter name="Name" type="System.String" prompted="True" />
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.TemplateImpl</type>
              </Types>
            </container>
            <container name="Convert to virtual machine..." predefined="False" id="dd458ed5-4899-4a64-af40-e6a17333553d" type="Action@" DisplayResults="Refresh">
              <command name="Set-Template" notprompted="true">
                <parameters>
                  <parameter name="ToVM" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.TemplateImpl</type>
              </Types>
            </container>
            <container name="Remove..." predefined="False" id="9c4a87ab-5618-4556-b495-3246daa2fecb" type="Action@" DisplayResults="Refresh">
              <command name="Remove-Template" notprompted="true">
                <parameters>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.TemplateImpl</type>
              </Types>
            </container>
            <container name="Delete..." predefined="False" id="b5d024a5-1a31-445a-94bc-b14bd6a24b04" type="Action@" DisplayResults="Refresh">
              <command name="Remove-Template" notprompted="true">
                <parameters>
                  <parameter name="DeleteFromDisk" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.TemplateImpl</type>
              </Types>
            </container>
            <container name="Rename..." predefined="False" id="62155f30-ad37-45d9-96b7-737711152b42" type="Action@" DisplayResults="Refresh">
              <command name="Set-Datastore" notprompted="false">
                <parameters>
                  <parameter name="Name" type="System.String" prompted="True" />
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Add managed host..." predefined="False" id="654b3b53-afda-446a-8fef-072b62fa7895" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param(
	[String[]]$HostId,
	[int]$Port = 443,
	[string]$Protocol = 'HTTPS',
	[string]$ConnectionAccount = $null,
	[bool]$UseSingleSignOn = $true
)

Add-ManagedHost -HostId $HostId -Port $Port -Protocol $Protocol -ConnectionAccount $ConnectionAccount -UseSingleSignOn:$UseSingleSignOn]]></script>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Connect..." predefined="False" id="e88052e8-0d9a-4ce6-9b4f-7986a825bd9a" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$input | ForEach-Object {
	$_.Connect()
}]]></script>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Disconnect" predefined="False" id="3793d823-3963-4b61-9578-c0c424360da1" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$input | ForEach-Object {
	$_.Disconnect()
}]]></script>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Reconnect" predefined="False" id="a2af0764-c59e-43cc-b236-a6c933cf13ff" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$input | ForEach-Object {
	$_.Reconnect()
}]]></script>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Generate vReport" Description="" predefined="False" id="21ac1ce6-af7f-43ac-9059-62cb1b1d6dc5" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$selectedItemGroups = @($Input `
	| Sort-Object -Property Name `
	| ForEach-Object {
		if (($_.PSObject.TypeNames[0] -eq 'ManagedVMwareHost') -and (-not (Test-VMwareManagementServer -ManagedHost $_))) {
			$managedHost = $_
			Get-VMHost -Server $managedHost.Connection | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru
			}
		} else {
			$_
		}
	} `
	| Group-Object -Property {if ($_ -eq $null) {'Null'} elseif ($_.PSObject.TypeNames[0] -eq 'ManagedVMwareHost') {'ManagedVMwareHost'} else {$_.GetType().FullName}})

foreach ($group in $selectedItemGroups) {
	$selectedItems = $group.Group
	if ($selectedItems[0].PSObject.TypeNames -contains 'ManagedVMwareHost') {
		$selectedItems = @($selectedItems | ForEach-Object {
			$_.Connect()
			if ($_.Connected -and (Test-VMwareManagementServer -ManagedHost $_)) {
				$_
			}
		})
	}
	if (-not $selectedItems) {
		continue
	}
	$selectedItems | Out-VReport
}]]></script>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Modify..." predefined="False" id="da8ace69-170b-4fed-802d-2f2a14aa9bc0" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[param(
	[int]$Port = 443,
	[string]$Protocol = 'HTTPS',
	[string]$ConnectionAccount,
	[bool]$UseSingleSignOn = $true
)

$input | ForEach-Object {
	$_.Port = $Port
	$_.Protocol = $Protocol
	$_.UseSingleSignOn = $UseSingleSignOn
	if (($_.ConnectionAccount -ne $ConnectionAccount) -or (-not $UseSingleSignOn)) {
		$_.ConnectionAccount = $ConnectionAccount
		Remove-CacheAssociation -AssociatedObjectId $_.Name
	}
}

# Export the file system cache with the new list of managed hosts
Export-VMwarePowerPackConfiguration]]></script>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Import managed hosts..." predefined="False" id="65459548-7f5c-416a-b444-9feab07c4b37" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$openFileDialog = New-Object -TypeName System.Windows.Forms.OpenFileDialog
$openFileDialog.InitialDirectory = $Host.PrivateData.UserAppData
$openFileDialog.Filter = 'XML Files (*.xml)|*.xml|All Files (*.*)|*.*'
$openFileDialog.Title = 'Import VMware PowerPack Connections'
$openFileDialog.ShowHelp = $true
if ($openFileDialog.ShowDialog() -eq [System.Windows.Forms.DialogResult]::OK) {
	$configXmlPath = $openFileDialog.FileName
	Import-VMwarePowerPackConfiguration -Path $configXmlPath
	Export-VMwarePowerPackConfiguration
}]]></script>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Export managed hosts..." predefined="False" id="98e6687b-3469-407b-a276-ca91569d9168" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$saveFileDialog = New-Object -TypeName System.Windows.Forms.SaveFileDialog
$saveFileDialog.InitialDirectory = $Host.PrivateData.UserAppData
$saveFileDialog.Filter = 'XML Files (*.xml)|*.xml|All Files (*.*)|*.*'
$saveFileDialog.Title = 'Save VMware PowerPack Connections'
$saveFileDialog.ShowHelp = $true
if ($saveFileDialog.ShowDialog() -eq [System.Windows.Forms.DialogResult]::OK) {
	$configXmlPath = $saveFileDialog.FileName
	Export-VMwarePowerPackConfiguration -Path $configXmlPath
}]]></script>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Remove" predefined="False" id="3953ad33-c9f6-48f2-b82d-d669b2915a36" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[# Remove the selected managed hosts from the admin console

$configXmlPath = "$($Host.PrivateData.UserAppData)\VMware.PowerPack.Config.xml"

if (Test-Path -Path $configXmlPath) {
	$input | ForEach-Object {
		if ($_.Name -ne 'Local System') {
			$global:vmwareManagedHosts.Remove($_.Name)
		}
	}
	$global:vmwareConfiguration.ManagedHosts = @($global:vmwareManagedHosts.Values | ForEach-Object{$_} | Sort-Object -Property Name)

	# Export the file system cache with the list of managed hosts

	$exportableConfiguration = $global:vmwareConfiguration.Clone();
	$exportableConfiguration.ManagedHosts = @()
	if ($global:vmwareConfiguration.ManagedHosts) {
		foreach ($managedHost in $global:vmwareConfiguration.ManagedHosts) {
			$exportableConfiguration.ManagedHosts += $managedHost `
				| Select-Object -Property Name,Port,Protocol,ConnectionAccount,UseSingleSignOn `
				| ForEach-Object {
					$_.PSObject.TypeNames.Clear()
					$_.PSObject.TypeNames.Insert(0,'ManagedVMwareHost')
					$_
				}
		}
	}
	$exportableConfiguration | Export-Clixml -Path $configXmlPath
}]]></script>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Clear cached credentials" predefined="False" id="4b4ffae3-06e3-4c4c-ab97-1964cf5def31" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$input | ForEach-Object {
	Remove-CachedCredential -UserName $_.ConnectionAccount
}]]></script>
              <Types>
                <type>ManagedVMwareHost</type>
              </Types>
            </container>
            <container name="Revert to..." predefined="False" id="6602fcdd-d4d0-4075-a8c1-49d3cfc2d3b1" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$input | ForEach-Object { 
	$_.VM | Set-VM -Snapshot $_ -RunAsync
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Generate vReport" Description="" predefined="False" id="8f34f9f5-482b-465e-b41b-9b45579ccca1" type="Action@" DisplayResults="Refresh">
              <script><![CDATA[$selectedItemGroups = @($Input `
	| Sort-Object -Property Name `
	| ForEach-Object {
		if (($_.PSObject.TypeNames[0] -eq 'ManagedVMwareHost') -and (-not (Test-VMwareManagementServer -ManagedHost $_))) {
			$managedHost = $_
			Get-VMHost -Server $managedHost.Connection | ForEach-Object {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru
			}
		} else {
			$_
		}
	} `
	| Group-Object -Property {if ($_ -eq $null) {'Null'} elseif ($_.PSObject.TypeNames[0] -eq 'ManagedVMwareHost') {'ManagedVMwareHost'} else {$_.GetType().FullName}})

foreach ($group in $selectedItemGroups) {
	$selectedItems = $group.Group
	if ($selectedItems[0].PSObject.TypeNames -contains 'ManagedVMwareHost') {
		$selectedItems = @($selectedItems | ForEach-Object {
			$_.Connect()
			if ($_.Connected -and (Test-VMwareManagementServer -ManagedHost $_)) {
				$_
			}
		})
	}
	if (-not $selectedItems) {
		continue
	}
	$selectedItems | Out-VReport
}]]></script>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Modify..." predefined="False" id="78846cf4-15e8-4814-9ec5-2683385ddc69" type="Action@" DisplayResults="Refresh">
              <command name="Set-Snapshot" notprompted="false">
                <parameters>
                  <parameter name="Description" type="System.String" prompted="True" />
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Rename..." predefined="False" id="c4bede82-f90d-460d-9cac-4ee5ddb78782" type="Action@" DisplayResults="Refresh">
              <command name="Set-Snapshot" notprompted="false">
                <parameters>
                  <parameter name="Name" type="System.String" prompted="True" />
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Remove..." predefined="False" id="7f59f8bb-23aa-4afb-840c-92aea60034e9" type="Action@" DisplayResults="Refresh">
              <command name="Remove-Snapshot" notprompted="true">
                <parameters>
                  <parameter name="RemoveChildren" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Remove tree..." predefined="False" id="9765fdcd-d88a-4e4a-a02b-bec2680180f2" type="Action@" DisplayResults="Refresh">
              <command name="Remove-Snapshot" notprompted="true">
                <parameters>
                  <parameter name="RemoveChildren" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="RunAsync" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="True" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Create subfolder..." predefined="False" id="6e549549-c5ac-442c-bf56-e0f546d51202" type="Action@" DisplayResults="Refresh">
              <command name="New-Folder" notprompted="false">
                <parameters>
                  <parameter name="Name" type="System.String" prompted="True" />
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl</type>
              </Types>
            </container>
            <container name="Rename..." predefined="False" id="596f7fd9-c344-4790-96d3-bc2b94410cd8" type="Action@" DisplayResults="Refresh">
              <command name="Set-Folder" notprompted="false">
                <parameters>
                  <parameter name="Name" type="System.String" prompted="True" />
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl</type>
              </Types>
            </container>
            <container name="Add Port Group..." Description="" predefined="False" id="76c06415-4cc1-43fe-998f-d24b3e1e56af" type="Action@" RequireSelection="Yes" DisplayResults="Refresh">
              <script><![CDATA[param(
	[String]$PortGroupName = "",
	[int]$VLANID = 0
)

$input | ForEach-Object {
	$vswitch = Get-VirtualSwitch -VMHost $_.VMHost -Name $_.Name
	New-VirtualPortGroup -VirtualSwitch $vswitch -Name $PortGroupName -VLanId $VLANID
}]]></script>
              <Types>
                <type>VMware.Vim.HostVirtualSwitch#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Modify VLANID..." Description="" predefined="False" id="b5f7c1db-3212-4f53-b35d-a91e0edba38a" type="Action@" RequireSelection="Yes" DisplayResults="Refresh">
              <script><![CDATA[param(
	[int]$VLANID = 0
)

$input | ForEach-Object {
   $key = $_.key
   $HostID = $_.VMHostID
   $vmHost = Get-VMHost -Id $HostID
   Get-VirtualPortGroup -VMHost $vmHost  | where  {$_.key -eq $key} | Set-VirtualPortGroup -VLanId $VLANID
}]]></script>
              <Types>
                <type>VMware.Vim.HostPortGroup#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Remove" Description="" predefined="False" id="5041edef-ed4b-40be-8cc2-72a388c7393e" type="Action@" RequireSelection="Yes" DisplayResults="Refresh">
              <script><![CDATA[$pgArray = @{}
$pgCount = 0
$input | ForEach-Object {
	
   $key = $_.key
   $HostID = $_.VMHostID
   $vmHost = Get-VMHost -Id $HostID

   $pgArray.Add($pgCount++,(Get-VirtualPortGroup -VMHost $vmHost -Server $_.Host | where  {$_.key -eq $key}))
}

$pgArray.get_Values() | Remove-VirtualPortGroup]]></script>
              <Types>
                <type>VMware.Vim.HostPortGroup#VMwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Modify..." Description="" predefined="False" id="148aaa68-d497-4014-91c7-5635d2f2af59" type="Action@" RequireSelection="Yes" DisplayResults="Refresh">
              <script><![CDATA[param(
	[bool]$AllowPromiscuous,
	[bool]$MacChanges,
	[bool]$ForgedTransmits
)

$input | ForEach-Object {
	$_.set_AllowPromiscuous($AllowPromiscuous)
	$_.set_MacChanges($MacChanges)
	$_.set_ForgedTransmits($ForgedTransmits)
}]]></script>
              <Types>
                <type>VMware.Vim.HostNetworkSecurityPolicy#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Remove" Description="" predefined="False" id="1ef90fda-2852-4dc0-9cf8-3561d549e6f7" type="Action@" RequireSelection="Yes" DisplayResults="Refresh">
              <script><![CDATA[$Input | ForEach-Object {
    $managedHost = $_.Host
	$hostIP = $managedHost
	$vmHostID = $_.ID
	$vmHost = Get-VMHost -Id $vmHostID -Server $_.Host
	$key = $_.key
	$vSwitch = Get-VirtualSwitch -Server $_.Host -VMHost $vmHost | where {$_.key -eq $key }
	Remove-VirtualSwitch $vSwitch
}#id="1ef90fda-2852-4dc0-9cf8-3561d549e6f7" name="Remove" Description="" type="Action@"]]></script>
              <Types>
                <type>VMware.Vim.HostVirtualSwitch#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Remove Property" Description="" predefined="False" id="9a68b07c-2853-4cc4-9a21-34a235571b5b" type="Action@" RequireSelection="Yes" DisplayResults="Refresh">
              <script><![CDATA[
$input | ForEach-Object {
	$aProperty = $_
	foreach ($viServer in $defaultVIServers)
	{
		# see if the matching attribute is found on this server
		$custAttrib = Get-CustomAttribute -Server $viServer | where {$aProperty.Name -eq $_.Name -and $aProperty.Key -eq $_.Key -and $aProperty.ServerId -eq $_.ServerId}
		if ($custAttrib) {
			break
		}
	}

	$customFieldMgr = Get-View -Server $viServer (Get-View -Server $viServer ServiceInstance).Content.CustomFieldsManager
	$customFieldMgr.RemoveCustomFieldDef($_.key)
}]]></script>
              <Types>
                <type>customField#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Modify Value" Description="" predefined="False" id="bf5bf763-ff3a-4d57-9c88-a2579c3de90c" type="Action@" RequireSelection="Yes" DisplayResults="Refresh">
              <script><![CDATA[param (
	[string]$attribValue
)
$value = $_.Value
$input | ForEach-Object {
	if ($_."Parent Type" -eq "DataCenter"){
		$dc = Get-Datacenter -Name $_."Parent Object" -Server $_.Host
		$dc | Set-CustomField -name $_.Name -value $attribValue
	}
	elseif ($_."Parent Type" -eq "Host"){
		$vmHost = Get-VMHost -name $_."Parent Object" -Server $_.Host
		$vmHost | Set-CustomField -name $_.Name -value $attribValue
	}
	elseif ($_."Parent Type" -eq "Virtual Machine"){
		$vm = Get-VM -name $_."Parent Object" -Server $_.Host
		$vm | Set-CustomField -name $_.Name -value $attribValue
	}
}]]></script>
              <Types>
                <type>customAttribute#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Clear Value" Description="" predefined="False" id="46644424-8085-4643-ac63-1378b32ad809" type="Action@" RequireSelection="Yes" DisplayResults="Refresh">
              <script><![CDATA[$input | ForEach-Object {
	if ($_."Parent Type" -eq "DataCenter"){
		$dc = Get-Datacenter -Name $_."Parent Object" -Server $_.Host
		$dc | Set-CustomField -name $_.Name -value ""
	}
	elseif ($_."Parent Type" -eq "Host"){
		$vmHost = Get-VMHost -name $_."Parent Object" -Server $_.Host
		$vmHost | Set-CustomField -name $_.Name -value ""
	}
	elseif ($_."Parent Type" -eq "Virtual Machine"){
		$vm = Get-VM -name $_."Parent Object" -Server $_.Host
		$vm | Set-CustomField -name $_.Name -value ""
	}
}#id="46644424-8085-4643-ac63-1378b32ad809" name="Clear Value" Description="" type="Action@" ]]></script>
              <Types>
                <type>customAttribute#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Disconnect" Description="" predefined="False" id="6a25dfc9-7b5b-465a-b2cc-ee31c2ba345c" type="Action@" RequireSelection="Yes" DisplayResults="Refresh">
              <command name="Set-FloppyDrive" notprompted="true">
                <parameters>
                  <parameter name="Connected" type="System.Boolean" prompted="False">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VirtualDevice.FloppyDriveImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Set CPU Limit to Unlimited" Description="" predefined="False" id="96efc73e-7221-4750-a1cb-5e053a2a11da" type="Action@" RequireSelection="Yes" DisplayResults="Refresh">
              <command name="Set-VMResourceConfiguration" notprompted="true">
                <parameters>
                  <parameter name="CpuLimitMhz" type="System.Nullable`1[[System.Int64, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]" prompted="False">
                    <values>
                      <item value="$null" />
                    </values>
                  </parameter>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VM.VMResourceConfigurationImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Set Memory Limit to Unlimited" Description="" predefined="False" id="1349cc7f-09a4-4001-8282-48c99f072de5" type="Action@" RequireSelection="Yes" DisplayResults="Refresh">
              <command name="Set-VMResourceConfiguration" notprompted="true">
                <parameters>
                  <parameter name="MemLimitMB" type="System.Nullable`1[[System.Int64, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]]" prompted="False">
                    <values>
                      <item value="$null" />
                    </values>
                  </parameter>
                  <parameter name="Confirm" type="System.Management.Automation.SwitchParameter" prompted="False">
                    <values>
                      <item value="False" />
                    </values>
                  </parameter>
                </parameters>
              </command>
              <Types>
                <type>VMware.VimAutomation.ViCore.Impl.V1.VM.VMResourceConfigurationImpl#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Modify NIC Connection" Description="" predefined="False" id="3333092d-3b2d-4652-9aa3-7fddaff12fc5" type="Action@" RequireSelection="Yes" DisplayResults="Refresh">
              <script><![CDATA[$numLines = 0
$LinkSpeed = New-Object VMware.Vim.PhysicalNicLinkInfo
switch (Read-Choice 'Speed/Duplex Settings' 'What would you like the new Speed/Duplex configuration of the selected Physical NICs to be?' 'Auto Negotiate','10-Half','10-Full','100-Half','100-Full','1000-Full' 0) {
	0 { $LinkSpeed = $null }
	1 { 
		$LinkSpeed.SpeedMb = 10
		$LinkSpeed.Duplex = $False
	}
	2 { 
		$LinkSpeed.SpeedMb = 10
		$LinkSpeed.Duplex = $True
	}
	3 { 
		$LinkSpeed.SpeedMb = 100
		$LinkSpeed.Duplex = $False
	}
	4 { 
		$LinkSpeed.SpeedMb = 100
		$LinkSpeed.Duplex = $True
	}
	5 { 
		$LinkSpeed.SpeedMb = 1000
		$LinkSpeed.Duplex = $True
	}
}

$input | ForEach-Object {
	$vmh = Get-VMHost $_.VMHost -Server $_.Host | Get-View
	$NetSys = Get-View $vmh.ConfigManager.NetworkSystem -Server $_.Host
	$Device = $_.Device
	$NetSys.UpdatePhysicalNicLinkSpeed($Device, $LinkSpeed)
}
Start-Sleep -Seconds 7 #id="3333092d-3b2d-4652-9aa3-7fddaff12fc5" name="Modify NIC Connection" Description="" type="Action@" ]]></script>
              <Types>
                <type>PhysicalNIC#VmwarePowerPackExtension</type>
              </Types>
            </container>
            <container name="Optimize Now" Description="" predefined="False" id="0032f4c7-4941-4aba-b426-385a5bd42009" type="Action@" RequireSelection="Yes" DisplayResults="Refresh">
              <script><![CDATA[$url = "http://www.vizioncore.com/addon/index.php?ID=1.2.0&A=vOptimizer"
$browser = new-object -com internetexplorer.application
$browser.navigate2($url)
$browser.visible = 1]]></script>
              <IconB64>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PP/FhDz/xYQ8/8WEPP/Fgzv/w34z/9uzhv/+/fv//////////////v3/3LWL/8J/M//Egzr/xYQ8/8WEPP/FhDz/xYQ8/8WEPP/FhDz/xYQ8/8WEPP/GhDr/xIZB/5OGeP+Wl5n/5OXl/9jY2PSwsLDzqKmq/5eTj//Ag0H/xoQ6/8WEPP/FhDz/xYQ8/8WEPP/FhDz/xYM7/8J+M//btIj//v37/////////////v38/9y2i//CfjP/xYM7/8WEPP/FhDz/xYQ8/8WEPP/FhDz/xYQ8/8WEPP/FhDz/yYQ4/5eAaf+Bgob/4+Pj/+Pj4/K4uLjyr7Cx/5uQhP/Agj3/xoQ7/8WEPP/FhDz/xYQ8/8WEPP/FhDz/xYQ8/8SDOv/CfjP/3LSI//79/P////////////79/P/ctYn/wXsv/8F8Lv/DgDX/xYQ8/8WEPP/FhDz/xYQ8/8WEPP/FhDz/yoU4/5h5WP99foH/6Ojn/+zs7PLAwMDztre5/5aNhP++gT3/xoQ7/8WEPP/FhD3/xYQ8/8WEPP/FhDz/xYQ8/8WEPP/Fgzr/wn4z/9y1if/+/fz////////////+/fv/4b+a/9qwgv/OmV3/w380/8WDO//FhDz/xYQ8/8WEPP/FhDz/yoU5/5NzUP92d3r/7Ozt//Pz8/LJycnvwcLD/5COjP+5fj3/x4Q7/8WFPv/Jj03/x4lF/8WEPf/FhDz/xYQ8/8WEPP/FhDz/xYM6/8J+M//ctov//v79///////////////////////79/L/2bCC/8OANf/FhDz/xYQ8/8WEPP/FhDz/y4Y6/4xsSv95en3/9/f4//n5+fPQ0NDOzc3O/5eWlv+reUT/x4M4/8iNTP/OnWb/y5NW/8eKR//FhT7/xYQ8/8WEPP/FhDz/xYQ8/8SDOv/CfzP/3LOI//369/////////////Lk1P//////+vTu/8qQT//DgTf/xYQ8/8WEPP/FhDz/zIc6/31jSP+LjZH///////z8/PDZ2dmg1NTV/6iqrP+adlH/yYM1/8uUV//UrH//z6Br/8uVWP/IjUr/xYZA/8WEPP/FhDz/xYQ8/8WEPP/Fgzr/w4E2//jx6f//////582v/8WFPv/euZH//////9Oia//CfjP/xYQ8/8WEPP/GhDz/xoU8/3NiUP+pq6////////7+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</IconB64>
              <Types>
                <type>WasteFinder#VmwarePowerPackExtension</type>
              </Types>
            </container>
          </items>
        </container>
        <container name="Actions: Common" predefined="False" id="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
        <container name="Skype" predefined="False" id="16e671d0-3394-45fa-bcf1-a3bbc2b9c6f7" />
        <container name="General" predefined="False" id="3b5923b3-9344-4f66-a5ce-9ec848c8cc5a" />
        <container name="Settings" predefined="False" id="210e2076-00ce-4671-9ed3-0e1571ebbc13" />
        <container name="Search options" predefined="False" id="eda13588-d57c-4139-bd5c-84c96df01f86" />
        <container name="Related information" predefined="False" id="0869d252-c4d8-45f9-ac2e-72a937a9d1bd" />
        <container name="Security" predefined="False" id="ce69719b-6b2e-4f96-8f4d-caa0e3f016e9" />
        <container name="Power management" predefined="False" id="ad118cf8-8d55-49f9-a84c-2f6ac51e5066" />
        <container name="Toolkit" predefined="False" id="b50365e5-1fb0-458c-99ee-020a576a0003" />
        <container name="Export" predefined="False" id="85f4135d-1659-4bec-9735-56cac123aefd" />
        <container name="MobileShell" predefined="False" id="6207e7fc-6eec-4205-b0ee-d2000b871380" />
        <container name="Reporting" predefined="False" id="618f1100-3ffe-49c5-9b8b-efb14cf0c7f5" />
        <container name="ESXi Utils" predefined="False" id="f267b612-39e6-49ee-8f0b-793301bf43c9" />
        <container name="Backup" predefined="False" id="2d73ca8d-508b-4445-b73e-a40bd516cb30" />
        <container name="NTP Actions" predefined="False" id="40f157bd-c3ff-4908-8c2f-7d46ba2caad4" />
        <container name="CRLs" predefined="False" id="fef4d14c-ce42-4889-ac57-50b185ea341f" />
        <container name="CA folders" predefined="False" id="81dc2420-dcab-45f4-9da5-789d4ea84e88" />
        <container name="Test" predefined="False" id="038dda09-f159-4a8b-b8eb-4d61c679385f" />
        <container name="Test 2" predefined="False" id="8edcf537-edad-4da2-b341-c87aaf4a4045" />
        <container name="PowerPacks" predefined="False" id="593effae-405c-4447-8e9f-144cc56bfdab" />
        <container name="Aa" predefined="False" id="b9da41d2-f2b7-4926-95f2-6176e61bd607" />
        <container name="Aaa" predefined="False" id="790058c8-c5c3-43dd-8fc9-fe6d74f4b22d" />
        <container name="b" predefined="False" id="51bfb57c-456b-4e79-90ea-557e5902c6dc" />
        <container name="aa" predefined="False" id="be27ad8e-75e1-4560-a6cd-de6c48bc3a88" />
        <container name="New Category" predefined="False" id="9c55da5c-cfb7-412f-9882-3a1817b4316a" />
        <container name="Reporting" predefined="False" id="675a7bfe-e014-43fd-a574-cbbb022d86fd" />
        <container name="showme" predefined="False" id="ed8282f1-bac0-4f0f-beb2-a1cec57f7019" />
        <container name="Nouvelle catégorie" predefined="False" id="3af7ecaf-2e0b-4a78-b488-d3e93f8d2fad" />
        <container name="New Category" predefined="False" id="95fe5a21-31cb-43f9-8395-dbc2325bab05" />
        <container name="1" predefined="False" id="96738a9a-d98c-42d1-a110-9a0bb900c39b" />
        <container name="New Category1" predefined="False" id="f61a494c-32a8-4089-b47c-4ad178cd4685" />
        <container name="123124545" predefined="False" id="3171dedd-a086-416f-8d99-c6c0f839239e" />
        <container name="a" predefined="False" id="69037f75-b886-4610-bbc5-5491611af58c" />
        <container name="PowerPack toolkit" predefined="False" id="7ba5e2e7-afbc-4a26-a20f-fb34e4c4aaee" />
      </items>
    </container>
    <container name="Icons" predefined="False" id="9355c471-85b2-4b9a-92db-69873837cd8d">
      <items>
        <item name="ManagedVMwareHost" predefined="False">
          <value>ManagedVMwareHost</value>
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAEAAAADAAAABIAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEgAAAA4AAAAIbW1tm2xsbP9qamr/aGho/2ZmZv9kZGT/YmJi/2FhYf9eXl7/W1tb/1paWv9YWFj/V1dX/1FRUaMAAAAXAAAAE3Jycv/r6+v//////////////////f7//+bv8P/p7/D//f/////////3+fr//fz3/+vr6/9YWFj/WFhY/1BQUKN1dXX/6+vr/+RmHP/3dSL/8ncl//V5Jv/2eyj/9nsq//d/K//zfy3/94Aq/+6FQv/r6+v/Wlpa/+Dh4P9XV1f/eHh4/+vr6//naBr//MuX//zMmP/8y5P//c6d//3Qnv/+jDn//pA9//+ROf/5llH/6+vr/1xcXP/k5OT/WVlZ/3t7e//r6+v/6Gkc//zLl//2eyn/+IIw//yGNP/+0aH//tOi///RnP//1KL/+JZT/+vr6/9hYWH/4uPj/15eXv99fX3/6+vr/+tvI//9z5z//Yk3//+QPf//mEX//9qr//+lU///p1X//9ur//iZWf/r6+v/Y2Nj/+Lj4/9eXl7/f39//+vr6//tcyX//tGf///Tov//06D//9qq///dr///sGH//7ht///it///rW3/6+vr/2ZmZv/i4+L/YWFh/4GBgf/r6+v/8nYm//+PN///kz7//5xG///crf//37P//+K5///ku///5br//7p8/+vr6/9paWn/4eLh/2RkZP+BgYH/6+vr/+R3NP/yhj//9o5E//qSTf/8l1D//JhR//6dVv//pFr//5xU//iiZv/r6+v/bGxs/+Xm5f9nZ2f/gYGB/+bn5//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/3BwcP/o6ej/aWlp/4GBgZmBgYH/gYGB/4GBgf+BgYH/gICA/39/f/9+fn7/fX19/3t7e/96enr/d3d3/3V1df+mpqX/7e3s/2xsbP8AAAAAAAAAAAAAAAAAAAAAAAAAAH9/f//8+/v/8/Pz//Pz8v/z8vP/8/Lz//Py8v/z8vL/8/Pz//Hw8P9wcHD/AAAAAAAAAAAAAAAAAAAAAAAAAACBgYH//v7+/+fm5v/l5OT/5eTk/+Xk5P/l5OT/5eTk/+fm5v/18/P/cnJy/wAAAAAAAAAAAAAAAAAAAAAAAAAAgYGB//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+/v///////////3Z2dv8AAAAAAAAAAAAAAAAAAAAAAAAAAIGBgZmBgYH/gYGB/4CAgP+AgID/gICA/35+fv99fX3/fHx8/3p6ev93d3ebAAAAAAAA8L8AAAAAAAAAAAAAe8IAAAAAAAAAAAAAAAAAAAAAAAB/hAAAAAAAAAAA+AD///gA///4AINX+AAAAA==</IconB64>
        </item>
        <item name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl" predefined="False">
          <value>VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl</value>
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAABAAAABAAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABQAAAAIAAAAAAAAABAAAAAwAAAASAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABEAAAAJAAAAAgB8sawAerH/AHqx/wB6sf8AerD/AHqw/wB6sP8AeK//AHiv/wB4r/8AeK//AHiv/wB4rv8AXYdIAAAAEgAAAAcAfLL/DZTL/17X+f9Pzfr/R8f5/0fH+f9Hx/n/R8f5/0fH+f9Hx/n/R8f5/0fH+f8orOD/AHiu/wAAABcAAAANAHyy/y6y5P8WntL/fez//1LP//9Sz///Us///1LP//9Sz///Us///1LP//9Sz///NLPm/yGbzv8AcKJ5AAAAEgB8s/9W0v//AH60/5r5//9f2f//X9n//1/Z//9f2f//X9n//1/Z//9f2f//X9n//zq36P9fvt7/AHiv/wAAABcAfLP/Ytv//wGIwf997P//eun//23h//9q3v//at7//23h//9q3v//at7//23h//9Au+v/ofD+/wB4r/8AcKJ5AHyz/2re//8mrN3/Or3t/5r5//936f//d+n//3fp//936f//d+n//3fp//936f//R8Dw/7f3/f9u0e3/AHiv/wB8s/905///Xdj//w2Uy//i+v3/z/r+/8/6/v/P+v7/z/r+/8/6/v/P+v7/z/r+/4Tq/P/i+v3/u/L//wB4r/8AfLP/f/D//3/w//8/ttn/AHyz/wB8sv8AfLL/AHyy/wB6sf8AerH/AHqx/wB6sP8AerD/AHqw/wB4r/8AeK6sAH60/4j3//+G9P//hvT//4j3//+J+P//hvT//4j3//+G9P//iPf//4b0//+G9P//AHqw/wAAABIAAAAGAAAAAAB+tP+S+v//j/r//4/6//+P+v//j/r//+f9///n/f//5/3//+f9///n/f//5/3//wB6sf8AAAAMAAAABAAAAAAAfrT/5/3//+f9///n/f//5/3//+f9//8AfLP/AHyz/wB8sv8AfLL/AHyy/wB6sf8AerCsAAAABAAAAAEAAAAAAH60qwB+tP8AfrT/AH60/wB8s/8AfLP/AHuygQAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF/PwAAfz8AAH8/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHE/AABxPwABcT8AAXE/AAFxPwB/cT///3E///9yPw==</IconB64>
        </item>
        <item name="VMware.Vim.UserSession" predefined="False">
          <value>VMware.Vim.UserSession</value>
          <IconB64>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</IconB64>
        </item>
        <item name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl" predefined="False">
          <value>VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl</value>
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAADAAAACwAAABIAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEgAAAA8AAAANAAAADwAAABAAAAAPSmR+/0pkfv9KZH7/SmR+/0pkfv9KZH7/SmR+/0pkfv9KZH7/SmR+/0pkfv9KZH7/SmR+/0pkfv9KZH7/SmR+/0WyNWtdekH/qtGU/6rQlP+qz5L/Fmu3/zaa6v+oz5H/qM6R/1JwO/8+oDB2QqozcEOtM25ubm7/P6MxdEGnMnEAAAAAdVdO//Pp3v/z5tv/8eXa/xdsuv8qgtf/8eTX//Hk1/9fRUH/AAAAEwAAAAsAAAAPbm5u/wAAABcAAAAVAAAAAHpcUv/06uH/8+je//Hn3f8RWqP/EVqj//Hl2f/x5dj/Y0hD/wAAABOEhIT/fn5+/3d3d/9xcXH/ampq/wAAAACAYFX/9uzk//Pq4f/x6d7/8efd//Hm2//x5tr/8+fb/2dMRv8AAAATiIiI//Hx8f/s7Oz/7e3t/3R0dP8AAAAAh2VY//fu5v/9lk///YE9//Hp4f/9lk///YE9//Po3v9sUEn/AAAAE4iIiP+IiIj/iIiI/4SEhP9+fn7/AAAAAIxqXP/38Or//oE+//2ST//z6uP//YE9//2ST//06uH/clRM/wAAABMAAAALAAAADwAAABMAAAATAAAAEwAAAACSbl//+fPu//fx6//37+r/9+/p//bv5//27OX/9+zl/3dZUP8AAAAThISE/35+fv93d3f/cXFx/2pqav8AAAAAl3Ri//v28f/+l1H//rFv//fx7P/+l1D//rFu//fv6f98XlP/AAAAE4iIiP/x8fH/7Ozs/+3t7f90dHT/AAAAAJx4Zf/79/T//oNA//6TUf/59O///oI///6TUf/58ez/hGJW/wAAABOIiIj/iIiI/4iIiP+EhIT/fn5+/wAAAAChe2j//Pr3//v59v/7+fT/+/fz//v28f/69PD/+vTv/4lnWv8AAAATAAAACwAAAA8AAAATAAAAEwAAABMAAAAApYBq//77+v//mVL//7Jw//v59//+mFL//rJv//v38/+ObF3/AAAAE4SEhP9+fn7/d3d3/3Fxcf9qamr/AAAAAKqEbf/+/vz//4NB//+UUv/8+/n//4NA//6UUv/7+fb/lHFh/wAAABOIiIj/8fHx/+zs7P/t7e3/dHR0/wAAAACthm7//v7+//7+/v/+/vz//vz7//77+//8+/n//Pr5/5l1ZP8AAAAPiIiI/4iIiP+IiIj/hISE/35+fv8AAAAArodv/66Hb/+thm7/q4Rt/6eCbP+lgGv/o31p/6F7aP+feWb/AAAABQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAwAAAoMgAALGhgACxoYAAsaGAALGhgACxoYAAsaGAALGhgACxoYAAsaGAALGhgACxoYAAsaGAALGhgA+xoQ==</IconB64>
        </item>
        <item name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl" predefined="False">
          <value>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl</value>
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAEAAAADQAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATYWFhzF9fX/9bW1v/XFxc/15eXv9eXl7/Xl5e/15eXv9eXl7/Xl5e/15eXv9eXl7/XFxc/1paWv9dXV3/XV1dzWRkZP/29vb/7e3t/2BgYP/29vb/+fn5//f39//39vb/9/f2//f39//5+ff/9vb2/2BgYP/t7ev/9vb2/11dXf9oaGj/5OTk/8fHx/9hYWH/5OTk/8zMzP/Hx8f/x8fH/8fHxv/Hx8f/yMnI/+Tk5P9hYWH/w8XE/+Tk5P9dXV3/bW1t//Hy8f/g4OD/ZGRk//Hy8f/m5ub/4+Hj/9/f4f/f3+H/4ePj/+bl5v/x8vH/ZGRk/+Df4P/x8vH/XV1d/3Fxcf/u7u7/29rc/2ZmZv/u7u7/3t/f/9ra2v/a2tr/2tra/9na2v/f39//7u7u/2ZmZv/b2tz/7u7u/19fX/91dXX/9/f5/+Xl5v9paWn/6+vr/9rd2//V2Nj/1dfX/9TV1//X19j/293d/+vs7P9paWn/5eXm//f39/9iYmL/eXl5//r6+v/p6en/bGxs/+rr6//Y2dn/09TU//LHsv/s1Mn/09TU/9jZ2f/q6+v/bGxs/+np6f/6+vr/ZmZm/3x8fP/8/Pz/7e3t/3BwcP/19fX/6uvs/+bp5///ZiD//JZq/+fp5//q7Oz/9fX2/3BwcP/t7e3//Pz8/2tra/9/f3//6+vr/87Ozv9zc3P/9vb2/+7u7v/q6+v/1tbW/9vc3P/q6ur/7u7u//b29v9zc3P/ycnJ/+vr6/9vb2//gICA//v7+//u7u7/dnZ2//f3+f/x8fL/7u7w//Hx8v/x8fH/8PHw//Hx8v/39/f/dnZ2/+7u7v/7+/v/cnJy/4CAgMyAgID/eXl5/3l5ef/6+vr/9vb2//b39v/39/f/9/f3//b29v/19vb/+vr6/3l5ef91dXX/eXl5/3d3d8wAAAAAAAAAAAAAAAB7e3v//Pz8//r6+v/5+vn/+fn6//n5+f/6+fn/+vr6//z8/P97e3v/AAAAEwAAAAYAAAAAAAAAAAAAAAAAAAAAfn5+/+vr6//V1dX/z8/P/8/Pz//Pz8//z8/P/8/Pz//r6+v/fn5+/wAAABMAAAAGAAAAAAAAAAAAAAAAAAAAAH9/f//7+/v/+/v7//r6+v/6+vr/+vr6//r6+v/7+/v/+/v7/39/f/8AAAANAAAABAAAAAAAAAAAAAAAAAAAAACBgYHMgYGB/4GBgf+BgYH/gYGB/4GBgf+BgYH/gYGB/4GBgf+BgYHMAAAABAAAAAEAAAAAAAB0cgAAZz4AAAkJAABleQAAb20AAHBwAAAucAAAbnQAAGljAAB0LgAAZW0AAHJh4AEva+ABPgrgAQk84AFyYQ==</IconB64>
        </item>
        <item name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl" predefined="False">
          <value>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl</value>
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAEAAAADAAAABIAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEwAAABMAAAATAAAAEgAAAA4AAAAIbW1tm2xsbP9qamr/aGho/2ZmZv9kZGT/YmJi/2FhYf9eXl7/W1tb/1paWv9YWFj/V1dX/1FRUaMAAAAXAAAAE3Jycv/r6+v//////////////////f7//+bv8P/p7/D//f/////////3+fr//fz3/+vr6/9YWFj/WFhY/1BQUKN1dXX/6+vr/+RmHP/3dSL/8ncl//V5Jv/2eyj/9nsq//d/K//zfy3/94Aq/+6FQv/r6+v/Wlpa/+Dh4P9XV1f/eHh4/+vr6//naBr//MuX//zMmP/8y5P//c6d//3Qnv/+jDn//pA9//+ROf/5llH/6+vr/1xcXP/k5OT/WVlZ/3t7e//r6+v/6Gkc//zLl//2eyn/+IIw//yGNP/+0aH//tOi///RnP//1KL/+JZT/+vr6/9hYWH/4uPj/15eXv99fX3/6+vr/+tvI//9z5z//Yk3//+QPf//mEX//9qr//+lU///p1X//9ur//iZWf/r6+v/Y2Nj/+Lj4/9eXl7/f39//+vr6//tcyX//tGf///Tov//06D//9qq///dr///sGH//7ht///it///rW3/6+vr/2ZmZv/i4+L/YWFh/4GBgf/r6+v/8nYm//+PN///kz7//5xG///crf//37P//+K5///ku///5br//7p8/+vr6/9paWn/4eLh/2RkZP+BgYH/6+vr/+R3NP/yhj//9o5E//qSTf/8l1D//JhR//6dVv//pFr//5xU//iiZv/r6+v/bGxs/+Xm5f9nZ2f/gYGB/+bn5//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/3BwcP/o6ej/aWlp/4GBgZmBgYH/gYGB/4GBgf+BgYH/gICA/39/f/9+fn7/fX19/3t7e/96enr/d3d3/3V1df+mpqX/7e3s/2xsbP8AAAAAAAAAAAAAAAAAAAAAAAAAAH9/f//8+/v/8/Pz//Pz8v/z8vP/8/Lz//Py8v/z8vL/8/Pz//Hw8P9wcHD/AAAAAAAAAAAAAAAAAAAAAAAAAACBgYH//v7+/+fm5v/l5OT/5eTk/+Xk5P/l5OT/5eTk/+fm5v/18/P/cnJy/wAAAAAAAAAAAAAAAAAAAAAAAAAAgYGB//7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+/v///////////3Z2dv8AAAAAAAAAAAAAAAAAAAAAAAAAAIGBgZmBgYH/gYGB/4CAgP+AgID/gICA/35+fv99fX3/fHx8/3p6ev93d3ebAAAAAAAA8L8AAAAAAAAAAAAAe8IAAAAAAAAAAAAAAAAAAAAAAAB/hAAAAAAAAAAA+AD///gA///4AINX+AAAAA==</IconB64>
        </item>
        <item name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl" predefined="False">
          <value>VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl</value>
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAGAAAACgAAAA0AAAAQAAAAEgAAABMAAAATAAAAEgAAABAAAAANAAAACgAAAAYAAAADAAAAAQAAAASTUB4dvGYnXsdsKZXOcCvA0nMr4tR0LPjUdCz40nMr4s1wKsHFaymWs2ElY208FycAAAAQAAAACgAAAAPLci9k1Hgyw+Kjbv/cu5j/88Sb//rbvP/+5Mn//uTJ//rbvP/2y6f/77eJ/+WdZP/TdzHEvGosbAAAABPcfzlq3YE79vLNq//m4dD/0d3T//nPqP//4cb//+HF///hxf//4cX//+HF///hxf/30K3/9sum/96BOvbGczN25YlCy9e5nv/x3sb/4trG/9HVxv/PgEL/wWgl/71mJ/+4ZCr/smEu/7BgLv+vXy//v3dL//rZuv/quY//4YdAz+uQSsu8q5z/8da3/+LSt//Rzbf/zW0e///58v//+fL///ny///58v//+fL///ny/7ZiK//70av/3ap//+eOSc7wl1Bph4aK+nCUsv85fLn/E2m5/9NwG///9Ob///Tm///05v//9Ob///Tm///05v+8ZSf/bW1t/4J0aP3lkE1uAAAAACB3v9xMp9//YL7t/2bP+f/Zcxf//+/a///v2v//79r//+/a///v2v//79r/w2gk//b29v9ubm7/AAAAAwAAAAALdsr/i+D//6Hm//9t1///33YU///r0f//69H//+vR///r0f//69H//+vR/8lrIP/k5OT/cHBw/wAAAAAAAAAADHnM/8rx//+h5v//bdf//+N4Ev/Sbw//028P/81nBv/2uoj/tmsl/yiJ/f/NbR7/8fLx/3Nzc/8AAAAAAAAAAAx8z//K8f//oeb//23X///Bj07/9o4w//aPMP/2jSr/+J1N/+qNLv99g6D/1o1Q/+7u7v91dXX/AAAAAAAAAAANf9H/yvH//6Hm//9t1///XNL//0rM//85x///B2O6/8rKyv/o6Oj/9/f3//f39//6+vr/eHh4/wAAAAAAAAAADoLU/1Gz7v8ymeX/HYTc/xh+2P8dht3/IJbm/whmvf/X19f/7u/u//n5+v/5+fn//Pz8/3t7e/8AAAAAAAAAAA6F2L9Ssun/ruD2/6Xk/P+D2fv/Xr/w/zGb4P84gsP/ysrK/9DQ0P/U1NT/1NTU/+vr6/99fX3/AAAAAAAAAAAQiN4/DoTZiA2B1MQNfdDvDHnN7wt2zMRAeKf/t9Dm//f39//5+fn/+vr6//r6+v/7+/v/gICA/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiIiIzIiIiP+Hh4f/h4eH/4aGhv+FhYX/hISE/4ODg8wAAAAAgABtLgAAcGwAAHByAAB0LgAAY2sAAC5jAABhdIAAPC+AAXk+gAEJPIABcmmAAT5jgAEuYYABbGWAAW9i/gFjaw==</IconB64>
        </item>
        <item name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl" predefined="False">
          <value>VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl</value>
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAHAAAAFQAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABUAAAAH14JM/7lZIP/mmWP/uVkg/+abZf+5WSD/5p5p/7lZIP/moGr/uVkg/+aeav+5WSD/5pxp/7lZIP8AAAAfAAAAEblZIP//47r//+zI///uzf//89T///XZ///53///++L///vl///75v///Ob///3p///75v/mnmn/AAAAJAAAAB/Zg0z//+K5///rx///7sz///HS///Trv/tn17//9Wc/+2gX///1Z//7aJi///Xn//soWL/uVkg/7lZIP/1sYL/uVkg///ftf//6cT//+zI///wz//un1r//9+o///iqf//46v//+Ou///jrv//5a///+Ou/+abZf//9eH/uVkg/+iTVv//2qr//+W7///pv///7Mf//8+R///epP//3qb//9+n///fqP//4qn//+Op///fqf+5WSD///PZ//axf/+5WSD//+K1///isP//4rP//+a7/+6aVf//2p7//9qg///eov//3qT//9+m///fp///36b/5Zdh///w0/+5WSD/5pNY///rx///68f//+W5///jtv//yIj//9eW///Zmf//2pz//9qg///doP//3qL//9qh/7lZIP//68r/9rF7/7lZIP//7Mf//+zJ///uzf//7s3/7p1Y///anP//2pz//9mc///ZnP//2pv//9qg///anv/ml1///+bG/7lZIP/nk1f//+7N///syP//7sz//+7M///Rk///3qT//96i///epP//3aH//92h///dof//3aH/uVkg///lvv/2rnf/uVkg///z1P//7s3//+7M///uzf/unVj//9qh///aoP//2qH//9qh///aoP//3aD//9qf/+OUXP//47n/uVkg/+KVX/+5WSD/6Ztl/7lZIP/pm2X/uVkg/+ucY/+5WSD/5plj/7lZIP/ml2H/uVkg/+WWYP+5WSD//9+1//asd/8AAAAAAAAAAAAAAAAAAAAAAAAAALlZIP//7Mz//+7N///wzf//8M///+7N///syP//68f//+vE///lvv+5WSD/AAAAAAAAAAAAAAAAAAAAAAAAAADnllr//+7R///wz///8M////DP///wzf//7s3//+7M///uyf//5sD/5pdh/wAAAAAAAAAAAAAAAAAAAAAAAAAAuVkg///z2f//8dT///DU///w1P//8NH//+7P///uzf//7Mn//+XD/7lZIP8AAAAAAAAAAAAAAAAAAAAAAAAAAOaXYv+5WSD/5ZZh/7lZIP/llmH/uVkg/+WWYP+5WSD/5ZZg/7lZIP/ll2H/AAAAAAAA8L8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+AD///gA///4AAAA+AAAAA==</IconB64>
        </item>
        <item name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.TemplateImpl" predefined="False">
          <value>VMware.VimAutomation.ViCore.Impl.V1.Inventory.TemplateImpl</value>
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAHAAAAFQAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABUAAAAHkZGR/2xsbP+kpKT/bGxs/6Wlpf9sbGz/p6en/2xsbP+oqKj/bGxs/6ioqP9sbGz/p6en/2xsbP8AAAAfAAAAEWxsbP/c3Nz/4+Pj/+bm5v/p6en/7Ozs/+/v7//w8PD/8vLy//Ly8v/y8vL/9PT0//Ly8v+np6f/AAAAJAAAAB+SkpL/3Nzc/+Pj4//l5eX/6Ojo/9bW1v+lpaX/zc3N/6ampv/Pz8//p6en/8/Pz/+np6f/bGxs/2xsbP+7u7v/bGxs/9ra2v/h4eH/4+Pj/+fn5/+kpKT/09PT/9TU1P/V1dX/1tbW/9bW1v/X19f/1tbW/6Wlpf/w8PD/bGxs/5+fn//U1NT/3d3d/9/f3//j4+P/yMjI/9HR0f/S0tL/09PT/9PT0//U1NT/1NTU/9TU1P9sbGz/7Ozs/7q6uv9sbGz/2tra/9fX1//Z2dn/3d3d/6Ghof/Ozs7/z8/P/9DQ0P/R0dH/0tLS/9PT0//S0tL/o6Oj/+np6f9sbGz/n5+f/+Pj4//j4+P/3Nzc/9ra2v/Dw8P/ysrK/8zMzP/Nzc3/z8/P/8/Pz//Q0ND/0NDQ/2xsbP/k5OT/uLi4/2xsbP/j4+P/5OTk/+bm5v/m5ub/o6Oj/83Nzf/Nzc3/zc3N/83Nzf/Nzc3/z8/P/87Ozv+ioqL/4uLi/2xsbP+fn5//5ubm/+Pj4//l5eX/5eXl/8nJyf/R0dH/0NDQ/9HR0f/Q0ND/0NDQ/9DQ0P/Q0ND/bGxs/97e3v+2trb/bGxs/+np6f/m5ub/5eXl/+bm5v+jo6P/0NDQ/8/Pz//Q0ND/0NDQ/8/Pz//Pz8//z8/P/5+fn//c3Nz/bGxs/6CgoP9sbGz/p6en/2xsbP+np6f/bGxs/6enp/9sbGz/pKSk/2xsbP+jo6P/bGxs/6Kiov9sbGz/2tra/7a2tv8AAAAAAAAAAAAAAAAAAAAAAAAAAGxsbP/l5eX/5ubm/+bm5v/n5+f/5ubm/+Pj4//j4+P/4eHh/97e3v9sbGz/AAAAAAAAAAAAAAAAAAAAAAAAAACgoKD/6Ojo/+fn5//n5+f/5+fn/+bm5v/m5ub/5eXl/+Tk5P/f39//o6Oj/wAAAAAAAAAAAAAAAAAAAAAAAAAAbGxs/+zs7P/p6en/6enp/+np6f/o6Oj/5+fn/+bm5v/k5OT/4eHh/2xsbP8AAAAAAAAAAAAAAAAAAAAAAAAAAKSkpP9sbGz/o6Oj/2xsbP+jo6P/bGxs/6Kiov9sbGz/oqKi/2xsbP+jo6P/AAAgIAAAICAAACAgAAAgIAAAICAAACAgAAAgIAAAICAAACAgAAAgIAAAICAAACAg+AAgIPgAICD4ACAg+AAgIA==</IconB64>
        </item>
        <item name="VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl" predefined="False">
          <value>VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl</value>
          <IconB64>AAABAAEACwsAAAEAIAA4AgAAFgAAACgAAAALAAAAFgAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaGhoYGhoaLhoaGj1aGhouGhoaGAAAAAAAAAAAAAAAAAAAAAAAAAAAGhoaGBoaGifaGhoR2hoaApoaGhHaGhonwAAAAAAAAAAAAAAAAAAAAAAAAAAaGhouGhoaEcAAAAAAAAAAAAAAAAAAAAAAAAAALFyQ/8AAAAAAAAAAAAAAABoaGj1aGhoCgAAAACxckP/sXJD/7FyQ/+xckP/sXJD/7FyQ/8AAAAAAAAAAGhoaLhoaGhHAAAAAAAAAAAAAAAAAAAAAAAAAACxckP/AAAAAAAAAAAAAAAAaGhoYGhoaJ9oaGhHaGhoCmhoaEdoaGifAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaGhoYGhoaLhoaGj1aGhouGhoaGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/+DlhP/g5pbg4OepwODovM+g6dDIAOrlz6Dr+8DgAMDg4KDI/+DvQP/g8Fg=</IconB64>
        </item>
        <item name="VMware.Vim.Network" predefined="False">
          <value>VMware.Vim.Network</value>
          <IconB64>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</IconB64>
        </item>
        <item name="VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl" predefined="False">
          <value>VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl</value>
          <IconB64>AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAAAABMLAAATCwAAAAEAAAAAAAD///8A/319AP9oaAD/tLQA/+joAP9mZgD/1NQA/7GxAP+SkgD/iooA/76+AP/R0QD/mJgA/6KiAP+GhgD/jIwA/7e3AP+npwD/r68A/+LiANZxcQD8ZmYA/93dAP+BgQD/7e0A/3V1AP+mpgD/e3sA/6CgAP+EhAD/qKgA/5mZAP6JiQD/paUAynNzAP/u7gD/d3cA/4eHAP61tQD/amoA/9PTAP98fAD/29sA/9XVAP/p6QDUaGgA+/v7AO/v7wD38PAA/7W1AP+AgAD//v4A/YWFAOyhoQD/ubkA/5OTALBwcAD/ysoA/6urAP+CggDagYEA1b6+AP+dnQD6oqIAyl1dAP+VlQD/lJQA/3R0AOO8vADxiIgA/39/AP+FhQD/3t4A/46OAP9paQD//PwA/+/vAP/19QDo4uIA/0ZGAPb29gD/b28A/7OzAP+DgwD/i4sA/5qaAPXW1gD+m5sA/GdnAP/DwwC4iIgA/35+AMd0dAD8l5cA7e3tAP/r6wD/zs4A/+bmAP9iYgDYcHAA+Xx8AP/5+QDOYWEA/11dAP+urgDHqKgA/2RkAPhycgD/9PQA/2dnANJubgD/eXkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGUjLARfbAAAAAAAAABNElQMIQM6QSA0VxMAAAALFzlMSwAAM2FgJj9kDQAAAQQYBBMqK1k2BxEMXWsLAAgGPkY7DwkdGxltAgJYUgBDDxEQAxpVSVMBMiVbTwMAZ0goChINQg5vSmIFCA4HAGMWBgpoHDdHJCcFagFFVgBOPDUQMR4fCSlRAhUURAAAAAA9Wlwibi1mQDhpMAAAAAAAAAAALi9eUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEABAAAAAQAAFAA=</IconB64>
        </item>
        <item name="VMware.VimAutomation.ViCore.Impl.V1.Task.TaskImpl" predefined="False">
          <value>VMware.VimAutomation.ViCore.Impl.V1.Task.TaskImpl</value>
          <IconB64></IconB64>
        </item>
        <item name="VMware.VimAutomation.ViCore.Impl.V1.LogDescriptorImpl" predefined="False">
          <value>VMware.VimAutomation.ViCore.Impl.V1.LogDescriptorImpl</value>
          <IconB64>AAABAAEAGyEAAAEAIACYDgAAFgAAACgAAAAbAAAAQgAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAAxMTElsTExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMSWAAAAAAAAAAAAAAAAAAAAAAAAAADExMSWxMTE/87Kyv+6p6j/wa6x/8GusP/Bra7/wa2u/8Gtrv/Bra7/wa2u/8GtsP/Bra//wa2v/8Gtr//Bra//wa2v/8Gtrf++qqn/vrS1/+G9v//ExMT/xMTEgQAAAAAAAAAAAAAAAAAAAADExMT/zsPG/9L14f/s893/6e/g/+nw3v/p8OD/6fLf/+ny3//p8t//6fLf/+ny4P/p8eP/6fHi/+nx5P/p8eT/6fPj/+ny5//t9ej/4/fn/8vw6v/crrH/xMTE6gAAAAAAAAAAAAAAAAAAAADExMT/vqWm/+nq1v///+v///Xg////6/////P////0////9v////X////3////+P////n////5////+P////z////9/////P/////////0/8XMx//UoKP/xMTE0MTExLzExMSUxMTEKwAAAADExMT/xa2u/+Ho1P//9uH///Le//Lj0//Qxrz/1crA/9fNwf/WzcH/2M3C/9jMwv/azsT/2s7E/9rOwv/azsH/2s7F/9TIv//g1cv///zr/9Hh2//QdHr/146Q/+Cytf/Ph4f/xMTE/8TExFXExMT/xKuu/+Hi0P//9tv////m/8jCuP9rb33/dXmD/3t/h/97fob/eX6G/3l+hv95fIT/eXyE/3l+hP95foT/en+G/21wef+Gh4r//vnn/9/l3f/GdHj/uZuc/7za1//19vb/zGJi/8TExL7ExMT/xKuu/+Hmzv//9Nn//ezX//ns1P/m28r/6eHM/+rgz//q4M7/6OHS/+nh0f/p4dH/6eHR/+ni0f/p4tH/6eTT/+Xhz//z6Nn///zp/8jKyP/XhIb///Tl/+r/9v/B1dP/1mJj/8TExOTExMT/xKux/+Hmzf//9dn/+erS///v2f//+t7///nf///54P//+N////rj///74v///eX///3l///85P///OT///vl///96P///+3//vjh/8LHxP/biIf///vo//b/7//AxMH/3pSV/8TExM7ExMT/xK2t/+Hkyf//8tX/+unP//zt0v//7tT//+7V///u1v//7tb//+7X///t1v//79n//+7Y///u2v//8N3///Hc///w3f//9t//+vPe/9PW0f+6am7/2raw//L/7v/Fx8f/24iJ/8TExNDExMT/xK2u/+HlyP//8NP/+enN///w0v//8tT///PV///11v//9dX///TZ///02v//9tn///XZ///22v//9d7///fd///23P//++X//fbd/9vg1v+oXWX/uZ2X//T/7P/Iysj/24mK/8TExNDExMT/xK2u/+Hjx///8NL///jW/9bJu/+Fho//jZCU/5GSmP+Rkpf/kZOW/5GTmP+RlZb/kZWW/5GSlv+Rk5X/kpOW/4SIj/+dmpv///ba/8/Tzf/Uhoj///Lb//H56P/Cx8P/3ImK/8TExNDExMT/xK2v/+Hhw///78////TS/9rPvP+hnp//qaai/6umov+qpqH/qqej/6qno/+qpaH/qqSh/6qppf+qqKL/q6mj/6Kenv+2raf//PLZ/8/Tyf/ThIb//+TP/+364v/Dxsf/3ImK/8TExNDExMT/xK2w/+Hjv///7cr/+ePH///y0P//+9T///nW///51///+df///rY///81///+9n///vZ///72v//+9r///ra///93f///+L///bW/8DFwP/ah4v//+7T//D34P/DxsX/3ImM/8TExNDExMT/xK6w/+Hfvv//7sf/+uTG//nlxv/+5cr//ufJ//7nyP/+5sf//ujN//7nzP/+683//uvO//7pzf/+6c3//urN//3pzv//69H//e7P/8rMx//LfYH//97F/+/84P/FxsP/3ImM/8TExNDExMT/xK6v/+Leuv//7cT/9+HC///sx///+Mz///fN///3z///9s7///jR///40P//99P///fU///41v//99b///nV///82f///dn//O3N/9zd1P+lWmf/ro6K//L64f/IyMf/24mL/8TExNDExMT/xa2w/97ct///6sL//+rF//HcvP/NwbH/0saz/9LIsv/SyLL/0se1/9LHtP/Sx7b/0se1/9LHtf/Sx7X/0se1/83Dtf/Zz73///LP/9PUy//DdXz/8sy1//L22v/Dxsf/3ImL/8TExNDExMT/xKyu/+DZt///577///LG/8a6qf9pdYf/dn2M/3qBjf95gI3/eYCM/3mAjv95gI3/eYCN/3mAjP95gI//eoGN/2tzhP+HiJD//e3I/9LVyP/WhIr//+bC/+700v/Dxsb/3ImN/8TExNDExMT/xKyx/+DZtP//6b3/++K9//7lvP/13Ln/9N26//bgvf/24L3/9uC8//bgvf/438D/99/A//fhwv/34cH/+ODB//Xgwv/+6cr///DK/8fJwf/ThYf//92///Dw0f/DxMb/3IqN/8TExNDExMT/xKyx/+DatP//6Lr/9964//zluP//6r///+q+///pwf//6cH//+nA///rw///7Mb//+zF///sxf//68b//+/H///uyP//8cn//OrB/8LHwP/aion//+bB//H00f/CxMX/3IqN/8TExNDExMT/xK6y/+Darv//5rv/9966//3huv//5bv//+W7///nvP//5rz//+a7///mvP//57///+e+///nvv//58H//+jC///pw///7cf//Oe9/9bYy/+zanX/z6iZ//L01P/HycX/24mN/8TExNDExMT/xKyw/+DZr///5rX/+Ny0///lt///5rr//+e6///mu///5rv//+a9///ovP//6b3//+m////pv///6L7//+q+///owf//7cf//um7/9rbyv+sY3L/wZ2P//Pyzv/Hycn/24mN/8TExNDExMT/xK2z/+DWqv//4rP//+q5/9C+qP93gpP/gYuT/4WNl/+FjZf/hY2V/4WNlf+FjJT/hY6U/4WOlP+FjpT/ho+U/3mCkP+Sk5f//ei3/9LQwv/Whov//+G4//Hvxf/CxcX/3IqN/8TExNDExMT/xK2y/+DXp///4bD//+O1/+HMq/+qpZ7/sKyi/7Stof+zraH/s62h/7OtoP+zraT/s6yj/7Ouo/+zrqP/tK+i/6inof/Ataj//ue1/8zOwv/Tg4b//9qx/+/swf/DxsX/3IqN/8TExNDExMT/xK2x/+DVpf//4a3/9tis///hr///6rP//+m0///rt///67b//+u4///ruf//6rr//+q8///su///7L3//+y+///rv///8cL//eS0/8XDvv/Yhob//9uu//Dpwf/DxMX/3IqN/8TExNDExMT/xa2x/+DUpf//4Kv/+Nir//varf/62qz//Nyt//rcsP/63K//+tuv//rbsP/637P/+t6y//resv/63rP/+t62//vctP//5Lj/++Ox/8jLwv/Lf4b//9Cm//Lrvv/DxcT/3IqN/8TExNDExMT/wqux/+TQnv//4qf//9mp///Zqv//3an//9yq///crf//26z//92s///frf//3rD//96v///er///3bD//9+z///gsv//47f//+Ov/93Xwv+hXnb/rYuF//Luvv/IyMf/24qN/8TExNDExMT/wrG5/9rWm///4Z3/+t2i//reo//63qL/+96k//vgp//74Kb/+9+q//vgqP/74qz/++Kr//virf/74qz/++Gu//virf/86bP/9Oan/8zYx//GeoX/9MCW//Lquf/FxsP/3IqP/8TExNDExMT/5r2//83ez/+7tqX/wsOz/8W+sv++t7X/vLWy/723tP+9trP/vbi0/724tP+9uLT/vbi0/723tf+9t7X/vbi1/724tf+9tLH/ur+7/9LM2v/lfnL//+Sv/+7muf/DwsT/3IqO/8TExNDExMSWxMTE/92iqP/XqbL/1XqH/898hf/choH/3YiF/9qGhP/bhoP/24WG/9uFhv/bhYb/24WE/9uHhf/bh4X/24SF/9uFhf/ZhYT/24WK/9puZ//ss4n///rN/+3Wqv/ExsX/3IqO/8TExNAAAAAAxMTEaMTExNHExMS30paf/7WdjP/8xHv//8yK///GiP//xon//8qM///Ki///yo3//8mM///Ljv//yo///8yP///Mjv//zJL//8iP///WnP//98L///G///TVov+7vLj/3Y6S/8TExMwAAAAAAAAAAAAAAADExMTJ1ZKa/8nr3f/o8Kv/8Oau/+zpr//s6bH/7Oiy/+zosf/s6LP/7Oy0/+zrtf/s67f/7Oy4/+zsuP/s7rf/7fC7/+3tuv/p2qr/7d2s/9fTn//N5eD/4omO/8TExO0AAAAAAAAAAAAAAADExMRgxMTE/+musP/HsLL/wqSp/8WnrP/Fp6v/xaer/8Wnq//Fp6z/xaes/8WnrP/Fpqv/xait/8Worf/Fp6v/xaer/8Wmqv/Fqq7/w6ap/8ews//xzM7/xMTE/8TExIQAAAAAAAAAAAAAAAAAAAAAxMTElsTExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTElgAAAACAAAPgAAAB4AAAAeAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAADgAAAA4AAAAPAAACA=</IconB64>
        </item>
        <item name="VMware.Vim.FileInfo" predefined="False">
          <value>VMware.Vim.FileInfo</value>
          <IconB64>AAABAAEAGyEAAAEAIACYDgAAFgAAACgAAAAbAAAAQgAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAAxMTElsTExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMSWAAAAAAAAAAAAAAAAAAAAAAAAAADExMSWxMTE/87Kyv+6p6j/wa6x/8GusP/Bra7/wa2u/8Gtrv/Bra7/wa2u/8GtsP/Bra//wa2v/8Gtr//Bra//wa2v/8Gtrf++qqn/vrS1/+G9v//ExMT/xMTEgQAAAAAAAAAAAAAAAAAAAADExMT/zsPG/9L14f/s893/6e/g/+nw3v/p8OD/6fLf/+ny3//p8t//6fLf/+ny4P/p8eP/6fHi/+nx5P/p8eT/6fPj/+ny5//t9ej/4/fn/8vw6v/crrH/xMTE6gAAAAAAAAAAAAAAAAAAAADExMT/vqWm/+nq1v///+v///Xg////6/////P////0////9v////X////3////+P////n////5////+P////z////9/////P/////////0/8XMx//UoKP/xMTE0MTExLzExMSUxMTEKwAAAADExMT/xa2u/+Ho1P//9uH///Le//Lj0//Qxrz/1crA/9fNwf/WzcH/2M3C/9jMwv/azsT/2s7E/9rOwv/azsH/2s7F/9TIv//g1cv///zr/9Hh2//QdHr/146Q/+Cytf/Ph4f/xMTE/8TExFXExMT/xKuu/+Hi0P//9tv////m/8jCuP9rb33/dXmD/3t/h/97fob/eX6G/3l+hv95fIT/eXyE/3l+hP95foT/en+G/21wef+Gh4r//vnn/9/l3f/GdHj/uZuc/7za1//19vb/zGJi/8TExL7ExMT/xKuu/+Hmzv//9Nn//ezX//ns1P/m28r/6eHM/+rgz//q4M7/6OHS/+nh0f/p4dH/6eHR/+ni0f/p4tH/6eTT/+Xhz//z6Nn///zp/8jKyP/XhIb///Tl/+r/9v/B1dP/1mJj/8TExOTExMT/xKux/+Hmzf//9dn/+erS///v2f//+t7///nf///54P//+N////rj///74v///eX///3l///85P///OT///vl///96P///+3//vjh/8LHxP/biIf///vo//b/7//AxMH/3pSV/8TExM7ExMT/xK2t/+Hkyf//8tX/+unP//zt0v//7tT//+7V///u1v//7tb//+7X///t1v//79n//+7Y///u2v//8N3///Hc///w3f//9t//+vPe/9PW0f+6am7/2raw//L/7v/Fx8f/24iJ/8TExNDExMT/xK2u/+HlyP//8NP/+enN///w0v//8tT///PV///11v//9dX///TZ///02v//9tn///XZ///22v//9d7///fd///23P//++X//fbd/9vg1v+oXWX/uZ2X//T/7P/Iysj/24mK/8TExNDExMT/xK2u/+Hjx///8NL///jW/9bJu/+Fho//jZCU/5GSmP+Rkpf/kZOW/5GTmP+RlZb/kZWW/5GSlv+Rk5X/kpOW/4SIj/+dmpv///ba/8/Tzf/Uhoj///Lb//H56P/Cx8P/3ImK/8TExNDExMT/xK2v/+Hhw///78////TS/9rPvP+hnp//qaai/6umov+qpqH/qqej/6qno/+qpaH/qqSh/6qppf+qqKL/q6mj/6Kenv+2raf//PLZ/8/Tyf/ThIb//+TP/+364v/Dxsf/3ImK/8TExNDExMT/xK2w/+Hjv///7cr/+ePH///y0P//+9T///nW///51///+df///rY///81///+9n///vZ///72v//+9r///ra///93f///+L///bW/8DFwP/ah4v//+7T//D34P/DxsX/3ImM/8TExNDExMT/xK6w/+Hfvv//7sf/+uTG//nlxv/+5cr//ufJ//7nyP/+5sf//ujN//7nzP/+683//uvO//7pzf/+6c3//urN//3pzv//69H//e7P/8rMx//LfYH//97F/+/84P/FxsP/3ImM/8TExNDExMT/xK6v/+Leuv//7cT/9+HC///sx///+Mz///fN///3z///9s7///jR///40P//99P///fU///41v//99b///nV///82f///dn//O3N/9zd1P+lWmf/ro6K//L64f/IyMf/24mL/8TExNDExMT/xa2w/97ct///6sL//+rF//HcvP/NwbH/0saz/9LIsv/SyLL/0se1/9LHtP/Sx7b/0se1/9LHtf/Sx7X/0se1/83Dtf/Zz73///LP/9PUy//DdXz/8sy1//L22v/Dxsf/3ImL/8TExNDExMT/xKyu/+DZt///577///LG/8a6qf9pdYf/dn2M/3qBjf95gI3/eYCM/3mAjv95gI3/eYCN/3mAjP95gI//eoGN/2tzhP+HiJD//e3I/9LVyP/WhIr//+bC/+700v/Dxsb/3ImN/8TExNDExMT/xKyx/+DZtP//6b3/++K9//7lvP/13Ln/9N26//bgvf/24L3/9uC8//bgvf/438D/99/A//fhwv/34cH/+ODB//Xgwv/+6cr///DK/8fJwf/ThYf//92///Dw0f/DxMb/3IqN/8TExNDExMT/xKyx/+DatP//6Lr/9964//zluP//6r///+q+///pwf//6cH//+nA///rw///7Mb//+zF///sxf//68b//+/H///uyP//8cn//OrB/8LHwP/aion//+bB//H00f/CxMX/3IqN/8TExNDExMT/xK6y/+Darv//5rv/9966//3huv//5bv//+W7///nvP//5rz//+a7///mvP//57///+e+///nvv//58H//+jC///pw///7cf//Oe9/9bYy/+zanX/z6iZ//L01P/HycX/24mN/8TExNDExMT/xKyw/+DZr///5rX/+Ny0///lt///5rr//+e6///mu///5rv//+a9///ovP//6b3//+m////pv///6L7//+q+///owf//7cf//um7/9rbyv+sY3L/wZ2P//Pyzv/Hycn/24mN/8TExNDExMT/xK2z/+DWqv//4rP//+q5/9C+qP93gpP/gYuT/4WNl/+FjZf/hY2V/4WNlf+FjJT/hY6U/4WOlP+FjpT/ho+U/3mCkP+Sk5f//ei3/9LQwv/Whov//+G4//Hvxf/CxcX/3IqN/8TExNDExMT/xK2y/+DXp///4bD//+O1/+HMq/+qpZ7/sKyi/7Stof+zraH/s62h/7OtoP+zraT/s6yj/7Ouo/+zrqP/tK+i/6inof/Ataj//ue1/8zOwv/Tg4b//9qx/+/swf/DxsX/3IqN/8TExNDExMT/xK2x/+DVpf//4a3/9tis///hr///6rP//+m0///rt///67b//+u4///ruf//6rr//+q8///su///7L3//+y+///rv///8cL//eS0/8XDvv/Yhob//9uu//Dpwf/DxMX/3IqN/8TExNDExMT/xa2x/+DUpf//4Kv/+Nir//varf/62qz//Nyt//rcsP/63K//+tuv//rbsP/637P/+t6y//resv/63rP/+t62//vctP//5Lj/++Ox/8jLwv/Lf4b//9Cm//Lrvv/DxcT/3IqN/8TExNDExMT/wqux/+TQnv//4qf//9mp///Zqv//3an//9yq///crf//26z//92s///frf//3rD//96v///er///3bD//9+z///gsv//47f//+Ov/93Xwv+hXnb/rYuF//Luvv/IyMf/24qN/8TExNDExMT/wrG5/9rWm///4Z3/+t2i//reo//63qL/+96k//vgp//74Kb/+9+q//vgqP/74qz/++Kr//virf/74qz/++Gu//virf/86bP/9Oan/8zYx//GeoX/9MCW//Lquf/FxsP/3IqP/8TExNDExMT/5r2//83ez/+7tqX/wsOz/8W+sv++t7X/vLWy/723tP+9trP/vbi0/724tP+9uLT/vbi0/723tf+9t7X/vbi1/724tf+9tLH/ur+7/9LM2v/lfnL//+Sv/+7muf/DwsT/3IqO/8TExNDExMSWxMTE/92iqP/XqbL/1XqH/898hf/choH/3YiF/9qGhP/bhoP/24WG/9uFhv/bhYb/24WE/9uHhf/bh4X/24SF/9uFhf/ZhYT/24WK/9puZ//ss4n///rN/+3Wqv/ExsX/3IqO/8TExNAAAAAAxMTEaMTExNHExMS30paf/7WdjP/8xHv//8yK///GiP//xon//8qM///Ki///yo3//8mM///Ljv//yo///8yP///Mjv//zJL//8iP///WnP//98L///G///TVov+7vLj/3Y6S/8TExMwAAAAAAAAAAAAAAADExMTJ1ZKa/8nr3f/o8Kv/8Oau/+zpr//s6bH/7Oiy/+zosf/s6LP/7Oy0/+zrtf/s67f/7Oy4/+zsuP/s7rf/7fC7/+3tuv/p2qr/7d2s/9fTn//N5eD/4omO/8TExO0AAAAAAAAAAAAAAADExMRgxMTE/+musP/HsLL/wqSp/8WnrP/Fp6v/xaer/8Wnq//Fp6z/xaes/8WnrP/Fpqv/xait/8Worf/Fp6v/xaer/8Wmqv/Fqq7/w6ap/8ews//xzM7/xMTE/8TExIQAAAAAAAAAAAAAAAAAAAAAxMTElsTExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTE/8TExP/ExMT/xMTElgAAAACAAAPgAAAB4AAAAeAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAADgAAAA4AAAAPAAACA=</IconB64>
        </item>
        <item name="VMware.Vim.HostVirtualSwitch#VmwarePowerPackExtension" predefined="False">
          <value>VMware.Vim.HostVirtualSwitch#VmwarePowerPackExtension</value>
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZmZm/2ZmZv9mZmb/ZmZm/2ZmZv9mZmb/ZmZm/2ZmZv9mZmb/ZmZm/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGZmZv/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/2ZmZv8AAAAAAAAAAAAAAAAAAAAAAAAAAJmZmf9mZmb/ZmZm/5mZmf/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP9mZmb/AAAAAAAAAAAAAAAAmpqa/5qamv9mZmb/AM4A/wDOAP9mZmb/mpqa/5qamv+ampr/zMzM/8zMzP/MzMz/ZmZm/wAAAAAAAAAAAAAAAJqamv+ampr/ZmZm/wDOAP8AzgD/ZmZm/5qamv+ampr/mpqa/8zMzP/MzMz/zMzM/2ZmZv8AAAAAAAAAAAAAAAAAAAAAAAAAAJmZmf9mZmb/ZmZm/5mZmf/MzMz/mpqa/5qamv/MzMz/zMzM/8zMzP9mZmb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZmZm/8zMzP/MzMz/zMzM/5qamv+ampr/zMzM/8zMzP/MzMz/ZmZm/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGZmZv/MzMz/zMzM/8zMzP+ampr/mpqa/8zMzP/MzMz/zMzM/2ZmZv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmZmb/zMzM/8zMzP/MzMz/mpqa/5qamv/MzMz/zMzM/8zMzP9mZmb/AAAAAAAAAAAAAAAAAAAAAAAAAACZmZn/ZmZm/2ZmZv+ZmZn/zMzM/5qamv+ampr/zMzM/5mZmf9mZmb/ZmZm/5mZmf8AAAAAAAAAAJqamv+ampr/ZmZm/wDOAP8AzgD/ZmZm/5qamv+ampr/mpqa/5qamv9mZmb/AM4A/wDOAP9mZmb/mpqa/5qamv+ampr/mpqa/2ZmZv8AzgD/AM4A/2ZmZv+ampr/mpqa/5qamv+ampr/ZmZm/wDOAP8AzgD/ZmZm/5qamv+ampr/AAAAAAAAAACZmZn/ZmZm/2ZmZv+ZmZn/zMzM/8zMzP/MzMz/zMzM/5mZmf9mZmb/ZmZm/5mZmf8AAAAAAAAAAAAAAAAAAAAAAAAAAGZmZv+ZmZn/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/2ZmZv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmZmb/ZmZm/2ZmZv9mZmb/ZmZm/2ZmZv9mZmb/ZmZm/2ZmZv9mZmb/AAAAAAAAAAAAAAAA//8AwOAHAMDgBwAAwAcAAAAHAAAABwAAwAcAAOAHAP/gB///4Af//8AD//8AAP//AAAAAMADAADgBwAA4AcAAA==</IconB64>
        </item>
        <item name="VMware.Vim.HostNetworkSecurityPolicy#VmwarePowerPackExtension" predefined="False">
          <value>VMware.Vim.HostNetworkSecurityPolicy#VmwarePowerPackExtension</value>
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAAUGuh/yM3hP8jN4T/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGuh/1yFtf8waKX/bq3N/zGAr/8jN4T/IzeE/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBrof+n3O//ZI6//5PE3v9Klb3/Qo65/zuJtf8zgbD/IzeE/yM3hP8jN4T/AAAAAAAAAAAAAAAAAAAAAAAAAABQa6H/UGuh/4Giy//a7PX/eLfT/1qkx/9UnsP/TJe//0WRu/89irb/NH+v/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjN4T//P7+/3/D3P9yutb/a7PS/2Stzf9dpsn/VqDF/0+ZwP8jN4T/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIzeE/+n1+f84bqT/UIu4/3e71/97wtv/dLvX/2620/9mr87/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACM3hP/H5vH/gcff/2mpy/9BeKv/OG6k/zhupP9oqMv/fMPc/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAACM3hP/d6fL/jLXS/zBknf9JgbH/aanL/4HH3/95vdj/aanL/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjN4T/+/3+/4rL4f+Bx9//cbPS/1GLuP84bqT/OG6k/3Gz0v8jN4T/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIzeE/+fz+P9Ad6r/OG6k/zhupP9JgbH/aanL/4HH3/9xs9L/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAIzeE/6G40/++3er/a7PS/3W82P97wtz/aKjL/1GLuP9hn8X/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACM3hP95nML/aaXI/0qHtP8XPYb/J1KU/0N5rf9gnsX/dLjW/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjN4T/Nl2b/yZ1qP/c7PT/u+Du/2uiyP9Ec6n/KFCT/xw/iP8XMH7/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAERjn/+CosX/7Pr9/7bo9v+t4vP/pd7v/5/a7P+Y1en/isjg/2CVwP8jN4T/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGuh/1Brof9Qa6H/UGuh/6jR6f+66Pf/t+n3/7Dk9P+UyeH/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQa6H/UGuh/1Brof9Qa6H/UGuh/wAAAAAAAAAAAAAAAAAAAAAAAAAAh/8AwAD/AMAAH3JJAA9vLsAPVW7AD2p1wA9lZIAfcGWAH2VjgB8vawA/PgoAPwkJAB9hcoAPeT7ADwkJ/B8JPA==</IconB64>
        </item>
        <item name="VMware.Vim.HostPortGroup#VMwarePowerPackExtension" predefined="False">
          <value>VMware.Vim.HostPortGroup#VMwarePowerPackExtension</value>
          <IconB64>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</IconB64>
        </item>
        <item name="VMware.Vim.HostNetworkTrafficShapingPolicy#VmwarePowerPackExtension" predefined="False">
          <value>VMware.Vim.HostNetworkTrafficShapingPolicy#VmwarePowerPackExtension</value>
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAAUGuh/yM3hP8jN4T/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGuh/1yFtf8waKX/bq3N/zGAr/8jN4T/IzeE/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBrof+n3O//ZI6//5PE3v9Klb3/Qo65/zuJtf8zgbD/IzeE/yM3hP8jN4T/AAAAAAAAAAAAAAAAAAAAAAAAAABQa6H/UGuh/4Giy//a7PX/eLfT/1qkx/9UnsP/TJe//0WRu/89irb/NH+v/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjN4T//P7+/3/D3P9yutb/a7PS/2Stzf9dpsn/VqDF/0+ZwP8jN4T/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIzeE/+n1+f84bqT/UIu4/3e71/97wtv/dLvX/2620/9mr87/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACM3hP/H5vH/gcff/2mpy/9BeKv/OG6k/zhupP9oqMv/fMPc/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAACM3hP/d6fL/jLXS/zBknf9JgbH/aanL/4HH3/95vdj/aanL/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjN4T/+/3+/4rL4f+Bx9//cbPS/1GLuP84bqT/OG6k/3Gz0v8jN4T/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIzeE/+fz+P9Ad6r/OG6k/zhupP9JgbH/aanL/4HH3/9xs9L/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAIzeE/6G40/++3er/a7PS/3W82P97wtz/aKjL/1GLuP9hn8X/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACM3hP95nML/aaXI/0qHtP8XPYb/J1KU/0N5rf9gnsX/dLjW/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjN4T/Nl2b/yZ1qP/c7PT/u+Du/2uiyP9Ec6n/KFCT/xw/iP8XMH7/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAERjn/+CosX/7Pr9/7bo9v+t4vP/pd7v/5/a7P+Y1en/isjg/2CVwP8jN4T/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGuh/1Brof9Qa6H/UGuh/6jR6f+66Pf/t+n3/7Dk9P+UyeH/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQa6H/UGuh/1Brof9Qa6H/UGuh/wAAAAAAAAAAAAAAAAAAAAAAAAAAh/8AwAD/AMAAH3JJAA9vLsAPVW7AD2p1wA9lZIAfcGWAH2VjgB8vawA/PgoAPwkJAB9hcoAPeT7ADwkJ/B8JPA==</IconB64>
        </item>
        <item name="VMware.Vim.HostNicTeamingPolicy#VmwarePowerPackExtension" predefined="False">
          <value>VMware.Vim.HostNicTeamingPolicy#VmwarePowerPackExtension</value>
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAAUGuh/yM3hP8jN4T/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGuh/1yFtf8waKX/bq3N/zGAr/8jN4T/IzeE/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBrof+n3O//ZI6//5PE3v9Klb3/Qo65/zuJtf8zgbD/IzeE/yM3hP8jN4T/AAAAAAAAAAAAAAAAAAAAAAAAAABQa6H/UGuh/4Giy//a7PX/eLfT/1qkx/9UnsP/TJe//0WRu/89irb/NH+v/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjN4T//P7+/3/D3P9yutb/a7PS/2Stzf9dpsn/VqDF/0+ZwP8jN4T/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIzeE/+n1+f84bqT/UIu4/3e71/97wtv/dLvX/2620/9mr87/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACM3hP/H5vH/gcff/2mpy/9BeKv/OG6k/zhupP9oqMv/fMPc/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAACM3hP/d6fL/jLXS/zBknf9JgbH/aanL/4HH3/95vdj/aanL/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjN4T/+/3+/4rL4f+Bx9//cbPS/1GLuP84bqT/OG6k/3Gz0v8jN4T/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIzeE/+fz+P9Ad6r/OG6k/zhupP9JgbH/aanL/4HH3/9xs9L/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAIzeE/6G40/++3er/a7PS/3W82P97wtz/aKjL/1GLuP9hn8X/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACM3hP95nML/aaXI/0qHtP8XPYb/J1KU/0N5rf9gnsX/dLjW/yM3hP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjN4T/Nl2b/yZ1qP/c7PT/u+Du/2uiyP9Ec6n/KFCT/xw/iP8XMH7/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAERjn/+CosX/7Pr9/7bo9v+t4vP/pd7v/5/a7P+Y1en/isjg/2CVwP8jN4T/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGuh/1Brof9Qa6H/UGuh/6jR6f+66Pf/t+n3/7Dk9P+UyeH/IzeE/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQa6H/UGuh/1Brof9Qa6H/UGuh/wAAAAAAAAAAAAAAAAAAAAAAAAAAh/8AwAD/AMAAH3JJAA9vLsAPVW7AD2p1wA9lZIAfcGWAH2VjgB8vawA/PgoAPwkJAB9hcoAPeT7ADwkJ/B8JPA==</IconB64>
        </item>
        <item name="customField#VmwarePowerPackExtension" predefined="False">
          <value>customField#VmwarePowerPackExtension</value>
          <IconB64>AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAABAAAAAQAAAAAAAAliowASZ6YAGWqoAB9uqgAlcqwAKXavAC93sAAueLAAMnuyADd9swA4fbMALYG2ADmAtQBAgbUARoa5AEiGuQBPi7sATYy8AFCKuwBSjr0AV5C+AFiRvwA/mcQATpbBAGGWwgBkl8IAYpnDAGmaxABrnMYAbZzFAFihyQBepMsAWqvPAFet0ABtoMcAYaHIAG2nzgBlqM0AdqbLAHuqzQB9qMwAa6/RAGWx0wBysNIAebfWAHG51wB3utgAfLvYAGjC3QB0xN4Ad8bgAHHV6QB52OsAevj/AICt0ACEr9AAh7TUAIC41wCMudcAg73aAIm72ACTudYAlL/aAJu/2QCKwt0AkMLcAJ7A2gCiw9sAq8ffAIjc7QCQ2+wAl9vsAJLf7gCnyeAArsrgAK/N4gCzzuIApt/tAK3a6gC+1OYAst/tALXc7ACa4O8AieTyAIbp9QCM6fUAnOLwAJvp9QCY7vgAhPj/AJLw+QCQ+f4Amvn/ALnh7gCg5/MAquPwAKTv+AC/5fEAtO32AKX2/QCs8/oAoPn/AKX6/gCo+f8Ar/v+ALv0+gC6/P8AwdfoAMbZ6QDI2ukAytzrAMzc6wDT4+4AwO/2AMju9gDd6fIAxvD3AMnx9wDH9foAzfb6AMT8/gDN/P4A1vz+AOXu9ADo7/YA5v3+AO39/gDx9vkjYCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADWloDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANcXFwDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBl1dXV0FBQUFBQUFBQUFBQUFBQUFBQAAAAAAAAAHZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnBwAAAAAACmlpaWlpaWlpaWlpaWlpaWlpaWlpaWdpaWlpCwAAAAAOa2slJSUlJSUlJSUlJSUlJSUlJSUlJSUla2sOAAAAABB5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eQ8AAAAAEHl5JSUlJSUlJSUlJSUlJSUlJSUlJSUlJXl5DwAAAAAQeXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXkPAAAAABN6eiUlJSUlJSUlJSUlJSUlJSUlJSUlJSV6ehEAAAAAE3p6enp6enp6enp6enp6enp6enp6enp6enp6EQAAAAATe3t7e3slJSUlJSUlJSUlJSUlJSUlJSUle3sVAAAAABx+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fhoAAAAAABx+f39/f39+f39+f35+fn5/f35/f35/f34cAAAAAAAAABwcHhwcHhwcHhwcHhwcHhwcHhwcHhwcHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////////////////////////////////////////3////8/////H////w////8H///8AAAD+AAAAfAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPgAAAH8AAAD////////////////////////////////ygAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAAAAEGamABpsqQAmc60ANHuyAEGDtwBbkcAAZZjDAG2cxgCO+f8AnPn/AKz6/wDM/P4A2foKBAQEBAQEBAAAAAAFCwsLCwsLCwsLCwsFAAAABQsICAgICAgICAgLBQAAAAULCwsLCwsLCwsLCwUAAAAGDAgICAgICAgICAwGAAAABw0NDQ0NDQ0NDQ0NBwAAAAAICAgICAgICAgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAO//AADn/wAA4/8AAMAHAACAAwAAgAMAAIADAACAAwAAgAMAAMAHAAD//wAA//8AAP//AAA=</IconB64>
        </item>
        <item name="customAttribute#VmwarePowerPackExtension" predefined="False">
          <value>customAttribute#VmwarePowerPackExtension</value>
          <IconB64>AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAABAAAAAQAAAAAAAAliowASZ6YAGWqoAB9uqgAlcqwAKXavAC93sAAueLAAMnuyADd9swA4fbMALYG2ADmAtQBAgbUARoa5AEiGuQBPi7sATYy8AFCKuwBSjr0AV5C+AFiRvwA/mcQATpbBAGGWwgBkl8IAYpnDAGmaxABrnMYAbZzFAFihyQBepMsAWqvPAFet0ABtoMcAYaHIAG2nzgBlqM0AdqbLAHuqzQB9qMwAa6/RAGWx0wBysNIAebfWAHG51wB3utgAfLvYAGjC3QB0xN4Ad8bgAHHV6QB52OsAevj/AICt0ACEr9AAh7TUAIC41wCMudcAg73aAIm72ACTudYAlL/aAJu/2QCKwt0AkMLcAJ7A2gCiw9sAq8ffAIjc7QCQ2+wAl9vsAJLf7gCnyeAArsrgAK/N4gCzzuIApt/tAK3a6gC+1OYAst/tALXc7ACa4O8AieTyAIbp9QCM6fUAnOLwAJvp9QCY7vgAhPj/AJLw+QCQ+f4Amvn/ALnh7gCg5/MAquPwAKTv+AC/5fEAtO32AKX2/QCs8/oAoPn/AKX6/gCo+f8Ar/v+ALv0+gC6/P8AwdfoAMbZ6QDI2ukAytzrAMzc6wDT4+4AwO/2AMju9gDd6fIAxvD3AMnx9wDH9foAzfb6AMT8/gDN/P4A1vz+AOXu9ADo7/YA5v3+AO39/gDx9vkjYCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADWloDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANcXFwDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBl1dXV0FBQUFBQUFBQUFBQUFBQUFBQAAAAAAAAAHZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnBwAAAAAACmlpaWlpaWlpaWlpaWlpaWlpaWlpaWdpaWlpCwAAAAAOa2slJSUlJSUlJSUlJSUlJSUlJSUlJSUla2sOAAAAABB5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eQ8AAAAAEHl5JSUlJSUlJSUlJSUlJSUlJSUlJSUlJXl5DwAAAAAQeXl5eXl5eXl5eXl5eXl5eXl5eXl5eXl5eXkPAAAAABN6eiUlJSUlJSUlJSUlJSUlJSUlJSUlJSV6ehEAAAAAE3p6enp6enp6enp6enp6enp6enp6enp6enp6EQAAAAATe3t7e3slJSUlJSUlJSUlJSUlJSUlJSUle3sVAAAAABx+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fn5+fhoAAAAAABx+f39/f39+f39+f35+fn5/f35/f35/f34cAAAAAAAAABwcHhwcHhwcHhwcHhwcHhwcHhwcHhwcHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////////////////////////////////////////3////8/////H////w////8H///8AAAD+AAAAfAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPgAAAH8AAAD////////////////////////////////ygAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAABAAAAAAAAEGamABpsqQAmc60ANHuyAEGDtwBbkcAAZZjDAG2cxgCO+f8AnPn/AKz6/wDM/P4A2foKBAQEBAQEBAAAAAAFCwsLCwsLCwsLCwsFAAAABQsICAgICAgICAgLBQAAAAULCwsLCwsLCwsLCwUAAAAGDAgICAgICAgICAwGAAAABw0NDQ0NDQ0NDQ0NBwAAAAAICAgICAgICAgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAO//AADn/wAA4/8AAMAHAACAAwAAgAMAAIADAACAAwAAgAMAAMAHAAD//wAA//8AAP//AAA=</IconB64>
        </item>
        <item name="PhysicalNIC#VmwarePowerPackExtension" predefined="False">
          <value>PhysicalNIC#VmwarePowerPackExtension</value>
          <IconB64>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</IconB64>
        </item>
        <item name="VMware.VimAutomation.ViCore.Impl.V1.VM.VMResourceConfigurationImpl#VmwarePowerPackExtension" predefined="False">
          <value>VMware.VimAutomation.ViCore.Impl.V1.VM.VMResourceConfigurationImpl#VmwarePowerPackExtension</value>
          <IconB64>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</IconB64>
        </item>
        <item name="VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VmwarePowerPackExtension" predefined="False">
          <value>VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VmwarePowerPackExtension</value>
          <IconB64>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</IconB64>
        </item>
        <item name="OSGrouping#VmwarePowerPackExtension" predefined="False">
          <value>OSGrouping#VmwarePowerPackExtension</value>
          <IconB64>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</IconB64>
        </item>
        <item name="PowerStateGrouping#VmwarePowerPackExtension" predefined="False">
          <value>PowerStateGrouping#VmwarePowerPackExtension</value>
          <IconB64>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</IconB64>
        </item>
        <item name="VMware.Vim.VirtualDisk_RDM#VmwarePowerPackExtension" predefined="False">
          <value>VMware.Vim.VirtualDisk_RDM#VmwarePowerPackExtension</value>
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAFAAAAAwAAAAMAAAABAAAAAQAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAACAAAAAQAAAAEAAAAAkJCQ/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/wAAABvMzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP+QkJD/AAAAAAAAAAwAAAAIAAAAEQAAAAQAAAACAAAABYSEhP/MzMz/hISE/wAAABoAAAAMAAAACAAAABYAAAAEAAAAAQAAAAcAAAANAAAAAQAAAAMAAAAHAAAAAgAAAAYaqkL/GqpC/xqqQv8AAAAXAAAABgAAAAMAAAAHAAAAAgAAAAIAAAAKAAAAEgAAAAQAAAAEAAAAAQAAAAIAAAACHb9K/x2/Sv8dv0r/AAAACQAAAAQAAAAJAAAAAAAAAAIAAAABAAAAAQAAABAAAAAGAAAADgAAAAYAAAADAAAAAoSEhP/MzMz/hISE/wAAABEAAAAIAAAAEwAAAAMAAAACAAAABwAAAAQAAAAjkouL/3Zubv94cHD/d29v/3NsbP+EhIT/zMzM/4SEhP95cXH/eHBw/3Fpaf9zbGz/eXFx/5eRkf8AAAAJlY+P/1pVVf+uqar/tK+w/6ahov+uqqr/oZyd/6mkpf+zrq//s66v/7Our/+zrq//lcSj/7Our/9ZVFT/oZqa/3Zubv+xrK3/0M7N/8G3tv+zqqn/vrSz/7mvrv/x8fH/v7a1/+PX1v/b0M//dXFx/zuxYP9dWlr/oZyd/3lxcf93b2//sKyt/3BsbP9nZGT/ZGFh/2ViYv9nZGT/ZWJi/2RhYf90cHD/2M3M/12Laf8I5lH/Uk9P/6SfoP95cXH/eHBw/7u1tv/X1dT/tq2s/7yysf/AtrX/v7a1/72zsv+/trX/49fW/+TY1/93c3P/L79e/2ZjY/+tqqr/eXFx/3Vtbf/Dvr7/1dPS//X19f/9/f3//Pz8//z8/P/7+/v//Pz8//r6+v/+/v7//Pz8/8j22P/V09L/ubW0/3lxcf/IyMj/u7e4/7SvsP+0r7D/tK+w/7SvsP+0r7D/tK+w/6ilpv+dnJv/kZGR/5GRkf+dnJv/paKj/7u3uP/IyMj/AAAAAuTj4//Y1tX/yMjI/+XZ2P/r6+3/6+vt/+vr7f/r6+3/6+vt/+vr7f/r6+3/4eDh/8jIyP/Y1tX/AAAAAgAAAAIAAAABAAAAAgAAAAfZ2dn/2NbV/9LQ0P/S0ND/2NbV/9LQ0P/S0ND/2NbV/9jW1f8AAAABAAAAAQAAAAIAAAACAAAAAQAAAA8AAAABAAAAAQAAAAsAAAAEAAAABgAAAAQAAAADAAAAAgAAAAIAAAABAAAAAQAAAAEAAAADBnEAAAAB8L8AAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAB6egAAAAAAAAAAAAD//wAA//8AAAAAAAAAAA==</IconB64>
        </item>
        <item name="VMware.Vim.VirtualMachine#VmwarePowerPackExtension" predefined="False">
          <value>VMware.Vim.VirtualMachine#VmwarePowerPackExtension</value>
          <IconB64>AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAABMLAAATCwAAAAAAAAAAAAAAAAAHAAAAFQAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABUAAAAH14JM/7lZIP/mmWP/uVkg/+abZf+5WSD/5p5p/7lZIP/moGr/uVkg/+aeav+5WSD/5pxp/7lZIP8AAAAfAAAAEblZIP//47r//+zI///uzf//89T///XZ///53///++L///vl///75v///Ob///3p///75v/mnmn/AAAAJAAAAB/Zg0z//+K5///rx///7sz///HS///Trv/tn17//9Wc/+2gX///1Z//7aJi///Xn//soWL/uVkg/7lZIP/1sYL/uVkg///ftf//6cT//+zI///wz//un1r//9+o///iqf//46v//+Ou///jrv//5a///+Ou/+abZf//9eH/uVkg/+iTVv//2qr//+W7///pv///7Mf//8+R///epP//3qb//9+n///fqP//4qn//+Op///fqf+5WSD///PZ//axf/+5WSD//+K1///isP//4rP//+a7/+6aVf//2p7//9qg///eov//3qT//9+m///fp///36b/5Zdh///w0/+5WSD/5pNY///rx///68f//+W5///jtv//yIj//9eW///Zmf//2pz//9qg///doP//3qL//9qh/7lZIP//68r/9rF7/7lZIP//7Mf//+zJ///uzf//7s3/7p1Y///anP//2pz//9mc///ZnP//2pv//9qg///anv/ml1///+bG/7lZIP/nk1f//+7N///syP//7sz//+7M///Rk///3qT//96i///epP//3aH//92h///dof//3aH/uVkg///lvv/2rnf/uVkg///z1P//7s3//+7M///uzf/unVj//9qh///aoP//2qH//9qh///aoP//3aD//9qf/+OUXP//47n/uVkg/+KVX/+5WSD/6Ztl/7lZIP/pm2X/uVkg/+ucY/+5WSD/5plj/7lZIP/ml2H/uVkg/+WWYP+5WSD//9+1//asd/8AAAAAAAAAAAAAAAAAAAAAAAAAALlZIP//7Mz//+7N///wzf//8M///+7N///syP//68f//+vE///lvv+5WSD/AAAAAAAAAAAAAAAAAAAAAAAAAADnllr//+7R///wz///8M////DP///wzf//7s3//+7M///uyf//5sD/5pdh/wAAAAAAAAAAAAAAAAAAAAAAAAAAuVkg///z2f//8dT///DU///w1P//8NH//+7P///uzf//7Mn//+XD/7lZIP8AAAAAAAAAAAAAAAAAAAAAAAAAAOaXYv+5WSD/5ZZh/7lZIP/llmH/uVkg/+WWYP+5WSD/5ZZg/7lZIP/ll2H/AAAAAAAA8L8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+AD///gA///4AAAA+AAAAA==</IconB64>
        </item>
      </items>
    </container>
    <container name="Types" predefined="False" id="37fc9e95-a3a2-4f53-a2d4-d29fe752995c">
      <items>
        <container name="System.Object" predefined="False" id="8cd04df9-40df-41c2-b3ca-896145e93591">
          <items>
            <container name="Links" predefined="False" id="1a03a76d-a6da-4a4c-9bee-0c8bb8a9f8c5" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="63ec7ce3-8393-483f-a509-d5fd4ee3a6eb" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="5aee994d-6eb0-4166-8733-82dd4de78482" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="ManagedVMwareHost" predefined="False" id="68a3ad7f-e47e-4244-8f52-77dc7631998a">
          <DefaultActionID>e88052e8-0d9a-4ce6-9b4f-7986a825bd9a</DefaultActionID>
          <items>
            <container name="Links" predefined="False" id="e30b0098-bc6c-479c-8a71-07bd2e2735fa" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="2a309d8a-b07c-40fb-9887-06910e2cb895" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="8cb9e95a-5b27-4ce8-9f07-bd462abc181a" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.Vim.UserSession#VMwarePowerPackExtension" predefined="False" id="e11e4824-6154-46a0-9fe5-a4bb7842d70e">
          <items>
            <container name="Links" predefined="False" id="98b23cc6-7f53-43fe-9ff3-c2349fcdb2c9" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="fed19d9c-e0df-454c-91b7-a7a271105acb" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="040f1d1e-75e0-4fdd-9c81-ec702e3bffd9" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl" predefined="False" id="daf48e1a-a0f2-48c6-b9f7-c64c9977e550">
          <items>
            <container name="Links" predefined="False" id="8a4aa620-5529-4f7e-a197-2c35cca6e161" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="579f5930-5f58-45d4-afa0-53a1e25fbc87" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="abd71654-5f50-4adb-8d82-d6821183eb12" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl#VmwarePowerPackExtension" predefined="False" id="bd66c691-ceb6-4209-b79e-65115735c07a">
          <items>
            <container name="Links" predefined="False" id="3eb2c528-7ffd-4a0c-bca8-08112c037d30" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="0e841856-f05b-44d9-9af1-c10520b8c8ec" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="8e202da3-d150-4e01-a3dc-6e631c53dc2b" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl#VmwarePowerPackExtension" predefined="False" id="877cd42f-7904-4f3e-bb0b-2116631ad33c">
          <items>
            <container name="Links" predefined="False" id="b37e1ff4-47a7-4cdc-8945-b117d4a1738e" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="3e4220fe-d400-4d08-99f7-196ab044db30" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="cf2d0d1d-739c-4bc7-9b09-42a5dcaa1e53" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl#VmwarePowerPackExtension" predefined="False" id="122d2030-9944-4671-9589-f192b147b29a">
          <items>
            <container name="Links" predefined="False" id="8ed5fda0-3cbd-4bff-b592-ef088c31a5f4" type="481eccc0-43f8-47b8-9660-f100dff38e14">
              <items>
                <container name="atOrderChanged" predefined="False" id="37a358d3-d19a-441a-96a6-1d66ba00ac80" type="8ea1dfde-bc75-498b-982f-53971dc86de3" />
                <container name="atOrderChanged" predefined="False" id="509cc177-0061-4a5f-b29b-1d2bb64bed77" type="3e945022-76b9-4c74-880e-e7152514f51e" />
                <container name="atOrderChanged" predefined="False" id="8e9c77ca-2d23-4ceb-8cde-6fb377abfb0e" type="8c908130-e8b3-4c7e-8d5d-2acd970257cf" />
                <container name="atOrderChanged" predefined="False" id="59191196-a3e0-466f-94ba-04f1eede7b44" type="286921a5-7903-4e7b-bce5-0aa4ce4f3b36" />
                <container name="atOrderChanged" predefined="False" id="d88623df-204a-4b72-a221-e7c1cff47ed8" type="b43aa8d7-2f6c-4d03-a24a-af0747965a35" />
                <container name="atOrderChanged" predefined="False" id="0e61d55d-2ece-4770-aece-0d9c2a488248" type="66e283c8-7593-4b72-85ea-1b65132c1907" />
                <container name="atOrderChanged" predefined="False" id="1db5d953-3365-4cec-a2fb-c3c464147e42" type="7f347649-8d8a-455a-ae55-0a21b1487374" />
                <container name="atOrderChanged" predefined="False" id="9c6efcfe-40c6-4379-bb79-1e326dd1baa6" type="582bb9d5-2e54-4ed7-bbf1-7982f69ffee2" />
                <container name="atOrderChanged" predefined="False" id="0d871d6d-9534-470d-a709-e0be99fb7df2" type="1a4b6833-f07b-427c-8116-3117808a6cbf" />
                <container name="atOrderChanged" predefined="False" id="16efd12a-1a30-437c-8766-aa9c511de99c" type="578c1b80-1d80-451e-981b-6e4dca0576f7" />
              </items>
            </container>
            <container name="Actions" predefined="False" id="80963507-125b-4acf-90ea-8bf806cc42c6" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece">
              <items>
                <container name="atOrderChanged" predefined="False" id="e4c2611f-3742-4e41-aebb-48e9d51a13cd" type="398a34d4-8cfc-4a3f-a30c-baa94037f60b" />
                <container name="atOrderChanged" predefined="False" id="10e4685c-3c57-4a73-8e2d-31f3716c3590" type="9286326b-7af3-458c-afc9-6fe65397f18a" />
                <container name="atOrderChanged" predefined="False" id="e5e59a95-11dd-4f55-987d-cdf205bd757f" type="9e71f33f-4ca7-46fd-a1ac-427c0d881d12" />
                <container name="atOrderChanged" predefined="False" id="d2b16a10-9594-4f7b-afc9-4938a3363247" type="3663bb4f-3be8-4838-9daa-d7b8cc277b42" />
                <container name="atOrderChanged" predefined="False" id="617e6471-d938-4b27-8eff-6f417e4ce831" type="f1c73899-a11b-4fda-8d6b-c57c59f47b3b" />
                <container name="atOrderChanged" predefined="False" id="f9eaf250-e289-4494-8fbd-427073fbcc8b" type="f7ae9a66-0607-4641-9603-aafcb9625fb7" />
                <container name="atOrderChanged" predefined="False" id="2f641ecd-41a0-4d1a-9123-476a2b0a53a4" type="9a2d9fcc-34a4-4d0e-b309-e757ddff3422" />
                <container name="atOrderChanged" predefined="False" id="04b04098-69a5-4210-891e-c4d508c97b7a" type="442fbf9f-fba4-490e-8048-58bdccd8025b" />
                <container name="atOrderChanged" predefined="False" id="4bed527a-c506-452e-86ab-22d4d5de17f4" type="d79b0a00-c0a2-4808-8153-ef637ddd7127" />
                <container name="atOrderChanged" predefined="False" id="6146284c-3e01-4009-ab25-08da3fdee8d4" type="345c5df8-140f-445a-84d4-3078124bf235" />
                <container name="atOrderChanged" predefined="False" id="c5818409-e3b8-4425-a992-531408b69e19" type="ae723934-9516-47cf-82aa-c473069ba8be" />
                <container name="atOrderChanged" predefined="False" id="d2506ee9-3350-4a76-8046-f99db40f4b1c" type="6c354f9b-b0ab-47f0-b479-dbac5e83b1ae" />
              </items>
            </container>
            <container name="Actions: Common" predefined="False" id="06a8ee36-e10d-4212-8f26-5359424766e3" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl#VmwarePowerPackExtension" predefined="False" id="39cdb0dc-58ff-4714-8ab8-7ae7e0a73d55">
          <items>
            <container name="Links" predefined="False" id="4bb70b6e-caa5-4318-8050-d6804d2266d7" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="a81c91f8-3972-4211-8ff2-8fe3acceeb7d" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="a4317bb5-367c-45cf-877a-0bbdc14d1536" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension" predefined="False" id="687e5194-8965-462f-ad5b-50b19694809b">
          <items>
            <container name="Links" predefined="False" id="a1fc4046-a26b-4a1c-b6a3-84ed603ef340" type="481eccc0-43f8-47b8-9660-f100dff38e14">
              <items>
                <container name="atOrderChanged" predefined="False" id="aa9b74af-7471-444e-a6e7-a070db281e11" type="e680efc9-af85-4cb6-adda-d6ee6a1d37ad" />
                <container name="atOrderChanged" predefined="False" id="a714293a-700c-423e-8262-e9af028962dd" type="142343f9-429c-48d4-a71f-042d6e053a7c" />
                <container name="atOrderChanged" predefined="False" id="48c12148-c85a-454a-bd54-2ec69809fa81" type="d0e1d13b-d835-4b17-bee2-590e80723090" />
                <container name="atOrderChanged" predefined="False" id="fd0b6d26-ae76-4c51-96ec-3cd6eac06eaa" type="6a5621a6-cd1f-4563-90c8-3061c10a2fd4" />
                <container name="atOrderChanged" predefined="False" id="d88a7ae0-0a71-411f-8156-f9bf0dbd239b" type="0ca9f36f-2353-4c75-9604-cf609dae5ef7" />
                <container name="atOrderChanged" predefined="False" id="de0ff8e0-ed6a-4ba9-bc8a-c61d59765a8c" type="1bc9212d-d1fa-4347-a06b-7de9b64c31c4" />
                <container name="atOrderChanged" predefined="False" id="83c27592-b294-489c-817d-374a69023bca" type="6278a916-69ec-4bb0-8bb8-5e70c46c326f" />
                <container name="atOrderChanged" predefined="False" id="2f3ad537-5bbb-4df7-9f65-f2f71b69842b" type="731de5b8-c12b-4117-a2da-d2a12a10d561" />
                <container name="atOrderChanged" predefined="False" id="2d7e319d-1158-45c8-8928-8f0204b0b8ef" type="f5338d9e-27c7-4f65-9f67-be5d563e0a07" />
                <container name="atOrderChanged" predefined="False" id="4696f0e7-4a49-46d5-924e-6e6cd39440f6" type="774637b6-3083-4477-bde8-40cb9fa1c7a2" />
                <container name="atOrderChanged" predefined="False" id="04482450-bbed-44e0-b4ac-eede7cf506d3" type="1fd5c5ec-83ec-456f-aa95-7af8495c73c3" />
                <container name="atOrderChanged" predefined="False" id="6930e13b-3230-4f2d-9d88-ce3bbeb0220e" type="90631831-2511-4ed7-aaad-fd5c04fc430a" />
              </items>
            </container>
            <container name="Actions" predefined="False" id="5709aa04-0482-42b4-a588-8d62a83cd2b6" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="77e16da7-3d5d-48ff-a546-72559c617ad6" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.TemplateImpl" predefined="False" id="bc84a135-b5d1-4b97-bd7d-23b323198cfa">
          <items>
            <container name="Links" predefined="False" id="5b3bf0be-c682-4893-9c53-41b15684c9b7" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="afee982b-7190-42e2-bb6f-e8c92e172b54" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="993b8e84-d084-4453-b866-95d95452d398" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl#VmwarePowerPackExtension" predefined="False" id="82237e19-c426-43bc-ba79-df77a9178b22">
          <items>
            <container name="Links" predefined="False" id="51ee3974-2494-46d7-8955-502ea893b659" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="bafe2cc4-77fc-4a63-9510-3f3930ba0a69" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="2abd24a8-e0eb-4da0-8245-e8efaf0d65a1" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.Vim.Network#VmwarePowerPackExtension" predefined="False" id="cb6b31e7-a029-4a17-8473-279703155fe9">
          <items>
            <container name="Links" predefined="False" id="8d09bac0-f5c5-4c74-91ae-5bfb5ba41790" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="1c7c2270-157d-402b-af32-7092474fff2d" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="36d630f8-12d4-48d1-9f24-38cf7b7e6228" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#VmwarePowerPackExtension" predefined="False" id="fff23895-375e-4d9d-ad0e-600f02fc5d43">
          <items>
            <container name="Links" predefined="False" id="beab2e93-4e85-40e4-9f3f-c4ddf3782fbf" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="28828528-2b72-4c2d-9dd6-d19eca869131" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="a6a6e0eb-4a76-422e-ba6c-0b3c986f31e2" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.Vim.FileInfo#VMwarePowerPackExtension" predefined="False" id="737dd651-ec6f-418b-9e9c-65f07e2fd051">
          <items>
            <container name="Links" predefined="False" id="19f7474c-1d3f-4df2-92d8-99d22a92b63c" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="1fd6e479-e074-43d8-9347-3c67ed9c9c28" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="13ca28b3-b5ff-46b0-8d20-9c3396ee3602" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.VimAutomation.ViCore.Impl.V1.Task.TaskImpl" predefined="False" id="94cfb4f1-6d60-41d1-847b-4ba87369863c">
          <items>
            <container name="Links" predefined="False" id="7c4bc30b-d94f-441f-abcd-433e8fc56d4b" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="cb63e6e0-3b3b-4e34-90ec-bd1cd1fc31d5" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="ea82ce68-97b3-4285-9d30-920859f242a2" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.VimAutomation.ViCore.Impl.V1.LogDescriptorImpl#VMwarePowerPackExtension" predefined="False" id="03ddd2de-376c-4f9d-a0cd-8280cc8935d4">
          <items>
            <container name="Links" predefined="False" id="907bddd5-ad8f-4736-b2da-03e56f6e1f24" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="dd6bb4ba-1f5a-4675-8cfa-9510382c8cbf" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="f4981d75-9599-4b03-afb9-6d6b3163487a" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="customField#VmwarePowerPackExtension" predefined="False" id="37faafde-114e-42b4-891f-b28f94ed1cd0">
          <items>
            <container name="Links" predefined="False" id="38f08080-b754-4fc2-9806-407bc28a33a6" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="56545e2f-57da-4124-94ac-c6e0caabfa63" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece">
              <items>
                <container name="atOrderChanged" predefined="False" id="8a412069-ce3c-4165-b76d-fc373137e83d" type="2fa54311-1aeb-424c-82cd-3bf8d579aed0" />
                <container name="atOrderChanged" predefined="False" id="c65c24ef-e5a5-4bd4-8f7f-66318b6dda97" type="9a68b07c-2853-4cc4-9a21-34a235571b5b" />
              </items>
            </container>
            <container name="Actions: Common" predefined="False" id="67013c11-e2e4-4692-bb36-24a7b2a83ada" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="System.Management.Automation.PSCustomObject" predefined="False" id="d4250705-e9d2-4dad-8bf5-82cdf2ee9a37">
          <items>
            <container name="Links" predefined="False" id="1d7bc0e5-b051-4828-8f98-2cb908d41c21" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="61010f07-f129-4935-bda2-ef914f5bbd4e" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="8839de93-f5c7-4017-9454-bc782c7ea81e" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
        <container name="VMware.Vim.UserSession" predefined="False" id="49f10c59-9f67-440f-a77c-4d768e8a32df">
          <items>
            <container name="Links" predefined="False" id="c5d53aca-4675-49ee-8dbc-2a8ff2f059ec" type="481eccc0-43f8-47b8-9660-f100dff38e14" />
            <container name="Actions" predefined="False" id="a064799d-cf31-4ad5-b17c-6f1ec787f2b2" type="7826b2ed-8ae4-4ad0-bf29-1ff0a25e0ece" />
            <container name="Actions: Common" predefined="False" id="24ca705e-47e5-42cc-987f-93adfb7e4861" type="6669cb81-df60-4f11-9d8f-8ab7c003dd1b" />
          </items>
        </container>
      </items>
    </container>
    <container name="Scripts" predefined="False" id="c4ac93e0-f9c3-4e70-9e77-79210fee0239">
      <items>
        <container name="VMware.ps1" predefined="False">
          <script><![CDATA[
#region Core Utility Functions

function global:Get-PSResourceString {
	param(
		[string]$BaseName = $null,
		[string]$ResourceId = $null,
		[string]$DefaultValue = $null,
		[System.Globalization.CultureInfo]$Culture = $host.CurrentCulture,
		[Switch]$List
	)

	if ($List -and ($ResourceId -or $DefaultValue)) {
		throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'AmbiguousParameterSet')
	}

	if ($List) {
		$engineAssembly = [System.Reflection.Assembly]::GetExecutingAssembly()
		$hostAssembly = [System.Reflection.Assembly]::LoadWithPartialName('Microsoft.PowerShell.ConsoleHost')
		if ($BaseName) {
			$engineAssembly.GetManifestResourceNames() | Where-Object { $_ -eq "$BaseName.resources" } | ForEach-Object {
				$resourceManager = New-Object -TypeName System.Resources.ResourceManager($BaseName, $engineAssembly)
				$resourceManager.GetResourceSet($host.CurrentCulture,$true,$true) | Add-Member -Name BaseName -MemberType NoteProperty -Value $BaseName -Force -PassThru | ForEach-Object {
					$_.PSObject.TypeNames.Clear()
					$_.PSObject.TypeNames.Add('ResourceString')
					$_ | Write-Output
				}
			}
			$hostAssembly.GetManifestResourceNames() | Where-Object { $_ -eq "$BaseName.resources" } | ForEach-Object {
				$resourceManager = New-Object -TypeName System.Resources.ResourceManager($BaseName, $hostAssembly)
				$resourceManager.GetResourceSet($host.CurrentCulture,$true,$true) | Add-Member -Name BaseName -MemberType NoteProperty -Value $BaseName -Force -PassThru | ForEach-Object {
					$_.PSObject.TypeNames.Clear()
					$_.PSObject.TypeNames.Add('ResourceString')
					$_ | Write-Output
				}
			}
		} else {
			$engineAssembly.GetManifestResourceNames() | Where-Object { $_ -match '\.resources$' } | ForEach-Object { $_.Replace('.resources','') }
			$hostAssembly.GetManifestResourceNames() | Where-Object { $_ -match '\.resources$' } | ForEach-Object { $_.Replace('.resources','') }
		}
	} else {
		if (-not $BaseName) {
			throw $($(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'ParameterArgumentValidationErrorNullNotAllowed') -f $null,'BaseName')
		}
		if (-not $ResourceId) {
			throw $($(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'ParameterArgumentValidationErrorNullNotAllowed') -f $null,'ResourceId')
		}
		if (-not $global:PSResourceStringTable) {
			$engineAssembly = [System.Reflection.Assembly]::GetExecutingAssembly()
			$hostAssembly = [System.Reflection.Assembly]::LoadWithPartialName('Microsoft.PowerShell.ConsoleHost')
			if ($engineAssembly.GetManifestResourceNames() -contains "$BaseName.resources") {
				New-Variable -Scope Global -Name PSResourceStringTable -Value @{} -Description 'A cache of PowerShell resource strings. To access data in this table, use Get-ResourceString.'
				$global:PSResourceStringTable['EngineAssembly'] = @{'Assembly'=$engineAssembly;'Cultures'=@{}}
				$global:PSResourceStringTable['HostAssembly'] = @{'Assembly'=$hostAssembly;'Cultures'=@{}}
				$resourceManager = (New-Object -TypeName System.Resources.ResourceManager($BaseName, $global:PSResourceStringTable.EngineAssembly.Assembly));
				$global:PSResourceStringTable.EngineAssembly.Cultures[$Culture.Name] = @{$BaseName=@{'ResourceManager'=$resourceManager;'Strings'=$resourceManager.GetResourceSet($Culture,$true,$true)}};
			} elseif ($hostAssembly.GetManifestResourceNames() -contains "$BaseName.resources") {
				New-Variable -Scope Global -Name PSResourceStringTable -Value @{} -Description 'A cache of PowerShell resource strings. To access data in this table, use Get-ResourceString.'
				$global:PSResourceStringTable['EngineAssembly'] = @{'Assembly'=$engineAssembly;'Cultures'=@{}}
				$global:PSResourceStringTable['HostAssembly'] = @{'Assembly'=$hostAssembly;'Cultures'=@{}}
				$resourceManager = (New-Object -TypeName System.Resources.ResourceManager($BaseName, $global:PSResourceStringTable.HostAssembly.Assembly));
			$global:PSResourceStringTable.HostAssembly.Cultures[$Culture.Name] = @{$BaseName=@{'ResourceManager'=$resourceManager;'Strings'=$resourceManager.GetResourceSet($Culture,$true,$true)}};
			}
		} elseif ($global:PSResourceStringTable.EngineAssembly.Assembly.GetManifestResourceNames() -contains "$BaseName.resources") {
			if (-not $global:PSResourceStringTable.EngineAssembly.Cultures.ContainsKey($Culture.Name)) {
				$resourceManager = (New-Object -TypeName System.Resources.ResourceManager($BaseName, $global:PSResourceStringTable.EngineAssembly.Assembly));
				$global:PSResourceStringTable.EngineAssembly.Cultures[$Culture.Name] = @{$BaseName=@{'ResourceManager'=$resourceManager;'Strings'=$resourceManager.GetResourceSet($Culture,$true,$true)}};
			} elseif (-not $global:PSResourceStringTable.EngineAssembly.Cultures[$Culture.Name].ContainsKey($BaseName)) {
				$resourceManager = (New-Object -TypeName System.Resources.ResourceManager($BaseName, $global:PSResourceStringTable.EngineAssembly.Assembly));
				$global:PSResourceStringTable.EngineAssembly.Cultures[$Culture.Name][$BaseName] = @{'ResourceManager'=$resourceManager;'Strings'=$resourceManager.GetResourceSet($Culture,$true,$true)};
			}
		} elseif ($global:PSResourceStringTable.HostAssembly.Assembly.GetManifestResourceNames() -contains "$BaseName.resources") {
			if (-not $global:PSResourceStringTable.HostAssembly.Cultures.ContainsKey($Culture.Name)) {
				$resourceManager = (New-Object -TypeName System.Resources.ResourceManager($BaseName, $global:PSResourceStringTable.HostAssembly.Assembly));
				$global:PSResourceStringTable.HostAssembly.Cultures[$Culture.Name] = @{$BaseName=@{'ResourceManager'=$resourceManager;'Strings'=$resourceManager.GetResourceSet($Culture,$true,$true)}};
			} elseif (-not $global:PSResourceStringTable.HostAssembly.Cultures[$Culture.Name].ContainsKey($BaseName)) {
				$resourceManager = (New-Object -TypeName System.Resources.ResourceManager($BaseName, $global:PSResourceStringTable.HostAssembly.Assembly));
				$global:PSResourceStringTable.HostAssembly.Cultures[$Culture.Name][$BaseName] = @{'ResourceManager'=$resourceManager;'Strings'=$resourceManager.GetResourceSet($Culture,$true,$true)};
			}
		}

		$resourceString = $null
		if ($global:PSResourceStringTable) {
			if ($global:PSResourceStringTable.EngineAssembly.Cultures -and $global:PSResourceStringTable.EngineAssembly.Cultures.ContainsKey($Culture.Name) -and $global:PSResourceStringTable.EngineAssembly.Cultures[$Culture.Name].ContainsKey($BaseName)) {
				$resourceString = ($global:PSResourceStringTable.EngineAssembly.Cultures[$Culture.Name][$BaseName].Strings | Where-Object { $_.Name -eq $ResourceId }).Value
			} elseif ($global:PSResourceStringTable.HostAssembly.Cultures -and $global:PSResourceStringTable.HostAssembly.Cultures.ContainsKey($Culture.Name) -and $global:PSResourceStringTable.HostAssembly.Cultures[$Culture.Name].ContainsKey($BaseName)) {
				$resourceString = ($global:PSResourceStringTable.HostAssembly.Cultures[$Culture.Name][$BaseName].Strings | Where-Object { $_.Name -eq $ResourceId }).Value
			}
		}
		if (-not $resourceString) {
			$resourceString = $DefaultValue
		}
		
		return $resourceString
	}
}

function global:New-Enum {
	param(
		[string]$Name = $null,
		[string]$AssemblyName = $null,
		[System.Management.Automation.PSObject]$Values = $null
	)

	$internalScript = {
		param(
			[string]$Name = $null,
			[string]$AssemblyName = $null,
			[System.Management.Automation.PSObject]$Values = $null
		)

		$promptedForRequiredParameters = $false
		if ((-not $promptedForRequiredParameters) -and ((-not $Name) -or ((-not $Values) -and (-not $Values.Count) -and (-not $Values.Keys.Count)))) {
			$promptedForRequiredParameters = $true
			Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'New-Enum',$MyInvocation.PipelinePosition)
			Write-Host (Get-PSResourceString -BaseName -ResourceId PromptMessage)
			if (-not $Name) {
				if ($result = Read-Host -Prompt 'Name') {
					$Name = $result
				} else {
					return
				}
			}
			if (-not $Values) {
				$index = 0
				$Values = @()
				while ($result = Read-Host -Prompt "Values[$index]") {
					$index++
					$Values += $result
				}
				if (-not $Values) {
					return
				}
			}
		}

		$appdomain = [System.Threading.Thread]::GetDomain()
		$assembly = New-Object -TypeName System.Reflection.AssemblyName
		if ($AssemblyName) {
			$assembly.Name = $AssemblyName
			$Name = "$AssemblyName.$Name"
		} else {
			$assembly.Name = 'DynamicallyCreatedEnum'
		}

		$assemblyBuilder = $appdomain.DefineDynamicAssembly(
			$assembly,
			[System.Reflection.Emit.AssemblyBuilderAccess]::Save -bor [System.Reflection.Emit.AssemblyBuilderAccess]::Run
		)

		$moduleBuilder = $assemblyBuilder.DefineDynamicModule("DynamicModule", "DynamicModule.mod")

		$enumBuilder = $moduleBuilder.DefineEnum($Name, [System.Reflection.TypeAttributes]::Public, [int32])

		if (($Values -is [string]) -or ($Values -is [array])) {
			$Values = @($Values) + $args
			for ($i = 0; $i -lt $Values.Length; $i++) {
				$enumBuilder.DefineLiteral($Values[$i],$i) | Out-Null
			}
		} elseif ($Values -is [System.Collections.Hashtable]) {
			foreach ($key in $Values.Keys) {
				$enumBuilder.DefineLiteral($key,$Values[$key]) | Out-Null
			}
		}

		$enumBuilder.CreateType()
	}

	#region Extra script to workaround PowerShell v2 defect.
	$passThruArgs = $args
	$trailingArguments = ''
	for ($index = 0; $index -lt $passThruArgs.Count; $index++) {
		$trailingArguments += " `$passThruArgs[$index]"
	}
	Invoke-Expression "& `$internalScript -Name `$Name -AssemblyName `$AssemblyName -Values `$Values$trailingArguments | Out-Null"
	Invoke-Expression "& `$internalScript -Name `$Name -AssemblyName `$AssemblyName -Values `$Values$trailingArguments"
	#endregion
}

#endregion
#region Read Input Functions

function global:New-ChoiceDescription {
	param(
		[string]$Name,
		[string]$HelpMessage = $null
	)

	$choiceDescription = [System.Management.Automation.Host.ChoiceDescription]$Name
	$choiceDescription.HelpMessage = $HelpMessage

	$choiceDescription
}

function global:Read-Choice {
	param(
		[string]$Caption,
		[string]$Message,
		[System.Management.Automation.Host.ChoiceDescription[]]$ChoiceDescription,
		[int]$DefaultChoice = 0
	)

	$host.ui.PromptForChoice($Caption,$Message,$ChoiceDescription,$DefaultChoice)
}

function global:New-FieldDescription {
	param(
		[string]$Name,
		[string]$HelpMessage = $null,
		[Type]$Type = [Type]'System.String',
		[PSObject]$DefaultValue = $null,
		[bool]$IsMandatory = $false
	)

	$fieldDescription = [System.Management.Automation.Host.FieldDescription]$Name
	$fieldDescription.SetParameterType($Type)
	$fieldDescription.DefaultValue = $DefaultValue
	$fieldDescription.HelpMessage = $HelpMessage
	$fieldDescription.IsMandatory = $IsMandatory

	$fieldDescription
}

function global:Read-Input {
	param(
		[string]$Caption,
		[string]$Message,
		[System.Management.Automation.Host.FieldDescription[]]$FieldDescription
	)

	$host.ui.Prompt($Caption,$Message,$FieldDescription)
}

function global:New-Credential {
	param(
		[string]$Username,
		[System.Security.SecureString]$Password
	)
	
	New-Object System.Management.Automation.PSCredential($Username,$Password)
}

function global:Read-Credential {
	param(
		$Credential = $null
	)

	if ($Credential -is [System.Management.Automation.PSCredential]) {
		$Credential
	} else {
		$result = Read-Input 'Enter your credentials' 'Please enter your authentication credentials in the fields provided' @((New-FieldDescription 'Username' 'Your account username' 'System.String' $Credential $true),(New-FieldDescription 'Password' 'Your account password' 'System.Security.SecureString' $null $true))
		if ($result.Count) {
			New-Credential -Username $result['Username'] -Password $result['Password']
		}
	}
}

#endregion
#region Password Management Functions

function global:Get-Password {
	param(
		$InputObject = $null,
		[Switch]$AsPlainText,
		[Switch]$Force
	)

	begin {
		if ($AsPlainText -and (-not $Force)) {
			throw 'Get-Password: The system cannot protect plain text output.  To suppress this warning and get the password as plain text, reissue the command specifying the Force parameter.'
		}
	}
	process {
		if ((-not $InputObject) -and (-not $_)) {
			$InputObject = Read-Host -AsSecureString -Prompt 'Password'
		}
		if ($InputObject -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		} elseif ($InputObject -or $_) {
			$processObject = $(if ($InputObject) {$InputObject} else {$_})
			if ($processObject -is [System.Security.SecureString]) {
				$secureStringPassword = $processObject
			} elseif ($processObject.Password -is [System.Security.SecureString]) {
				$secureStringPassword = $processObject.Password
			} elseif ($processObject.Credential.Password -is [System.Security.SecureString]) {
				$secureStringPassword = $processObject.Credential.Password
			} else {
				throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'CannotConvertArgumentNoMessage') -f $null,'InputObject',$null,$null,$null,$null,((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'CannotConvertArgument') -f $null,'InputObject','System.Management.Automation.PSCredential',$null,$null,$null,$_.ToString(),$null))
			}
			if ($AsPlainText -and $Force) {
				$bstrPassword = [Runtime.InteropServices.Marshal]::SecureStringToBSTR($secureStringPassword)
				$plainTextPassword = [Runtime.InteropServices.Marshal]::PtrToStringAuto($bstrPassword)
				[Runtime.InteropServices.Marshal]::ZeroFreeBSTR($bstrPassword)
				$plainTextPassword
			} else {
				$secureStringPassword
			}
		}
	}
}

function global:Compare-Password {
	param (
		[System.Security.SecureString]$ReferencePassword,
		[System.Security.SecureString]$DifferencePassword
	)

	begin {
		if (-not $ReferencePassword) {
			Write-Host -ForegroundColor White -Object "function Compare-Password at command pipeline position $($MyInvocation.PipelinePosition)"
			Write-Host 'Supply values for the following parameters:'
			if ($result = Read-Host -AsSecureString -Prompt 'ReferencePassword') {
				$ReferencePassword = $result
			} else {
				return
			}
		}
	}

	process {
		if ($DifferencePassword -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'AmbiguousParameterSet')
		}
		if (-not $DifferencePassword -and -not $_) {
			if ($result = Read-Host -AsSecureString -Prompt 'DifferencePassword') {
				$DifferencePassword = $result
			} else {
				return
			}
		}
		$processObject = $(if ($DifferencePassword) {$DifferencePassword} else {$_})
		if ($processObject -is [System.Security.SecureString]) {
			$secureStringPassword = $processObject
		} elseif ($processObject.Password -is [System.Security.SecureString]) {
			$secureStringPassword = $processObject.Password
		} elseif ($processObject.Credential.Password -is [System.Security.SecureString]) {
			$secureStringPassword = $processObject.Credential.Password
		} else {
			throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'CannotConvertArgumentNoMessage') -f $null,'DifferencePassword',$null,$null,$null,$null,((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'CannotConvertArgument') -f $null,'DifferencePassword','System.Security.SecureString',$null,$null,$null,$_.ToString(),$null))
		}
		(Get-Password $ReferencePassword -AsPlainText -Force) -eq (Get-Password $processObject -AsPlainText -Force)
	}
}

function global:Read-Password {
	param (
		[switch]$Confirm
	)

	[System.Security.SecureString]$password
	[System.Security.SecureString]$confirmPassword
	if ($result = Read-Host -AsSecureString -Prompt 'Password') {
		$password = $result
	} else {
		return
	}
	if ($Confirm) {
		if ($result = (Read-Host -AsSecureString -Prompt 'Confirm password')) {
			$confirmPassword = $result
		} else {
			return
		}
		if (Compare-Password -ReferencePassword $password -DifferencePassword $confirmPassword) {
			$password
		} else {
			Write-Error 'The passwords you entered did not match.'
		}
	} else {
		$password
	}
}

#endregion
#region Credential Caching Functions

#region CredentialCache functions

# Syntax:
#     Get-CredentialCache
function global:Get-CredentialCache {
	process {
		if ($_) {
			throw (Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		} else {
			if (-not (Get-Variable -Scope Global -Name CredentialCache -ErrorAction SilentlyContinue)) {
				$global:CredentialCache = New-Object System.Management.Automation.PSObject `
					| Add-Member -MemberType NoteProperty -Name Enabled -Value $true -PassThru `
					| Add-Member -MemberType NoteProperty -Name CredentialStore -Value @{} -PassThru `
					| Add-Member -MemberType NoteProperty -Name ObjectAssociations -Value @{} -PassThru
				$global:CredentialCache.PSObject.TypeNames[0] = 'CredentialCache'
			}
			$global:CredentialCache
		}
	}
}

# Syntax:
#     Enable-CredentialCache [-PassThru <Switch>]
function global:Enable-CredentialCache {
	param(
		[Switch]$PassThru
	)
	process {
		if ($_) {
			if ($_.PSObject.TypeNames[0] -eq 'CredentialCache') {
				$_.Enabled = $true
				if ($PassThru) {$_}
			} else {
				throw (Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
			}
		} else {
			$credentialCache = Get-CredentialCache
			$credentialCache.Enabled = $true
			if ($PassThru) {$credentialCache}
		}
	}
}

# Syntax:
#     Disable-CredentialCache [-PassThru <Switch>]
function global:Disable-CredentialCache {
	param(
		[Switch]$PassThru
	)
	process {
		if ($_) {
			if ($_.PSObject.TypeNames[0] -eq 'CredentialCache') {
				$_.Enabled = $false
				if ($PassThru) {$_}
			} else {
				throw (Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
			}
		} else {
			$credentialCache = Get-CredentialCache
			$credentialCache.Enabled = $false
			if ($PassThru) {$credentialCache}
		}
	}
}

# Syntax:
#     Remove-CredentialCache
function global:Remove-CredentialCache {
	process {
		if ($_) {
			throw (Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		} else {
			Remove-Variable -Scope Global -Name CredentialCache -ErrorAction SilentlyContinue
		}
	}
}

#endregion
#region CachedCredential functions

# Syntax:
#     Add-CachedCredential [-Credential] <System.Management.Automation.PSObject> [[-AssociatedObjectId] <string[]>] [-Force <Switch>]
function global:Add-CachedCredential {
	param(
		$Credential = $(throw ((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'ParameterArgumentValidationErrorNullNotAllowed') -f $null,'Credential')),
		[string[]]$AssociatedObjectId = $null,
		[Switch]$Force
	)
	$credentialCache = Get-CredentialCache
	if (-not $credentialCache.Enabled) {
		Write-Warning 'Credential caching is not enabled.'
		return
	}
	[string]$userName = $null
	if ($Credential -is [System.Management.Automation.PSCredential]) {
		if (($credentialCache.CredentialStore.Keys -contains $Credential.UserName.TrimStart('\')) -and (-not $Force)) {
			throw "Cannot add credential for '$($Credential.UserName.TrimStart('\'))' because credentials for that user are already stored. Use the -Force to overwrite the stored credentials for '$($Credential.UserName.TrimStart('\'))'."
		}
		if (($credentialCache.CredentialStore.Keys -notcontains $Credential.UserName.TrimStart('\')) -or (($cachedCredential = $credentialCache.CredentialStore[$Credential.UserName.TrimStart('\')]) -and (-not (Compare-Password -ReferencePassword $cachedCredential.Credential.Password -DifferencePassword $credential.Password)))) {
			$credentialCache.CredentialStore[$Credential.UserName.TrimStart('\')] = @{'Credential'=$Credential;'DateStored'=Get-Date;'LastAccessDate'=$null}
		}
		$credentialCache.CredentialStore[$Credential.UserName.TrimStart('\')].LastAccessDate = Get-Date
		$userName = $Credential.UserName.TrimStart('\')
	} else {
		$userName = $Credential.TrimStart('\')
	}
	Add-CacheAssociation -AssociatedObjectId $AssociatedObjectId -UserName $userName -Force:$Force
}

# Syntax:
#     Refresh-CachedCredential [[-UserName] <string>]
function global:Refresh-CachedCredential {
	param(
		[string]$UserName = $null
	)
	$credentialCache = Get-CredentialCache
	if ($keysToRefresh = $(if ($UserName) {$credentialCache.CredentialStore.Keys -like $UserName.TrimStart('\')} else {$credentialCache.CredentialStore.Keys})) {
		foreach ($item in $keysToRefresh) {
			$credentialCache.CredentialStore[$item].Credential = New-Credential -UserName $credentialCache.CredentialStore[$item].Credential.UserName -Password $credentialCache.CredentialStore[$item].Credential.Password
		}
	}
}

# Syntax:
#     Get-CachedCredential [-Credential] <System.Management.Automation.PSObject> [-EntireRecord <Switch>]
#     Get-CachedCredential [-AssociatedObjectId] <string> [-EntireRecord <Switch>]
#     Get-CachedCredential -List <switch> [-EntireRecord <Switch>]
function global:Get-CachedCredential {
	param(
		$Credential = $null,
		[string]$AssociatedObjectId = $null,
		[Switch]$List,
		[Switch]$EntireRecord
	)
	if (($Credential -and $AssociatedObjectId) -or (($Credential -or $AssociatedObjectId) -and $List)) {
		throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'AmbiguousParameterSet')
	} elseif ($Credential -and ($Credential -is [string]) -and ($credentialCache = Get-CredentialCache) -and $credentialCache.Enabled) {
		$cachedCredential = $Credential.TrimStart('\')
		Refresh-CachedCredential -UserName $cachedCredential
		if ($EntireRecord) {
			if (($credentialCache.CredentialStore.Keys -notcontains $cachedCredential) -and ($credentialCache.ObjectAssociations.Values -notcontains $cachedCredential)) {
				return
			}
			$credentialCacheRecord = New-Object System.Management.Automation.PSObject `
				| Add-Member -MemberType NoteProperty -Name UserName -Value $cachedCredential -PassThru `
				| Add-Member -MemberType NoteProperty -Name Credential -Value $null -PassThru `
				| Add-Member -MemberType NoteProperty -Name DateStored -Value $null -PassThru `
				| Add-Member -MemberType NoteProperty -Name LastAccessDate -Value $null -PassThru
			$credentialCacheRecord.PSObject.TypeNames[0] = 'CredentialCacheRecord'
			if ($credentialCache.CredentialStore.Keys -contains $cachedCredential) {
				$credentialCacheRecord.Credential = $credentialCache.CredentialStore[$cachedCredential].Credential
				$credentialCacheRecord.DateStored = $credentialCache.CredentialStore[$cachedCredential].DateStored
				$credentialCacheRecord.LastAccessDate = $credentialCache.CredentialStore[$cachedCredential].LastAccessDate
			}
			$credentialCacheRecord
		} else {
			if ($credentialCache.CredentialStore.Keys -notcontains $cachedCredential) {
				& {
					if ($errorActionPreference -ne [System.Management.Automation.ActionPreference]::Stop) {
						$errorActionPreference = 'SilentlyContinue'
					}
					$newCredential = Microsoft.PowerShell.Security\Get-Credential -Credential $cachedCredential
					if ($newCredential) {
						$cachedCredential = $newCredential.UserName.TrimStart('\')
						$credentialCache.CredentialStore[$cachedCredential] = @{'Credential'=$newCredential;'DateStored'=Get-Date;'LastAccessDate'=$null}
						$credentialCache.CredentialStore[$cachedCredential].LastAccessDate = Get-Date
						$credentialCache.CredentialStore[$cachedCredential].Credential
					} else {
						return
					}
				}
			} else {
				$credentialCache.CredentialStore[$cachedCredential].LastAccessDate = Get-Date
				$credentialCache.CredentialStore[$cachedCredential].Credential
			}
		}
	} elseif ($AssociatedObjectId) {
		if (($credentialCache = Get-CredentialCache) -and ($credentialCache.Enabled)) {
			if ($credentialCache.ObjectAssociations.Keys -contains $AssociatedObjectId) {
				Get-CachedCredential -Credential $credentialCache.ObjectAssociations[$AssociatedObjectId] -EntireRecord:$EntireRecord
			}
		}
	} elseif ($List) {
		if ($credentialCache = Get-CredentialCache) {
			Refresh-CachedCredential
			foreach ($item in $credentialCache.CredentialStore.Keys) {
				if ($EntireRecord) {
					$credentialCacheRecord = New-Object System.Management.Automation.PSObject
					$credentialCacheRecord.PSObject.TypeNames[0] = 'CredentialCacheRecord'
					$credentialCacheRecord `
						| Add-Member -MemberType NoteProperty -Name UserName -Value $item -PassThru `
						| Add-Member -MemberType NoteProperty -Name Credential -Value $credentialCache.CredentialStore[$item].Credential -PassThru `
						| Add-Member -MemberType NoteProperty -Name DateStored -Value $credentialCache.CredentialStore[$item].DateStored -PassThru `
						| Add-Member -MemberType NoteProperty -Name LastAccessDate -Value $credentialCache.CredentialStore[$item].LastAccessDate -PassThru
				} else {
					$credentialCache.CredentialStore[$item].Credential
				}
			}
		}
	} else {
		& {
			if ($errorActionPreference -ne [System.Management.Automation.ActionPreference]::Stop) {
				$errorActionPreference = 'SilentlyContinue'
			}
			$newCredential = Microsoft.PowerShell.Security\Get-Credential -Credential $Credential
			if ($newCredential) {
				if (($credentialCache = Get-CredentialCache) -and $credentialCache.Enabled) {
					Set-CachedCredential -Credential $newCredential
				}
				if ($EntireRecord) {
					$credentialCacheRecord = New-Object System.Management.Automation.PSObject `
						| Add-Member -MemberType NoteProperty -Name UserName -Value $newCredential.UserName.TrimStart('\') -PassThru `
						| Add-Member -MemberType NoteProperty -Name Credential -Value $newCredential -PassThru `
						| Add-Member -MemberType NoteProperty -Name DateStored -Value $null -PassThru `
						| Add-Member -MemberType NoteProperty -Name LastAccessDate -Value $null -PassThru
					$credentialCacheRecord.PSObject.TypeNames[0] = 'CredentialCacheRecord'
					$credentialCacheRecord
				} else {
					$newCredential
				}
			}
		}
	}
}

# Syntax:
#     Set-CachedCredential [-Credential] <System.Management.Automation.PSObject> [[-AssociatedObjectId] <string[]>]
function global:Set-CachedCredential {
	param(
		$Credential = $(throw ((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'ParameterArgumentValidationErrorNullNotAllowed') -f $null,'Credential')),
		[string[]]$AssociatedObjectId = $null
	)
	Add-CachedCredential -Credential $Credential -AssociatedObjectId $AssociatedObjectId -Force
}

# Syntax:
#     Remove-CachedCredential [[-UserName] <string>]
function global:Remove-CachedCredential {
	param(
		[string]$UserName = $null
	)
	$credentialCache = Get-CredentialCache
	if ($keysToClear = $(if ($UserName) {$credentialCache.CredentialStore.Keys -like $UserName.TrimStart('\')} else {$credentialCache.CredentialStore.Keys})) {
		foreach ($item in $keysToClear) {
			$credentialCache.CredentialStore.Remove($item)
		}
	}
}

#endregion
#region CacheAssociation functions

# Syntax:
#     Add-CacheAssociation [-AssociatedObjectId] <string[]> [-UserName] <string> [-Force <Switch>]
function global:Add-CacheAssociation {
	param(
		[string[]]$AssociatedObjectId = $(throw ((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'ParameterArgumentValidationErrorNullNotAllowed') -f $null,'Credential')),
		[string]$UserName = $(throw ((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'ParameterArgumentValidationErrorNullNotAllowed') -f $null,'Credential')),
		[Switch]$Force
	)
	$credentialCache = Get-CredentialCache
	if (-not $credentialCache.Enabled) {
		Write-Warning 'Credential caching is not enabled.'
		return
	}
	$UserName = $UserName.TrimStart('\')
	if ($AssociatedObjectId.Count -and $UserName) {
		foreach ($item in $AssociatedObjectId) {
			if (($credentialCache.ObjectAssociations.Keys -notcontains $item) -or $Force) {
				$credentialCache.ObjectAssociations[$item] = $UserName
			} else {
				throw "Cannot set association for '$item' because it is already associated to '$($credentialCache.ObjectAssociations[$item])'. Use the -Force to overwrite the association for '$item'."
			}
		}
	}
}

# Syntax:
#     Get-CacheAssociation [-AssociatedObjectId] <string[]>
#     Get-CacheAssociation [-UserName] <string[]>
function global:Get-CacheAssociation {
	param(
		[string[]]$AssociatedObjectId = $null,
		[string[]]$UserName = $null
	)
	$credentialCache = Get-CredentialCache
	if ($AssociatedObjectId -and $UserName) {
		throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'AmbiguousParameterSet')
	} elseif ($AssociatedObjectId) {
		$keys = @()
		foreach ($item in $AssociatedObjectId) {
			$keys += ($credentialCache.ObjectAssociations.Keys -like $item)
		}
		foreach ($item in ($keys | Select-Object -Unique)) {
			$objectAssociationRecord = New-Object System.Management.Automation.PSObject
			$objectAssociationRecord.PSObject.TypeNames[0] = 'ObjectAssociationRecord'
			$objectAssociationRecord `
				| Add-Member -MemberType NoteProperty -Name AssociatedObjectId -Value $item -PassThru `
				| Add-Member -MemberType NoteProperty -Name UserName -Value $credentialCache.ObjectAssociations[$item] -PassThru
		}
	} elseif ($UserName) {
		$userNames = @()
		foreach ($item in $UserName) {
			$userNames += ($credentialCache.ObjectAssociations.Values -like $item)
		}
		foreach ($item in ($userNames | Select-Object -Unique)) {
			$credentialCache.ObjectAssociations.Keys | Where-Object {$credentialCache.ObjectAssociations[$_] -eq $item} | ForEach-Object {
				$objectAssociationRecord = New-Object System.Management.Automation.PSObject
				$objectAssociationRecord.PSObject.TypeNames[0] = 'ObjectAssociationRecord'
				$objectAssociationRecord `
					| Add-Member -MemberType NoteProperty -Name AssociatedObjectId -Value $_ -PassThru `
					| Add-Member -MemberType NoteProperty -Name UserName -Value $item -PassThru
			}
		}
	} else {
		$credentialCache.ObjectAssociations.Keys | ForEach-Object {
			$objectAssociationRecord = New-Object System.Management.Automation.PSObject
			$objectAssociationRecord.PSObject.TypeNames[0] = 'ObjectAssociationRecord'
			$objectAssociationRecord `
				| Add-Member -MemberType NoteProperty -Name AssociatedObjectId -Value $_ -PassThru `
				| Add-Member -MemberType NoteProperty -Name UserName -Value $credentialCache.ObjectAssociations[$_] -PassThru
		}
	}
}

# Syntax:
#     Set-CacheAssociation [-AssociatedObjectId] <string[]> [-UserName] <string>
function global:Set-CacheAssociation {
	param(
		[string[]]$AssociatedObjectId = $(throw ((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'ParameterArgumentValidationErrorNullNotAllowed') -f $null,'AssociatedObjectId')),
		[string]$UserName = $(throw ((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'ParameterArgumentValidationErrorNullNotAllowed') -f $null,'UserName'))
	)
	Add-CacheAssociation -AssociatedObjectId $AssociatedObjectId -UserName $UserName -Force
}

# Syntax:
#     Remove-CacheAssociation [[-AssociatedObjectId] <string>]
function global:Remove-CacheAssociation {
	param(
		[string]$AssociatedObjectId = $null
	)
	
	$credentialCache = Get-CredentialCache
	if ($keysToClear = $(if ($AssociatedObjectId) {$credentialCache.ObjectAssociations.Keys -like $AssociatedObjectId} else {$credentialCache.ObjectAssociations.Keys})) {
		foreach ($item in $keysToClear) {
			$credentialCache.ObjectAssociations.Remove($item)
		}
	}
}

#endregion
#region Cmdlet override functions

# Syntax:
#     Get-Credential [-credential] <PSCredential> [<CommonParameters>]
function global:Get-Credential {
	param(
		$Credential = $null,
		[Switch]$Verbose,
		[Switch]$Debug,
		[System.Management.Automation.ActionPreference]$ErrorAction = $errorActionPreference
	)
	$errorActionPreference = $ErrorAction
	if ($Debug) {$debugPreference = 'Continue'}
	if ($Verbose) {$verbosePreference = 'Continue'}
	if ($args.Count) {
		Write-Warning -Message 'The cached Get-Credential override does not support the OutVariable and ErrorVariable parameters yet.'
	}
	Get-CachedCredential -Credential $Credential
}

# Syntax:
#     Get-WmiObject [-class] <string> [[-property] <string[]>] [-namespace <string>] [-computerName <string[]>] [-filter <string>] [-credential <PSCredential>] [<CommonParameters>]
#     Get-WmiObject [-namespace <string>] [-computerName <string[]>] [-credential <PSCredential>] [-list] [<CommonParameters>]
#     Get-WmiObject -query <string> [-namespace <string>] [-computerName <string[]>] [-credential <PSCredential>] [<CommonParameters>]
function global:Get-WmiObject {
	$computerNameIndex = $null
	$credentialIndex = $null
	$namespaceIndex = $null
	$passThruArgs = @()
	$passThruArgIndex = 0;
	for ($index = 0; $index -lt $args.Count; $index++) {
		if ((-not $computerNameIndex) -and ($args[$index] -match '^-co') -and ('-ComputerName' -match "^$($args[$index])")) {
			if ($index -lt ($args.Count - 1)) {
				$computerNameIndex = $passThruArgIndex + 1
			}
		} elseif ((-not $credentialIndex) -and ($args[$index] -match '^-cr') -and ('-Credential' -match "^$($args[$index])")) {
			if ($index -lt ($args.Count - 1)) {
				if (($args[$index + 1] -eq $null) -or ($args[$index + 1] -eq [System.Management.Automation.PSCredential]::Empty)) {
					$index++
					continue
				}
				$credentialIndex = $passThruArgIndex + 1
			}
		} elseif ((-not $namespaceIndex) -and ($args[$index] -match '^-n') -and ('-Namespace' -match "^$($args[$index])")) {
			if ($index -lt ($args.Count - 1)) {
				$namespaceIndex = $passThruArgIndex + 1
			}
		}
		$passThruArgs += $args[$index]
		$passThruArgIndex++
	}
	$cancelled = $false
	$storeAssocation = $false
	if ((-not $namespaceIndex) -and ($PSWmiNamespace)) {
		$passThruArgs += '-Namespace'
		$passThruArgs += $PSWmiNamespace
		$namespaceIndex = $passThruArgs.Count - 2
	}
	if ((Get-CredentialCache).Enabled -and $computerNameIndex) {
		if ($credentialIndex) {
			$storeAssociation = $true
			if ($passThruArgs[$credentialIndex] -isnot [System.Management.Automation.PSCredential]) {
				if ($credential = Get-CachedCredential -Credential $passThruArgs[$credentialIndex]) {
					$passThruArgs[$credentialIndex] = $credential
				} else {
					$cancelled = $true
				}
			}
		} elseif ($credential = Get-CachedCredential -AssociatedObjectId $passThruArgs[$computerNameIndex]) {
			$passThruArgs += @('-Credential',$credential)
			$credentialIndex = $passThruArgs.Count - 1
		}
	}
	if (-not $cancelled) {
		$ifSuccessfulStoreCredentialAssociation = {
			if ($? -and $storeAssociation) {
				Set-CachedCredential -Credential $passThruArgs[$credentialIndex] -AssociatedObjectId $passThruArgs[$computerNameIndex]
			}
		}
		Microsoft.PowerShell.Utility\Invoke-Expression "Microsoft.PowerShell.Management\Get-WmiObject $(for ($i = 0; $i -lt $passThruArgs.Count; $i++) { if ($passThruArgs[$i] -match '^-') { $passThruArgs[$i] } else { `"`$passThruArgs[$i]`" } }); $ifSuccessfulStoreCredentialAssociation"
	}
}

#endregion

#endregion
#region ADSI Utility Functions

function global:Get-AdsiObject {
	param(
		[string]$AdsiPath = $null,
		$ComputerName = '.',
		$Credential = $null,
		[System.Management.Automation.PSObject]$AdsObject
	)

	$cancelled = $false

	if ($AdsiPath -and $AdsObject) {
		throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'AmbiguousParameterSet')
	} elseif (-not $AdsiPath -and -not $AdsObject) {
		throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'ParameterArgumentValidationErrorNullNotAllowed') -f $null,'AdsiPath')
	}

	if ($AdsiPath) {
		if (-not $Credential) {
			if (Test-Path -Path function:Get-CachedCredential) {
				$Credential = Get-CachedCredential -AssociatedObjectId $ComputerName
			}
		} else {
			$Credential = Get-Credential $Credential
			if (-not $Credential) {
				$cancelled = $true
			}
		}

		if (-not $cancelled) {
			$userName = $password = $null
			if ($Credential) {
				$userName = $credential.UserName
				$password = $credential.Password | Get-Password -AsPlainText -Force
			}
			New-Object System.DirectoryServices.DirectoryEntry($AdsiPath,$userName,$password)
		}
	} else {
		New-Object System.DirectoryServices.DirectoryEntry($AdsObject)
	}
}

#endregion
#region WMI Utility Functions

function global:ConvertTo-WmiFilter {
	param(
		[string]$PropertyName = $(throw ((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'ParameterArgumentValidationErrorNullNotAllowed') -f $null,'PropertyName')),
		[string[]]$FilterValues,
		[string[]]$LiteralFilterValues
	)
	
	$wmiFilterSet = @()
	if ($FilterValues.Count) {
		foreach ($item in $FilterValues) {
			if ($item -match '[\*\?]') {
				$wmiFilterSet += "$PropertyName LIKE '$($item.Replace('*','%').Replace('?','_'))'"
			} else {
				$wmiFilterSet += "$PropertyName = '$item'"
			}
		}
	}
	if ($LiteralFilterValues.Count) {
		foreach ($item in $LiteralFilterValues) {
			$wmiFilterSet += "$PropertyName = '$item'"
		}
	}
	[string]::Join(' OR ',$wmiFilterSet)
}

# Syntax:
#     Use-WmiNamespace [-Namespace] <string>
#     Use-WmiNamespace [-Reset]
function global:Use-WmiNamespace {
	param(
		[string]$Namespace,
		[switch]$Reset
	)

	if ($Namespace -and $Reset) {
		throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'AmbiguousParameterSet')
	}
	if (($MyInvocation.InvocationName -eq '.') -and ($MyInvocation.MyCommand.CommandType -eq [System.Management.Automation.CommandTypes]::Function)) {
		$scope = 'Local'
	} else {
		$scope = 1
	}
	if ($Reset) {
		Set-Variable -Scope $scope -Name PSWmiNamespace -Value $null -Force | Out-Null
	} else {
		if (-not $Namespace) {
			Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Use-WmiNamespace',$MyInvocation.PipelinePosition)
			Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
			$result = Read-Host -Prompt "Namespace"
			if ($result) {
				$Namespace = $Namespace
			} else {
				return
			}
		}
		Set-Variable -Scope $scope -Name PSWmiNamespace -Value $Namespace -Force | Out-Null
	}
}

function global:New-WmiObject {
	param(
		[string]$Namespace = $PSWmiNamespace,
		[string]$Class = $(throw ((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'ParameterArgumentValidationErrorNullNotAllowed') -f $null,'Class')),
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	if (-not $ComputerName) {
		$ComputerName = @('.')
	}
	$wmiClass = Get-WmiClass -Namespace $Namespace -Class $Class -ComputerName $ComputerName -Credential $Credential
	$instance = $wmiClass.PSBase.CreateInstance()
	$attempt = 1
	while (($instance.PSBase.Properties.Count -lt $instance.__PROPERTYCOUNT) -and ($attempt -le 5)) {
		$attempt++
		Start-Sleep -Milliseconds 200
	}
	$instance
}

function global:Refresh-WmiObject {
	param(
		[System.Management.ManagementObject]$WmiObject = $(throw ((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'ParameterArgumentValidationErrorNullNotAllowed') -f $null,'WmiObject')),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	if ($Credential) {
		Get-WmiObject -Namespace $WmiObject.__NAMESPACE -Class $WmiObject.__CLASS -Filter "__RELPATH='$($WmiObject.__RELPATH.Replace('\','\\'))'" -ComputerName $WmiObject.__SERVER -Credential $Credential
	} else {
		Get-WmiObject -Namespace $WmiObject.__NAMESPACE -Class $WmiObject.__CLASS -Filter "__RELPATH='$($WmiObject.__RELPATH.Replace('\','\\'))'" -ComputerName $WmiObject.__SERVER
	}
}

function global:Get-WmiObjectFromManagementPath {
	param(
		[System.Management.Automation.PSObject]$ManagementPath,
		[System.Management.Automation.PSObject]$Credential = $null
	)

	if ($ManagementPath -isnot [System.Management.ManagementPath]) {
		$ManagementPath = [System.Management.ManagementPath]$ManagementPath
	}

	if ($Credential) {
		Get-WmiObject -Namespace $ManagementPath.NamespacePath -Class $ManagementPath.ClassName -Filter "__RELPATH='$($ManagementPath.RelativePath.Replace('\','\\'))'" -ComputerName $ManagementPath.Server -Credential $Credential
	} else {
		Get-WmiObject -Namespace $ManagementPath.NamespacePath -Class $ManagementPath.ClassName -Filter "__RELPATH='$($ManagementPath.RelativePath.Replace('\','\\'))'" -ComputerName $ManagementPath.Server
	}
}

function global:Get-WmiClass {
	param(
		[string]$Namespace = $null,
		[string]$Class = $(throw ((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'ParameterArgumentValidationErrorNullNotAllowed') -f $null,'Class')),
		[string[]]$ComputerName = @(),
		[Switch]$IncludeDerivedClasses,
		[System.Management.Automation.PSObject]$Credential = $null
	)

	if (-not $ComputerName) {
		$ComputerName = @('.')
	}
	$filter = "__this isa '$Class'"
	if (-not $IncludeDerivedClasses) {
		$filter += " AND __CLASS='$Class'"
	}
	$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Type','PropertyCount','Server','Namespace','Path'))
	$PSStandardMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
	$processScript = {
		if ($host.Name -eq 'PowerGUIHost') {
			$_.PSObject.TypeNames.Remove($_.PSObject.TypeNames[0]) | Out-Null
			if (($_.__NAMESPACE -eq $root) -and ($_.__CLASS -eq '__NAMESPACE')) {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#Root")
			} elseif ($_.__GENUS -eq 2) {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#Namespace")
			} elseif ($_.__GENUS -eq 1) {
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#Class")
			}
		}
		for ($i=0; $i -lt $_.PSObject.TypeNames.Count; $i++) {
			$_.PSObject.TypeNames[$i] += '#MemberOverrideExtension'
		}
		$_ | Add-Member -Force -Name Name -MemberType ScriptProperty -Value {if ($this.__CLASS -eq '__NAMESPACE') {$this.__NAMESPACE} else {$this.__CLASS}}
		for ($i=0; $i -lt $_.PSObject.TypeNames.Count; $i++) {
			$_.PSObject.TypeNames[$i] = $_.PSObject.TypeNames[$i] -replace '#MemberOverrideExtension$',''
		}
		$_ `
			| Add-Member -Force -Name Type -MemberType ScriptProperty -Value {if ($this.__GENUS -eq 1) {'Class'} elseif ($this.__GENUS -eq 2 ) {'Namespace'}} -PassThru `
			| Add-Member -Force -Name PropertyCount -MemberType AliasProperty -Value __PROPERTY_COUNT -PassThru `
			| Add-Member -Force -Name Server -MemberType AliasProperty -Value __SERVER -PassThru `
			| Add-Member -Force -Name Namespace -MemberType AliasProperty -Value __NAMESPACE -PassThru `
			| Add-Member -Force -Name Path -MemberType AliasProperty -Value __PATH -PassThru `
			| Add-Member -Force -Name PSStandardMembers -MemberType MemberSet -Value $PSStandardMembers -PassThru
	}
	if ($Credential) {
		Get-WmiObject -Namespace $Namespace -Class meta_class -Filter $filter -ComputerName $ComputerName -Credential $Credential | ForEach-Object $processScript
	} else {
		Get-WmiObject -Namespace $Namespace -Class meta_class -Filter $filter -ComputerName $ComputerName | ForEach-Object $processScript
	}
}

function global:Get-WmiRoot {
	param(
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	Get-WmiClass -Namespace root -Class __NAMESPACE -ComputerName $ComputerName -Credential $Credential
}

#endregion
#region Local User and Group Functions

#region LocalUser functions

function global:New-LocalUser {
	param(
		[string[]]$Name = @(),
		[System.Security.SecureString]$Password,
		[string]$FullName = $null,
		[string]$Description = $null,
		[switch]$UserMustChangePasswordAtNextLogon,
		[switch]$UserCannotChangePassword,
		[switch]$PasswordNeverExpires,
		[switch]$AccountIsDisabled,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	if ($args.Count) {
		throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
	}

	if ($UserMustChangePasswordAtNextLogon -and ($UserCannotChangePassword -or $PasswordNeverExpires)) {
		throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'AmbiguousParameterSet')
	}

	$executeLogonScriptFlag = 0x00000001
	$accountDisabledFlag = 0x00000002
	$homeDirectoryRequiredFlag = 0x00000008
	$accountLockedOutFlag = 0x00000010
	$passwordNotRequiredFlag = 0x00000020
	$passwordCannotChangeFlag = 0x00000040
	$encryptedPasswordAllowedFlag = 0x00000080
	$passwordNeverExpiresFlag = 0x00010000
	$smartcardRequiredFlag = 0x00040000
	$passwordExpiredFlag = 0x00800000

	$userFlags = 0
	if ($UserCannotChangePassword) {
		$userFlags = $userFlags -bor $passwordCannotChangeFlag
	}
	if ($PasswordNeverExpires) {
		$userFlags = $userFlags -bor $passwordNeverExpiresFlag
	}
	if ($AccountIsDisabled) {
		$userFlags = $userFlags -bor $accountDisabledFlag
	}

	$promptedForRequiredParameters = $false
	if ((-not $Name) -or (-not $Password)) {
		if (-not $promptedForRequiredParameters) {
			$promptedForRequiredParameters = $true
			Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'New-LocalUser',$MyInvocation.PipelinePosition)
			Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
			if (-not $Name) {
				$index = 0
				$Name = @()
				while ($result = Read-Host -Prompt "Name[$index]") {
					$index++
					$Name += $result
				}
				if (-not $Name) {
					return
				}
			}
			if (-not $Password) {
				if ($result = Read-Host -AsSecureString -Prompt 'Password') {
					$Password = $result
				} else {
					return
				}
			}
		} else {
			return
		}
	}

	if (-not $ComputerName) {
		$ComputerName = @('.')
	}
	$cancelled = $false
	if ($Credential) {
		$Credential = Get-Credential -Credential $Credential
		$cancelled = (-not $Credential)
	}

	if ($cancelled) {
		return
	}

	foreach ($item in $ComputerName) {
		if ($item -eq $env:COMPUTERNAME) {
			$item = '.'
		}
		$computer = Get-AdsiObject -AdsiPath "WinNT://$item" -ComputerName $item -Credential $Credential
		foreach ($userName in $Name) {
			$user = $computer.Create('user',$userName)
			if ($?) {
				$user.SetPassword(($Password | Get-Password -AsPlainText -Force))
				$user.SetInfo()
			}
			if ($? -and $FullName) {
				$user.Put('FullName',$FullName)
				$user.SetInfo()
			}
			if ($? -and $Description) {
				$user.Put('Description',$Description)
				$user.SetInfo()
			}
			if ($? -and $UserMustChangePasswordAtNextLogon) {
				$user.Put('PasswordExpired',1)
				$user.SetInfo()
			}
			if ($? -and $userFlags) {
				$user.Put('UserFlags',$userFlags)
				$user.SetInfo()
			}

			Get-LocalUser -Name $userName -ComputerName $item -Credential $Credential
		}
	}
}

function global:Get-LocalUser {
	param(
		[string[]]$Name = $null,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	if ($args.Count) {
		throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
	}

	$defaultProperties = @('Name','Description','ComputerName','SID')
	$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]$defaultProperties)
	$PSStandardMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)

	if (-not $ComputerName) {
		$ComputerName = @('.')
	}
	$cancelled = $false
	if ($Credential) {
		$Credential = Get-Credential -Credential $Credential
		$cancelled = (-not $Credential)
	}
	if ($cancelled) {
		return
	}

	foreach ($item in $ComputerName) {
		if ($item -eq $env:COMPUTERNAME) {
			$item = '.'
		}

		$computerSystem = $(if ($Credential) {Get-WmiObject -Namespace root\cimv2 -Class Win32_ComputerSystem -ComputerName $item -Credential $Credential} else {Get-WmiObject -Namespace root\cimv2 -Class Win32_ComputerSystem -ComputerName $item})
		if ($computerSystem.Name -eq $env:COMPUTERNAME) {
			$item = '.'
		}

		$filter = "Domain='$($computerSystem.Name)'"
		if ($Name.Count) {
			$filter += "AND ($(ConvertTo-WmiFilter -PropertyName Name -FilterValues $Name))"
		}

		$toStringMethod = {
			$this.Name
		}

		$renameMethod = {
			if ($args.Count -and $args[0] -is [string]) {
				[string]$newName = $args[0]
				$newName = $newName.Trim()
				if ($newName.Length -gt 20) {
					Write-Warning '[LocalUser]::Rename: The new user name exceeds 20 characters in length and has been truncated.'
					$newName = $newName.SubString(0,20).Trim()
				}
				$arguments = @($newName)
				$result = $this.WmiUserAccount.PSBase.InvokeMethod('Rename',$arguments)
				if ($result -eq 0) {
					$this.WmiUserAccount.Name = $newName
					$this.WmiUserAccount.Caption = "$($this.WmiUserAccount.Domain)\$($this.WmiUserAccount.Name)"
					$computerName = $this.WmiUserAccount.__SERVER
					if ($computerName -eq $env:COMPUTERNAME) {
						$computerName = '.'
					}
					$this.ADSIUser = Get-AdsiObject -AdsiPath "WinNT://$computerName/$newName,User" -ComputerName $computerName -Credential $this.Credential
				}
			}
		}

		$unlockMethod = {
			$this.WmiUserAccount.Lockout = $false
			$this.WmiUserAccount.PSBase.Put() | Out-Null
		}

		$getGroupsMethod = {
			$this.ADSIUser.PSBase.Invoke('Groups') | ForEach-Object {
				$name = $_.GetType().InvokeMember('Name','GetProperty',$null,$_,$null)
				Get-LocalGroup -Name $Name -ComputerName $this.ComputerName -Credential $this.Credential
			}
		}

		$isMemberOfGroupMethod = {
			if ($args.Count -and $args[0] -is [string]) {
				$groupName = $args[0]
				$computerName = $this.ComputerName
				if ($computerName -eq $env:COMPUTERNAME) {
					$computerName = '.'
				}
				$group = Get-AdsiObject -AdsiPath "WinNT://$computerName/$groupName,group" -ComputerName $computerName -Credential $this.Credential
				$group.IsMember(($this.ADSIUser.PSBase.Path.Replace('WinNT://./',"WinNT://$($this.ComputerName)/") -replace ',User$',''))
			}
		}

		$addToGroupMethod = {
			if ($args.Count -and $args[0] -is [string]) {
				$groupName = $args[0]
				$computerName = $this.ComputerName
				if ($computerName -eq $env:COMPUTERNAME) {
					$computerName = '.'
				}
				$group = Get-AdsiObject -AdsiPath "WinNT://$computerName/$groupName,group" -ComputerName $computerName -Credential $this.Credential
				$group.Add(($this.ADSIUser.PSBase.Path.Replace('WinNT://./',"WinNT://$($this.ComputerName)/") -replace ',User$',''))
			}
		}

		$removeFromGroupMethod = {
			if ($args.Count -and $args[0] -is [string]) {
				$groupName = $args[0]
				$computerName = $this.ComputerName
				if ($computerName -eq $env:COMPUTERNAME) {
					$computerName = '.'
				}
				$group = Get-AdsiObject -AdsiPath "WinNT://$computerName/$groupName,group" -ComputerName $computerName -Credential $this.Credential
				$group.Remove(($this.ADSIUser.PSBase.Path.Replace('WinNT://./',"WinNT://$($this.ComputerName)/") -replace ',User$',''))
			}
		}

		$setPasswordMethod = {
			if ($args.Count -and ($password = $args[0])) {
				if ($password -is [System.Security.SecureString]) {
					$password = $password | Get-Password -AsPlainText -Force
				}
				if ($password -is [string]) {
					$this.ADSIUser.SetPassword($password)
				}
			}
		}

		$forcePasswordChangeMethod = {
			$this.UserMustChangePasswordAtNextLogon = $true
		}

		$expireAccountMethod = {
			$this.AccountExpirationDate = Get-Date
		}

		$enableMethod = {
			$this.ADSIUser.PSBase.InvokeSet('AccountDisabled',$false)
			$this.ADSIUser.SetInfo()
			if ($?) {
				$this.WmiUserAccount.Disabled = $false
			}
		}

		$disableMethod = {
			$this.ADSIUser.PSBase.InvokeSet('AccountDisabled',$true)
			$this.ADSIUser.SetInfo()
			if ($?) {
				$this.WmiUserAccount.Disabled = $true
			}
		}

		$(if ($Credential) {Get-WmiObject -Namespace root\cimv2 -Class Win32_UserAccount -Filter $filter -ComputerName $item -Credential $Credential} else {Get-WmiObject -Namespace root\cimv2 -Class Win32_UserAccount -Filter $filter -ComputerName $item}) `
			| Select-Object -Property @{Name='WmiUserAccount';Expression={$_}},@{Name='Credential';Expression={if ($Credential) {$Credential} else {$null}}} `
			| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardMembers -PassThru `
			| Add-Member -MemberType ScriptMethod -Name ToString -Value $toStringMethod -Force -PassThru `
			| Add-Member -MemberType ScriptMethod -Name Rename -Value $renameMethod -PassThru `
			| Add-Member -MemberType ScriptMethod -Name Unlock -Value $unlockMethod -PassThru `
			| Add-Member -MemberType ScriptProperty -Name ComputerName -Value {$this.WmiUserAccount.__SERVER} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name Name -Value {$this.WmiUserAccount.Name} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name FullyQualifiedName -Value {$this.WmiUserAccount.Caption} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name SID -Value {$this.WmiUserAccount.SID} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name InstallDate -Value {$this.WmiUserAccount.InstallDate} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name Disabled -Value {$this.WmiUserAccount.Disabled} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name PasswordRequired -Value {$this.WmiUserAccount.PasswordRequired} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name FullName -Value {$this.WmiUserAccount.FullName} -SecondValue {if ($args.Count -and $args[0] -is [string]) {$fullName = $args[0]; $this.WmiUserAccount.FullName = $fullName; $this.WmiUserAccount.PSBase.Put() | Out-Null}} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name LockedOut -Value {$this.WmiUserAccount.Lockout} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name PasswordNeverExpires -Value {-not $this.WmiUserAccount.PasswordExpires} -SecondValue {if ($args.Count -and $args[0] -is [bool]) {$passwordNeverExpires = $args[0]; $this.WmiUserAccount.PasswordExpires = -not $passwordNeverExpires; $this.WmiUserAccount.PSBase.Put() | Out-Null}} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name UserCannotChangePassword -Value {-not $this.WmiUserAccount.PasswordChangeable} -SecondValue {if ($args.Count -and $args[0] -is [bool]) {$userCannotChangePassword = $args[0]; $this.WmiUserAccount.PasswordChangeable = -not $userCannotChangePassword; $this.WmiUserAccount.PSBase.Put() | Out-Null}} -PassThru `
			| ForEach-Object {
				$_ `
					| Add-Member -MemberType NoteProperty -Name ADSIUser -Value (Get-AdsiObject -AdsiPath "WinNT://$item/$($_.Name),User" -ComputerName $item -Credential $Credential) -PassThru `
					| Add-Member -MemberType ScriptMethod -Name GetGroups -Value $getGroupsMethod -PassThru `
					| Add-Member -MemberType ScriptMethod -Name IsMemberOfGroup -Value $isMemberOfGroupMethod -PassThru `
					| Add-Member -MemberType ScriptMethod -Name AddToGroup -Value $addToGroupMethod -PassThru `
					| Add-Member -MemberType ScriptMethod -Name RemoveFromGroup -Value $removeFromGroupMethod -PassThru `
					| Add-Member -MemberType ScriptMethod -Name SetPassword -Value $setPasswordMethod -PassThru `
					| Add-Member -MemberType ScriptMethod -Name ForcePasswordChange -Value $forcePasswordChangeMethod -PassThru `
					| Add-Member -MemberType ScriptMethod -Name ExpireAccount -Value $expireAccountMethod -PassThru `
					| Add-Member -MemberType ScriptMethod -Name Enable -Value $enableMethod -PassThru `
					| Add-Member -MemberType ScriptMethod -Name Disable -Value $disableMethod -PassThru `
					| Add-Member -MemberType ScriptProperty -Name Description -Value {$this.ADSIUser.Description.Value} -SecondValue {if ($args.Count -and $args[0] -is [string]) {$description = [string]$args[0]; $this.ADSIUser.PSBase.InvokeSet('Description',$description); $this.ADSIUser.PSBase.CommitChanges()}} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name AccountExpirationDate -Value {trap {continue}; $this.ADSIUser.PSBase.InvokeGet('AccountExpirationDate')} -SecondValue {if ($accountExpirationDate = [datetime]$args[0]) {$this.ADSIUser.PSBase.InvokeSet('AccountExpirationDate',$accountExpirationDate); $this.ADSIUser.PSBase.CommitChanges()}} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name PasswordAge -Value {[int]("{0:N0}" -f ($this.ADSIUser.PasswordAge.Value / 86400))} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name MaxPasswordAge -Value {[int]("{0:N0}" -f ($this.ADSIUser.MaxPasswordAge.Value / 86400))} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name MinPasswordAge -Value {[int]("{0:N0}" -f ($this.ADSIUser.MinPasswordAge.Value / 86400))} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name PasswordHistoryLength -Value {$this.ADSIUser.PasswordHistoryLength.Value} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name MinPasswordLength -Value {$this.ADSIUser.MinPasswordLength.Value} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name UserMustChangePasswordAtNextLogon -Value {$this.ADSIUser.PasswordExpired.Value -ne 0} -SecondValue {if ($args.Count -and $args[0] -is [bool]) {$userMustChangePasswordAtNextLogon = $args[0]; $this.ADSIUser.Put('PasswordExpired', [int]$userMustChangePasswordAtNextLogon); $this.ADSIUser.SetInfo()}} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name LogonScriptExecuted -Value {[bool]($this.ADSIUser.UserFlags.Value -band 0x1)} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name HomeDirectoryRequired -Value {[bool]($this.ADSIUser.UserFlags.Value -band 0x8)} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name EncryptedTextPasswordAllowed -Value {[bool]($this.ADSIUser.UserFlags.Value -band 0x80)} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name SmartCardRequired -Value {[bool]($this.ADSIUser.UserFlags.Value -band 0x40000)} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name LockoutObservationInterval -Value {$this.ADSIUser.LockoutObservationInterval.Value / 60} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name LockoutMaxFailedAttempts -Value {$this.ADSIUser.MaxBadPasswordsAllowed.Value} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name LockoutAutoUnlockInterval -Value {$this.ADSIUser.AutoUnlockInterval.Value / 60}
				$_.PSObject.TypeNames[0] = 'LocalUser'
				$_
			}
	}
}

function global:Enable-LocalUser {
	param(
		[string[]]$Name = $null,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	begin{
		if ($args.Count) {
			throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
		}
		$promptedForRequiredParameters = $false
		$cancelled = $false
	}

	process {
		if ($Name -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		} elseif ($_) {
			if ($_.PSObject.TypeNames -contains 'LocalUser') {
				if ($_.Disabled) {
					$_.Enable()
				}
				$_
			} else {
				$processName = $null
				$processComputerName = $ComputerName
				$processCredential = $Credential
				if ($_ -is [string]) {
					$processName = $_
				} else {
					if ($_.Name) {
						$processName = $_.Name
					}
					if ((-not $processComputerName) -and ($_.ComputerName)) {
						$processComputerName = $_.ComputerName
					}
					if ((-not $processCredential) -and ($_.Credential)) {
						$processCredential = $_.Credential
					}
				}
				if (-not $processName) {
					throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
				}
				Get-LocalUser -Name $processName -ComputerName $processComputerName -Credential $processCredential | Enable-LocalUser
			}
		} else {
			if (-not $Name) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Enable-LocalUser',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					$index = 0
					$Name = @()
					while ($result = Read-Host -Prompt "Name[$index]") {
						$index++
						$Name += $result
					}
					if (-not $Name) {
						return
					}
				} else {
					return
				}
			}
			Get-LocalUser -Name $Name -ComputerName $ComputerName -Credential $Credential | Enable-LocalUser
		}
	}
}

function global:Disable-LocalUser {
	param(
		[string[]]$Name = $null,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	begin{
		if ($args.Count) {
			throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
		}
		$promptedForRequiredParameters = $false
	}

	process {
		if ($Name -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		} elseif ($_) {
			if ($_.PSObject.TypeNames -contains 'LocalUser') {
				if (-not $_.Disabled) {
					$_.Disable()
				}
				$_
			} else {
				$processName = $null
				$processComputerName = $ComputerName
				$processCredential = $Credential
				if ($_ -is [string]) {
					$processName = $_
				} else {
					if ($_.Name) {
						$processName = $_.Name
					}
					if ((-not $processComputerName) -and ($_.ComputerName)) {
						$processComputerName = $_.ComputerName
					}
					if ((-not $processCredential) -and ($_.Credential)) {
						$processCredential = $_.Credential
					}
				}
				if (-not $processName) {
					throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
				}
				Get-LocalUser -Name $processName -ComputerName $processComputerName -Credential $processCredential | Disable-LocalUser
			}
		} else {
			if (-not $Name) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Disable-LocalUser',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					$index = 0
					$Name = @()
					while ($result = Read-Host -Prompt "Name[$index]") {
						$index++
						$Name += $result
					}
					if (-not $Name) {
						return
					}
				} else {
					return
				}
			}
			Get-LocalUser -Name $Name -ComputerName $ComputerName -Credential $Credential | Disable-LocalUser
		}
	}
}

function global:Unlock-LocalUser {
	param(
		[string[]]$Name = $null,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	begin{
		if ($args.Count) {
			throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
		}
		$promptedForRequiredParameters = $false
	}

	process {
		if ($Name -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		} elseif ($_) {
			if ($_.PSObject.TypeNames -contains 'LocalUser') {
				if ($_.LockedOut) {
					$_.Unlock()
				}
				$_
			} else {
				$processName = $null
				$processComputerName = $ComputerName
				$processCredential = $Credential
				if ($_ -is [string]) {
					$processName = $_
				} else {
					if ($_.Name) {
						$processName = $_.Name
					}
					if ((-not $processComputerName) -and ($_.ComputerName)) {
						$processComputerName = $_.ComputerName
					}
					if ((-not $processCredential) -and ($_.Credential)) {
						$processCredential = $_.Credential
					}
				}
				if (-not $processName) {
					throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
				}
				Get-LocalUser -Name $processName -ComputerName $processComputerName -Credential $processCredential | ForEach-Object {
					if ($_.LockedOut) {
						$_.Unlock()
					}
					$_
				}
			}
		} else {
			if (-not $Name) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Unlock-LocalUser',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					$index = 0
					$Name = @()
					while ($result = Read-Host -Prompt "Name[$index]") {
						$index++
						$Name += $result
					}
					if (-not $Name) {
						return
					}
				} else {
					return
				}
			}
			Get-LocalUser -Name $Name -ComputerName $ComputerName -Credential $Credential | Unlock-LocalUser
		}
	}
}

function global:Rename-LocalUser {
	param(
		[string]$Name = $null,
		[string]$NewName = $null,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	begin{
		if ($args.Count) {
			throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
		}
		$promptedForRequiredParameters = $false
	}

	process {
		if ($Name -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		} elseif ($_) {
			if (-not $NewName) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Rename-LocalUser',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					if (-not $NewName) {
						$result = Read-Host -Prompt "NewName"
						if ($result) {
							$NewName
						} else {
							return
						}
					}
				} else {
					return
				}
			}
			if ($_.PSObject.TypeNames -contains 'LocalUser') {
				$_.Rename($NewName)
				$_
			} else {
				$processName = $null
				$processComputerName = $ComputerName
				$processCredential = $Credential
				if ($_ -is [string]) {
					$processName = $_
				} else {
					if ($_.Name) {
						$processName = $_.Name
					}
					if ((-not $processComputerName) -and ($_.ComputerName)) {
						$processComputerName = $_.ComputerName
					}
					if ((-not $processCredential) -and ($_.Credential)) {
						$processCredential = $_.Credential
					}
				}
				if (-not $processName) {
					throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
				}
				Get-LocalUser -Name $processName -ComputerName $processComputerName -Credential $processCredential | Rename-LocalUser -NewName $NewName
			}
		} else {
			if ((-not $Name) -or (-not $NewName)) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Rename-LocalUser',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					if (-not $Name) {
						$result = Read-Host -Prompt "Name"
						if ($result) {
							$Name = $result
						} else {
							return
						}
					}
					if (-not $NewName) {
						$result = Read-Host -Prompt "NewName"
						if ($result) {
							$NewName
						} else {
							return
						}
					}
				} else {
					return
				}
			}
			Get-LocalUser -Name $Name -ComputerName $ComputerName -Credential $Credential | Rename-LocalUser -NewName $NewName
		}
	}
}

function global:Set-LocalUser {
	param(
		[string[]]$Name = $null,
		[System.Security.SecureString]$Password,
		[switch]$Enable,
		[switch]$Disable,
		[switch]$Unlock,
		[string]$FullName = $null,
		[string]$Description = $null,
		[System.Management.Automation.PSObject]$PasswordNeverExpires = $null,
		[System.Management.Automation.PSObject]$UserCanChangePassword = $null,
		[System.Management.Automation.PSObject]$UserMustChangePasswordAtNextLogon = $null,
		[System.Management.Automation.PSObject]$AccountExpirationDate = $null,
		[switch]$Force,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	begin{
		if ($args.Count) {
			throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
		}
		$promptedForRequiredParameters = $false
		if ($UserMustChangePasswordAtNextLogon -and ($UserCannotChangePassword -or $PasswordNeverExpires)) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'AmbiguousParameterSet')
		}
		if (($PasswordNeverExpires -ne $null) -and ($PasswordNeverExpires -isnot [bool])) {
			[double]$number = 0
			if (-not [double]::TryParse($PasswordNeverExpires, [REF]$number)) {
				throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'CannotConvertArgumentNoMessage') -f $null,'PasswordNeverExpires',$null,$null,$null,$null,((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'CannotConvertArgument') -f $null,'PasswordNeverExpires','System.Boolean',$null,$null,$null,$PasswordNeverExpires.ToString(),$null))
			}
			$PasswordNeverExpires = [bool]$number
		}
		if (($UserCannotChangePassword -ne $null) -and ($UserCannotChangePassword -isnot [bool]))  {
			[double]$number = 0
			if (-not [double]::TryParse($UserCannotChangePassword, [REF]$number)) {
				throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'CannotConvertArgumentNoMessage') -f $null,'UserCannotChangePassword',$null,$null,$null,$null,((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'CannotConvertArgument') -f $null,'UserCannotChangePassword','System.Boolean',$null,$null,$null,$UserCannotChangePassword.ToString(),$null))
			}
			$UserCannotChangePassword = [bool]$number
		}
		if (($UserMustChangePasswordAtNextLogon -ne $null) -and ($UserMustChangePasswordAtNextLogon -isnot [bool]))  {
			[double]$number = 0
			if (-not [double]::TryParse($UserMustChangePasswordAtNextLogon, [REF]$number)) {
				throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'CannotConvertArgumentNoMessage') -f $null,'UserMustChangePasswordAtNextLogon',$null,$null,$null,$null,((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'CannotConvertArgument') -f $null,'UserMustChangePasswordAtNextLogon','System.Boolean',$null,$null,$null,$UserMustChangePasswordAtNextLogon.ToString(),$null))
			}
			$UserMustChangePasswordAtNextLogon = [bool]$number
		}
		if ($AccountExpirationDate -ne $null) {
			$AccountExpirationDate = [System.DateTime]$AccountExpirationDate
		}
	}

	process {
		if ($Name -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		} elseif ($_) {
			if ($_.PSObject.TypeNames -contains 'LocalUser') {
				if ($Password) {
					$_.SetPassword($Password)
				}
				if ($Enable -and $_.Disabled) {
					$_.Enable()
				}
				if ($Disable -and -not $_.Disabled) {
					$_.Disable()
				}
				if ($Unlock -and $_.LockedOut) {
					$_.Unlock()
				}
				if ($FullName -and ($_.FullName -cne $FullName)) {
					$_.FullName = $FullName
				}
				if ($Description -and ($_.Description -cne $Description)) {
					$_.Description = $Description
				}
				if (($PasswordNeverExpires -ne $null) -and ($_.PasswordNeverExpires -ne $PasswordNeverExpires)) {
					$_.PasswordNeverExpires = $PasswordNeverExpires
				}
				if (($UserCannotChangePassword -ne $null) -and ($_.UserCannotChangePassword -ne $UserCannotChangePassword)) {
					$_.UserCannotChangePassword = $UserCannotChangePassword
				}
				if (($UserMustChangePasswordAtNextLogon -ne $null) -and ($_.UserMustChangePasswordAtNextLogon -ne $UserMustChangePasswordAtNextLogon)) {
					$_.UserMustChangePasswordAtNextLogon = $UserMustChangePasswordAtNextLogon
				}
				if (($AccountExpirationDate) -and ($_.AccountExpirationDate -ne $AccountExpirationDate)) {
					$_.AccountExpirationDate = $AccountExpirationDate
				}
				$_
			} else {
				$processName = $null
				$processComputerName = $ComputerName
				$processCredential = $Credential
				if ($_ -is [string]) {
					$processName = $_
				} else {
					if ($_.Name) {
						$processName = $_.Name
					}
					if ((-not $processComputerName) -and ($_.ComputerName)) {
						$processComputerName = $_.ComputerName
					}
					if ((-not $processCredential) -and ($_.Credential)) {
						$processCredential = $_.Credential
					}
				}
				if (-not $processName) {
					throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
				}
				Get-LocalUser -Name $processName -ComputerName $processComputerName -Credential $processCredential | Set-LocalUser -Password $Password -Enable:$Enable -Disable:$Disable -Unlock:$Unlock -FullName $FullName -Description $Description -PasswordNeverExpires $PasswordNeverExpires -UserCannotChangePassword $UserCannotChangePassword -UserMustChangePasswordAtNextLogon $UserMustChangePasswordAtNextLogon -AccountExpirationDate $AccountExpirationDate
			}
		} else {
			if (-not $Name) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Set-LocalUser',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					$index = 0
					$Name = @()
					while ($result = Read-Host -Prompt "Name[$index]") {
						$index++
						$Name += $result
					}
					if (-not $Name) {
						return
					}
				} else {
					return
				}
			}
			Get-LocalUser -Name $Name -ComputerName $ComputerName -Credential $Credential | Set-LocalUser -Password $Password -Enable:$Enable -Disable:$Disable -Unlock:$Unlock -FullName $FullName -Description $Description -PasswordNeverExpires $PasswordNeverExpires -UserCannotChangePassword $UserCannotChangePassword -UserMustChangePasswordAtNextLogon $UserMustChangePasswordAtNextLogon -AccountExpirationDate $AccountExpirationDate
		}
	}
}

function global:Remove-LocalUser {
	param(
		[string[]]$Name = $null,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	begin{
		if ($args.Count) {
			throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
		}
		$promptedForRequiredParameters = $false
	}

	process {
		if ($Name -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		}
		if ($_) {
			$processName = $null
			$processComputerName = $ComputerName
			$processCredential = $Credential
			if ($_ -is [string]) {
				$processName = $_
			} else {
				if ($_.Name) {
					$processName = $_.Name
				}
				if ((-not $processComputerName) -and ($_.ComputerName)) {
					$processComputerName = $_.ComputerName
				}
				if ((-not $processCredential) -and ($_.Credential)) {
					$processCredential = $_.Credential
				}
			}
			if (-not $processName) {
				throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
			}
		} else {
			if (-not $Name) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Remove-LocalUser',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					$index = 0
					$Name = @()
					while ($result = Read-Host -Prompt "Name[$index]") {
						$index++
						$Name += $result
					}
					if (-not $Name) {
						return
					}
				} else {
					return
				}
			}
			$processName = $Name
			$processComputerName = $ComputerName
			$processCredential = $Credential
		}
		if (-not $processComputerName) {
			$processComputerName = @('.')
		}
		foreach ($item in $processComputerName) {
			if ($item -eq $env:COMPUTERNAME) {
				$item = '.'
			}
			if ($computer = Get-AdsiObject -AdsiPath "WinNT://$item" -ComputerName $item -Credential $processCredential) {
				foreach ($userName in $processName) {
					$computer.Delete('user',$userName)
				}
			}
		}
	}
}

#endregion
#region LocalGroup functions

function global:New-LocalGroup {
	param(
		[string[]]$Name = @(),
		[string[]]$ComputerName = @(),
		[string]$Description = $null,
		[System.Management.Automation.PSObject]$Credential = $null
	)

	if ($args.Count) {
		throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
	}
	$promptedForRequiredParameters = $false
	if (-not $Name) {
		if (-not $promptedForRequiredParameters) {
			$promptedForRequiredParameters = $true
			Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'New-LocalGroup',$MyInvocation.PipelinePosition)
			Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
			$index = 0
			$Name = @()
			while ($result = Read-Host -Prompt "Name[$index]") {
				$index++
				$Name += $result
			}
			if (-not $Name) {
				return
			}
		} else {
			return
		}
	}

	if (-not $ComputerName) {
		$ComputerName = @('.')
	}
	$cancelled = $false
	if ($Credential) {
		$Credential = Get-Credential -Credential $Credential
		$cancelled = (-not $Credential)
	}

	if ($cancelled) {
		return
	}

	foreach ($item in $ComputerName) {
		if ($item -eq $env:COMPUTERNAME) {
			$item = '.'
		}
		$computer = Get-AdsiObject -AdsiPath "WinNT://$item" -ComputerName $item -Credential $Credential
		foreach ($groupName in $Name) {
			$group = $computer.Create('group',$groupName)
			if ($?) {
				$group.Put('GroupType',4)
				$group.SetInfo()
			}
			if ($? -and $Description) {
				$group.Put('Description',$Description)
				$group.SetInfo()
			}

			Get-LocalGroup -Name $groupName -ComputerName $item -Credential $Credential
		}
	}
}

function global:Get-LocalGroup {
	param(
		[string[]]$Name = $null,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	if ($args.Count) {
		throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
	}

	$defaultProperties = @('Name','Description','ComputerName','SID')
	$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]$defaultProperties)
	$PSStandardMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)

	if (-not $ComputerName) {
		$ComputerName = @('.')
	}

	$cancelled = $false
	if ($Credential) {
		$Credential = Get-Credential -Credential $Credential
		$cancelled = (-not $Credential)
	}

	if ($cancelled) {
		return
	}

	foreach ($item in $ComputerName) {
		if ($item -eq $env:COMPUTERNAME) {
			$item = '.'
		}

		$computerSystem = $(if ($Credential) {Get-WmiObject -Namespace root\cimv2 -Class Win32_ComputerSystem -ComputerName $item -Credential $Credential} else {Get-WmiObject -Namespace root\cimv2 -Class Win32_ComputerSystem -ComputerName $item})
		if ($computerSystem.Name -eq $env:COMPUTERNAME) {
			$item = '.'
		}

		$filter = "Domain='$($computerSystem.Name)'"
		if ($Name.Count) {
			$filter += "AND ($(ConvertTo-WmiFilter -PropertyName Name -FilterValues $Name))"
		}

		$toStringMethod = {
			$this.Name
		}

		$renameMethod = {
			if ($args.Count -and $args[0] -is [string]) {
				[string]$newName = $args[0]
				$newName = $newName.Trim()
				if ($newName.Length -gt 20) {
					Write-Warning '[LocalGroup]::Rename: The new group name exceeds 20 characters in length and has been truncated.'
					$newName = $newName.SubString(0,20).Trim()
				}
				$arguments = @($newName)
				$result = $this.WmiGroup.PSBase.InvokeMethod('Rename',$arguments)
				if ($result -eq 0) {
					$this.WmiGroup.Name = $newName
					$this.WmiGroup.Caption = "$($this.WmiGroup.Domain)\$($this.WmiGroup.Name)"
					$computerName = $this.WmiGroup.__SERVER
					if ($ComputerName -eq $env:COMPUTERNAME) {
						$ComputerName = '.'
					}
					$this.ADSIGroup = Get-AdsiObject -AdsiPath "WinNT://$computerName/$newName,Group" -ComputerName $computerName -Credential $this.Credential
				}
			}
		}

		$getMembersMethod = {
			[string[]]$member = @()
			if ($args.Count -and $args[0]) {
				$member = $args[0]
			}

			$toStringMethod = {
				$this.Name
			}

			$getLocalUserMethod = {
				if ($this.Type -eq 'Local User') {
					Get-LocalUser -Name $this.Name.Replace("$($env:COMPUTERNAME)\",'') -ComputerName $this.ComputerName -Credential $this.LocalGroup.Credential
				}
			}

			$defaultProperties = @('Name','Type','Path','SID')
			$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]$defaultProperties)
			$PSStandardMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)

			$parentSidMap = @{}
			$localGroupMembers = @()
			$this.ADSIGroup.PSBase.Invoke('Members') | ForEach-Object {
				$guid = $_.GetType().InvokeMember('guid','GetProperty',$null,$_,$null)
				$name = $_.GetType().InvokeMember('name','GetProperty',$null,$_,$null)
				$sid = New-Object 'System.Security.Principal.SecurityIdentifier' (([byte[]]$_.GetType().InvokeMember('objectsid','GetProperty',$null,$_,$null)),0)
				$parentName = $_.GetType().InvokeMember('parent','GetProperty',$null,$_,$null) -replace 'WinNT:(//)?([^/]+/)?',''
				if ($parentName -and $sid.AccountDomainSid) {$parentSidMap[$sid.AccountDomainSid] = $parentName}
				if ((-not $parentName) -and ($name -eq $sid.Value)) {$name = 'Account Unknown'}
				$localAccount = ($parentName -eq $this.ComputerName)
				$type = 'Unknown'
				$path = $null
				switch ($guid) {
					'{D83F1060-1E71-11CF-B1F3-02608C9E7553}' {
						if ($localAccount) {
							$type = 'Local User'
							if ($name -ne 'Account Unknown') {
								$path = "WinNT://$parentName/$name,User"
							}
						} else {
							$type = 'Domain User'
							if ($name -ne 'Account Unknown') {
								$path = "WinNT://$parentName/$name,User"
								$name = "$parentName\$name"
							}
						}
						break
					}
					'{D9C1AAD0-1E71-11CF-B1F3-02608C9E7553}' {
						if ($sid.AccountDomainSid) {
							$type = 'Domain Group'
							if ($name -ne 'Account Unknown') {
								$path = "WinNT://$parentName/$name,Group"
								$name = "$parentName\$name"
							}
						} else {
							$type = 'Built-in Security Principal'
							$path = "WinNT://$parentName/$name"
							$name = "$parentName\$name"
						}
						break
					}
				}
				$localGroupMember = New-Object System.Management.Automation.PSObject `
					| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardMembers -PassThru `
					| Add-Member -MemberType ScriptMethod -Name ToString -Value $toStringMethod -Force -PassThru `
					| Add-Member -MemberType ScriptMethod -Name GetLocalUser -Value $getLocalUserMethod -PassThru `
					| Add-Member -MemberType NoteProperty -Name LocalGroup -Value $this -PassThru `
					| Add-Member -MemberType ScriptProperty -Name LocalGroupName -Value {$this.LocalGroup.Name} -PassThru `
					| Add-Member -MemberType ScriptProperty -Name ComputerName -Value {$this.LocalGroup.ComputerName} -PassThru `
					| Add-Member -MemberType NoteProperty -Name Name -Value $name -PassThru `
					| Add-Member -MemberType NoteProperty -Name Type -Value $type -PassThru `
					| Add-Member -MemberType NoteProperty -Name SID -Value $sid.Value -PassThru `
					| Add-Member -MemberType NoteProperty -Name ParentSID -Value $sid.AccountDomainSid -PassThru `
					| Add-Member -MemberType NoteProperty -Name ParentName -Value $parentName -PassThru `
					| Add-Member -MemberType NoteProperty -Name Path -Value $path -PassThru
				$localGroupMember.PSObject.TypeNames[0] = 'LocalGroupMember'
				$localGroupMember.PSObject.TypeNames.Insert(0,"LocalGroupMember#$($type -replace ' ','')")
				$localGroupMembers += $localGroupMember
			}
			$localGroupMembers | ForEach-Object {
				if (($_.Name -eq 'Account Unknown') -and ($parentSidMap.Keys -contains $_.ParentSID)) {
					$_.Name = "$($parentSidMap[$_.ParentSID])\$($_.Name)"
				}
				if ($member.Count) {
					foreach ($item in $member) {
						if (("$($_.ParentName)" -like $item) -or (($_.Name -replace "^$($_.ParentName)\\",'') -like $item) -or (($item -match '\\') -and ("$($_.ParentName)\$($_.Name -replace `"^$($_.ParentName)\\`",''))" -like $item))) {
							$_
							break
						}
					}
				} else {
					$_
				}
			}
		}

		$containsMemberMethod = {
			if ($args.Count -and $args[0] -is [string]) {
				$member = $args[0]
				if ($member -notmatch '^(LDAP|WinNT)://') {
					$member = $member.TrimStart('\').Replace('\','/')
					if ($member -notmatch '/') {
						$member = "$($this.ComputerName)/$member"
					}
					$member = "WinNT://$member"
				}
				$this.ADSIGroup.IsMember($member)
			}
		}

		$addMemberMethod = {
			if ($args.Count -and $args[0] -is [string]) {
				$member = $args[0]
				if ($member -notmatch '^(LDAP|WinNT)://') {
					$member = $member.TrimStart('\').Replace('\','/')
					if ($member -notmatch '/') {
						$member = "$($this.ComputerName)/$member"
					}
					$member = "WinNT://$member"
				}
				$this.ADSIGroup.Add($member)
			}
		}

		$removeMemberMethod = {
			if ($args.Count -and $args[0] -is [string]) {
				$member = $args[0]
				if ($member -notmatch '^(LDAP|WinNT)://') {
					$member = $member.TrimStart('\').Replace('\','/')
					if ($member -notmatch '/') {
						$member = "$($this.ComputerName)/$member"
					}
					$member = "WinNT://$member"
				}
				$this.ADSIGroup.Remove($member)
			}
		}

		$(if ($Credential) {Get-WmiObject -Namespace root\cimv2 -Class Win32_Group -Filter $filter -ComputerName $item -Credential $Credential} else {Get-WmiObject -Namespace root\cimv2 -Class Win32_Group -Filter $filter -ComputerName $item}) `
			| Select-Object -Property @{Name='WmiGroup';Expression={$_}},@{Name='Credential';Expression={$Credential}} `
			| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardMembers -PassThru `
			| Add-Member -MemberType ScriptMethod -Name ToString -Value $toStringMethod -Force -PassThru `
			| Add-Member -MemberType ScriptMethod -Name Rename -Value $renameMethod -PassThru `
			| Add-Member -MemberType ScriptProperty -Name ComputerName -Value {$this.WmiGroup.__SERVER} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name Name -Value {$this.WmiGroup.Name} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name FullyQualifiedName -Value {$this.WmiGroup.Caption} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name SID -Value {$this.WmiGroup.SID} -PassThru `
			| Add-Member -MemberType ScriptProperty -Name InstallDate -Value {$this.WmiGroup.InstallDate} -PassThru `
			| ForEach-Object {
				$_ `
					| Add-Member -MemberType NoteProperty -Name ADSIGroup -Value (Get-AdsiObject -AdsiPath "WinNT://$item/$($_.Name),Group" -ComputerName $item -Credential $Credential) -PassThru `
					| Add-Member -MemberType ScriptMethod -Name GetMembers -Value $getMembersMethod -PassThru `
					| Add-Member -MemberType ScriptMethod -Name ContainsMember -Value $containsMemberMethod -PassThru `
					| Add-Member -MemberType ScriptMethod -Name AddMember -Value $addMemberMethod -PassThru `
					| Add-Member -MemberType ScriptMethod -Name RemoveMember -Value $removeMemberMethod -PassThru `
					| Add-Member -MemberType ScriptProperty -Name Description -Value {$this.ADSIGroup.Description.Value} -SecondValue {if ($args.Count -and $args[0] -is [string]) {$description = [string]$args[0]; $this.ADSIGroup.PSBase.InvokeSet('Description',$description); $this.ADSIGroup.PSBase.CommitChanges()}}
				$_.PSObject.TypeNames[0] = 'LocalGroup'
				$_
			}
	}
}

function global:Rename-LocalGroup {
	param(
		[string]$Name = $null,
		[string]$NewName = $null,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	begin{
		if ($args.Count) {
			throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
		}
		$promptedForRequiredParameters = $false
	}

	process {
		if ($Name -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		} elseif ($_) {
			if (-not $NewName) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Rename-LocalGroup',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					if (-not $NewName) {
						$result = Read-Host -Prompt "NewName"
						if ($result) {
							$NewName
						} else {
							return
						}
					}
				}
			}
			if ($_.PSObject.TypeNames -contains 'LocalGroup') {
				$_.Rename($NewName)
				$_
			} else {
				$processName = $null
				$processComputerName = $ComputerName
				$processCredential = $Credential
				if ($_ -is [string]) {
					$processName = $_
				} else {
					if ($_.Name) {
						$processName = $_.Name
					}
					if ((-not $processComputerName) -and ($_.ComputerName)) {
						$processComputerName = $_.ComputerName
					}
					if ((-not $processCredential) -and ($_.Credential)) {
						$processCredential = $_.Credential
					}
				}
				if (-not $processName) {
					throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
				}
				Get-LocalGroup -Name $processName -ComputerName $processComputerName -Credential $processCredential | Rename-LocalGroup -NewName $NewName
			}
		} else {
			if ((-not $Name) -or (-not $NewName)) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Rename-LocalGroup',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					if (-not $Name) {
						$result = Read-Host -Prompt "Name"
						if ($result) {
							$Name = $result
						} else {
							return
						}
					}
					if (-not $NewName) {
						$result = Read-Host -Prompt "NewName"
						if ($result) {
							$NewName
						} else {
							return
						}
					}
				}
			}
			Get-LocalGroup -Name $Name -ComputerName $ComputerName -Credential $Credential | Rename-LocalGroup -NewName $NewName
		}
	}
}

function global:Set-LocalGroup {
	param(
		[string[]]$Name = $null,
		[string]$Description = $null,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	begin{
		if ($args.Count) {
			throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
		}
		$promptedForRequiredParameters = $false
	}

	process {
		if ($Name -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		} elseif ($_) {
			if ($_.PSObject.TypeNames -contains 'LocalGroup') {
				if ($Description -and ($_.Description -cne $Description)) {
					$_.Description = $Description
				}
				$_
			} else {
				$processName = $null
				$processComputerName = $ComputerName
				$processCredential = $Credential
				if ($_ -is [string]) {
					$processName = $_
				} else {
					if ($_.Name) {
						$processName = $_.Name
					}
					if ((-not $processComputerName) -and ($_.ComputerName)) {
						$processComputerName = $_.ComputerName
					}
					if ((-not $processCredential) -and ($_.Credential)) {
						$processCredential = $_.Credential
					}
				}
				if (-not $processName) {
					throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
				}
				Get-LocalGroup -Name $processName -ComputerName $processComputerName -Credential $processCredential | ForEach-Object {
					if ($Description -and ($_.Description -cne $Description)) {
						$_.Description = $Description
					}
					$_
				}
			}
		} else {
			if (-not $Name) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Set-LocalGroup',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					$index = 0
					$Name = @()
					while ($result = Read-Host -Prompt "Name[$index]") {
						$index++
						$Name += $result
					}
					if (-not $Name) {
						return
					}
				} else {
					return
				}
			}
			Get-LocalGroup -Name $Name -ComputerName $ComputerName -Credential $Credential | Set-LocalGroup -Description $Description
		}
	}
}

function global:Remove-LocalGroup {
	param(
		[string[]]$Name = $null,
		[string]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	begin{
		if ($args.Count) {
			throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
		}
		$promptedForRequiredParameters = $false
	}

	process {
		if ($Name -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		}
		if ($_) {
			$processName = $null
			$processComputerName = $ComputerName
			$processCredential = $Credential
			if ($_ -is [string]) {
				$processName = $_
			} else {
				if ($_.Name) {
					$processName = $_.Name
				}
				if ((-not $processComputerName) -and ($_.ComputerName)) {
					$processComputerName = $_.ComputerName
				}
				if ((-not $processCredential) -and ($_.Credential)) {
					$processCredential = $_.Credential
				}
			}
			if (-not $processName) {
				throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
			}
		} else {
			if (-not $Name) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Remove-LocalGroup',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					$index = 0
					$Name = @()
					while ($result = Read-Host -Prompt "Name[$index]") {
						$index++
						$Name += $result
					}
					if (-not $Name) {
						return
					}
				} else {
					return
				}
			}
			$processName = $Name
			$processComputerName = $ComputerName
			$processCredential = $Credential
		}
		if (-not $processComputerName) {
			$processComputerName = @('.')
		}
		foreach ($item in $processComputerName) {
			if ($item -eq $env:COMPUTERNAME) {
				$item = '.'
			}
			if ($computer = Get-AdsiObject -AdsiPath "WinNT://$item" -ComputerName $item -Credential $processCredential) {
				foreach ($groupName in $processName) {
					$computer.Delete('group',$groupName)
				}
			}
		}
	}
}

#endregion
#region LocalGroupMember functions

function global:Add-LocalGroupMember {
	param(
		[string[]]$Name = $null,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null,
		$Member = $null
	)

	begin{
		if ($args.Count) {
			throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
		}
		$promptedForRequiredParameters = $false
	}

	process {
		if ($Name -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		} elseif ($_) {
			if (-not $Member) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Add-LocalGroupMember',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					if (-not $Member) {
						$index = 0
						$Member = @()
						while ($result = Read-Host -Prompt "Member[$index]") {
							$index++
							$Member += $result
						}
						if (-not $Member) {
							return
						}
					}
				} else {
					return
				}
			}
			if ($_.PSObject.TypeNames -contains 'LocalGroup') {
				foreach ($item in $Member) {
					if ($item) {
						[string]$memberIdentifier = $item
						if ($item.PSObject.TypeNames -contains 'LocalUser') {
							$memberIdentifier = $item.Name
						} elseif ($item -is [System.DirectoryServices.DirectoryEntry]) {
							$memberIdentifier = $item.PSBase.Path
						} elseif ($item.PSObject.TypeNames -contains 'Quest.ActiveRoles.ArsPowerShellSnapIn.Data.ArsPersonObject') {
							$memberIdentifier = $item.Path
						}
						$_.AddMember($memberIdentifier)
					}
				}
				$_
			} else {
				$processName = $null
				$processComputerName = $ComputerName
				$processCredential = $Credential
				if ($_ -is [string]) {
					$processName = $_
				} else {
					if ($_.Name) {
						$processName = $_.Name
					}
					if ((-not $processComputerName) -and ($_.ComputerName)) {
						$processComputerName = $_.ComputerName
					}
					if ((-not $processCredential) -and ($_.Credential)) {
						$processCredential = $_.Credential
					}
				}
				if (-not $processName) {
					throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
				}
				Get-LocalGroup -Name $processName -ComputerName $processComputerName -Credential $processCredential | ForEach-Object {
					foreach ($item in $Member) {
						if ($item) {
							[string]$memberIdentifier = $item
							if ($item.PSObject.TypeNames -contains 'LocalUser') {
								$memberIdentifier = $item.Name
							} elseif ($item -is [System.DirectoryServices.DirectoryEntry]) {
								$memberIdentifier = $item.PSBase.Path
							} elseif ($item.PSObject.TypeNames -contains 'Quest.ActiveRoles.ArsPowerShellSnapIn.Data.ArsPersonObject') {
								$memberIdentifier = $item.Path
							}
							$_.AddMember($memberIdentifier)
						}
					}
					$_
				}
			}
		} else {
			if ((-not $Name) -or (-not $Member)) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Add-LocalGroupMember',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					if (-not $Name) {
						$index = 0
						$Name = @()
						while ($result = Read-Host -Prompt "Name[$index]") {
							$index++
							$Name += $result
						}
						if (-not $Name) {
							return
						}
					}
					if (-not $Member) {
						$index = 0
						$Member = @()
						while ($result = Read-Host -Prompt "Member[$index]") {
							$index++
							$Member += $result
						}
						if (-not $Member) {
							return
						}
					}
				} else {
					return
				}
			}
			Get-LocalGroup -Name $Name -ComputerName $ComputerName -Credential $Credential | Add-LocalGroupMember -Member $Member
		}
	}
}

function global:Get-LocalGroupMember {
	param(
		[string[]]$Name = $null,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null,
		$Member = $null
	)

	begin{
		if ($args.Count) {
			throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
		}
		$promptedForRequiredParameters = $false
	}

	process {
		if ($Name -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		} elseif ($_) {
			if ($_.PSObject.TypeNames -contains 'LocalGroup') {
				$_.GetMembers($Member)
			} else {
				$processName = $null
				$processComputerName = $ComputerName
				$processCredential = $Credential
				if ($_ -is [string]) {
					$processName = $_
				} else {
					if ($_.Name) {
						$processName = $_.Name
					}
					if ((-not $processComputerName) -and ($_.ComputerName)) {
						$processComputerName = $_.ComputerName
					}
					if ((-not $processCredential) -and ($_.Credential)) {
						$processCredential = $_.Credential
					}
				}
				if (-not $processName) {
					throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
				}
				Get-LocalGroup -Name $processName -ComputerName $processComputerName -Credential $processCredential | ForEach-Object {
					$_.GetMembers($Member)
				}
			}
		} else {
			if (-not $Name) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Get-LocalGroupMember',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					if (-not $Name) {
						$index = 0
						$Name = @()
						while ($result = Read-Host -Prompt "Name[$index]") {
							$index++
							$Name += $result
						}
						if (-not $Name) {
							return
						}
					}
				} else {
					return
				}
			}
			Get-LocalGroup -Name $Name -ComputerName $ComputerName -Credential $Credential | Get-LocalGroupMember -Member $Member
		}
	}
}

function global:Remove-LocalGroupMember {
	param(
		[string[]]$Name = $null,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null,
		$Member = $null
	)

	begin{
		if ($args.Count) {
			throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
		}
		$promptedForRequiredParameters = $false
	}

	process {
		if ($Name -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		} elseif ($_) {
			if (-not $Member) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Remove-LocalGroupMember',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					if (-not $Member) {
						$index = 0
						$Member = @()
						while ($result = Read-Host -Prompt "Member[$index]") {
							$index++
							$Member += $result
						}
						if (-not $Member) {
							return
						}
					}
				} else {
					return
				}
			}
			if ($_.PSObject.TypeNames -contains 'LocalGroup') {
				foreach ($item in $Member) {
					if ($item) {
						[string]$memberIdentifier = $item
						if ($item.PSObject.TypeNames -contains 'LocalUser') {
							$memberIdentifier = $item.Name
						} elseif ($item -is [System.DirectoryServices.DirectoryEntry]) {
							$memberIdentifier = $item.PSBase.Path
						} elseif ($item.PSObject.TypeNames -contains 'Quest.ActiveRoles.ArsPowerShellSnapIn.Data.ArsPersonObject') {
							$memberIdentifier = $item.Path
						}
						$_.RemoveMember($memberIdentifier)
					}
				}
				$_
			} else {
				$processName = $null
				$processComputerName = $ComputerName
				$processCredential = $Credential
				if ($_ -is [string]) {
					$processName = $_
				} else {
					if ($_.Name) {
						$processName = $_.Name
					}
					if ((-not $processComputerName) -and ($_.ComputerName)) {
						$processComputerName = $_.ComputerName
					}
					if ((-not $processCredential) -and ($_.Credential)) {
						$processCredential = $_.Credential
					}
				}
				if (-not $processName) {
					throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
				}
				Get-LocalGroup -Name $processName -ComputerName $processComputerName -Credential $processCredential | ForEach-Object {
					foreach ($item in $Member) {
						if ($item) {
							[string]$memberIdentifier = $item
							if ($item.PSObject.TypeNames -contains 'LocalUser') {
								$memberIdentifier = $item.Name
							} elseif ($item -is [System.DirectoryServices.DirectoryEntry]) {
								$memberIdentifier = $item.PSBase.Path
							} elseif ($item.PSObject.TypeNames -contains 'Quest.ActiveRoles.ArsPowerShellSnapIn.Data.ArsPersonObject') {
								$memberIdentifier = $item.Path
							}
							$_.RemoveMember($memberIdentifier)
						}
					}
					$_
				}
			}
		} else {
			if ((-not $Name) -or (-not $Member)) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Remove-LocalGroupMember',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					if (-not $Name) {
						$index = 0
						$Name = @()
						while ($result = Read-Host -Prompt "Name[$index]") {
							$index++
							$Name += $result
						}
						if (-not $Name) {
							return
						}
					}
					if (-not $Member) {
						$index = 0
						$Member = @()
						while ($result = Read-Host -Prompt "Member[$index]") {
							$index++
							$Member += $result
						}
						if (-not $Member) {
							return
						}
					}
				} else {
					return
				}
			}
			Get-LocalGroup -Name $Name -ComputerName $ComputerName -Credential $Credential | Remove-LocalGroupMember -Member $Member
		}
	}
}

#endregion
#region LocalGroupMembership Functions

function global:Get-LocalGroupMembership {
	param(
		[string[]]$Name = $null,
		[string[]]$ComputerName = @(),
		[System.Management.Automation.PSObject]$Credential = $null
	)

	begin{
		if ($args.Count) {
			throw $((Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'NamedParameterNotFound') -f $null,$args[0])
		}
		$promptedForRequiredParameters = $false
	}

	process {
		if ($Name -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		} elseif ($_) {
			if ($_.PSObject.TypeNames -contains 'LocalUser') {
				$_.GetGroups()
			} else {
				$processName = $null
				$processComputerName = $ComputerName
				$processCredential = $Credential
				if ($_ -is [string]) {
					$processName = $_
				} else {
					if ($_.Name) {
						$processName = $_.Name
					}
					if ((-not $processComputerName) -and ($_.ComputerName)) {
						$processComputerName = $_.ComputerName
					}
					if ((-not $processCredential) -and ($_.Credential)) {
						$processCredential = $_.Credential
					}
				}
				if (-not $processName) {
					throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
				}
				Get-LocalUser -Name $processName -ComputerName $processComputerName -Credential $processCredential | ForEach-Object {
					$_.GetGroups($Member)
				}
			}
		} else {
			if (-not $Name) {
				if (-not $promptedForRequiredParameters) {
					$promptedForRequiredParameters = $true
					Write-Host -ForegroundColor White -Object ((Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptCaption) -f 'Get-LocalGroupMembership',$MyInvocation.PipelinePosition)
					Write-Host (Get-PSResourceString -BaseName ParameterBinderStrings -ResourceId PromptMessage)
					if (-not $Name) {
						$index = 0
						$Name = @()
						while ($result = Read-Host -Prompt "Name[$index]") {
							$index++
							$Name += $result
						}
						if (-not $Name) {
							return
						}
					}
				} else {
					return
				}
			}
			Get-LocalGroup -Name $Name -ComputerName $ComputerName -Credential $Credential | Get-LocalGroupMembership
		}
	}
}

#endregion

#endregion
#region VMware PowerPack Configuration Functions

function global:Import-VMwarePowerPackConfiguration {
	param(
		[string]$Path = "$($Host.PrivateData.UserAppData)\VMware.PowerPack.Config.xml"
	)
	
	if (-not (Get-Variable -Name VMwareConfiguration -Scope Global -ErrorAction SilentlyContinue)) {
		$global:VMwareConfiguration = @{'ManagedHosts'=@()}
		$global:VMwareConfiguration.PSObject.TypeNames.Clear()
		$global:VMwareConfiguration.PSObject.TypeNames.Insert(0,'VMwarePowerPackConfiguration')
	}

	$clixml = Import-Clixml -Path $Path
	if ($clixml.ManagedHosts -eq $null) {
		return
	}
	if (-not ($clixml.ManagedHosts | Get-Member -Name Server,Username -ErrorAction SilentlyContinue)) {
		$properties = 'Name','Port','Protocol','ConnectionAccount','Connection','UseSingleSignOn'
	} else {
		$properties = @{Name='Name';Expression={$_.Server}},'Port','Protocol',@{Name='ConnectionAccount';Expression={$_.Username}},'Connection','UseSingleSignOn'
	}

	$getConnectedAccessor = {
		[bool]$this.Connection
	}
	$getSessionDurationAccessor = {
		if ($this.Connected -and ($connectionTime = $this.Connection.ServiceInstance.ServerClock)) {
			if ($connectionTime.ToLocalTime() -lt (Get-Date)) {
				[string]((Get-Date) - $connectionTime.ToLocalTime()) -replace '\.\d+$',''
			}
		}
	}
	$getSupportsProvisioningAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Capability.ProvisioningSupported
		}
	}
	$getMultiHostSupportedAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Capability.MultiHostSupported
		}
	}
	$getUserShellAccessSupportedAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Capability.UserShellAccessSupported
		}
	}
	$getRootFolderAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.RootFolder
		}
	}
	$getTypeAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.About.Name
		}
	}
	$getVersionAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.About.Version
		}
	}
	$getBuildAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.About.Build
		}
	}
	$getProductIdAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.About.FullName
		}
	}
	$getOperatingSystemTypeAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.About.OsType
		}
	}
	$getApiTypeAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.About.ApiType
		}
	}
	$getApiVersionAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.About.ApiVersion
		}
	}
	$connectMethod = {
		if (-not $this.Connected) {
			if ((-not ($connectionAccount = $this.ConnectionAccount)) -and ([System.Environment]::CommandLine -match '\\syswow64\\')) {
				$connectionAccount = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name
			}
			if ($connectionAccount) {
				$credential = $null
				if ($this.UseSingleSignOn) {
					$credential = Get-Credential -Credential $connectionAccount
				} else {
					$credential = Microsoft.PowerShell.Security\Get-Credential -Credential $connectionAccount
				}
				if (-not $credential) {
					return
				}
				$this.Connection = Connect-VIServer -Server $this.Name -Port $this.Port -Credential $credential
			} else {
				$this.Connection = Connect-VIServer -Server $this.Name -Port $this.Port
			}
			& {
				trap {
					if ((Get-PSSnapin -Name VMWare.VimAutomation.Core).Version -eq '1.5.0.0') {
						[System.Windows.Forms.MessageBox]::Show("VMware Server cannot be managed using version 1.5 of the VI Toolkit. To manage VMware Server you will have either roll back to version 1.0 or install a version later than 1.5 that supports managing VMware Server.`n`nThis server will be disconnected automatically.",'VMware Server not supported',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
						$this.Disconnect()
						continue
					}
				}
				if ($serviceInstance = Get-View -Id ServiceInstance -Server $this.Connection) {
					$this.Connection | Add-Member -MemberType NoteProperty -Name ServiceInstance -Value $serviceInstance
				}
			}
		}
	}
	$disconnectMethod = {
		if ($this.Connected) {
			trap {
				if ($_.Exception -is [System.NotImplementedException]) {
					continue
				}
			}
			Disconnect-VIServer -Server $this.Connection -Confirm:$false -ErrorAction SilentlyContinue
		}
		$this.Connection = $null
		Remove-Variable -Name DefaultVIServer -ErrorAction SilentlyContinue
	}
	$reconnectMethod = {
		$this.Disconnect()
		$this.Connect()
	}
	$getSessionsMethod = {
		if ($this.Connected) {
			$sessionManager = Get-View -Id $this.Connection.ServiceInstance.Content.SessionManager -Server $this.Connection
			$sessionManager.SessionList `
				| Add-Member -MemberType NoteProperty -Name Host -Value $this.Name -PassThru `
				| Add-Member -MemberType NoteProperty -Name SessionManager -Value $sessionManager -PassThru `
				| Add-Member -MemberType ScriptProperty -Name IsCurrentSession -Value {[bool]($this.SessionManager.CurrentSession.Key -eq $this.Key)} -PassThru `
				| Add-Member -MemberType ScriptMethod -Name Disconnect -Value {$this.SessionManager.TerminateSession($this.Key)} -PassThru `
				| ForEach-Object {
					if ($_.PSObject.TypeNames[0] -notmatch '#VMwarePowerPackExtension') {
						$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VMwarePowerPackExtension")
					}
					$_
				}
		}
	}
	[String[]]$currentManagedHostNames = @($global:VMwareConfiguration.ManagedHosts | ForEach-Object {$_.Name})
	$global:VMwareConfiguration.ManagedHosts += $clixml.ManagedHosts `
		| Where-Object {$currentManagedHostNames -notcontains $_.Name} `
		| Select-Object -Property $properties `
		| Add-Member -MemberType ScriptMethod -Name ToString -Value {$this.Name} -Force -PassThru `
		| Add-Member -MemberType ScriptProperty -Name Connected -Value $getConnectedAccessor -PassThru `
		| Add-Member -MemberType ScriptProperty -Name ConnectionDuration -Value $getSessionDurationAccessor -PassThru `
		| Add-Member -MemberType ScriptProperty -Name SupportsProvisioning -Value $getSupportsProvisioningAccessor -PassThru `
		| Add-Member -MemberType ScriptProperty -Name MultiHostSupported -Value $getMultiHostSupportedAccessor -PassThru `
		| Add-Member -MemberType ScriptProperty -Name UserShellAccessSupported -Value $getUserShellAccessSupportedAccessor -PassThru `
		| Add-Member -MemberType ScriptProperty -Name RootFolder -Value $getRootFolderAccessor -PassThru `
		| Add-Member -MemberType ScriptProperty -Name Type -Value $getTypeAccessor -PassThru `
		| Add-Member -MemberType ScriptProperty -Name Version -Value $getVersionAccessor -PassThru `
		| Add-Member -MemberType ScriptProperty -Name Build -Value $getBuildAccessor -PassThru `
		| Add-Member -MemberType ScriptProperty -Name ProductId -Value $getProductIdAccessor -PassThru `
		| Add-Member -MemberType ScriptProperty -Name OperatingSystemType -Value $getOperatingSystemTypeAccessor -PassThru `
		| Add-Member -MemberType ScriptProperty -Name APIType -Value $getApiTypeAccessor -PassThru `
		| Add-Member -MemberType ScriptProperty -Name ApiVersion -Value $getApiVersionAccessor -PassThru `
		| Add-Member -MemberType ScriptMethod -Name Connect -Value $connectMethod -PassThru `
		| Add-Member -MemberType ScriptMethod -Name Disconnect -Value $disconnectMethod -PassThru `
		| Add-Member -MemberType ScriptMethod -Name Reconnect -Value $reconnectMethod -PassThru `
		| Add-Member -MemberType ScriptMethod -Name GetSessions -Value $getSessionsMethod -PassThru `
		| ForEach-Object {
			$currentManagedHostNames += $_.Name
			if ($_.UseSingleSignOn -eq $null) {
				$_.UseSingleSignOn = $true
			}
			if ($_.ConnectionAccount -and $_.UseSignleSignOn) {
				Add-CacheAssociation -AssociatedObjectId $_.Name -Username $_.ConnectionAccount
			}
			$_.PSObject.TypeNames.Clear()
			$_.PSObject.TypeNames.Insert(0,'ManagedVMwareHost')
			$_
		}
	$global:VMwareConfiguration.ManagedHosts = @($global:VMwareConfiguration.ManagedHosts | Sort-Object -Property Name)
	$global:VMwareManagedHosts = @{}
	if ($global:VMwareConfiguration.ManagedHosts) {
		foreach ($item in $global:VMwareConfiguration.ManagedHosts) {
			$global:VMwareManagedHosts[$item.Name] = $item
		}
	}
}

function global:Export-VMwarePowerPackConfiguration {
	param(
		[string]$Path = "$($Host.PrivateData.UserAppData)\VMware.PowerPack.Config.xml"
	)
	if (-not (Get-Variable -Name VMwareConfiguration -Scope Global -ErrorAction SilentlyContinue)) {
		$global:VMwareConfiguration = @{'ManagedHosts'=@()}
		$global:VMwareConfiguration.PSObject.TypeNames.Clear()
		$global:VMwareConfiguration.PSObject.TypeNames.Insert(0,'VMwarePowerPackConfiguration')
	}
	$exportableConfiguration = $global:VMwareConfiguration.Clone()
	$exportableConfiguration.ManagedHosts = @()
	if ($global:VMwareConfiguration.ManagedHosts) {
		foreach ($managedHost in $global:VMwareConfiguration.ManagedHosts) {
			$exportableConfiguration.ManagedHosts += $managedHost `
				| Select-Object -Property Name,Port,Protocol,ConnectionAccount,UseSingleSignOn `
				| ForEach-Object {
					$_.PSObject.TypeNames.Clear()
					$_.PSObject.TypeNames.Insert(0,'ManagedVMwareHost')
					$_
				}
		}
	}
	$exportableConfiguration | Export-Clixml -Path $Path
}

function global:Initialize-VMwarePowerPackConfiguration {

	# Create and enable the credential cache

	$credentialCache = Get-CredentialCache | Enable-CredentialCache -PassThru

	# If the VMware configuration is initialized, return

	if (Get-Variable -Name VMwareConfiguration -Scope Global -ErrorAction SilentlyContinue) {
		return
	}

	# Read the managed host list from the appropriate file and update it as necessary

	$configXmlPath = "$($Host.PrivateData.UserAppData)\VMware.PowerPack.Config.xml"
	$oldConfigXmlPath = "$($Host.PrivateData.UserAppData)\Quest.PowerGUI.PowerPack.VMware.Config.xml"
	if (-not (Test-Path -Path $configXmlPath)) {
		$configXmlPath = $oldConfigXmlPath
	}
	if (Test-Path -Path $configXmlPath) {
		Import-VMwarePowerPackConfiguration -Path $configXmlPath
	} else {
		$global:VMwareConfiguration = @{'ManagedHosts'=@()}
		$global:VMwareConfiguration.PSObject.TypeNames.Clear()
		$global:VMwareConfiguration.PSObject.TypeNames.Insert(0,'VMwarePowerPackConfiguration')
	}
	Export-VMwarePowerPackConfiguration

	# Remove the old config file if it still exists
	if (Test-Path -Path $oldConfigXmlPath) {
		Remove-Item -LiteralPath $oldConfigXmlPath -Force
	}
}

function global:Add-ManagedHost {
	param(
		[String[]]$HostId,
		[int]$Port = 443,
		[string]$Protocol = 'https',
		[string]$ConnectionAccount = $null,
		[switch]$UseSingleSignOn
	)

	Initialize-VMwarePowerPackConfiguration
	
	if (-not $HostId) {
		return
	}

	# Add a new connection to the global VMware connection cache for each host id passed in

	$managedHosts = @($global:VMwareConfiguration.ManagedHosts | ForEach-Object {$_.Name})

	$getConnectedAccessor = {
		[bool]$this.Connection
	}
	$getSessionDurationAccessor = {
		if ($this.Connected -and ($connectionTime = $this.Connection.ServiceInstance.ServerClock)) {
			if ($connectionTime.ToLocalTime() -lt (Get-Date)) {
				[string]((Get-Date) - $connectionTime.ToLocalTime()) -replace '\.\d+$',''
			}
		}
	}
	$getSupportsProvisioningAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Capability.ProvisioningSupported
		}
	}
	$getMultiHostSupportedAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Capability.MultiHostSupported
		}
	}
	$getUserShellAccessSupportedAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Capability.UserShellAccessSupported
		}
	}
	$getRootFolderAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.RootFolder
		}
	}
	$getTypeAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.About.Name
		}
	}
	$getVersionAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.About.Version
		}
	}
	$getBuildAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.About.Build
		}
	}
	$getProductIdAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.About.FullName
		}
	}
	$getOperatingSystemTypeAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.About.OsType
		}
	}
	$getApiTypeAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.About.ApiType
		}
	}
	$getApiVersionAccessor = {
		if ($this.Connected) {
			$this.Connection.ServiceInstance.Content.About.ApiVersion
		}
	}
	$connectMethod = {
		if (-not $this.Connected) {
			if ((-not ($connectionAccount = $this.ConnectionAccount)) -and ([System.Environment]::CommandLine -match '\\syswow64\\')) {
				$connectionAccount = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name
			}
			if ($connectionAccount) {
				$credential = $null
				if ($this.UseSingleSignOn) {
					$credential = Get-Credential -Credential $connectionAccount
				} else {
					$credential = Microsoft.PowerShell.Security\Get-Credential -Credential $connectionAccount
				}
				if (-not $credential) {
					return
				}
				$this.Connection = Connect-VIServer -Server $this.Name -Port $this.Port -Credential $credential
			} else {
				$this.Connection = Connect-VIServer -Server $this.Name -Port $this.Port
			}
			& {
				trap {
					if ((Get-PSSnapin -Name VMWare.VimAutomation.Core).Version -eq '1.5.0.0') {
						[System.Windows.Forms.MessageBox]::Show("VMware Server cannot be managed using version 1.5 of the VI Toolkit. To manage VMware Server you will have either roll back to version 1.0 or install a version later than 1.5 that supports managing VMware Server.`n`nThis server will be disconnected automatically.",'VMware Server not supported',[System.Windows.Forms.MessageBoxButtons]::OK,[System.Windows.Forms.MessageBoxIcon]::Information) | Out-Null
						$this.Disconnect()
						continue
					}
				}
				if ($serviceInstance = Get-View -Id ServiceInstance -Server $this.Connection) {
					$this.Connection | Add-Member -MemberType NoteProperty -Name ServiceInstance -Value $serviceInstance
				}
			}
		}
	}
	$disconnectMethod = {
		if ($this.Connected) {
			trap {
				if ($_.Exception -is [System.NotImplementedException]) {
					continue
				}
			}
			Disconnect-VIServer -Server $this.Connection -Confirm:$false -ErrorAction SilentlyContinue
		}
		$this.Connection = $null
		Remove-Variable -Name DefaultVIServer -ErrorAction SilentlyContinue
	}
	$reconnectMethod = {
		$this.Disconnect()
		$this.Connect()
	}
	$getSessionsMethod = {
		if ($this.Connected) {
			$sessionManager = Get-View -Id $this.Connection.ServiceInstance.Content.SessionManager -Server $this.Connection
			$sessionManager.SessionList `
				| Add-Member -MemberType NoteProperty -Name Host -Value $this.Name -PassThru `
				| Add-Member -MemberType NoteProperty -Name SessionManager -Value $sessionManager -PassThru `
				| Add-Member -MemberType ScriptProperty -Name IsCurrentSession -Value {[bool]($this.SessionManager.CurrentSession.Key -eq $this.Key)} -PassThru `
				| Add-Member -MemberType ScriptMethod -Name Disconnect -Value {$this.SessionManager.TerminateSession($this.Key)} -PassThru `
				| ForEach-Object {
					if ($_.PSObject.TypeNames[0] -notmatch '#VMwarePowerPackExtension') {
						$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VMwarePowerPackExtension")
					}
					$_
				}
		}
	}

	foreach ($item in $HostId) {
		if ($managedHosts -notcontains $item) {
			$newManagedHost = New-Object System.Management.Automation.PSObject `
				| Add-Member -MemberType ScriptMethod -Name ToString -Value {$this.Name} -Force -PassThru `
				| Add-Member -MemberType NoteProperty -Name Name -Value $item -PassThru `
				| Add-Member -MemberType NoteProperty -Name Port -Value $Port -PassThru `
				| Add-Member -MemberType NoteProperty -Name Protocol -Value $Protocol -PassThru `
				| Add-Member -MemberType NoteProperty -Name ConnectionAccount -Value $ConnectionAccount -PassThru `
				| Add-Member -MemberType NoteProperty -Name UseSingleSignOn -Value ([bool]$UseSingleSignOn) -PassThru `
				| Add-Member -MemberType NoteProperty -Name Connection -Value $null -PassThru `
				| Add-Member -MemberType ScriptProperty -Name Connected -Value $getConnectedAccessor -PassThru `
				| Add-Member -MemberType ScriptProperty -Name ConnectionDuration -Value $getSessionDurationAccessor -PassThru `
				| Add-Member -MemberType ScriptProperty -Name SupportsProvisioning -Value $getSupportsProvisioningAccessor -PassThru `
				| Add-Member -MemberType ScriptProperty -Name MultiHostSupported -Value $getMultiHostSupportedAccessor -PassThru `
				| Add-Member -MemberType ScriptProperty -Name UserShellAccessSupported -Value $getUserShellAccessSupportedAccessor -PassThru `
				| Add-Member -MemberType ScriptProperty -Name RootFolder -Value $getRootFolderAccessor -PassThru `
				| Add-Member -MemberType ScriptProperty -Name Type -Value $getTypeAccessor -PassThru `
				| Add-Member -MemberType ScriptProperty -Name Version -Value $getVersionAccessor -PassThru `
				| Add-Member -MemberType ScriptProperty -Name Build -Value $getBuildAccessor -PassThru `
				| Add-Member -MemberType ScriptProperty -Name ProductId -Value $getProductIdAccessor -PassThru `
				| Add-Member -MemberType ScriptProperty -Name OperatingSystemType -Value $getOperatingSystemTypeAccessor -PassThru `
				| Add-Member -MemberType ScriptProperty -Name APIType -Value $getApiTypeAccessor -PassThru `
				| Add-Member -MemberType ScriptProperty -Name ApiVersion -Value $getApiVersionAccessor -PassThru `
				| Add-Member -MemberType ScriptMethod -Name Connect -Value $connectMethod -PassThru `
				| Add-Member -MemberType ScriptMethod -Name Disconnect -Value $disconnectMethod -PassThru `
				| Add-Member -MemberType ScriptMethod -Name Reconnect -Value $reconnectMethod -PassThru `
				| Add-Member -MemberType ScriptMethod -Name GetSessions -Value $getSessionsMethod -PassThru
			if ($ConnectionAccount -and $UseSingleSignOn) {
				Add-CacheAssociation -AssociatedObjectId $item -Username $ConnectionAccount -Force
			}
			$newManagedHost.PSObject.TypeNames.Clear()
			$newManagedHost.PSObject.TypeNames.Insert(0,'ManagedVMwareHost')
			$global:VMwareConfiguration.ManagedHosts += $newManagedHost
		}
	}
	$global:VMwareConfiguration.ManagedHosts = @($global:VMwareConfiguration.ManagedHosts | Sort-Object -Property Name)
	$global:VMwareManagedHosts = @{}
	if ($global:VMwareConfiguration.ManagedHosts) {
		foreach ($item in $global:VMwareConfiguration.ManagedHosts) {
			$global:VMwareManagedHosts[$item.Name] = $item
		}
	}

	# Export the file system cache with the new list of managed hosts

	Export-VMwarePowerPackConfiguration
}

#endregion
#region Admin Console Functions

function global:Get-AdminConsoleName {
	if ($Host.PrivateData.ProductTitle) {
		$Host.PrivateData.ProductTitle
	} else {
		$currentNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem
		while ($currentNode.Type -ne 'Root') {
			$currentNode = $currentNode.Parent
		}
		$currentNode.Name
	}
}

function global:Get-AdminConsoleViewName {
	$Host.PrivateData.ConsoleHostFactory.Application.Navigation.LinkLabel
}

function global:Get-AdminConsoleNodePath {
	param(
		$Node = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem
	)

	if ($Node.Type -ne 'Root') {
		$path = $Node.Name
	} else {
		$path = ''
	}

	while (($Node = $Node.Parent) -and ($Node.Type -ne 'Root')) {
		$path = "$($Node.Name)\$path"
	}

	$path
}

function global:Add-AdminConsoleDynamicScriptNode {
	param(
		$ParentNode,
		[string] $Name,
		$Script,
		[System.Management.Automation.PSObject[]] $ScriptParameters = $null,
		[System.Management.Automation.PSObject] $AssociatedObject = $null,
		[System.Management.Automation.PSObject] $IconTypeIdentifier = $null,
		[switch]$PassThru
	)

	$childNode = $ParentNode.AddChild()
	$childNode.Name = $Name
	if ($Script -is [System.Management.Automation.ScriptBlock]) {
		[string]$parameters = ''
		[string[]]$parameterArray = @()
		if ($ScriptParameters -is [System.Collections.Hashtable]) {
			if ($ScriptParameters.Keys.Count) {
				foreach ($item in $ScriptParameters.Keys) {
					if ($ScriptParameters[$item].Count -gt 0) {
						$parameterArray += "-$item @('$([string]::Join(''',''',@($ScriptParameters[$item] | ForEach-Object {$_.Replace('''','''''')})))')"
					} elseif ($ScriptParameters[$item].Count -eq 0) {
						$parameterArray += "-$item @()"
					} else {
						$parameterArray += "-$item '$($ScriptParameters[$item].Replace('''',''''''))'"
					}
				}
			}
		} elseif ($ScriptParameters.Count -ne $null) {
			for ($index = 0; $index -lt $ScriptParameters.Count; $index++) {
				if ($ScriptParameters[$index].Count -ne $null) {
					$parameterArray += "@('$([string]::Join(''',''',@($ScriptParameters[$index] | ForEach-Object {$_.Replace('''','''''')})))')"
				} elseif ($ScriptParameters[$index].Count -eq 0) {
					$parameterArray += "-$item @()"
				} else {
					$parameterArray += "'$($ScriptParameters[$index].Replace('''',''''''))'"
				}
			}
		} else {
			$parameters = $ScriptParameters
		}
		if ($parameterArray.Count) {
			$parameters = [string]::Join(' ',$parameterArray)
		}
		$childNode.Script = @"
& {
    $Script
} $parameters
"@
	} else {
		$childNode.Script = $Script.ToString()
	}

	if ($AssociatedObject) {
		Set-AdminConsoleNodeData -Node $childNode -AssociatedObject $AssociatedObject
	}

	if ($IconTypeIdentifier) {
		if ($IconTypeIdentifier -is [string]) {
			$childNode.SetIconByType($IconTypeIdentifier)
		} else {
			$childNode.SetIconByType($IconTypeIdentifier.PSObject.TypeNames[0])
		}
	}

	$ParentNode.Expand()

	if ($PassThru) {
		$childNode
	}
}

function global:Get-AdminConsoleNodeData {
	param(
		$Node = $null
	)
	if ($host.Name -ne 'PowerGUIHost') {
		throw 'Get-AdminConsoleNodeData is only valid when used inside the Admin Console'	
	} else {
		if (-not $Node) {
			$Node = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem
		}
		$nodePath = Get-AdminConsoleNodePath $Node
		if (-not (Get-Variable -Scope Global -Name AdminConsoleNodeDataMap -ErrorAction SilentlyContinue)) {
			$global:AdminConsoleNodeDataMap = @{}
		} elseif ($global:AdminConsoleNodeDataMap.ContainsKey($nodePath)) {
			$global:AdminConsoleNodeDataMap[$nodePath]
		}
	}
}

function global:Set-AdminConsoleNodeData {
	param(
		$Node = $null,
		[System.Management.Automation.PSObject] $AssociatedObject = $null
	)
	
	if ($host.Name -ne 'PowerGUIHost') {
		throw 'Set-AdminConsoleNodeData is only valid when used inside the Admin Console'	
	} else {
		if (-not $Node) {
			$Node = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem
		}
		$nodePath = Get-AdminConsoleNodePath $Node
		if (-not (Get-Variable -Scope Global -Name AdminConsoleNodeDataMap -ErrorAction SilentlyContinue)) {
			$global:AdminConsoleNodeDataMap = @{}
		}
		if ($AssociatedObject) {
			$global:AdminConsoleNodeDataMap[$nodePath] = $AssociatedObject
		} else {
			$global:AdminConsoleNodeDataMap.Remove($nodePath)
		}
	}
}

function global:Update-AdminConsoleLinkLabel {
	param(
		[string] $Prefix = $null,
		[string] $Property = 'Name',
		[int] $MaxLength = 50,
		$InputObject = $null
	)
	begin {
		$label = $null
	}
	process {
		if ($InputObject -and $_) {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'AmbiguousParameterSet')
		} elseif ($InputObject -or $_) {
			$processObject = $(if ($InputObject) {$InputObject} else {$_})
			if (-not $label) {
				if ($Prefix) {
					$label = "$Prefix $($processObject.`"$Property`")"
				} else {
					$label = $processObject."$Property"
				}
			} else {
				$label = "$label, $($processObject.`"$Property`")"
				if ($label.Length -gt $maxLength) {
					$label = "$($label.SubString(0,$MaxLength-3))..."
				}
			}
			if ($host.Name -eq 'PowerGUIHost') {
				$Host.PrivateData.ConsoleHostFactory.Application.Action.Links.LinkLabel = $label
			}
			$processObject
		} else {
			throw $(Get-PSResourceString -BaseName 'ParameterBinderStrings' -ResourceId 'InputObjectNotBound')
		}
	}
	end {
	}
}

function global:Install-AdminConsoleStencilFile {
	param(
		$Filename
	)
	#region Initialize local variables.
	[System.Reflection.Assembly] $visioAssembly           = $null
	[string]                     $visioAssemblyName       = $null
	[string]                     $myShapesPath            = $null
	[string]                     $stencilMyShapesPath     = $null
	[string]                     $adminConsoleFolder      = $null
	[string]                     $stencilAdminConsolePath = $null
	#endregion

	#region Import the Visio assembly if it is not already loaded.
	$visioAssembly = Import-VisioAssembly -PassThru
	$visioAssemblyName = $visioAssembly.FullName
	#endregion

	#region Determine the 'My Shapes' folder path for the current Visio assembly.
	if ($visioAssemblyName -eq 'Microsoft.Office.Interop.Visio, Version=12.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c') {
		$myShapesPath = (Get-ItemProperty -Path 'Registry::HKEY_CURRENT_USER\Software\Microsoft\Office\12.0\Visio\Application' -ErrorAction SilentlyContinue).MyShapesPath
	} else {
		$myShapesPath = (Get-ItemProperty -Path 'Registry::HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Visio\Application' -ErrorAction SilentlyContinue).MyShapesPath
	}
	#endregion

	#region Copy the stencil to the 'My Shapes' folder if it isn't there already.
	$stencilMyShapesPath = Join-Path -Path $myShapesPath -ChildPath $Filename
	if (-not (Test-Path -Path $stencilMyShapesPath -ErrorAction SilentlyContinue)) {
		$adminConsoleFolder = Split-Path -Path $([System.Reflection.Assembly]::GetEntryAssembly().Location) -Parent
		if ($adminConsoleFolder) {
			$stencilAdminConsolePath = Join-Path -Path $adminConsoleFolder -ChildPath $Filename
			if (Test-Path -Path $stencilAdminConsolePath -ErrorAction SilentlyContinue) {
				Copy-Item -LiteralPath $stencilAdminConsolePath -Destination $myShapesPath
			}
		}
	}
	#endregion

	#region Throw an error if the stencil does not exist in the 'My Shapes' folder.
	if (-not (Test-Path -Path $stencilMyShapesPath -ErrorAction SilentlyContinue)) {
		throw "The installation of the stencil '$Filename' failed."
	}
	#endregion
}

#endregion
#region Admin Console Dynamic Node Generation Functions

function global:Add-AdminConsoleVMwareHost {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeName = $ComputerName

	$newNodeScript = {
	param(
		$ComputerName
	)

	Add-AdminConsoleRemoteVMwareHostContainerNodes $ComputerName
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name $newNodeName -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'ManagedVMWareHost'
}

function global:Add-AdminConsoleRemoteVMwareHostContainerNodes {
	param(
		$ComputerName
	)

	$managedHost = $global:VMwareManagedHosts[$ComputerName]

	$managedHost.Connect()

	if ($managedHost.Connected) {
		if (Test-VMwareManagementServer -ManagedHost $managedHost) { # matches 'VMware Virtual Center', 'VMware vCenter')
			# Add the hierarchy node to the tree
			Add-AdminConsoleVMwareVirtualCenterHierarchyNode $ComputerName
			# Add the sessions node to the tree
			Add-AdminConsoleVMwareSessionsNode $ComputerName
			# Add the folders node to the tree
			Add-AdminConsoleVMwareFoldersNode $ComputerName
			# Add the datacenters node to the tree
			Add-AdminConsoleVMwareDatacentersNode $ComputerName
			# Add the clusters node to the tree
			Add-AdminConsoleVMwareClustersNode $ComputerName
		} else { # matches 'VMware ESX Server', 'VMware ESX Server 3i', 'VMware Server', etc.
			# Add the hierarchy node to the tree
			Add-AdminConsoleVMwareStandaloneHostHierarchyNode $ComputerName
			# Add the sessions node to the tree
			Add-AdminConsoleVMwareSessionsNode $ComputerName
			break
		}
		# Add the hosts node to the tree
		Add-AdminConsoleVMwareHostsNode $ComputerName
		# Add the resource pools node to the tree
		Add-AdminConsoleVMwareResourcePoolsNode $ComputerName
		# Add the virtual machines node to the tree
		Add-AdminConsoleVMwareVirtualMachinesNode $ComputerName
		# Add the templates node to the tree
		Add-AdminConsoleVMwareTemplatesNode $ComputerName
		# Add the snapshots node to the tree
		Add-AdminConsoleVMwareSnapshotsNode $ComputerName
		# Add the networks node to the tree
		Add-AdminConsoleVMwareNetworksNode $ComputerName
		# Add the datastores node to the tree
		Add-AdminConsoleVMwareDatastoresNode $ComputerName
		# Add the files node to the tree
		Add-AdminConsoleVMwareFilesNode $ComputerName
		# Add the tasks node to the tree
		Add-AdminConsoleVMwareTasksNode $ComputerName
		# Add the log files node to the tree
		Add-AdminConsoleVMwareLogFilesNode $ComputerName
	}
}

function global:Add-AdminConsoleVMwareSessionsNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName
	)
	$viServer = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($viServer)
	{
		$sessionManager = Get-View SessionManager -Server $viServer
		$sessionManager.SessionList `
			| Add-Member -MemberType NoteProperty -Name SessionManager -Value $sessionManager -PassThru `
			| Add-Member -MemberType ScriptProperty -Name CurrentSession -Value {$this.SessionManager.CurrentSession.Key -eq $this.Key} -PassThru `
			| Add-Member -MemberType ScriptMethod -Name Disconnect -Value {
				$this.SessionManager.TerminateSession($this.Key)
				Start-Sleep -Seconds 1
			} -PassThru `
			| ForEach-Object {
				$_.PSTypeNames.Insert(0,"$($_.PSTypeNames[0])#VMwarePowerPackExtension")
				$_
			}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Sessions' -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.Vim.UserSession'
}

function global:Add-AdminConsoleVMwareDatacentersNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName
	)
	$managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($managedHost) {

		Get-Datacenter -Server $managedHost | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ | Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Datacenters' -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl'
}

function global:Add-AdminConsoleVMwareFoldersNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName
	)

	$managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($managedHost) {

		Get-Folder -Server $managedHost | Sort-Object -Property Name | ForEach-Object {
			$view = $_ | Get-View
			$_ `
				| Add-Member -MemberType NoteProperty -Name View -Value $view -PassThru `
				| Where-Object {$_.View.Parent.Type -ne 'Datacenter'} `
				| Add-Member -MemberType ScriptProperty -Name Type -Value {if ($this.IsChildTypeVm) {'VM'} elseif ($this.IsChildTypeComputeResource) {'Compute Resource'} elseif ($this.IsChildTypeDatacenter) {'Datacenter'} else {'Unknown'}} -PassThru
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Folders' -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl'
}

function global:Add-AdminConsoleVMwareClustersNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName
	)

	$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','DRSEnabled','HAEnabled','DPMEnabled','ConfiguredFailoverCapacity','CurrentFailoverCapacity','DRSMode','DRSStars','CPUCores','TotalCPU(MHz)','TotalMemory(GB)','HostCount','VMotionCount','TriggeredAlarmCount'))
	$PSStandardClusterMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)

	$managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($managedHost) {
		Get-Cluster -Server $managedHost | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$view = $_ | Get-View
			$_ `
				| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardClusterMembers -PassThru `
				| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru `
				| Add-Member -MemberType NoteProperty -Name DPMEnabled -Value $view.ConfigurationEx.DpmConfigInfo.Enabled -PassThru `
				| Add-Member -MemberType NoteProperty -Name ConfiguredFailoverCapacity -Value $_.HAFailoverLevel -PassThru `
				| Add-Member -MemberType NoteProperty -Name CurrentFailoverCapacity -Value $view.Summary.CurrentFailoverLevel -PassThru `
				| Add-Member -MemberType NoteProperty -Name DRSStars -Value $view.ConfigurationEx.DrsConfig.VMotionRate -PassThru `
				| Add-Member -MemberType NoteProperty -Name CPUCores -Value $view.Summary.NumCpuCores -PassThru `
				| Add-Member -MemberType NoteProperty -Name 'TotalCPU(MHz)' -Value $view.Summary.TotalCpu -PassThru `
				| Add-Member -MemberType NoteProperty -Name 'TotalMemory(GB)' -Value ([double]('{0:#.##}' -f ($view.Summary.TotalMemory / 1GB))) -PassThru `
				| Add-Member -MemberType NoteProperty -Name HostCount -Value $view.Host.Count -PassThru `
				| Add-Member -MemberType NoteProperty -Name DatastoreCount -Value $view.Datastore.Count -PassThru `
				| Add-Member -MemberType NoteProperty -Name NetworkCount -Value $view.Network.Count -PassThru `
				| Add-Member -MemberType NoteProperty -Name VMotionCount -Value $view.Summary.NumVmotions -PassThru `
				| Add-Member -MemberType NoteProperty -Name TriggeredAlarmCount -Value $view.TriggeredAlarmState.Count -PassThru
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Clusters' -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl'
}

function global:Add-AdminConsoleVMwareHostsNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName
	)

	$managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($managedHost) {
		Get-VMHost -Server $managedHost | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ `
				| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Hosts' -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl'
}

function global:Add-AdminConsoleVMwareResourcePoolsNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName
	)

	$managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($managedHost) {
		Get-ResourcePool -Server $managedHost | ForEach-Object {
			$view = $_ | Get-View
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ `
				| Add-Member -MemberType NoteProperty -Name View -Value $view -PassThru `
				| Where-Object {($parent = $_.View.Parent) -and ($parent.Type -eq 'ResourcePool')} `
				| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Resource Pools' -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl'
}

function global:Add-AdminConsoleVMwareVirtualMachinesNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName
	)

	$managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($managedHost) {
		$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
		$PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
		Get-VM -Server $managedHost | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ `
				| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardVMMembers -PassThru `
				| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru `
				| Add-Member -MemberType ScriptProperty -Name OperatingSystem -Value {$this.Guest.OSFullName} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name IPAddress -Value {$this.Guest.IPAddress} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name DNSName -Value {$this.Guest.HostName} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name 'Memory(MB)' -Value {$this.MemoryMB} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name CPUCount -Value {$this.NumCpu} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name HDDCount -Value {$this.HardDisks.Count} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name NICCount -Value {$this.NetworkAdapters.Count} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name ParentHost -Value {$this.Host.Name} -PassThru
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Virtual Machines' -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl'
}

function global:Add-AdminConsoleVMwareTemplatesNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName
	)

	$managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($managedHost) {
		Get-Template -Server $managedHost
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Templates' -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.TemplateImpl'
}

function global:Add-AdminConsoleVMwareSnapshotsNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName
	)

	$managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($managedHost) {
		Get-VM -Server $managedHost | Get-Snapshot | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ `
				| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Snapshots' -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl'
}

function global:Add-AdminConsoleVMwareNetworksNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName
	)

	$managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($managedHost) {
		Get-Datacenter -Server $managedHost | ForEach-Object {
			$view = Get-View -ViewType Datacenter -Filter @{'Name'=$_.Name} -Property Network -Server $managedHost
			if ($view.Network) {
				$vmHosts = @()
				if ($_.Host) {
					$vmHosts = @(Get-View -Id $_.Host -Property Name -Server $managedHost | ForEach-Object {$_.Name})
				}
				Get-View -Id $view.Network -Property Name,Host,Vm -Server $managedHost | ForEach-Object {
					$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
					$_ `
						| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru `
						| Add-Member -MemberType NoteProperty -Name VMCount -Value $_.Vm.Count -PassThru `
						| Add-Member -MemberType NoteProperty -Name HostCount -Value $_.Host.Count -PassThru `
						| Add-Member -MemberType NoteProperty -Name Hosts -Value $vmHosts -PassThru
				}
			}
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Networks' -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.Vim.Network'
}

function global:Add-AdminConsoleVMwareDatastoresNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName
	)

	$managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($managedHost) {
		VMware.VimAutomation.Core\Get-Datastore -Server $managedHost | ForEach-Object {
			$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
			$_ `
				| Add-Member -MemberType NoteProperty -Name UsedSpaceMB -Value ($_.CapacityMB - $_.FreeSpaceMB) -PassThru `
				| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost.Name -PassThru
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Datastores' -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl'
}

function global:Add-AdminConsoleVMwareFilesNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName
	)

	$managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($managedHost) {
		VMware.VimAutomation.Core\Get-Datastore -Server $managedHost | ForEach-Object {
			function Get-DatastoreFiles {
				param(
					$DatastoreBrowser,
					$DatastoreName,
					$ParentPath = ''
				)

				trap {
					if ($_.Exception.MethodFault -is [VMware.Vim.FileNotFound]) {
						continue
					} elseif ($_.Exception.MethodFault -is [VMware.Vim.NoPermission]) {
						Write-Warning $_
						continue
					}
				}

				$folderSearchSpecification = New-Object VMware.Vim.HostDatastoreBrowserSearchSpec
				$folderSearchSpecification.details = New-Object VMware.Vim.FileQueryFlags
				$folderSearchSpecification.details.fileSize = $true
				$folderSearchSpecification.details.fileType = $true
				$folderSearchSpecification.details.modification = $true
				$folderSearchSpecification.query += New-Object VMware.Vim.FolderFileQuery
				$fileSearchSpecification = New-Object VMware.Vim.HostDatastoreBrowserSearchSpec
				$fileSearchSpecification.details = New-Object VMware.Vim.FileQueryFlags
				$fileSearchSpecification.details.fileSize = $true
				$fileSearchSpecification.details.fileType = $true
				$fileSearchSpecification.details.modification = $true
				$fileSearchSpecification.query += New-Object VMware.Vim.FileQuery
				$results = $DatastoreBrowser.SearchDatastore("[$DatastoreName]$ParentPath",$folderSearchSpecification)
				if ($? -and $results.File) {
					foreach ($file in $results.File) {
						Get-DatastoreFiles -DatastoreBrowser $DatastoreBrowser -DatastoreName $DatastoreName -ParentPath $(if ($ParentPath) {"$ParentPath\$($file.Path)"} else {$file.Path})
					}
				}
				$results = $DatastoreBrowser.SearchDatastore("[$DatastoreName]$ParentPath",$fileSearchSpecification)
				if ($? -and $results.File) {
					foreach ($file in $results.File) {
						$file.PSObject.TypeNames.Insert(0,"$($file.PSObject.TypeNames[0])#VMwarePowerPackExtension")
						$file `
							| Add-Member -MemberType NoteProperty -Name Name -Value $file.Path -PassThru `
							| Add-Member -MemberType NoteProperty -Name Folder -Value $ParentPath -PassThru `
							| Add-Member -MemberType NoteProperty -Name FullName -Value "[$DatastoreName]$(if ($ParentPath) {`"$ParentPath\$($file.Path)`"} else {$file.Path})" -PassThru `
							| Add-Member -MemberType NoteProperty -Name Datastore -Value $DatastoreName -PassThru
					}
				}
			}

			$view = $_ | Get-View
			$datastoreBrowser = Get-View -Id $view.Browser -Server $managedHost
			$datastoreName = $view.Info.Name
			Get-DatastoreFiles -DatastoreBrowser $datastoreBrowser -DatastoreName $datastoreName
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Files' -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.Vim.FileInfo'
}

function global:Add-AdminConsoleVMwareTasksNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName
	)

	$managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($managedHost) {
		VMware.VimAutomation.Core\Get-Task -Server $managedHost
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Tasks' -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Task.TaskImpl'
}

function global:Add-AdminConsoleVMwareLogFilesNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName
	)

	$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Host','FileName','Type','Description'))
	$PSStandardMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
	
	$managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($managedHost) {
		Get-VMHost -Server $managedHost | ForEach-Object {
			Get-LogType -VMHost $(if (Test-VMwareManagementServerByName -ManagedHost $managedHost.Name) {$_} else {$null}) -Server $managedHost `
				| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardMembers -PassThru `
				| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost.Name -PassThru `
				| Add-Member -MemberType NoteProperty -Name VMHost -Value $_.Name -PassThru `
				| Add-Member -MemberType ScriptProperty -Name Type -Value {$this.Info.Label} -PassThru `
				| Add-Member -MemberType ScriptProperty -Name Description -Value {$this.Info.Summary} -PassThru `
				| ForEach-Object {
					$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VMwarePowerPackExtension")
					$_
				}
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Log Files' -Script $newNodeScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.LogDescriptorImpl'
}

function global:Add-AdminConsoleVMwareVirtualCenterHierarchyNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$hierarchyScript = {
	param(
		$ComputerName
	)

	# Add the Hosts and Clusters inventory view node to the tree

	Add-AdminConsoleVMwareInventoryViewNode $ComputerName 'Hosts and Clusters' 'Displays the inventory hierarchy of all inventory objects except templates, networks and datastores.'

	# Add the Virtual Machines and Templates view node to the tree

	Add-AdminConsoleVMwareInventoryViewNode $ComputerName 'Virtual Machines and Templates' 'Displays the list of virtual machines and templates.'

	# Add the Networks view node to the tree

	Add-AdminConsoleVMwareInventoryViewNode $ComputerName 'Networks' 'Displays the list of networks.'

	# Add the Datastores view node to the tree

	Add-AdminConsoleVMwareInventoryViewNode $ComputerName 'Datastores' 'Displays the list of datastores.'
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Browse Hierarchy' -Script $hierarchyScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl'
}

function global:Add-AdminConsoleVMwareStandaloneHostHierarchyNode {
	param(
		$ComputerName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$hierarchyScript = {
	param(
		$ComputerName
	)

	$managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	
	if ($managedHost) {
		Get-VMHost -Server $managedHost | ForEach-Object {
			Add-AdminConsoleVMwareHostNode -ComputerName $ComputerName -VMHost $_
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Browse Hierarchy' -Script $hierarchyScript -ScriptParameters @($ComputerName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl'
}

function global:Add-AdminConsoleVMwareInventoryViewNode {
	param(
		$ComputerName,
		$ViewName,
		$ViewDescription
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName,
		$ViewName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	# $managedHost = $DefaultVIServers | where {$_.Name -eq $ComputerName}
	$rootFolder = (Get-View -Server $ComputerName ServiceInstance).Content.RootFolder
	Get-Folder -Id "$($rootFolder.Type)-$($rootFolder.Value)" -Server $ComputerName | ForEach-Object {
		Get-Folder -Location $_ -NoRecursion | Where-Object {$_.IsChildTypeDatacenter} | Sort-Object -Property Name | ForEach-Object {
			Add-AdminConsoleVMwareDatacenterFolderNode -ComputerName $ComputerName -FolderId $_.Id -ViewName $ViewName
		}
		Get-Datacenter -Location $_ -NoRecursion | ForEach-Object {
			Add-AdminConsoleVMwareDatacenterNode -ComputerName $ComputerName -Datacenter $_ -ViewName $ViewName
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name $ViewName -Script $newNodeScript -ScriptParameters @($ComputerName,$ViewName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl'

	New-Object System.Management.Automation.PSObject `
		| Add-Member -MemberType NoteProperty -Name Name -Value $ViewName -PassThru `
		| Add-Member -MemberType NoteProperty -Name Description -Value $ViewDescription -PassThru `
		| ForEach-Object {
			$_.PSObject.TypeNames.Clear()
			$_.PSObject.TypeNames.Insert(0,'VMwareVirtualCenterView')
		}	
}

function global:Add-AdminConsoleVMwareDatacenterFolderNode {
	param(
		$ComputerName,
		$FolderId,
		$ViewName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName,
		$FolderId,
		$ViewName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$currentFolder = Get-Folder -Id $FolderId -Server $ComputerName
	Get-Folder -Location $currentFolder -NoRecursion | Where-Object {$_.IsChildTypeDatacenter} | Sort-Object -Property Name | ForEach-Object {
		Add-AdminConsoleVMwareDatacenterFolderNode -ComputerName $ComputerName -FolderId $_.Id -ViewName $ViewName
	}
	Get-Datacenter -Location $currentFolder -NoRecursion | ForEach-Object {
		Add-AdminConsoleVMwareDatacenterNode -ComputerName $ComputerName -Datacenter $_ -ViewName $ViewName
	}
}

	$folder = Get-Folder -Id $FolderId -Server $ComputerName
	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name $folder.Name -Script $newNodeScript -ScriptParameters @($ComputerName,$folder.Id,$ViewName) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl'
}

function global:Add-AdminConsoleVMwareDatacenterNode {
	param(
		$ComputerName,
		$Datacenter,
		$ViewName
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	switch ($ViewName) {
		'Hosts and Clusters' {
			$newNodeScript = {
	param(
		$ComputerName,
		$DatacenterId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	$datacenter = Get-Datacenter -Id $DatacenterId -Server $managedHost
	Get-Folder -Location $datacenter -NoRecursion | Where-Object {$_.IsChildTypeComputeResource} | ForEach-Object {
		Get-Folder -Location $_ -NoRecursion | Where-Object {$_.IsChildTypeComputeResource} | Sort-Object -Property Name | ForEach-Object {
			Add-AdminConsoleVMwareComputeResourceFolderNode -ComputerName $ComputerName -FolderId $_.Id
		}
		Get-Cluster -Location $_ -NoRecursion | ForEach-Object {
			Add-AdminConsoleVMwareClusterNode -ComputerName $ComputerName -Cluster $_
		}
		Get-VMHost -Location $_ -NoRecursion | ForEach-Object {
			Add-AdminConsoleVMwareHostNode -ComputerName $ComputerName -VMHost $_
		}
	}
}
			break
		}
		'Virtual Machines and Templates' {
			$newNodeScript = {
	param(
		$ComputerName,
		$DatacenterId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	$datacenter = Get-Datacenter -Id $DatacenterId -Server $managedHost
	$datacenterRoot = Get-Folder -Location $datacenter -NoRecursion | Where-Object {$_.IsChildTypeVm}
	$virtualMachines = @(Get-VM -Location $datacenterRoot -NoRecursion)
	$templates = @(Get-Template -Location $datacenterRoot -NoRecursion)
	$vmFolders = @(Get-Folder -Location $datacenterRoot -NoRecursion)
	if ($vmFolders) {
		$vmFolders | Sort-Object -Property Name | ForEach-Object {
			Add-AdminConsoleVMwareVmFolderNode -ComputerName $ComputerName -FolderId $_.Id
		}
	}
	if ($virtualMachines -and $templates) {
		$virtualMachineNodeScript = {
	param(
		$ComputerName,
		$FolderId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	$currentFolder = Get-Folder -Id $FolderId -Server $managedHost
	Get-VM -Location $currentFolder -NoRecursion | ForEach-Object {
		Add-AdminConsoleVMwareVirtualMachineNode -ComputerName $ComputerName -VirtualMachine $_
	}
}
		$templateNodeScript = {
	param(
		$ComputerName,
		$FolderId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	$currentFolder = Get-Folder -Id $FolderId -Server $managedHost
	Get-Template -Location $currentFolder -NoRecursion
}
		Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Virtual Machines' -Script $virtualMachineNodeScript -ScriptParameters @($ComputerName,$datacenterRoot.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl'
		Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Templates' -Script $templateNodeScript -ScriptParameters @($ComputerName,$datacenterRoot.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.TemplateImpl'
	} elseif ($virtualMachines) {
		foreach ($virtualMachine in $virtualMachines) {
			Add-AdminConsoleVMwareVirtualMachineNode -ComputerName $ComputerName -VirtualMachine $virtualMachine
		}
	} elseif ($templates) {
		$templates
	}
}
			break
		}
		'Networks' {
			$newNodeScript = {
	param(
		$ComputerName,
		$DatacenterId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	Get-Datacenter -Id $DatacenterId -Server $managedHost | ForEach-Object {
		$view = Get-View -ViewType Datacenter -Filter @{'Name'=$_.Name} -Property Network -Server $managedHost
		if ($view.Network) {
			Get-View -Id $view.Network -Property Name,Host,Vm -Server $managedHost | ForEach-Object {
				$vmHosts = @()
				if ($_.Host) {
					$vmHosts = @(Get-View -Id $_.Host -Property Name -Server $managedHost | ForEach-Object {$_.Name})
				}
				$_.PSObject.TypeNames.Insert(0,"$($_.PSObject.TypeNames[0])#VmwarePowerPackExtension")
				$_ `
					| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $managedHost -PassThru `
					| Add-Member -MemberType NoteProperty -Name VMCount -Value $_.Vm.Count -PassThru `
					| Add-Member -MemberType NoteProperty -Name HostCount -Value $_.Host.Count -PassThru `
					| Add-Member -MemberType NoteProperty -Name Hosts -Value $vmHosts -PassThru
			}
		}
	}
}
			break
		}
		'Datastores' {
			$newNodeScript = {
	param(
		$ComputerName,
		$DatacenterId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	Get-Datacenter -Id $DatacenterId -Server $managedHost | VMware.VimAutomation.Core\Get-Datastore | ForEach-Object {
		Add-AdminConsoleVMwareDatastoreNode -ComputerName $ComputerName -Datastore $_
	}
}
			break
		}
	}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name $Datacenter.Name -Script $newNodeScript -ScriptParameters @($ComputerName,$Datacenter.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl'

	$managedHost = $ComputerName
	$Datacenter.PSObject.TypeNames.Insert(0,"$($Datacenter.PSObject.TypeNames[0])#VmwarePowerPackExtension")
	$Datacenter `
		| Add-Member -MemberType NoteProperty -Name Host -Value $managedHost -PassThru
}

function global:Add-AdminConsoleVMwareComputeResourceFolderNode {
	param(
		$ComputerName,
		$FolderId
	)
	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName,
		$FolderId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	$currentFolder = Get-Folder -Id $FolderId -Server $managedHost
	Get-Folder -Location $currentFolder -NoRecursion | Where-Object {$_.IsChildTypeComputeResource} | Sort-Object -Property Name | ForEach-Object {
		Add-AdminConsoleVMwareComputeResourceFolderNode -ComputerName $ComputerName -FolderId $_.Id
	}
	$clusters = @(Get-Cluster -Location $currentFolder -NoRecursion)
	$hosts = @(Get-VMHost -Location $currentFolder -NoRecursion)
	if ($clusters -and $hosts) {
		$clusterNodeScript = {
	param(
		$ComputerName,
		$FolderId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	$currentFolder = Get-Folder -Id $FolderId -Server $managedHost
	Get-Cluster -Location $currentFolder -NoRecursion | ForEach-Object {
		Add-AdminConsoleVMwareClusterNode -ComputerName $ComputerName -Cluster $_
	}
}
		$hostNodeScript = {
	param(
		$ComputerName,
		$FolderId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	$currentFolder = Get-Folder -Id $FolderId -Server $managedHost
	Get-VMHost -Location $currentFolder -NoRecursion | ForEach-Object {
		Add-AdminConsoleVMwareHostNode -ComputerName $ComputerName -VMHost $_
	}
}
		Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Clusters' -Script $clusterNodeScript -ScriptParameters @($ComputerName,$currentFolder.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl'
		Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Hosts' -Script $hostNodeScript -ScriptParameters @($ComputerName,$currentFolder.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl'
	} elseif ($clusters) {
		foreach ($cluster in $clusters) {
			Add-AdminConsoleVMwareClusterNode -ComputerName $ComputerName -Cluster $cluster
		}
	} elseif ($hosts) {
		foreach ($vmHost in $hosts) {
			Add-AdminConsoleVMwareHostNode -ComputerName $ComputerName -VMHost $vmHost
		}
	}
}

	$folder = Get-Folder -Id $FolderId -Server $ComputerName
	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name $folder.Name -Script $newNodeScript -ScriptParameters @($ComputerName,$folder.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl'
}

function global:Add-AdminConsoleVMwareClusterNode {
	param(
		$ComputerName,
		$Cluster
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName,
		$ClusterId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$cluster = Get-Cluster -Id $ClusterId -Server $ComputerName
	$name = $cluster.Name
	$clusterResourcePool = $cluster | Get-ResourcePool -NoRecursion
	$vmHosts = @($cluster | Get-VMHost -NoRecursion)
	$resourcePools = @($clusterResourcePool | Get-ResourcePool -NoRecursion)
	$virtualMachines = @($clusterResourcePool | Get-VM -NoRecursion)
	if (($vmHosts -and $resourcePools) -or ($vmHosts -and $virtualMachines) -or ($resourcePools -and $virtualMachines)) {
		if ($resourcePools) {
			$resourcePoolNodeScript = {
	param(
		$ComputerName,
		$ClusterResourcePoolId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	Get-ResourcePool -Id $ClusterResourcePoolId -Server $ComputerName | Get-ResourcePool -NoRecursion | Sort-Object -Property Name | ForEach-Object {
		Add-AdminConsoleVMwareResourcePoolNode -ComputerName $ComputerName -ResourcePool $_
	}
}
			Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Resource Pools' -Script $resourcePoolNodeScript -ScriptParameters @($ComputerName,$clusterResourcePool.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl'
		}
		if ($vmHosts) {
			$hostNodeScript = {
	param(
		$ComputerName,
		$ClusterId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	Get-Cluster -Id $ClusterId -Server $ComputerName | Get-VMHost -NoRecursion | Sort-Object -Property Name | ForEach-Object {
		Add-AdminConsoleVMwareHostNode -ComputerName $ComputerName -VMHost $_
	}
}
			Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Hosts' -Script $hostNodeScript -ScriptParameters @($ComputerName,$Cluster.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl'
		}
		if ($virtualMachines) {
			$virtualMachineNodeScript = {
	param(
		$ComputerName,
		$ClusterId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	Get-Cluster -Id $ClusterId -Server $ComputerName | Get-ResourcePool -NoRecursion | Get-VM -NoRecursion | Sort-Object -Property Name | ForEach-Object {
		Add-AdminConsoleVMwareVirtualMachineNode -ComputerName $ComputerName -VirtualMachine $_
	}
}
			Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Virtual Machines' -Script $virtualMachineNodeScript -ScriptParameters @($ComputerName,$Cluster.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl'
		}
	} elseif ($vmHosts) {
		foreach ($vmHost in @($vmHosts | Sort-Object -Property Name)) {
			Add-AdminConsoleVMwareHostNode -ComputerName $ComputerName -VMHost $vmHost
		}
	} elseif ($resourcePools) {
		foreach ($resourcePool in @($resourcePools | Sort-Object -Property Name)) {
			Add-AdminConsoleVMwareResourcePoolNode -ComputerName $ComputerName -ResourcePool $resourcePool
		}
	} elseif ($virtualMachines) {
		foreach ($virtualMachine in @($virtualMachines | Sort-Object -Property Name)) {
			Add-AdminConsoleVMwareVirtualMachineNode -ComputerName $ComputerName -VirtualMachine $virtualMachine
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name $Cluster.Name -Script $newNodeScript -ScriptParameters @($ComputerName,$Cluster.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl'
	$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','DRSEnabled','HAEnabled','DPMEnabled','ConfiguredFailoverCapacity','CurrentFailoverCapacity','DRSMode','DRSStars','CPUCores','TotalCPU(MHz)','TotalMemory(GB)','HostCount','VMotionCount','TriggeredAlarmCount'))
	$PSStandardClusterMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
	$Cluster.PSObject.TypeNames.Insert(0,"$($Cluster.PSObject.TypeNames[0])#VmwarePowerPackExtension")
	$view = Get-View -ViewType ClusterComputeResource -Filter @{'Name'=$Cluster.Name} -Server $ComputerName
	$Cluster `
		| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardClusterMembers -PassThru `
		| Add-Member -MemberType NoteProperty -Name Host -Value $ComputerName -PassThru `
		| Add-Member -MemberType NoteProperty -Name DPMEnabled -Value $view.ConfigurationEx.DpmConfigInfo.Enabled -PassThru `
		| Add-Member -MemberType NoteProperty -Name ConfiguredFailoverCapacity -Value $_.HAFailoverLevel -PassThru `
		| Add-Member -MemberType NoteProperty -Name CurrentFailoverCapacity -Value $view.Summary.CurrentFailoverLevel -PassThru `
		| Add-Member -MemberType NoteProperty -Name DRSStars -Value $view.ConfigurationEx.DrsConfig.VMotionRate -PassThru `
		| Add-Member -MemberType NoteProperty -Name CPUCores -Value $view.Summary.NumCpuCores -PassThru `
		| Add-Member -MemberType NoteProperty -Name 'TotalCPU(MHz)' -Value $view.Summary.TotalCpu -PassThru `
		| Add-Member -MemberType NoteProperty -Name 'TotalMemory(GB)' -Value ([double]('{0:#.##}' -f ($view.Summary.TotalMemory / 1GB))) -PassThru `
		| Add-Member -MemberType NoteProperty -Name HostCount -Value $view.Host.Count -PassThru `
		| Add-Member -MemberType NoteProperty -Name DatastoreCount -Value $view.Datastore.Count -PassThru `
		| Add-Member -MemberType NoteProperty -Name NetworkCount -Value $view.Network.Count -PassThru `
		| Add-Member -MemberType NoteProperty -Name VMotionCount -Value $view.Summary.NumVmotions -PassThru `
		| Add-Member -MemberType NoteProperty -Name TriggeredAlarmCount -Value $view.TriggeredAlarmState.Count -PassThru
}

function global:Add-AdminConsoleVMwareHostNode {
	param(
		$ComputerName,
		$VMHost
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName,
		$HostId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	$vmHost = Get-VMHost -Id $HostId -Server $managedHost
	$name = $vmHost.Name
	$vmHostResourcePool = $vmHost | Get-ResourcePool -NoRecursion
	$resourcePools = @($vmHostResourcePool | Get-ResourcePool -NoRecursion)
	$virtualMachines = @($vmHostResourcePool | Get-VM -NoRecursion)
	if ($resourcePools -and $virtualMachines) {
		$resourcePoolNodeScript = {
	param(
		$ComputerName,
		$VMHostResourcePoolId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	Get-ResourcePool -Id $VMHostResourcePoolId -Server $managedHost | Get-ResourcePool -NoRecursion | Sort-Object -Property Name | ForEach-Object {
		Add-AdminConsoleVMwareResourcePoolNode -ComputerName $ComputerName -ResourcePool $_
	}
}
		Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Resource Pools' -Script $resourcePoolNodeScript -ScriptParameters @($ComputerName,$vmHostResourcePool.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl'
		$virtualMachineNodeScript = {
	param(
		$ComputerName,
		$VMHostId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	Get-VMHost -Id $VMHostId -Server $managedHost | Get-ResourcePool -NoRecursion | Get-VM -NoRecursion | Sort-Object -Property Name | ForEach-Object {
		Add-AdminConsoleVMwareVirtualMachineNode -ComputerName $ComputerName -VirtualMachine $_
	}
}
		Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Virtual Machines' -Script $virtualMachineNodeScript -ScriptParameters @($ComputerName,$HostId) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl'
	} elseif ($resourcePools) {
		foreach ($resourcePool in @($resourcePools | Sort-Object -Property Name)) {
			Add-AdminConsoleVMwareResourcePoolNode -ComputerName $ComputerName -ResourcePool $resourcePool
		}
	} elseif ($virtualMachines) {
		foreach ($virtualMachine in @($virtualMachines | Sort-Object -Property Name)) {
			Add-AdminConsoleVMwareVirtualMachineNode -ComputerName $ComputerName -VirtualMachine $virtualMachine
		}
	}
}

	if (-not $VMHost.Name) {
		$VMHost `
			| Add-Member -MemberType NoteProperty -Name Name -Value 'localhost' -Force
	}
	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name $VMHost.Name -Script $newNodeScript -ScriptParameters @($ComputerName,$VMHost.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl'
	$VMHost.PSObject.TypeNames.Insert(0,"$($VMHost.PSObject.TypeNames[0])#VmwarePowerPackExtension")
	$VMHost | Add-Member -MemberType NoteProperty -Name Host -Value $ComputerName -PassThru
}

function global:Add-AdminConsoleVMwareResourcePoolNode {
	param(
		$ComputerName,
		$ResourcePool
	)


	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName,
		$ResourcePoolId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	$resourcePool = Get-ResourcePool -Id $ResourcePoolId -Server $managedHost
	$resourcePools = @($resourcePool | Get-ResourcePool -NoRecursion)
	$virtualMachines = @($resourcePool | Get-VM -NoRecursion)
	if ($resourcePools -and $virtualMachines) {
		$resourcePoolNodeScript = {
	param(
		$ComputerName,
		$ResourcePoolId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	Get-ResourcePool -Id $ResourcePoolId -Server $managedHost | Get-ResourcePool -NoRecursion | Sort-Object -Property Name | ForEach-Object {
		Add-AdminConsoleVMwareResourcePoolNode -ComputerName $ComputerName -ResourcePool $_
	}
}
		Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Resource Pools' -Script $resourcePoolNodeScript -ScriptParameters @($ComputerName,$ResourcePool.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl'
		$virtualMachineNodeScript = {
	param(
		$ComputerName,
		$ResourcePoolId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	Get-ResourcePool -Id $ResourcePoolId -Server $managedHost | Get-VM -NoRecursion | Sort-Object -Property Name | ForEach-Object {
		Add-AdminConsoleVMwareVirtualMachineNode -ComputerName $ComputerName -VirtualMachine $_
	}
}
		Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Virtual Machines' -Script $virtualMachineNodeScript -ScriptParameters @($ComputerName,$ResourcePool.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl'
	} elseif ($resourcePools) {
		foreach ($resourcePool in @($resourcePools | Sort-Object -Property Name)) {
			Add-AdminConsoleVMwareResourcePoolNode -ComputerName $ComputerName -ResourcePool $resourcePool
		}
	} elseif ($virtualMachines) {
		foreach ($virtualMachine in @($virtualMachines | Sort-Object -Property Name)) {
			Add-AdminConsoleVMwareVirtualMachineNode -ComputerName $ComputerName -VirtualMachine $virtualMachine
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name $ResourcePool.Name -Script $newNodeScript -ScriptParameters @($ComputerName,$ResourcePool.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl'
	$view = $_ | Get-View
	$ResourcePool.PSObject.TypeNames.Insert(0,"$($ResourcePool.PSObject.TypeNames[0])#VmwarePowerPackExtension")
	$ResourcePool `
		| Add-Member -MemberType NoteProperty -Name View -Value $view -PassThru `
		| Add-Member -MemberType NoteProperty -Name Host -Value $ComputerName -PassThru
}

function global:Add-AdminConsoleVMwareVmFolderNode {
	param(
		$ComputerName,
		$FolderId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName,
		$FolderId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	$currentFolder = Get-Folder -Id $FolderId -Server $managedHost
	Get-Folder -Location $currentFolder -NoRecursion | Where-Object {$_.IsChildTypeVm} | Sort-Object -Property Name | ForEach-Object {
		Add-AdminConsoleVMwareVmFolderNode -ComputerName $ComputerName -FolderId $_.Id
	}
	$virtualMachines = @(Get-VM -Location $currentFolder -NoRecursion)
	$templates = @(Get-Template -Location $currentFolder -NoRecursion)
	if ($virtualMachines -and $templates) {
		$virtualMachineNodeScript = {
	param(
		$ComputerName,
		$FolderId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	$currentFolder = Get-Folder -Id $FolderId -Server $managedHost
	Get-VM -Location $currentFolder -NoRecursion | ForEach-Object {
		Add-AdminConsoleVMwareVirtualMachineNode -ComputerName $ComputerName -VirtualMachine $_
	}
}
		$templateNodeScript = {
	param(
		$ComputerName,
		$FolderId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	$currentFolder = Get-Folder -Id $FolderId -Server $managedHost
	Get-Template -Location $currentFolder -NoRecursion
}
		Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Virtual Machines' -Script $virtualMachineNodeScript -ScriptParameters @($ComputerName,$currentFolder.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl'
		Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name 'Templates' -Script $templateNodeScript -ScriptParameters @($ComputerName,$currentFolder.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.TemplateImpl'
	} elseif ($virtualMachines) {
		foreach ($virtualMachine in $virtualMachines) {
			Add-AdminConsoleVMwareVirtualMachineNode -ComputerName $ComputerName -VirtualMachine $virtualMachine
		}
	} elseif ($templates) {
		$templates
	}
}

	$folder = Get-Folder -Id $FolderId -Server $ComputerName
	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name $folder.Name -Script $newNodeScript -ScriptParameters @($ComputerName,$folder.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.Inventory.FolderImpl'
}

function global:Add-AdminConsoleVMwareVirtualMachineNode {
	param(
		$ComputerName,
		$VirtualMachine
	)

	$defaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[string[]]@('Name','Description','OperatingSystem','IPAddress','DNSName','PowerState','CPUCount','Memory(MB)','HDDCount','NICCount','ParentHost'))
	$PSStandardVMMembers = [System.Management.Automation.PSMemberInfo[]]@($defaultDisplayPropertySet)
	$VirtualMachine.PSObject.TypeNames.Insert(0,"$($VirtualMachine.PSObject.TypeNames[0])#VmwarePowerPackExtension")
	$VirtualMachine `
		| Add-Member -MemberType MemberSet -Name PSStandardMembers -Value $PSStandardVMMembers -PassThru `
		| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $ComputerName -PassThru `
		| Add-Member -MemberType ScriptProperty -Name OperatingSystem -Value {$this.Guest.OSFullName} -PassThru `
		| Add-Member -MemberType ScriptProperty -Name IPAddress -Value {$this.Guest.IPAddress} -PassThru `
		| Add-Member -MemberType ScriptProperty -Name DNSName -Value {$this.Guest.HostName} -PassThru `
		| Add-Member -MemberType ScriptProperty -Name 'Memory(MB)' -Value {$this.MemoryMB} -PassThru `
		| Add-Member -MemberType ScriptProperty -Name CPUCount -Value {$this.NumCpu} -PassThru `
		| Add-Member -MemberType ScriptProperty -Name HDDCount -Value {$this.HardDisks.Count} -PassThru `
		| Add-Member -MemberType ScriptProperty -Name NICCount -Value {$this.NetworkAdapters.Count} -PassThru `
		| Add-Member -MemberType ScriptProperty -Name ParentHost -Value {$this.Host.Name} -PassThru
}

function global:Add-AdminConsoleVMwareDatastoreNode {
	param(
		$ComputerName,
		$Datastore
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName,
		$DatastoreId
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	Get-View -Id $DatastoreId -Server $managedHost | ForEach-Object {
		trap {
			if ($_.Exception.MethodFault -is [VMware.Vim.FileNotFound]) {
				continue
			}
		}
		$browserId = "$($_.Browser.Type)-$($_.Browser.Value)"
		$browser = Get-View -Id $browserId -Server $managedHost
		$folderSearchSpecification = New-Object VMware.Vim.HostDatastoreBrowserSearchSpec
		$folderSearchSpecification.details = New-Object VMware.Vim.FileQueryFlags
		$folderSearchSpecification.details.fileSize = $true
		$folderSearchSpecification.details.fileType = $true
		$folderSearchSpecification.details.modification = $true
		$folderSearchSpecification.query += New-Object VMware.Vim.FolderFileQuery
		$fileSearchSpecification = New-Object VMware.Vim.HostDatastoreBrowserSearchSpec
		$fileSearchSpecification.details = New-Object VMware.Vim.FileQueryFlags
		$fileSearchSpecification.details.fileSize = $true
		$fileSearchSpecification.details.fileType = $true
		$fileSearchSpecification.details.modification = $true
		$fileSearchSpecification.query += New-Object VMware.Vim.FileQuery
		$datastoreName = $_.Info.Name
		$results = $browser.SearchDatastore("[$datastoreName]",$folderSearchSpecification)
		if ($? -and $results.File) {
			foreach ($file in $results.File) {
				Add-AdminConsoleVMwareDatastoreFolderNode -ComputerName $ComputerName -DatastoreName $datastoreName -DatastoreBrowserId $browserId -Folder $file
			}
		}
		$results = $browser.SearchDatastore("[$datastoreName]",$fileSearchSpecification)
		if ($? -and $results.File) {
			foreach ($file in $results.File) {
				$file.PSObject.TypeNames.Insert(0,"$($file.PSObject.TypeNames[0])#VMwarePowerPackExtension")
				$file `
					| Add-Member -MemberType NoteProperty -Name Name -Value $file.Path -PassThru `
					| Add-Member -MemberType NoteProperty -Name Folder -Value $ParentPath -PassThru `
					| Add-Member -MemberType NoteProperty -Name FullName -Value "[$DatastoreName]$(if ($ParentPath) {`"$ParentPath\$($file.Path)`"} else {$file.Path})" -PassThru `
					| Add-Member -MemberType NoteProperty -Name Datastore -Value $DatastoreName -PassThru
				}
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name $Datastore.Name -Script $newNodeScript -ScriptParameters @($ComputerName,$Datastore.Id) -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#VMwarePowerPackImpl'
	$Datastore.PSObject.TypeNames.Insert(0,"$($Datastore.PSObject.TypeNames[0])#VmwarePowerPackExtension")
	$Datastore `
		| Add-Member -MemberType NoteProperty -Name UsedSpaceMB -Value ($_.CapacityMB - $_.FreeSpaceMB) -PassThru `
		| Add-Member -MemberType NoteProperty -Name ManagedHost -Value $ComputerName -PassThru
}

function global:Add-AdminConsoleVMwareDatastoreFolderNode {
	param(
		$ComputerName,
		$DatastoreName,
		$DatastoreBrowserId,
		$ParentPath = '',
		$Folder
	)

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$newNodeScript = {
	param(
		$ComputerName,
		$DatastoreName,
		$DatastoreBrowserId,
		$Path
	)

	trap {
		if ($_.Exception.MethodFault -is [VMware.Vim.FileNotFound]) {
			continue
		}
	}

	$selectedNode = $Host.PrivateData.ConsoleHostFactory.Application.Navigation.CurrentItem

	$managedHost = $ComputerName
	$browser = Get-View -Id $DatastoreBrowserId -Server $managedHost
	$folderSearchSpecification = New-Object VMware.Vim.HostDatastoreBrowserSearchSpec
	$folderSearchSpecification.details = New-Object VMware.Vim.FileQueryFlags
	$folderSearchSpecification.details.fileSize = $true
	$folderSearchSpecification.details.fileType = $true
	$folderSearchSpecification.details.modification = $true
	$folderSearchSpecification.query += New-Object VMware.Vim.FolderFileQuery
	$fileSearchSpecification = New-Object VMware.Vim.HostDatastoreBrowserSearchSpec
	$fileSearchSpecification.details = New-Object VMware.Vim.FileQueryFlags
	$fileSearchSpecification.details.fileSize = $true
	$fileSearchSpecification.details.fileType = $true
	$fileSearchSpecification.details.modification = $true
	$fileSearchSpecification.query += New-Object VMware.Vim.FileQuery
	$results = $browser.SearchDatastore("[$DatastoreName]$Path",$folderSearchSpecification)
	if ($? -and $results.File) {
		foreach ($file in $results.File) {
			Add-AdminConsoleVMwareDatastoreFolderNode -ComputerName $ComputerName -DatastoreName $DatastoreName -DatastoreBrowserId $DatastoreBrowserId -ParentPath $Path -Folder $file
		}
	}
	$results = $browser.SearchDatastore("[$DatastoreName]$Path",$fileSearchSpecification)
	if ($? -and $results.File) {
		foreach ($file in $results.File) {
			$file.PSObject.TypeNames.Insert(0,"$($file.PSObject.TypeNames[0])#VMwarePowerPackExtension")
			$file `
				| Add-Member -MemberType NoteProperty -Name Name -Value $file.Path -PassThru `
				| Add-Member -MemberType NoteProperty -Name Folder -Value $ParentPath -PassThru `
				| Add-Member -MemberType NoteProperty -Name FullName -Value "[$DatastoreName]$(if ($ParentPath) {`"$ParentPath\$($file.Path)`"} else {$file.Path})" -PassThru `
				| Add-Member -MemberType NoteProperty -Name Datastore -Value $DatastoreName -PassThru
		}
	}
}

	Add-AdminConsoleDynamicScriptNode -ParentNode $selectedNode -Name $Folder.Path -Script $newNodeScript -ScriptParameters @($ComputerName,$DatastoreName,$DatastoreBrowserId,$(if ($ParentPath) {"$ParentPath\$($Folder.Path)"} else {$Folder.Path}))  -IconTypeIdentifier 'VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl'
}

#endregion
#region VMware Utility functions

#region ManagedObjectReference functions

function global:ConvertTo-ManagedObjectReference {
	param(
		[PSObject] $InputObject = $null
	)
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Initialize process block variables.
		[PSObject]                          $processObject          = $(if ($InputObject) {$InputObject} else {$_})
		[VMware.Vim.ManagedObjectReference] $managedObjectReference = $null
		#endregion

		#region Return an error if the object is not of the right type.
		if (($processObject -isnot [VMware.VimAutomation.Client20.ManagedObjectBaseImpl]) -and
		    ($processObject -isnot [VMware.Vim.ViewBase])) {
			Write-Error "Cannot convert value ""$processObject"" to type ""VMware.VimAutomation.Client20.ManagedObjectBaseImpl"" or type ""VMware.Vim.ViewBase"". Error: ""A valid VMware object must be provided."""
			return
		}
		#endregion

		#region Create or extract the managed object reference.
		if ($processObject -is [VMware.VimAutomation.Client20.ManagedObjectBaseImpl]) {
			$managedObjectReference = New-Object VMware.Vim.ManagedObjectReference
			$managedObjectReference.Type = $processObject.Id -replace '^([^-]*)-.*$','$1'
			$managedObjectReference.Value = $processObject.Id -replace '^[^-]*-(.*)$','$1'
		} elseif ($processObject -is [VMware.Vim.ViewBase]) {
			$managedObjectReference = $processObject.MoRef
		}
		#endregion

		#region Return the managed object reference to the client.
		$managedObjectReference
		#endregion
	}
}

function global:ConvertFrom-ManagedObjectReference {
	param(
		[PSObject]                          $InputObject = $null,
		[String[]]                          $Property    = @(),
		[VMware.VimAutomation.VIServerImpl] $Server      = $null
	)
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Initialize process block variables.
		[PSObject] $processObject = $(if ($InputObject) {$InputObject} else {$_})
		#endregion

		#region Return an error if the object is not of the right type.
		if (($processObject -isnot [VMware.Vim.ManagedObjectReference]) -and ($processObject -isnot [VMware.Vim.ManagedObjectReference[]])) {
			Write-Error "Cannot convert value ""$processObject"" to type ""VMware.Vim.ManagedObjectReference"". Error: ""A valid VMware managed object reference must be provided."""
			return
		}
		#endregion

		#region Return the corresponding view for the managed object reference
		Get-View -Id $processObject -Property $Property -Server $Server
		#endregion
	}
}

[string[]]$managedObjectTypeNames = @("Alarm", 
"AlarmManager",
"AuthorizationManager",
"ClusterComputeResource", 
"ClusterProfile", 
"ClusterProfileManager", 
"ComputeResource", 
"ContainerView", 
"CustomFieldsManager", 
"CustomizationSpecManager", 
"Datacenter", 
"Datastore", 
"DiagnosticManager", 
"DistributedVirtualPortgroup", 
"DistributedVirtualSwitch", 
"DistributedVirtualSwitchManager",
"EnvironmentBrowser", 
"EventHistoryCollector", 
"EventManager", 
"ExtensibleManagedObject", 
"ExtensionManager", 
"FileManager", 
"Folder",
"HistoryCollector", 
"HostAutoStartManager", 
"HostBootDeviceSystem", 
"HostCpuSchedulerSystem", 
"HostDatastoreBrowser", 
"HostDatastoreSystem", 
"HostDateTimeSystem", 
"HostDiagnosticSystem", 
"HostFirewallSystem", 
"HostFirmwareSystem", 
"HostHealthStatusSystem", 
"HostKernelModuleSystem", 
"HostLocalAccountManager", 
"HostMemorySystem", 
"HostNetworkSystem", 
"HostPatchManager", 
"HostPciPassthruSystem", 
"HostProfile", 
"HostProfileManager", 
"HostServiceSystem", 
"HostSnmpSystem", 
"HostStorageSystem", 
"HostSystem", 
"HostVirtualNicManager", 
"HostVMotionSystem", 
"HttpNfcLease", 
"InventoryView", 
"IpPoolManager", 
"LicenseAssignmentManager",
"LicenseManager", 
"ListView", 
"LocalizationManager",
"ManagedEntity",
"ManagedObjectView", 
"Network", 
"OptionManager", 
"OvfManager", 
"PerformanceManager",
"Profile", 
"ProfileComplianceManager", 
"ProfileManager", 
"PropertyCollector", 
"PropertyFilter", 
"ResourcePlanningManager", 
"ResourcePool", 
"ScheduledTask", 
"ScheduledTaskManager", 
"SearchIndex", 
"ServiceInstance", 
"SessionManager", 
"Task", 
"TaskHistoryCollector",
"TaskManager", 
"UserDirectory", 
"View", 
"ViewManager", 
"VirtualApp", 
"VirtualDiskManager", 
"VirtualizationManager", 
"VirtualMachine", 
"VirtualMachineCompatibilityChecker", 
"VirtualMachineProvisioningChecker", 
"VirtualMachineSnapshot", 
"VmwareDistributedVirtualSwitch" )

$managedObjectTypeNamesEnum = New-Enum -Name "managedObjectTypeNamesEnum" -Values $managedObjectTypeNames

#endregion
#region Miscellaneous functions

function global:Install-VMwarePowerPackStencilFile {
	param(
		$Filename
	)
	#region Initialize local variables.
	[System.Reflection.Assembly] $visioAssembly           = $null
	[string]                     $visioAssemblyName       = $null
	[string]                     $myShapesPath            = $null
	[string]                     $stencilMyShapesPath     = $null
	#endregion

	#region Import the Visio assembly if it is not already loaded.
	$visioAssembly = Import-VisioAssembly -PassThru
	$visioAssemblyName = $visioAssembly.FullName
	#endregion

	#region Determine the 'My Shapes' folder path for the current Visio assembly.
	foreach ($supportedVersion in @('14','12','11')) {
		if ($visioAssemblyName -eq "Microsoft.Office.Interop.Visio, Version=${supportedVersion}.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c") {
			$myShapesPath = (Get-ItemProperty -Path "Registry::HKEY_CURRENT_USER\Software\Microsoft\Office\${supportedVersion}.0\Visio\Application" -ErrorAction SilentlyContinue).MyShapesPath
			break
		}
	}
	#endregion

	#region Throw an error if Visio is not installed.
	if (-not $myShapesPath) {
		throw $(New-Object System.InvalidOperationException 'Visio 2003 or later is required.')
		return
	}
	#endregion

	#region Copy the stencil to the 'My Shapes' folder if it isn't there already.
	$stencilMyShapesPath = Join-Path -Path $myShapesPath -ChildPath $Filename
	if (-not (Test-Path -Path $stencilMyShapesPath -ErrorAction SilentlyContinue)) {
		$base64EncodedStencil = @'

'@
		try {
			if ($bytes = [System.Convert]::FromBase64String($base64EncodedStencil)) {
				[System.IO.File]::WriteAllBytes($stencilMyShapesPath,$bytes)
			}
		} catch {
		}
	}
	#endregion

	#region Throw an error if the stencil does not exist in the 'My Shapes' folder.
	if (-not (Test-Path -Path $stencilMyShapesPath -ErrorAction SilentlyContinue)) {
		throw "The installation of the stencil '$Filename' failed."
	}
	#endregion
}

function global:Test-VMwareManagementServer {
	param(
		$ManagedHost
	)

	if ($managedHost.PSObject.TypeNames -contains 'ManagedVMwareHost') {
		return ($managedHost.Type -match 'Center')
	}

	return $false
}

# takes a VIServerImpl object as parameter and tests the "ProductLine" property.  Replaces Test-VMwareManagementServer for this type of parameter
function global:Test-IsVirtualCenter {
	param(
		$ManagedHost
	)
	#  VirtualCenter 2.5 and 4.0
	if ($managedHost.ProductLine -contains 'vpx') {
		return $true
	}
	# otherwise ProductLine will contain 'esx' for hosts
	return $false
}
# takes a VIServerImpl object as parameter and tests the "ProductLine" property.  Replaces Test-VMwareManagementServer for this type of parameter
function global:Test-VMwareManagementServerByName {
	param(
		$ManagedHost
	)
	$viServer = $DefaultVIServers | where {$_.Name -eq $ManagedHost}

	if ($viServer) 
	{
		#  VirtualCenter 2.5 and 4.0
		if ($managedHost.ProductLine -contains 'vpx') {
			return $true
		}
		return $true
	}
	# otherwise ProductLine will contain 'esx' for hosts
	return $false
}

#endregion

#endregion
#region Visio
#region Visio functions

function global:Use-Visio {
	param(
		[switch]      $Invisible,
		[switch]      $AutoExit,
		[switch]      $Force,
		[PSObject]    $InputObject = $null,
		[ScriptBlock] $ScriptBlock = $null
	)
	begin {
		#region Convert the parameters to private scope.
		'Invisible','AutoExit','Force','InputObject','ScriptBlock' | ForEach-Object {
			Set-Variable -Name $_ -Option Private
		}
		#endregion

		#region Initialize local variables.
		[bool]                       $private:cancelled              = $false
        [System.Reflection.Assembly] $private:visioAssembly          = $null
		[String[]]                   $private:commandsAtCurrentLevel = @()
		[string]                     $private:item                   = $null
        [PSObject]                   $private:processObject          = $null
        [PSObject]                   $visioApplication               = $null
		#endregion

		#region Load the Visio interop assembly.
		if (-not ($visioAssembly = Import-VisioAssembly -PassThru)) {
			$cancelled = $true
			return
		}
		#endregion

		#region Pre-process the parameters.
		if (($InputObject -is [ScriptBlock]) -and (-not $ScriptBlock)) {
			$ScriptBlock = $InputObject
			$InputObject = $null
		}
		#endregion

		#region Create the Visio Defaults store if it does not exist.
		if (-not (Get-Variable -Name VisioDefaults -Scope Global -ErrorAction SilentlyContinue)) {
			$global:VisioDefaults = @{}
			$global:VisioDefaults['SmartLayout'] = $true
			$global:VisioDefaults['Page'       ] = @{}
			$global:VisioDefaults.Page['Background'           ] = ''
			$global:VisioDefaults.Page['Colors'               ] = 'None'
			$global:VisioDefaults.Page['Effects'              ] = 'None'
			$global:VisioDefaults.Page['AutoEnlarge'          ] = $false
			$global:VisioDefaults.Page['DiagramStyle'         ] = 'Default'
			$global:VisioDefaults.Page['DiagramDirection'     ] = $null
			$global:VisioDefaults.Page['DiagramAlignment'     ] = $null
			$global:VisioDefaults.Page['DiagramPlacementDepth'] = 'Default'
			$global:VisioDefaults.Page['ConnectorStyle'       ] = 'Default'
			$global:VisioDefaults.Page['ConnectorSpacing'     ] = '7.5mm'
			$global:VisioDefaults.Page['ConnectorCurvature'   ] = 'Default'
		}
		#endregion

		#region Create the commands that are supported in the Visio DSV at this level.
		if ($ScriptBlock) {
			#region Define the DSV commands that are available at this level.
			$commandsAtCurrentLevel = @(
				'DefaultPageBackground',
				'DefaultPageTheme',
				'DefaultPageAutoEnlarge',
				'DefaultPageDiagramStyle',
				'DefaultPageConnectorStyle',
				'SmartLayout',
				'Show',
				'Hide',
				'Exit',
				'Document'
			)
			#endregion

			#region Remove any existing aliases for DSV commands at this level.
			foreach ($item in $commandsAtCurrentLevel) {
				if (Get-Alias -Name $item -ErrorAction SilentlyContinue) {
					Rename-Item -Path "Alias:$item" -NewName "RemoveAliasWorkaround_$([System.Guid]::NewGuid().ToString())" -Force
				}
			}
			#endregion

			#region Create aliases for DSV commands that can be used as defined.
			New-Alias -Name DefaultPageBackground     -Scope Local -Value Set-VisioDefaultPageBackground     -Description 'Sets the default Visio page background. This background will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageTheme          -Scope Local -Value Set-VisioDefaultPageTheme          -Description 'Sets the default Visio page theme. This theme will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageAutoEnlarge    -Scope Local -Value Set-VisioDefaultPageAutoEnlarge    -Description 'Sets the default Visio page auto enlarge property. This setting will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageDiagramStyle   -Scope Local -Value Set-VisioDefaultPageDiagramStyle   -Description 'Sets the default Visio page diagram style. This diagram style will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageConnectorStyle -Scope Local -Value Set-VisioDefaultPageConnectorStyle -Description 'Sets the default Visio page connector style. This connector style will be applied to any new Visio pages that are created.'
			#endregion

			#region Create functions for DSV commands that require variables defined in this function.
			function SmartLayout {
				param(
					[bool]$Enabled = $true
				)
				if ($Enabled) {
					Enable-VisioSmartLayout
				} else {
					Disable-VisioSmartLayout
				}
			}
			function Show {
				param(
					[Switch]$PassThru
				)
				Show-Visio -InputObject $visioApplication -PassThru:$PassThru
			}
			function Hide {
				param(
					[Switch]$PassThru
				)
				Hide-Visio -InputObject $visioApplication -PassThru:$PassThru
			}
			function Exit {
				Stop-Visio -InputObject $visioApplication
			}
			function Document {
				param(
					$DocumentId  = $null,
					$ScriptBlock = $null
				)
				[PSObject]$visioDocument = $null
				if (($DocumentId -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $DocumentId
					$DocumentId = @()
				} elseif ($DocumentId -and [System.Runtime.InteropServices.Marshal]::IsComObject($DocumentId)) {
					$visioDocument = $DocumentId
					$DocumentId = @()
				} elseif ($DocumentId -isnot [string]) {
					$DocumentId = [string]$DocumentId
				}
				Select-VisioDocument -InputObject $(if ($visioDocument) {$visioDocument} else {$visioApplication}) -ScriptBlock $ScriptBlock -DocumentId $DocumentId
			}
			#endregion
		}
		#endregion
	}
	process {
		#region Return if cancelled.
		if ($cancelled) {
			return
		}
		#endregion

		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject    = $(if ($InputObject) {$InputObject} else {$_})
		$visioApplication = $null
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Use-Visio -Invisible:$Invisible -AutoExit:$AutoExit -Force:$Force -ScriptBlock $ScriptBlock
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -and ($processObject -isnot [Microsoft.Office.Interop.Visio.IVApplication])) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVApplication"". Error: ""A valid Visio COM application object must be provided."""
			return
		}
		#endregion

		#region Assign or create the Visio application object we are using.
		if ($processObject) {
			if ($Invisible) {
				$visioApplication = $processObject | Hide-Visio -PassThru
			} else {
				$visioApplication = $processObject
			}
		} elseif ($Invisible) {
			Write-Progress -Activity 'Starting Visio' -Status 'Opening new instance of Visio application.'
			$visioApplication = New-Object -ComObject 'Visio.InvisibleApp'
		} else {
			Write-Progress -Activity 'Starting Visio' -Status 'Opening new instance of Visio application.'
			$visioApplication = New-Object -ComObject 'Visio.Application'
		}
		#endregion

		#region Invoke the ScriptBlock if it was provided.
		if ($ScriptBlock) {
			. $ScriptBlock | Out-Null
		}
		#endregion

		#region If the -AutoExit switch was used, close Visio and return.
		if ($AutoExit) {
			Write-Progress -Activity 'Shutting down Visio' -Status 'Closing the Visio application.'
			Stop-Visio -InputObject $visioApplication -Force:$Force
			$visioApplication = $null
			return
		}
		#endregion

		#region Return the Visio application object to the client.
		$visioApplication
		#endregion
	}
}

function global:Show-Visio {
	param(
		[PSObject] $InputObject = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject = $null
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject = $(if ($InputObject) {$InputObject} else {$_})
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio application cannot be shown because no Visio application object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Show-Visio -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVApplication]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVApplication"". Error: ""A valid Visio COM application object must be provided."""
			return
		}
		#endregion

		#region Show the Visio application.
		$processObject.Visible = $true
		#endregion

		#region Return the Visio application object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Hide-Visio {
	param(
		[PSObject] $InputObject = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject = $null
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject = $(if ($InputObject) {$InputObject} else {$_})
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio application cannot be hidden because no Visio application object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Hide-Visio -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVApplication]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVApplication"". Error: ""A valid Visio COM application object must be provided."""
			return
		}
		#endregion

		#region Hide the Visio application.
		$processObject.Visible = $false
		#endregion

		#region Return the Visio application object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Stop-Visio {
	param(
		[PSObject] $InputObject = $null,
		[switch]   $Force
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject = $null
		[PSObject] $visioDocument = $null
		[bool]     $dirtyBit      = $false
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocument = $null
		$dirtyBit      = $false
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio application cannot be stopped because no Visio application object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Stop-Visio -Force:$Force
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVApplication]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVApplication"". Error: ""A valid Visio COM application object must be provided."""
			return
		}
		#endregion

		#region Close any open documents (by Force, if specified).
		foreach ($visioDocument in $processObject.Documents) {
			if ((-not $visioDocument.Saved) -and (-not $Force)) {
				$dirtyBit = $true
			} else {
				$visioDocument.Saved = $true
				$visioDocument.Close()
			}
		}
		#endregion

		#region Return an error if any documents were unsaved and Force was not used.
		if ($dirtyBit) {
			Write-Error "Cannot close Visio because one or more documents it contains have not been saved. If you want to close it anyway, use the -Force to close it."
			return
		}
		#endregion

		#region Close the Visio application.
		$processObject.Quit()
		#endregion
	}
}

#endregion
#region VisioAssembly functions

function global:Import-VisioAssembly {
	param(
		[switch] $PassThru
	)

	#region Initialize local variables.
	[System.Reflection.Assembly] $visioAssembly = $null
	#endregion

	#region Define helper functions.
	function Load-VisioAssembly {
		#region Initialize local variables.
		[System.Reflection.Assembly] $assembly = $null
		#endregion

		#region Load the Visio assembly.
		foreach ($supportedVersion in @('14','12','11')) {
			trap {
				continue
			}
			if ($assembly = [System.Reflection.Assembly]::Load("Microsoft.Office.Interop.Visio, Version=${supportedVersion}.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c")) {
				break
			}
		}
		#endregion

		#region Return the assembly that was loaded to the client.
		if ($assembly) {
			$assembly
		}
		#endregion
	}
	#endregion

	#region Load the Visio assembly if it is installed on the local system.
	$visioAssembly = Load-VisioAssembly
	#endregion

	#region Throw an error if Visio is not installed.
	if (-not $visioAssembly) {
		throw $(New-Object System.InvalidOperationException 'Visio 2003 or later is required.')
		return
	}
	#endregion

	#region Return the Visio assembly object if requested.
	if ($PassThru) {
		$visioAssembly
	}
	#endregion
}

#endregion
#region VisioDefault functions

function global:Set-VisioDefaultPageBackground {
	param(
		[string] $Background = $null,
		[switch] $None
	)
	#region Create the Visio Defaults store if it does not exist.
	if (-not (Get-Variable -Name VisioDefaults -Scope Global -ErrorAction SilentlyContinue)) {
		$global:VisioDefaults = @{}
		$global:VisioDefaults['SmartLayout'] = $true
		$global:VisioDefaults['Page'       ] = @{}
		$global:VisioDefaults.Page['Background'           ] = ''
		$global:VisioDefaults.Page['Colors'               ] = 'None'
		$global:VisioDefaults.Page['Effects'              ] = 'None'
		$global:VisioDefaults.Page['AutoEnlarge'          ] = $false
		$global:VisioDefaults.Page['DiagramStyle'         ] = 'Default'
		$global:VisioDefaults.Page['DiagramDirection'     ] = $null
		$global:VisioDefaults.Page['DiagramAlignment'     ] = $null
		$global:VisioDefaults.Page['DiagramPlacementDepth'] = 'Default'
		$global:VisioDefaults.Page['ConnectorStyle'       ] = 'Default'
		$global:VisioDefaults.Page['ConnectorSpacing'     ] = '7.5mm'
		$global:VisioDefaults.Page['ConnectorCurvature'   ] = 'Default'
	}
	#endregion

	#region Pre-process the parameters.
	if ($Background) {
		$Background = $Background.Trim()
	}
	if ($None -and $Background) {
		Write-Error 'Parameter set cannot be resolved using the specified named parameters.'
		return
	}
	#endregion

	#region Set the default page background.
	if ($Background) {
		$global:VisioDefaults.Page.Background = $Background
	} else {
		$global:VisioDefaults.Page.Background = ''
	}
	#endregion
}

function global:Set-VisioDefaultPageTheme {
	param(
		[string] $Colors  = $null,
		[string] $Effects = $null
	)
	#region Create the Visio Defaults store if it does not exist.
	if (-not (Get-Variable -Name VisioDefaults -Scope Global -ErrorAction SilentlyContinue)) {
		$global:VisioDefaults = @{}
		$global:VisioDefaults['SmartLayout'] = $true
		$global:VisioDefaults['Page'       ] = @{}
		$global:VisioDefaults.Page['Background'           ] = ''
		$global:VisioDefaults.Page['Colors'               ] = 'None'
		$global:VisioDefaults.Page['Effects'              ] = 'None'
		$global:VisioDefaults.Page['AutoEnlarge'          ] = $false
		$global:VisioDefaults.Page['DiagramStyle'         ] = 'Default'
		$global:VisioDefaults.Page['DiagramDirection'     ] = $null
		$global:VisioDefaults.Page['DiagramAlignment'     ] = $null
		$global:VisioDefaults.Page['DiagramPlacementDepth'] = 'Default'
		$global:VisioDefaults.Page['ConnectorStyle'       ] = 'Default'
		$global:VisioDefaults.Page['ConnectorSpacing'     ] = '7.5mm'
		$global:VisioDefaults.Page['ConnectorCurvature'   ] = 'Default'
	}
	#endregion

	#region Pre-process the parameters.
	if ($Colors) {
		$Colors = $Colors.Trim()
		$Colors = $Colors -replace '[^a-z]',''
	}
	if ($Effects) {
		$Effects = $Effects.Trim()
		$Effects = $Effects -replace '[^a-z]',''
	}
	if (-not $Colors) {
		$Colors = 'None'
	}
	if (-not $Effects) {
		$Effects = 'None'
	}
	#endregion

	#region Set the default page theme.
	$global:VisioDefaults.Page.Colors = $Colors
	$global:VisioDefaults.Page.Effects = $Effects
	#endregion
}

function global:Set-VisioDefaultPageAutoEnlarge {
	param(
		[bool] $Enabled = $true
	)
	#region Create the Visio Defaults store if it does not exist.
	if (-not (Get-Variable -Name VisioDefaults -Scope Global -ErrorAction SilentlyContinue)) {
		$global:VisioDefaults = @{}
		$global:VisioDefaults['SmartLayout'] = $true
		$global:VisioDefaults['Page'       ] = @{}
		$global:VisioDefaults.Page['Background'           ] = ''
		$global:VisioDefaults.Page['Colors'               ] = 'None'
		$global:VisioDefaults.Page['Effects'              ] = 'None'
		$global:VisioDefaults.Page['AutoEnlarge'          ] = $false
		$global:VisioDefaults.Page['DiagramStyle'         ] = 'Default'
		$global:VisioDefaults.Page['DiagramDirection'     ] = $null
		$global:VisioDefaults.Page['DiagramAlignment'     ] = $null
		$global:VisioDefaults.Page['DiagramPlacementDepth'] = 'Default'
		$global:VisioDefaults.Page['ConnectorStyle'       ] = 'Default'
		$global:VisioDefaults.Page['ConnectorSpacing'     ] = '7.5mm'
		$global:VisioDefaults.Page['ConnectorCurvature'   ] = 'Default'
	}
	#endregion

	#region Set the default page auto enlarge flag.
	$global:VisioDefaults.Page.AutoEnlarge = $Enabled
	#endregion
}

function global:Set-VisioDefaultPageDiagramStyle {
	param(
		[string] $Style          = $null,
		[string] $Direction      = $null,
		[string] $Alignment      = $null,
		[string] $PlacementDepth = $null
	)
	#region Initialize local variables.
	[string[]] $validStyles          = @('Default','Radial','Flowchart','Circular','CompactTree','Hierarchy')
	[string[]] $validDirections      = @()
	[string[]] $validAlignments      = @()
	[string[]] $validPlacementDepths = @('Default','Shallow','Medium','Deep')
	#endregion

	#region Create the Visio Defaults store if it does not exist.
	if (-not (Get-Variable -Name VisioDefaults -Scope Global -ErrorAction SilentlyContinue)) {
		$global:VisioDefaults = @{}
		$global:VisioDefaults['SmartLayout'] = $true
		$global:VisioDefaults['Page'       ] = @{}
		$global:VisioDefaults.Page['Background'           ] = ''
		$global:VisioDefaults.Page['Colors'               ] = 'None'
		$global:VisioDefaults.Page['Effects'              ] = 'None'
		$global:VisioDefaults.Page['AutoEnlarge'          ] = $false
		$global:VisioDefaults.Page['DiagramStyle'         ] = 'Default'
		$global:VisioDefaults.Page['DiagramDirection'     ] = $null
		$global:VisioDefaults.Page['DiagramAlignment'     ] = $null
		$global:VisioDefaults.Page['DiagramPlacementDepth'] = 'Default'
		$global:VisioDefaults.Page['ConnectorStyle'       ] = 'Default'
		$global:VisioDefaults.Page['ConnectorSpacing'     ] = '7.5mm'
		$global:VisioDefaults.Page['ConnectorCurvature'   ] = 'Default'
	}
	#endregion

	#region Pre-process the parameters.
	if ($Style) {
		$Style = $Style.Trim()
		$Style = $Style -replace '[- ]',''
	}
	if ($Direction) {
		$Direction = $Direction.Trim()
		$Direction = $Direction -replace '[- ]',''
	}
	if ($Alignment) {
		$Alignment = $Alignment.Trim()
		$Alignment = $Alignment -replace '[- ]',''
	}
	if ($PlacementDepth) {
		$PlacementDepth = $PlacementDepth.Trim()
		$PlacementDepth = $PlacementDepth -replace '[- ]',''
	}
	if ($validStyles -notcontains $Style) {
		Write-Error "Cannot bind value 'Style' to the target. The value was invalid. Valid values for 'Style' include '$([string]::Join(""', '"",$validStyles))'."
		return
	}
	if ((@('Default','Radial','Circular') -contains $Style) -and ($Direction -or $Alignment)) {
		Write-Warning "'Direction' and 'Alignment' are not applicable to '$Style' diagrams. These parameters will be ignored."
		$Direction = $null
		$Alignment = $null
	} elseif (@('Flowchart','CompactTree') -contains $Style) {
		if ($Alignment) {
			Write-Warning "'Alignment' is not applicable to '$Style' diagrams. This parameter will be ignored."
			$Alignment = $null
		}
		if (-not $Direction) {
			switch -exact ($Style) {
				'Flowchart'   {$Direction = 'TopToBottom';   break}
				'CompactTree' {$Direction = 'DownThenRight'; break}
			}
		}
	} elseif ($Style -eq 'Hierarchy') {
		if (-not $Direction) {$Direction = 'TopToBottom'}
		if (-not $Alignment) {$Alignment = 'Center'}
	}
	if ($Direction) {
		if ($Style -eq 'CompactTree') {
			$validDirections = @('DownThenRight','RightThenDown','RightThenUp','UpThenRight','UpThenLeft','LeftThenUp','LeftThenDown','DownThenLeft')
		} else {
			$validDirections = @('TopToBottom','BottomToTop','LeftToRight','RightToLeft')
		}
		if ($validDirections -notcontains $Direction) {
			Write-Error "Cannot bind value 'Direction' to the target. The value was invalid. Valid values for 'Direction' include '$([string]::Join(""', '"",$validDirections))'."
			return
		}
	}
	if ($Alignment) {
		if (@('TopToBottom','BottomToTop') -match $Direction) {
			$validAlignments = @('Left','Center','Right')
		} else {
			$validAlignments = @('Top','Middle','Bottom')
		}
		if ($validAlignments -notcontains $Alignment) {
			Write-Error "Cannot bind value 'Alignment' to the target. The value was invalid. Valid values for 'Alignment' in the '$Direction' direction include '$([string]::Join(""', '"",$validAlignments))'."
			return
		}
	}
	if ($PlacementDepth) {
		if ($validPlacementDepths -notcontains $PlacementDepth) {
			Write-Error "Cannot bind value 'PlacementDepth' to the target. The value was invalid. Valid values for 'PlacementDepth' include '$([string]::Join(""', '"",$validPlacementDepths))'."
			return
		}
	}
	#endregion

	#region Set the default page diagram style.
	$global:VisioDefaults.Page.DiagramStyle = $Style
	$global:VisioDefaults.Page.DiagramDirection = $Direction
	$global:VisioDefaults.Page.DiagramAlignment = $Alignment
	$global:VisioDefaults.Page.DiagramPlacementDepth = $PlacementDepth
	#endregion
}

function global:Set-VisioDefaultPageConnectorStyle {
	param(
		[string] $Style     = $null,
		[string] $Spacing   = $null,
		[string] $Curvature = $null
	)
	#region Initialize local variables.
	[string[]] $validStyles          = @('Default','RightAngle','Straight','CenterToCenter','Network','Flowchart','Tree','OrganizationChart','Simple','SimpleHorizontalVertical','SimpleVerticalHorizontal')
	[string[]] $validCurvatures      = @('Default','Straight','Curved')
	#endregion

	#region Create the Visio Defaults store if it does not exist.
	if (-not (Get-Variable -Name VisioDefaults -Scope Global -ErrorAction SilentlyContinue)) {
		$global:VisioDefaults = @{}
		$global:VisioDefaults['SmartLayout'] = $true
		$global:VisioDefaults['Page'       ] = @{}
		$global:VisioDefaults.Page['Background'           ] = ''
		$global:VisioDefaults.Page['Colors'               ] = 'None'
		$global:VisioDefaults.Page['Effects'              ] = 'None'
		$global:VisioDefaults.Page['AutoEnlarge'          ] = $false
		$global:VisioDefaults.Page['DiagramStyle'         ] = 'Default'
		$global:VisioDefaults.Page['DiagramDirection'     ] = $null
		$global:VisioDefaults.Page['DiagramAlignment'     ] = $null
		$global:VisioDefaults.Page['DiagramPlacementDepth'] = 'Default'
		$global:VisioDefaults.Page['ConnectorStyle'       ] = 'Default'
		$global:VisioDefaults.Page['ConnectorSpacing'     ] = '7.5mm'
		$global:VisioDefaults.Page['ConnectorCurvature'   ] = 'Default'
	}
	#endregion

	#region Pre-process the parameters.
	if ($Style) {
		$Style = $Style.Trim()
		$Style = $Style -replace '[- ]',''
		if ($validStyles -notcontains $Style) {
			Write-Error "Cannot bind value 'Style' to the target. The value was invalid. Valid values for 'Style' include '$([string]::Join(""', '"",$validStyles))'."
			return
		}
	}
	if ($Spacing) {
		$Spacing = $Spacing.Trim()
		$Spacing = $Spacing -replace ' ',''
	}
	if ($Curvature) {
		$Curvature = $Curvature.Trim()
		$Curvature = $Curvature -replace '[- ]',''
		$validCurvatures = @('Default','Straight','Curved')
		if ($validCurvatures -notcontains $Curvature) {
			Write-Error "Cannot bind value 'Curvature' to the target. The value was invalid. Valid values for 'Curvature' include '$([string]::Join(""', '"",$validCurvatures))'."
			return
		}
	}
	#endregion

	#region Set the default page diagram style.
	$global:VisioDefaults.Page.ConnectorStyle = $Style
	$global:VisioDefaults.Page.ConnectorSpacing = $Spacing
	$global:VisioDefaults.Page.ConnectorCurvature = $Curvature
	#endregion
}

function global:Enable-VisioSmartLayout {
	#region Create the Visio Defaults store if it does not exist.
	if (-not (Get-Variable -Name VisioDefaults -Scope Global -ErrorAction SilentlyContinue)) {
		$global:VisioDefaults = @{}
		$global:VisioDefaults['SmartLayout'] = $true
		$global:VisioDefaults['Page'       ] = @{}
		$global:VisioDefaults.Page['Background'           ] = ''
		$global:VisioDefaults.Page['Colors'               ] = 'None'
		$global:VisioDefaults.Page['Effects'              ] = 'None'
		$global:VisioDefaults.Page['AutoEnlarge'          ] = $false
		$global:VisioDefaults.Page['DiagramStyle'         ] = 'Default'
		$global:VisioDefaults.Page['DiagramDirection'     ] = $null
		$global:VisioDefaults.Page['DiagramAlignment'     ] = $null
		$global:VisioDefaults.Page['DiagramPlacementDepth'] = 'Default'
		$global:VisioDefaults.Page['ConnectorStyle'       ] = 'Default'
		$global:VisioDefaults.Page['ConnectorSpacing'     ] = '7.5mm'
		$global:VisioDefaults.Page['ConnectorCurvature'   ] = 'Default'
	}
	#endregion

	#region Set the default smart layout flag.
	$global:VisioDefaults.SmartLayout = $true
	#endregion
}

function global:Disable-VisioSmartLayout {
	#region Create the Visio Defaults store if it does not exist.
	if (-not (Get-Variable -Name VisioDefaults -Scope Global -ErrorAction SilentlyContinue)) {
		$global:VisioDefaults = @{}
		$global:VisioDefaults['SmartLayout'] = $true
		$global:VisioDefaults['Page'       ] = @{}
		$global:VisioDefaults.Page['Background'           ] = ''
		$global:VisioDefaults.Page['Colors'               ] = 'None'
		$global:VisioDefaults.Page['Effects'              ] = 'None'
		$global:VisioDefaults.Page['AutoEnlarge'          ] = $false
		$global:VisioDefaults.Page['DiagramStyle'         ] = 'Default'
		$global:VisioDefaults.Page['DiagramDirection'     ] = $null
		$global:VisioDefaults.Page['DiagramAlignment'     ] = $null
		$global:VisioDefaults.Page['DiagramPlacementDepth'] = 'Default'
		$global:VisioDefaults.Page['ConnectorStyle'       ] = 'Default'
		$global:VisioDefaults.Page['ConnectorSpacing'     ] = '7.5mm'
		$global:VisioDefaults.Page['ConnectorCurvature'   ] = 'Default'
	}
	#endregion

	#region Set the default smart layout flag.
	$global:VisioDefaults.SmartLayout = $false
	#endregion
}

#endregion
#region VisioDocument functions

# Syntax:
#     Select-VisioDocument [-DocumentId[]] <string> [-ScriptBlock] <ScriptBlock> [-InputObject] <PSObject>
#     Select-VisioDocument [-ScriptBlock] <ScriptBlock> [-InputObject] <PSObject>
function global:Select-VisioDocument {
	param(
		[PSObject]    $InputObject = $null,
		[ScriptBlock] $ScriptBlock = $null,
		[string[]]    $DocumentId  = @()
	)
	begin {
		#region Convert the parameters to private scope.
		'InputObject','ScriptBlock','DocumentId' | ForEach-Object {
			Set-Variable -Name $_ -Option Private
		}
		#endregion

		#region Initialize local variables.
		[PSObject] $private:processObject          = $null
		[String[]] $private:commandsAtCurrentLevel = @()
		[string]   $private:item                   = $null
        [PSObject] $private:visioApplication       = $null
        [PSObject] $private:visioDocuments         = @()
        [PSObject] $private:openVisioDocuments     = @()
		[PSObject] $private:visioDocument          = $null
		#endregion

		#region Define local script blocks.
		[ScriptBlock] $private:processVisioDocumentScriptBlock = {
			param(
				[ScriptBlock] $ScriptBlock         = $null,
				[switch]      $UpdateTemplateCache
			)
			begin {
				#region Initialize local variables.
				[PSObject] $visioApplication            = $null
				[PSObject] $visioDocument               = $null
				[PSObject] $private:visioDocumentWindow = $null
				[PSObject] $private:visioPage           = $null
				[String[]] $private:dockedStencils      = @()
				[string]   $private:item                = $null
				[PSObject] $private:visioTemplate       = $null
				#endregion

				#region Convert the parameters to private scope.
				'ScriptBlock' | ForEach-Object {
					Set-Variable -Name $_ -Option Private
				}
				#endregion
			}
			process {
				#region Reset process block variables.
				$visioApplication    = $_.Application
				$visioDocument       = $_
				$visioDocumentWindow = $null
				$visioPage           = $null
				$dockedStencils      = @()
				$item                = $null
				$visioTemplate       = $null
				#endregion

				#region Activate the Visio document window if necessary.
				if ($visioDocument -ne $visioApplication.ActiveDocument) {
					$visioDocumentWindow = $visioApplication.Windows | Where-Object {$_.Document -eq $visioDocument}
					if (-not $visioDocumentWindow) {
						Write-Error "Cannot activate the Visio document called ""$($visioDocument.Name)"" because a window associated with that Visio document could not be found."
						return
					}
					$visioDocumentWindow.Activate()
				} else {
					$visioDocumentWindow = $visioApplication.ActiveWindow
				}
				#endregion

				#region Update the template cache when creating new documents.
				if ($UpdateTemplateCache) {
					Write-Progress -Activity 'Updating template cache' -Status 'Checking for templates that are not cached.'
					if (-not (Get-Variable -Name VisioTemplateCache -Scope Global -ErrorAction SilentlyContinue)) {
						$global:VisioTemplateCache = @{}
					}
					if ($global:VisioTemplateCache.Keys -notcontains $visioApplication.ProcessId) {
						$global:VisioTemplateCache[$visioApplication.ProcessId] = @{'Stencils'=[String[]]@();'Templates'=@{}}
					}
					$visioDocumentWindow.DockedStencils([REF]$dockedStencils)
					if ($dockedStencils) {
						foreach ($item in $dockedStencils) {
							if ($global:VisioTemplateCache[$visioApplication.ProcessId].Stencils -contains $item) {
								continue
							}
							$global:VisioTemplateCache[$visioApplication.ProcessId].Stencils += $item
							foreach ($visioTemplate in $visioApplication.Documents.Item($item).Masters) {
								Write-Progress -Activity 'Updating template cache' -Status "Adding template '$($visioTemplate.Name)' ($($visioTemplate.NameU)) to the cache."
								$global:VisioTemplateCache[$visioApplication.ProcessId].Templates[$visioTemplate.Name]  = $visioTemplate
								$global:VisioTemplateCache[$visioApplication.ProcessId].Templates[$visioTemplate.NameU] = $visioTemplate
							}
						}
					}
				}
				#endregion

				#region Set the default page configuration on the first page of new documents.
				if (($visioDocument.Pages.Count -eq 1) -and $visioDocument.Saved -and (-not $visioDocument.Path)) {
					$visioPage = $visioDocument.Pages | Select-Object -First 1
					Write-Progress -Activity 'Applying default Visio page configuration' -Status 'Setting page background.'
					Set-VisioPageBackground -InputObject $visioPage -Background $VisioDefaults.Page.Background
					Write-Progress -Activity 'Applying default Visio page configuration' -Status 'Setting page theme.'
					Set-VisioPageTheme -InputObject $visioPage -Colors $VisioDefaults.Page.Colors -Effects $VisioDefaults.Page.Effects
					Write-Progress -Activity 'Applying default Visio page configuration' -Status 'Setting page auto-enlarge flag.'
					Set-VisioPageAutoEnlarge -InputObject $visioPage -Enabled $VisioDefaults.Page.AutoEnlarge
					Write-Progress -Activity 'Applying default Visio page configuration' -Status 'Setting page diagram style.'
					Set-VisioPageDiagramStyle -InputObject $visioPage -Style $VisioDefaults.Page.DiagramStyle -Direction $VisioDefaults.Page.DiagramDirection -Alignment $VisioDefaults.Page.DiagramAlignment -PlacementDepth $VisioDefaults.Page.DiagramPlacementDepth
					Write-Progress -Activity 'Applying default Visio page configuration' -Status 'Setting page connector style.'
					Set-VisioPageConnectorStyle -InputObject $visioPage -Style $VisioDefaults.Page.ConnectorStyle -Spacing $VisioDefaults.Page.ConnectorSpacing -Curvature $VisioDefaults.Page.ConnectorCurvature
				}
				#endregion

				#region Invoke the ScriptBlock if it was provided.
				if ($ScriptBlock) {
					. $ScriptBlock | Out-Null
				}
				#endregion

				#region Return the Visio document object to the client.
				$visioDocument
				#endregion
			}
		}
		#endregion

		#region Pre-process the parameters.
		if (($InputObject -is [ScriptBlock]) -and (-not $ScriptBlock)) {
			$ScriptBlock = $InputObject
			$InputObject = $null
		} elseif ((($InputObject -is [string]) -or ($InputObject -is [String[]])) -and (-not $DocumentId)) {
			$DocumentId = @($InputObject)
			$InputObject = $null
		}
		#endregion

		#region Create the commands that are supported in the Visio DSV at this level.
		if ($ScriptBlock) {
			#region Define the DSV commands that are available at this level.
			$commandsAtCurrentLevel = @(
				'DefaultPageBackground',
				'DefaultPageTheme',
				'DefaultPageAutoEnlarge',
				'DefaultPageDiagramStyle',
				'DefaultPageConnectorStyle',
				'SmartLayout',
				'Show',
				'Hide',
				'Exit',
				'Document',
				'Save',
				'Close',
				'Stencil',
				'Page'
			)
			#endregion

			#region Remove any existing aliases for DSV commands at this level.
			foreach ($item in $commandsAtCurrentLevel) {
				if (Get-Alias -Name $item -ErrorAction SilentlyContinue) {
					Rename-Item -Path "Alias:$item" -NewName "RemoveAliasWorkaround_$([System.Guid]::NewGuid().ToString())" -Force
				}
			}
			#endregion

			#region Create aliases for DSV commands that can be used as defined.
			New-Alias -Name DefaultPageBackground     -Scope Local -Value Set-VisioDefaultPageBackground     -Description 'Sets the default Visio page background. This background will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageTheme          -Scope Local -Value Set-VisioDefaultPageTheme          -Description 'Sets the default Visio page theme. This theme will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageAutoEnlarge    -Scope Local -Value Set-VisioDefaultPageAutoEnlarge    -Description 'Sets the default Visio page auto enlarge property. This setting will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageDiagramStyle   -Scope Local -Value Set-VisioDefaultPageDiagramStyle   -Description 'Sets the default Visio page diagram style. This diagram style will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageConnectorStyle -Scope Local -Value Set-VisioDefaultPageConnectorStyle -Description 'Sets the default Visio page connector style. This connector style will be applied to any new Visio pages that are created.'
			#endregion

			#region Create functions for DSV commands that require variables defined in this function.
			function SmartLayout {
				param(
					[bool]$Enabled = $true
				)
				if ($Enabled) {
					Enable-VisioSmartLayout
				} else {
					Disable-VisioSmartLayout
				}
			}
			function Show {
				param(
					[Switch]$PassThru
				)
				Show-Visio -InputObject $visioApplication -PassThru:$PassThru
			}
			function Hide {
				param(
					[Switch]$PassThru
				)
				Hide-Visio -InputObject $visioApplication -PassThru:$PassThru
			}
			function Exit {
				Stop-Visio -InputObject $visioApplication
			}
			function Document {
				param(
					$DocumentId  = $null,
					$ScriptBlock = $null
				)
				[PSObject]$visioDocument = $null
				if (($DocumentId -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $DocumentId
					$DocumentId = @()
				} elseif ($DocumentId -and [System.Runtime.InteropServices.Marshal]::IsComObject($DocumentId)) {
					$visioDocument = $DocumentId
					$DocumentId = @()
				} elseif ($DocumentId -isnot [string]) {
					$DocumentId = [string]$DocumentId
				}
				Select-VisioDocument -InputObject $(if ($visioDocument) {$visioDocument} else {$visioApplication}) -ScriptBlock $ScriptBlock -DocumentId $DocumentId
			}
			function Save {
				param(
					$Filename = $null,
					[Switch]$Force,
					[Switch]$PassThru
				)
				Save-VisioDocument -InputObject $visioDocument -FileName $Filename -Force:$Force -PassThru:$PassThru
			}
			function Close {
				param(
					[Switch]$Force
				)
				Close-VisioDocument -InputObject $visioDocument -Force:$Force
			}
			function Stencil {
				param(
					$StencilId = $null
				)
				Select-VisioStencil -InputObject $visioDocument -StencilId $StencilId
			}
			function Page {
				param(
					$PageId      = $null,
					$ScriptBlock = $null
				)
				[PSObject]$visioPage = $null
				if (($PageId -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $PageId
					$PageId = @()
				} elseif ($PageId -and [System.Runtime.InteropServices.Marshal]::IsComObject($PageId)) {
					$visioPage = $PageId
					$PageId = @()
				} elseif ($PageId -isnot [string]) {
					$PageId = [string]$PageId
				}
				Select-VisioPage -InputObject $(if ($visioPage) {$visioPage} else {$visioDocument}) -ScriptBlock $ScriptBlock -PageId $PageId
			}
			#endregion
		}
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject      = $(if ($InputObject) {$InputObject} else {$_})
		$item               = $null
		$visioApplication   = $null
		$visioDocuments     = @()
		$openVisioDocuments = @()
		$visioDocument      = $null
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio document cannot be selected because no Visio application or document object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Select-VisioDocument -ScriptBlock:$ScriptBlock -DocumentId $DocumentId
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if (($processObject -isnot [Microsoft.Office.Interop.Visio.IVApplication]) -and
		    ($processObject -isnot [Microsoft.Office.Interop.Visio.IVDocument])) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVApplication"" or type ""IVDocument"". Error: ""A valid Visio COM application or document object must be provided."""
			return
		}
		#endregion

		#region Return warning if the process object is a Visio document object and DocumentId was used.
		if (($processObject -is [Microsoft.Office.Interop.Visio.IVDocument]) -and $DocumentId) {
			Write-Warning 'DocumentId is only used when the input object is a Visio application object. It will be ignored.'
		}
		#endregion

		#region Assign the Visio application and document objects we are using.
		if ($processObject -is [Microsoft.Office.Interop.Visio.IVApplication]) {
			$visioApplication = $processObject
		} elseif ($processObject -is [Microsoft.Office.Interop.Visio.IVDocument]) {
			$visioApplication = $processObject.Application
			$visioDocuments = @($processObject)
		}
		#endregion

		#region Process the Visio documents, creating or loading them if necessary.
		if ($visioDocuments) {
			$visioDocuments | & $processVisioDocumentScriptBlock -ScriptBlock $ScriptBlock
		} else {
			foreach ($item in $(if ($DocumentId) {$DocumentId} else {@('Basic Diagram.vst')})) {
				if (-not $item) {
					$item = 'Basic Diagram.vst'
				}
				$openVisioDocuments = @($visioApplication.Documents | Where-Object {
					($_.Type -eq 1) -and
					(($_.FullName -like $(if ($item -match '\.vsd') {"*$item"} else {"$item.vsd"})) -or
					 ($item -like $_.Name) -or
					 ($item -like "$($_.Name).vsd"))
				})
				if ($openVisioDocuments) {
					Write-Progress -Activity 'Opening existing document' -Status 'Loading an existing document into the Visio application.'
					$openVisioDocuments | & $processVisioDocumentScriptBlock -ScriptBlock $ScriptBlock
				} else {
					Write-Progress -Activity 'Creating new document' -Status 'Creating a new document in the Visio application.'
					if (($item.Length -gt 0) -and ($item -notmatch '.vs[dst]$')) {
						$item += '.vst'
					}
					if (($item.Length -eq 0) -or ($item -match '\.vst$')) {
						$visioApplication.Documents.Add($item) | & $processVisioDocumentScriptBlock -ScriptBlock $ScriptBlock -UpdateTemplateCache
					} else {
						$visioApplication.Documents.OpenEx($item,36) | & $processVisioDocumentScriptBlock -ScriptBlock $ScriptBlock -UpdateTemplateCache
					}
				}
			}
		}
		#endregion
	}
}

function global:Save-VisioDocument {
	param(
		[string]   $Filename    = $null,
		[switch]   $Force,
		[switch]   $PassThru,
		[PSObject] $InputObject = $null
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		[bool]     $fileExists          = $false
		#endregion

		#region Pre-process the parameters.
		if ($Filename) {
			$Filename = $Filename.Trim()
		}
		#endregion

		#region Return an error if the filename provided is not valid.
		if ($FileName -and (-not (Test-Path -LiteralPath $FileName -IsValid -ErrorAction SilentlyContinue))) {
			Write-Error "The file name '$FileName' is not valid."
			return
		}
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		$fileExists          = $false
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio document cannot be saved because no Visio document object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Save-VisioDocument -FileName $FileName -Force:$Force
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVDocument]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVDocument"". Error: ""A valid Visio COM document object must be provided."""
			return
		}
		#endregion

		#region Return an error if the Visio document is not associated with a file and no filename was provided.
		if ((-not $FileName) -and (-not $processObject.FullName)) {
			Write-Error "The file name '$FileName' is not valid. The document $($processObject.Name) will not be saved."
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		}
		#endregion

		#region Save the Visio document.
		Write-Progress -Activity 'Saving Visio document' -Status "Saving the '$($processObject.FullName)' Visio document."
		if ($FileName) {
			if ($processObject.Path -and ($processObject.FullName -eq $FileName)) {
				$processObject.Save() | Out-Null
			} else {
				if (($fileExists = Test-Path -LiteralPath $FileName -ErrorAction SilentlyContinue) -and -not $Force) {
					Write-Error "The file name '$FileName' already exists.  To overwrite the file, you must use the -Force.  The document $($processObject.Name) has not been saved."
					return
				} elseif ($fileExists) {
					Remove-Item -LiteralPath $FileName -Force
				}
				$processObject.SaveAs($FileName) | Out-Null
			}
		} elseif (-not $processObject.Path) {
			Write-Error "To save '$($processObject.Name)', you must specify a file name in the FileName parameter.  The document $($processObject.Name) has not been saved."
			return
		} else {
			$processObject.Save() | Out-Null
		}
		#endregion

		#region Return the Visio document object if requested.
		if ($PassThru) {
			$processObject
		}
	}
}

function global:Close-VisioDocument {
	param(
		[switch]   $Force,
		[PSObject] $InputObject = $null
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio document cannot be closed because no Visio document object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Close-VisioDocument -Force:$Force
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVDocument]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVDocument"". Error: ""A valid Visio COM document object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		}
		#endregion

		#region Close the Visio document.
		Write-Progress -Activity 'Closing Visio document' -Status "Closing the '$($processObject.FullName)' Visio document."
		if ($Force) {
			$processObject.Saved = $true
		}
		$processObject.Close()
		#endregion
	}
}

#endregion
#region VisioStencil functions

function global:Select-VisioStencil {
	param(
		[PSObject] $InputObject = $null,
		[String[]] $StencilId   = @()
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
        [PSObject] $visioDocumentWindow = $null
		[string]   $item                = $null
		[string]   $myShapesPath        = $null
		[String[]] $dockedStencils      = $null
		[PSObject] $visioTemplate       = $null
		#endregion

		#region Pre-process the parameters.
		if ((($InputObject -is [string]) -or ($InputObject -is [String[]])) -and (-not $StencilId)) {
			$StencilId = @($InputObject)
			$InputObject = $null
		}
		#endregion

		#region Return an error if no stencil id was provided.
		if (-not $StencilId) {
			Write-Error "Cannot process command because of one or more missing mandatory parameters: StencilId."
			return
		}
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		$item                = $null
		$myShapesPath        = $null
		$dockedStencils      = @()
		$visioTemplate       = $null
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio stencil cannot be selected because no Visio document object was provided.'
			return
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVDocument]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVDocument"". Error: ""A valid Visio COM document object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Load the Visio stencil(s) into the Visio document.
		foreach ($item in $StencilId) {
			if ($item -notmatch '\.vss$') {
				$item += '.vss'
			}
			$myShapesPath = $processObject.Application.MyShapesPath
			if ((-not $myShapesPath) -and ([System.Reflection.Assembly]::GetAssembly('Microsoft.Office.Interop.Visio.IVDocument').FullName -eq 'Microsoft.Office.Interop.Visio, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c')) {
				$myShapesPath = (Get-ItemProperty -Path 'Registry::HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Visio\Application' -ErrorAction SilentlyContinue).MyShapesPath
			}
			if (($item -notmatch '\\\\') -and (-not (Split-Path -Path $item -Qualifier -ErrorAction SilentlyContinue)) -and $myShapesPath) {
				$item = Join-Path -Path $myShapesPath -ChildPath $item
			}
			Write-Progress -Activity 'Loading Visio stencil' -Status "Loading the Visio stencil '$($item)' into the Visio document."
			$processObject.Application.Documents.OpenEx($item,4)
		}
		#endregion

		#region Update the template cache when loading additional stencils.
		Write-Progress -Activity 'Updating template cache' -Status 'Checking for templates that are not cached.'
		if (-not (Get-Variable -Name VisioTemplateCache -Scope Global -ErrorAction SilentlyContinue)) {
			$global:VisioTemplateCache = @{}
		}
		if ($global:VisioTemplateCache.Keys -notcontains $processObject.Application.ProcessId) {
			$global:VisioTemplateCache[$processObject.Application.ProcessId] = @{'Stencils'=[String[]]@();'Templates'=@{}}
		}
		$visioDocumentWindow.DockedStencils([REF]$dockedStencils)
		if ($dockedStencils) {
			foreach ($item in $dockedStencils) {
				if ($global:VisioTemplateCache[$processObject.Application.ProcessId].Stencils -contains $item) {
					continue
				}
				$global:VisioTemplateCache[$processObject.Application.ProcessId].Stencils += $item
				foreach ($visioTemplate in $processObject.Application.Documents.Item($item).Masters) {
					Write-Progress -Activity 'Updating template cache' -Status "Adding template '$($visioTemplate.Name)' ($($visioTemplate.NameU)) to the cache."
					$global:VisioTemplateCache[$processObject.Application.ProcessId].Templates[$visioTemplate.Name]  = $visioTemplate
					$global:VisioTemplateCache[$processObject.Application.ProcessId].Templates[$visioTemplate.NameU] = $visioTemplate
				}
			}
		}
		#endregion
	}
}

#endregion
#region VisioPage functions

function global:Select-VisioPage {
	param(
		[PSObject]    $InputObject = $null,
		[ScriptBlock] $ScriptBlock = $null,
		[String[]]    $PageId      = @()
	)
	begin {
		#region Convert the parameters to private scope.
		'InputObject','ScriptBlock','PageId' | ForEach-Object {
			Set-Variable -Name $_ -Option Private
		}
		#endregion

		#region Initialize local variables.
		[PSObject] $private:processObject          = $null
		[String[]] $private:commandsAtCurrentLevel = @()
		[string]   $private:item                   = $null
        [PSObject] $private:visioApplication       = $null
        [PSObject] $private:visioDocument          = $null
        [PSObject] $private:visioPages             = @()
		[PSObject] $private:visioDocumentWindow    = $null
		[int]      $private:highestIndex           = 0
		[int]      $private:pageCount              = 0
		[int]      $private:index                  = 0
		[PSObject] $private:visioPage              = $null
		#endregion

		#region Define local script blocks.
		[ScriptBlock] $private:processVisioPageScriptBlock = {
			param(
				[PSObject]    $VisioDocumentWindow = $null,
				[ScriptBlock] $ScriptBlock         = $null
			)
			begin {
				#region Convert the parameters to private scope.
				'VisioDocumentWindow','ScriptBlock' | ForEach-Object {
					Set-Variable -Name $_ -Option Private
				}
				#endregion
			}
			process {
				#region Initialize local variables.
				[PSObject] $visioApplication  = $_.Application
				[PSObject] $visioDocument     = $_.Document
				[PSObject] $visioPage         = $_
				#endregion

				#region Activate the Visio page if necessary.
				if ($VisioDocumentWindow.Page -ne $visioPage) {
					$VisioDocumentWindow.Page = $visioPage
				}
				#endregion

				#region Invoke the ScriptBlock if it was provided.
				if ($ScriptBlock) {
					. $ScriptBlock | Out-Null
				}
				#endregion

				#region Return the Visio page object to the client.
				$visioPage
				#endregion
			}
		}
		#endregion

		#region Pre-process the parameters.
		if (($InputObject -is [ScriptBlock]) -and (-not $ScriptBlock)) {
			$ScriptBlock = $InputObject
			$InputObject = $null
		} elseif ((($InputObject -match '^\d+$') -or ($InputObject -is [string]) -or ($InputObject -is [String[]])) -and (-not $PageId)) {
			$PageId = @($InputObject)
			$InputObject = $null
		}
		#endregion

		#region Create the commands that are supported in the Visio DSV at this level.
		if ($ScriptBlock) {
			#region Define the DSV commands that are available at this level.
			$commandsAtCurrentLevel = @(
				'DefaultPageBackground',
				'DefaultPageTheme',
				'DefaultPageAutoEnlarge',
				'DefaultPageDiagramStyle',
				'DefaultPageConnectorStyle',
				'SmartLayout',
				'Show',
				'Hide',
				'Exit',
				'Document',
				'Save',
				'Close',
				'Stencil',
				'Page',
				'Name',
				'AutoEnlarge',
				'DiagramStyle',
				'ConnectorStyle',
				'Theme',
				'Background',
				'Layout',
				'Shape'
			)
			#endregion

			#region Remove any existing aliases for DSV commands at this level.
			foreach ($item in $commandsAtCurrentLevel) {
				if (Get-Alias -Name $item -ErrorAction SilentlyContinue) {
					Rename-Item -Path "Alias:$item" -NewName "RemoveAliasWorkaround_$([System.Guid]::NewGuid().ToString())" -Force
				}
			}
			#endregion

			#region Create aliases for DSV commands that can be used as defined.
			New-Alias -Name DefaultPageBackground     -Scope Local -Value Set-VisioDefaultPageBackground     -Description 'Sets the default Visio page background. This background will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageTheme          -Scope Local -Value Set-VisioDefaultPageTheme          -Description 'Sets the default Visio page theme. This theme will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageAutoEnlarge    -Scope Local -Value Set-VisioDefaultPageAutoEnlarge    -Description 'Sets the default Visio page auto enlarge property. This setting will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageDiagramStyle   -Scope Local -Value Set-VisioDefaultPageDiagramStyle   -Description 'Sets the default Visio page diagram style. This diagram style will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageConnectorStyle -Scope Local -Value Set-VisioDefaultPageConnectorStyle -Description 'Sets the default Visio page connector style. This connector style will be applied to any new Visio pages that are created.'
			#endregion

			#region Create functions for DSV commands that require variables defined in this function.
			function SmartLayout {
				param(
					[bool]$Enabled = $true
				)
				if ($Enabled) {
					Enable-VisioSmartLayout
				} else {
					Disable-VisioSmartLayout
				}
			}
			function Show {
				param(
					[Switch]$PassThru
				)
				Show-Visio -InputObject $visioApplication -PassThru:$PassThru
			}
			function Hide {
				param(
					[Switch]$PassThru
				)
				Hide-Visio -InputObject $visioApplication -PassThru:$PassThru
			}
			function Exit {
				Stop-Visio -InputObject $visioApplication
			}
			function Document {
				param(
					$DocumentId  = $null,
					$ScriptBlock = $null
				)
				[PSObject]$visioDocument = $null
				if (($DocumentId -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $DocumentId
					$DocumentId = @()
				} elseif ($DocumentId -and [System.Runtime.InteropServices.Marshal]::IsComObject($DocumentId)) {
					$visioDocument = $DocumentId
					$DocumentId = @()
				} elseif ($DocumentId -isnot [string]) {
					$DocumentId = [string]$DocumentId
				}
				Select-VisioDocument -InputObject $(if ($visioDocument) {$visioDocument} else {$visioApplication}) -ScriptBlock $ScriptBlock -DocumentId $DocumentId
			}
			function Save {
				param(
					$Filename = $null,
					[Switch]$Force,
					[Switch]$PassThru
				)
				Save-VisioDocument -InputObject $visioDocument -FileName $Filename -Force:$Force -PassThru:$PassThru
			}
			function Close {
				param(
					[Switch]$Force
				)
				Close-VisioDocument -InputObject $visioDocument -Force:$Force
			}
			function Stencil {
				param(
					$StencilId = $null
				)
				Select-VisioStencil -InputObject $visioDocument -StencilId $StencilId
			}
			function Page {
				param(
					$PageId      = $null,
					$ScriptBlock = $null
				)
				[PSObject]$visioPage = $null
				if (($PageId -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $PageId
					$PageId = @()
				} elseif ($PageId -and [System.Runtime.InteropServices.Marshal]::IsComObject($PageId)) {
					$visioPage = $PageId
					$PageId = @()
				} elseif ($PageId -isnot [string]) {
					$PageId = [string]$PageId
				}
				Select-VisioPage -InputObject $(if ($visioPage) {$visioPage} else {$visioDocument}) -ScriptBlock $ScriptBlock -PageId $PageId
			}
			function Name {
				param(
					$NewName,
					[switch]$PassThru
				)
				Rename-VisioPage -InputObject $visioPage -NewName $NewName -PassThru:$PassThru
			}
			function AutoEnlarge {
				param(
					$Enabled = $true,
					[switch]$PassThru
				)
				Set-VisioPageAutoEnlarge -InputObject $visioPage -Enabled $true -PassThru:$PassThru
			}
			function DiagramStyle {
				param(
					$Style          = $null,
					$Direction      = $null,
					$Alignment      = $null,
					$PlacementDepth = $null,
					[switch]$PassThru
				)
				Set-VisioPageDiagramStyle -InputObject $visioPage -Style $Style -Direction $Direction -Alignment $Alignment -PlacementDepth $PlacementDepth -PassThru:$PassThru
			}
			function ConnectorStyle {
				param(
					$Style     = $null,
					$Spacing   = $null,
					$Curvature = $null,
					[switch]$PassThru
				)
				Set-VisioPageConnectorStyle -InputObject $visioPage -Style $Style -Spacing $Spacing -Curvature $Curvature -PassThru:$PassThru
			}
			function Theme {
				param(
					$Colors,
					$Effects,
					[switch]$PassThru
				)
				Set-VisioPageTheme -InputObject $visioPage -Colors $Colors -Effects $Effects -PassThru:$PassThru
			}
			function Background {
				param(
					$Background,
					[switch]$None,
					[switch]$PassThru
				)
				Set-VisioPageBackground -InputObject $visioPage -Background $Background -None:$None -PassThru:$PassThru
			}
			function Layout {
				param(
					[switch]$ArrangeShapes,
					[switch]$CenterDrawing,
					[switch]$ShrinkToFit,
					[switch]$PassThru
				)
				Format-VisioPageLayout -InputObject $visioPage -ArrangeShapes:$ArrangeShapes -CenterDrawing:$CenterDrawing -ShrinkToFit:$ShrinkToFit -PassThru:$PassThru
			}
			function Shape {
				param(
					$ShapeId     = @(),
					$Name        = $null,
					$Label       = $null,
					$X           = $null,
					$Y           = $null,
					$ScriptBlock = $null,
					[switch]$SmartLayout = $global:VisioDefaults.SmartLayout
				)
				[PSObject]$visioShape = $null
				if (($ShapeId -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $ShapeId
					$ShapeId = @()
				} elseif ($ShapeId -and [System.Runtime.InteropServices.Marshal]::IsComObject($ShapeId)) {
					$visioShape = $ShapeId
					$ShapeId = @()
				} elseif ($ShapeId -isnot [string]) {
					$ShapeId = [string]$ShapeId
				}
				if (($Name -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $Name
					$Name = $null
				} elseif (($Label -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $Label
					$Label = $null
				} elseif (($X -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $X
					$X = $null
				} elseif (($Y -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $Y
					$Y = $null
				}
				Select-VisioShape -InputObject $(if ($visioShape) {$visioShape} else {$visioPage}) -ShapeId $ShapeId -Name $Name -Label $Label -X $X -Y $Y -ScriptBlock $ScriptBlock -SmartLayout:$SmartLayout
			}
			#endregion
		}
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioApplication    = $null
        $visioDocument       = $null
        $visioPages          = @()
		$visioDocumentWindow = $null
		$item                = $null
		$highestIndex        = 0
		$pageCount           = 0
		$index               = 0
		$visioPage           = $null
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio page cannot be selected because no Visio document or page object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Select-VisioPage -ScriptBlock:$ScriptBlock -PageId $PageId
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if (($processObject -isnot [Microsoft.Office.Interop.Visio.IVDocument]) -and
		    ($processObject -isnot [Microsoft.Office.Interop.Visio.IVPage])) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVDocument"" or type ""IVPage"". Error: ""A valid Visio COM document or page object must be provided."""
			return
		}
		#endregion

		#region Return warning if the process object is a Visio page object and PageId was used.
		if (($processObject -is [Microsoft.Office.Interop.Visio.IVPage]) -and $PageId) {
			Write-Warning 'PageId is only used when the input object is a Visio document object. It will be ignored.'
		}
		#endregion

		#region Assign the Visio objects we are using.
		if ($processObject -is [Microsoft.Office.Interop.Visio.IVDocument]) {
			$visioApplication = $processObject.Application
			$visioDocument = $processObject
		} elseif ($processObject -is [Microsoft.Office.Interop.Visio.IVPage]) {
			$visioApplication = $processObject.Application
			$visioDocument = $processObject.Document
			$visioPages = @($processObject)
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($visioDocument -ne $visioApplication.ActiveDocument) {
			$visioDocumentWindow = $visioApplication.Windows | Where-Object {$_.Document -eq $visioDocument}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($visioDocument.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $visioApplication.ActiveWindow
		}
		#endregion

		#region Process the Visio pages, creating them if necessary.
		if ($visioPages) {
			$visioPages | & $processVisioPageScriptBlock -VisioDocumentWindow $visioDocumentWindow -ScriptBlock $ScriptBlock
		} elseif ($PageId) {
			$highestIndex = $PageId | Where-Object {$_ -match '^\d+$'} | Sort-Object -Descending | Select-Object -First 1
			$pageCount = @($visioDocument.Pages | Where-Object {$_.Type -eq [Microsoft.Office.Interop.Visio.VisPageTypes]::visTypeForeground}).Count
			if ($highestIndex -and ($highestIndex -gt $pageCount)) {
				for ($index = $pageCount; $index -lt $highestIndex; $index++) {
					Write-Progress -Activity 'Adding page to Visio document' -Status "Adding page $index to the Visio document."
					$visioPage = $visioDocument.Pages.Add()
					Write-Progress -Activity 'Applying default Visio page configuration' -Status 'Setting page background.'
					Set-VisioPageBackground -InputObject $visioPage -Background $VisioDefaults.Page.Background
					Write-Progress -Activity 'Applying default Visio page configuration' -Status 'Setting page theme.'
					Set-VisioPageTheme -InputObject $visioPage -Colors $VisioDefaults.Page.Colors -Effects $VisioDefaults.Page.Effects
					Write-Progress -Activity 'Applying default Visio page configuration' -Status 'Setting page auto-enlarge flag.'
					Set-VisioPageAutoEnlarge -InputObject $visioPage -Enabled $VisioDefaults.Page.AutoEnlarge
					Write-Progress -Activity 'Applying default Visio page configuration' -Status 'Setting page diagram style.'
					Set-VisioPageDiagramStyle -InputObject $visioPage -Style $VisioDefaults.Page.DiagramStyle -Direction $VisioDefaults.Page.DiagramDirection -Alignment $VisioDefaults.Page.DiagramAlignment -PlacementDepth $VisioDefaults.Page.DiagramPlacementDepth
					Write-Progress -Activity 'Applying default Visio page configuration' -Status 'Setting page connector style.'
					Set-VisioPageConnectorStyle -InputObject $visioPage -Style $VisioDefaults.Page.ConnectorStyle -Spacing $VisioDefaults.Page.ConnectorSpacing -Curvature $VisioDefaults.Page.ConnectorCurvature
				}
			}
			foreach ($item in $PageId) {
				if ($item -match '^\d+$') {
					$visioDocument.Pages.ItemU([int]$item) | & $processVisioPageScriptBlock -VisioDocumentWindow $visioDocumentWindow -ScriptBlock $ScriptBlock
				} else {
					$visioDocument.Pages | Where-Object {($_.Name -like $item) -or ($_.NameU -like $item)} | & $processVisioPageScriptBlock -VisioDocumentWindow $visioDocumentWindow -ScriptBlock $ScriptBlock
				}
			}
		} else {
			$visioDocument.Pages.ItemU(1) | & $processVisioPageScriptBlock -VisioDocumentWindow $visioDocumentWindow -ScriptBlock $ScriptBlock
		}
		#endregion
	}
}

function global:Rename-VisioPage {
	param(
		[string]   $NewName     = $null,
		[PSObject] $InputObject = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		#endregion

		#region Pre-process the parameters.
		if ($NewName) {
			$NewName = $NewName.Trim()
		}
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio page cannot be renamed because no Visio page object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Rename-VisioPage -NewName $NewName -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVPage]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVPage"". Error: ""A valid Visio COM page object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject) {
			$visioDocumentWindow.Page = $processObject
		}
		#endregion

		#region Rename the Visio page.
		$processObject.Name = $NewName
		#endregion

		#region Return the Visio page object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Set-VisioPageAutoEnlarge {
	param(
		[bool]     $Enabled     = $true,
		[PSObject] $InputObject = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio page auto enlarge flag cannot be changed because no Visio page object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Set-VisioPageAutoEnlarge -Enabled $Enabled -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVPage]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVPage"". Error: ""A valid Visio COM page object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject) {
			$visioDocumentWindow.Page = $processObject
		}
		#endregion

		#region Set the auto enlarge property on the Visio page.
		$processObject.PageSheet.CellsU('ResizePage').ResultIU = $(if ($Enabled) {1} else {0})
		#endregion

		#region Return the Visio page object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Set-VisioPageDiagramStyle {
	param(
		[string]   $Style          = $null,
		[string]   $Direction      = $null,
		[string]   $Alignment      = $null,
		[string]   $PlacementDepth = $null,
		[PSObject] $InputObject    = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject        = $null
		[String[]] $validStyles          = @('Default','Radial','Flowchart','Circular','CompactTree','Hierarchy')
		[String[]] $validDirections      = @()
		[String[]] $validAlignments      = @()
		[String[]] $validPlacementDepths = @('Default','Shallow','Medium','Deep')
		[PSObject] $visioDocumentWindow  = $null
		[int]      $newRoutingStyle      = 0
		[int]      $newPlacementStyle    = 0
		[int]      $newPlacementDepth    = 0
		#endregion

		#region Pre-process the parameters.
		if ($Style) {
			$Style = $Style -replace '[- ]',''
		}
		if ($Direction) {
			$Direction = $Direction -replace '[- ]',''
		}
		if ($Alignment) {
			$Alignment = $Alignment -replace '[- ]',''
		}
		if ($PlacementDepth) {
			$PlacementDepth = $PlacementDepth -replace '[- ]',''
		}
		if ($validStyles -notcontains $Style) {
			Write-Error "Cannot bind value 'Style' to the target. The value was invalid. Valid values for 'Style' include '$([string]::Join(""', '"",$validStyles))'."
			return
		}
		if ((@('Default','Radial','Circular') -contains $Style) -and ($Direction -or $Alignment)) {
			Write-Warning "'Direction' and 'Alignment' are not applicable to '$Style' diagrams. These parameters will be ignored."
			$Direction = $null
			$Alignment = $null
		} elseif (@('Flowchart','CompactTree') -contains $Style) {
			if ($Alignment) {
				Write-Warning "'Alignment' is not applicable to '$Style' diagrams. This parameter will be ignored."
				$Alignment = $null
			}
			if (-not $Direction) {
				switch -exact ($Style) {
					'Flowchart'   {$Direction = 'TopToBottom';   break}
					'CompactTree' {$Direction = 'DownThenRight'; break}
				}
			}
		} elseif ($Style -eq 'Hierarchy') {
			if (-not $Direction) {$Direction = 'TopToBottom'}
			if (-not $Alignment) {$Alignment = 'Center'}
		}
		if ($Direction) {
			if ($Style -eq 'CompactTree') {
				$validDirections = @('DownThenRight','RightThenDown','RightThenUp','UpThenRight','UpThenLeft','LeftThenUp','LeftThenDown','DownThenLeft')
			} else {
				$validDirections = @('TopToBottom','BottomToTop','LeftToRight','RightToLeft')
			}
			if ($validDirections -notcontains $Direction) {
				Write-Error "Cannot bind value 'Direction' to the target. The value was invalid. Valid values for 'Direction' include '$([string]::Join(""', '"",$validDirections))'."
				return
			}
		}
		if ($Alignment) {
			if (@('TopToBottom','BottomToTop') -match $Direction) {
				$validAlignments = @('Left','Center','Right')
			} else {
				$validAlignments = @('Top','Middle','Bottom')
			}
			if ($validAlignments -notcontains $Alignment) {
				Write-Error "Cannot bind value 'Alignment' to the target. The value was invalid. Valid values for 'Alignment' in the '$Direction' direction include '$([string]::Join(""', '"",$validAlignments))'."
				return
			}
		}
		if ($PlacementDepth) {
			if ($validPlacementDepths -notcontains $PlacementDepth) {
				Write-Error "Cannot bind value 'PlacementDepth' to the target. The value was invalid. Valid values for 'PlacementDepth' include '$([string]::Join(""', '"",$validPlacementDepths))'."
				return
			}
		}
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject        = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow  = $null
		$newRoutingStyle      = 0
		$newPlacementStyle    = 0
		$newPlacementDepth    = 0
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio page diagram style cannot be changed because no Visio page object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Set-VisioPageDiagramStyle -Style $Style -Direction $Direction -Alignment $Alignment -PlacementDepth $PlacementDepth -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVPage]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVPage"". Error: ""A valid Visio COM page object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject) {
			$visioDocumentWindow.Page = $processObject
		}
		#endregion

		#region Set the diagram style of the Visio page.
		switch ($Style) {
			'Default' {
				$newRoutingStyle = 1
				switch ($processObject.PageSheet.CellsU('RouteStyle').ResultIU) {
					{@(3,4,10,11)   -contains $_} {$newRoutingStyle = 3;  break}
					{@(5,6,12,13)   -contains $_} {$newRoutingStyle = 5;  break}
					{@(7,8,14,15)   -contains $_} {$newRoutingStyle = 7;  break}
					{@(17,18,19,20) -contains $_} {$newRoutingStyle = 17; break}
					default                       {$newRoutingStyle = $_; break}
				}
				$processObject.PageSheet.CellsU('PlaceStyle').ResultIU = 0
				$processObject.PageSheet.CellsU('RouteStyle').ResultIU = $newRoutingStyle
				break
			}
			{@('Radial','Circular') -contains $_} {
				$newPlacementStyle = $(if ($Style -eq 'Radial') {3} else {6})
				$newRoutingStyle = $(if ($Style -eq 'Radial') {1} else {16})
				switch ($processObject.PageSheet.CellsU('RouteStyle').ResultIU) {
					{@(3,4,10,11)   -contains $_} {$newRoutingStyle = 3;  break}
					{@(5,6,12,13)   -contains $_} {$newRoutingStyle = 5;  break}
					{@(7,8,14,15)   -contains $_} {$newRoutingStyle = 7;  break}
					{@(17,18,19,20) -contains $_} {$newRoutingStyle = 17; break}
					default                       {$newRoutingStyle = $_; break}
				}
				$processObject.PageSheet.CellsU('PlaceStyle').ResultIU = $newPlacementStyle
				$processObject.PageSheet.CellsU('RouteStyle').ResultIU = $newRoutingStyle
				break
			}
			'Flowchart' {
				$newPlacementStyle = 1
				switch -exact ($Direction) {
					'TopToBottom' {$newPlacementStyle = 1; break}
					'BottomToTop' {$newPlacementStyle = 4; break}
					'LeftToRight' {$newPlacementStyle = 2; break}
					'RightToLeft' {$newPlacementStyle = 5; break}
				}
				$processObject.PageSheet.CellsU('PlaceStyle').ResultIU = $newPlacementStyle
				break
			}
			'CompactTree' {
				$newPlacementStyle = 7
				switch -exact ($Direction) {
					'DownThenRight' {$newPlacementStyle = 7;  break}
					'RightThenDown' {$newPlacementStyle = 8;  break}
					'RightThenUp'   {$newPlacementStyle = 9;  break}
					'UpThenRight'   {$newPlacementStyle = 10; break}
					'UpThenLeft'    {$newPlacementStyle = 11; break}
					'LeftThenUp'    {$newPlacementStyle = 12; break}
					'LeftThenDown'  {$newPlacementStyle = 13; break}
					'DownThenLeft'  {$newPlacementStyle = 14; break}
				}
				switch -regex ($Direction) {
					'^Down'  {
						switch ($processObject.PageSheet.CellsU('RouteStyle').ResultIU) {
							{@(3,4,10,11)   -contains $_} {$newRoutingStyle = 3;  break}
							{@(5,6,12,13)   -contains $_} {$newRoutingStyle = 5;  break}
							{@(7,8,14,15)   -contains $_} {$newRoutingStyle = 7;  break}
							{@(17,18,19,20) -contains $_} {$newRoutingStyle = 17; break}
							default                       {$newRoutingStyle = $_; break}
						}
					}
					'^Right' {
						switch ($processObject.PageSheet.CellsU('RouteStyle').ResultIU) {
							{@(0,3,4,10,11) -contains $_} {$newRoutingStyle = 4;  break}
							{@(5,6,12,13)   -contains $_} {$newRoutingStyle = 6;  break}
							{@(7,8,14,15)   -contains $_} {$newRoutingStyle = 8;  break}
							{@(17,18,19,20) -contains $_} {$newRoutingStyle = 18; break}
							default                       {$newRoutingStyle = $_; break}
						}
					}
					'^Up'    {
						switch ($processObject.PageSheet.CellsU('RouteStyle').ResultIU) {
							{@(0,3,4,10,11) -contains $_} {$newRoutingStyle = 10; break}
							{@(5,6,12,13)   -contains $_} {$newRoutingStyle = 12; break}
							{@(7,8,14,15)   -contains $_} {$newRoutingStyle = 14; break}
							{@(17,18,19,20) -contains $_} {$newRoutingStyle = 19; break}
							default                       {$newRoutingStyle = $_; break}
						}
					}
					'^Left'  {
						switch ($processObject.PageSheet.CellsU('RouteStyle').ResultIU) {
							{@(0,3,4,10,11) -contains $_} {$newRoutingStyle = 11; break}
							{@(5,6,12,13)   -contains $_} {$newRoutingStyle = 13; break}
							{@(7,8,14,15)   -contains $_} {$newRoutingStyle = 15; break}
							{@(17,18,19,20) -contains $_} {$newRoutingStyle = 20; break}
							default                       {$newRoutingStyle = $_; break}
						}
					}
				}
				$processObject.PageSheet.CellsU('PlaceStyle').ResultIU = $newPlacementStyle
				$processObject.PageSheet.CellsU('RouteStyle').ResultIU = $newRoutingStyle
				break
			}
			'Hierarchy' {
				$newPlacementStyle = 16
				switch -exact ("$Direction,$Alignment") {
					'TopToBottom,Left'   {$newPlacementStyle = 16; break}
					'TopToBottom,Center' {$newPlacementStyle = 17; break}
					'TopToBottom,Right'  {$newPlacementStyle = 18; break}
					'BottomToTop,Left'   {$newPlacementStyle = 19; break}
					'BottomToTop,Center' {$newPlacementStyle = 20; break}
					'BottomToTop,Right'  {$newPlacementStyle = 21; break}
					'LeftToRight,Top'    {$newPlacementStyle = 22; break}
					'LeftToRight,Middle' {$newPlacementStyle = 23; break}
					'LeftToRight,Bottom' {$newPlacementStyle = 24; break}
					'RightToLeft,Top'    {$newPlacementStyle = 25; break}
					'RightToLeft,Middle' {$newPlacementStyle = 26; break}
					'RightToLeft,Bottom' {$newPlacementStyle = 27; break}
				}
				$newRoutingStyle = 3
				switch ($newPlacementStyle) {
					{@(16,17,18) -contains $_} {$newRoutingStyle = 3;  break}
					{@(22,23,24) -contains $_} {$newRoutingStyle = 4;  break}
					{@(19,20,21) -contains $_} {$newRoutingStyle = 10; break}
					{@(25,26,27) -contains $_} {$newRoutingStyle = 11; break}
				}
				$processObject.PageSheet.CellsU('PlaceStyle').ResultIU = $newPlacementStyle
				$processObject.PageSheet.CellsU('RouteStyle').ResultIU = $newRoutingStyle
				break
			}
		}
		if ($PlacementDepth) {
			$newPlacementDepth = 0
			switch -exact ($PlacementDepth) {
				'Shallow' {$newPlacementDepth = 3; break}
				'Medium'  {$newPlacementDepth = 1; break}
				'Deep'    {$newPlacementDepth = 2; break}
			}
			$processObject.PageSheet.CellsU('PlaceDepth').ResultIU = $newPlacementDepth
		}
		#endregion

		#region Return the Visio page object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Set-VisioPageConnectorStyle {
	param(
		[string]   $Style       = $null,
		[string]   $Spacing     = $null,
		[string]   $Curvature   = $null,
		[PSObject] $InputObject = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[String[]] $validStyles         = @('Default','RightAngle','Straight','CenterToCenter','Network','Flowchart','Tree','OrganizationChart','Simple','SimpleHorizontalVertical','SimpleVerticalHorizontal')
		[String[]] $validCurvatures     = @('Default','Straight','Curved')
		[PSObject] $visioDocumentWindow = $null
		[int]      $newRoutingStyle     = 0
		[double]   $spacingValue        = 0.0
		[string]   $spacingUnits        = 'mm'
		[double]   $newSpacingValue     = 0.0
		[int]      $newCurvature        = 0
		#endregion

		#region Pre-process the parameters.
		if ($Style) {
			$Style = $Style -replace '[- ]',''
			if ($validStyles -notcontains $Style) {
				Write-Error "Cannot bind value 'Style' to the target. The value was invalid. Valid values for 'Style' include '$([string]::Join(""', '"",$validStyles))'."
				return
			}
		}
		if ($Curvature) {
			$Curvature = $Curvature -replace '[- ]',''
			if ($validCurvatures -notcontains $Curvature) {
				Write-Error "Cannot bind value 'Curvature' to the target. The value was invalid. Valid values for 'Curvature' include '$([string]::Join(""', '"",$validCurvatures))'."
				return
			}
		}
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		$newRoutingStyle     = 0
		$spacingValue        = 0.0
		$spacingUnits        = 'mm'
		$newSpacingValue     = 0.0
		$newCurvature        = 0
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio page connector style cannot be changed because no Visio page object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Set-VisioPageConnectorStyle -Style $Style -Spacing $Spacing -Curvature $Curvature -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVPage]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVPage"". Error: ""A valid Visio COM page object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject) {
			$visioDocumentWindow.Page = $processObject
		}
		#endregion

		#region Set the connector style of the Visio page.
		if ($Style) {
			$newRoutingStyle = 0
			switch -exact ($Style) {
				'Default' {
					$newRoutingStyle = 0
				}
				'RightAngle' {
					$newRoutingStyle = 1
					break
				}
				'Straight' {
					$newRoutingStyle = 3
					break
				}
				'CenterToCenter' {
					$newRoutingStyle = 16
					break
				}
				'Network' {
					$newRoutingStyle = 9
					break
				}
				'Flowchart'{
					switch ($processObject.PageSheet.CellsU('PlaceStyle').ResultIU) {
						{@(0,1,7,14,16,17,18) -contains $_} {$newRoutingStyle = 5;  break}
						{@(2,8,9,22,23,24)    -contains $_} {$newRoutingStyle = 6;  break}
						{@(4,10,11,19,20,21)  -contains $_} {$newRoutingStyle = 12; break}
						{@(5,12,13,25,26,27)  -contains $_} {$newRoutingStyle = 13; break}
					}
					break
				}
				'Tree' {
					switch ($processObject.PageSheet.CellsU('PlaceStyle').ResultIU) {
						{@(0,1,7,14,16,17,18) -contains $_} {$newRoutingStyle = 7;  break}
						{@(2,8,9,22,23,24)    -contains $_} {$newRoutingStyle = 8;  break}
						{@(4,10,11,19,20,21)  -contains $_} {$newRoutingStyle = 14; break}
						{@(5,12,13,25,26,27)  -contains $_} {$newRoutingStyle = 15; break}
					}
					break
				}
				'OrganizationChart' {
					switch ($processObject.PageSheet.CellsU('PlaceStyle').ResultIU) {
						{@(0,1,7,14,16,17,18) -contains $_} {$newRoutingStyle = 3;  break}
						{@(2,8,9,22,23,24)    -contains $_} {$newRoutingStyle = 4;  break}
						{@(4,10,11,19,20,21)  -contains $_} {$newRoutingStyle = 10; break}
						{@(5,12,13,25,26,27)  -contains $_} {$newRoutingStyle = 11; break}
					}
					break
				}
				'Simple' {
					switch ($processObject.PageSheet.CellsU('PlaceStyle').ResultIU) {
						{@(0,1,7,14,16,17,18) -contains $_} {$newRoutingStyle = 17; break}
						{@(2,8,9,22,23,24)    -contains $_} {$newRoutingStyle = 18; break}
						{@(4,10,11,19,20,21)  -contains $_} {$newRoutingStyle = 19; break}
						{@(5,12,13,25,26,27)  -contains $_} {$newRoutingStyle = 20; break}
					}
					break
				}
				'SimpleHorizontalVertical' {
					$newRoutingStyle = 21
					break
				}
				'SimpleVerticalHorizontal' {
					$newRoutingStyle = 22
					break
				}
			}
			$processObject.PageSheet.CellsU('RouteStyle').ResultIU = $newRoutingStyle
		}
		if ($Spacing) {
			$spacingValue = $Spacing -replace ' ','' -replace '^(\d*(\.\d*)?)(.*)','$1'
			$spacingUnits = $Spacing -replace ' ','' -replace '^(\d*(\.\d*)?)(.*)','$3'
			if ($spacingUnits) {
				$newSpacingValue = $processObject.Application.ConvertResult($spacingValue, $spacingUnits, '')
			} else {
				$newSpacingValue = $spacingValue
			}
			$processObject.PageSheet.CellsU('AvenueSizeX').ResultIU = $newSpacingValue
			$processObject.PageSheet.CellsU('AvenueSizeY').ResultIU = $newSpacingValue
		}
		if ($Curvature) {
			$newCurvature = 0
			switch -exact ($Curvature) {
				'Default'  {$newCurvature = 0; break}
				'Straight' {$newCurvature = 1; break}
				'Curved'   {$newCurvature = 2; break}
			}
			$processObject.PageSheet.CellsU('LineRouteExt').ResultIU = $newCurvature
		}
		#endregion

		#region Return the Visio page object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Set-VisioPageTheme {
	param(
		[string]   $Colors      = 'None',
		[string]   $Effects     = 'None',
		[PSObject] $InputObject = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[bool]     $cancelled             = $false
		[PSObject] $processObject         = $null
		[PSObject] $visioDocumentWindow   = $null
		[string]   $colorThemeId          = $null
		[string]   $effectThemeId         = $null
		[bool]     $colorThemeFound       = $false
		[bool]     $effectThemeFound      = $false
		[String[]] $localizedColorThemes  = @()
		[String[]] $universalColorThemes  = @()
		[String[]] $localizedEffectThemes = @()
		[String[]] $universalEffectThemes = @()
		#endregion

		#region Raise a warning if the running instance of Visio does not support themes.
		if ([System.Reflection.Assembly]::GetAssembly('Microsoft.Office.Interop.Visio.IVPage').FullName -eq 'Microsoft.Office.Interop.Visio, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c') {
			Write-Warning 'Visio 2003 does not support themes. This command will be ignored.'
			$cancelled = $true
			return
		}
		#endregion
	}
	process {
		#region Return if cancelled.
		if ($cancelled) {
			return
		}
		#endregion

		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject         = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow   = $null
		$colorThemeId          = $(if (-not $Colors) {'None'} else {$Colors -replace '^visThemeColors','' -replace '\W',''})
		$effectThemeId         = $(if (-not $Effects) {'None'} else {$Effects -replace '^visThemeEffects','' -replace '\W',''})
		$colorThemeFound       = $false
		$effectThemeFound      = $false
		$localizedColorThemes  = @()
		$universalColorThemes  = @()
		$localizedEffectThemes = @()
		$universalEffectThemes = @()
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio page theme cannot be changed because no Visio page object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Set-VisioPageTheme -Colors $Colors -Effects $Effects -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVPage]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVPage"". Error: ""A valid Visio COM page object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject) {
			$visioDocumentWindow.Page = $processObject
		}
		#endregion

		#region Set the theme of the Visio page.
		$processObject.Document.GetThemeNames([Microsoft.Office.Interop.Visio.VisThemeTypes]::visThemeTypeColor,([REF]$localizedColorThemes))
		$processObject.Document.GetThemeNamesU([Microsoft.Office.Interop.Visio.VisThemeTypes]::visThemeTypeColor,([REF]$universalColorThemes))
		$localizedColorThemes = $localizedColorThemes -replace '\W',''
		$universalColorThemes = $universalColorThemes -replace 'visThemeNone','visThemeColorsNone' -replace '\W',''
		if (($localizedColorThemes -contains $colorThemeId) -or ($universalColorThemes -contains $(if ($colorThemeId -match '^visThemeColors') {$colorThemeId} else {"visThemeColors$colorThemeId"}))) {
			for ($index = 0; $index -lt $universalColorThemes.Count; $index++) {
				if (($localizedColorThemes[$index] -eq $colorThemeId) -or ($universalColorThemes[$index] -eq $(if ($colorThemeId -match '^visThemeColors') {$colorThemeId} else {"visThemeColors$colorThemeId"}))) {
					$colorThemeId = $universalColorThemes[$index]
					$colorThemeFound = $true
					break
				}
			}
		}
		if (-not $colorThemeFound) {
			Write-Error "The color theme called '$Colors' was not found. These colors will not be applied to page $($visioPage.Name)."
			$cancelled = $true
			return
		}
		$processObject.Document.GetThemeNames([Microsoft.Office.Interop.Visio.VisThemeTypes]::visThemeTypeEffect,([REF]$localizedEffectThemes))
		$processObject.Document.GetThemeNamesU([Microsoft.Office.Interop.Visio.VisThemeTypes]::visThemeTypeEffect,([REF]$universalEffectThemes))
		$localizedEffectThemes = $localizedEffectThemes -replace '\W',''
		$universalEffectThemes = $universalEffectThemes -replace '\W',''
		if (($localizedEffectThemes -contains $effectThemeId) -or ($universalEffectThemes -contains $(if ($effectThemeId -match '^visThemeEffects') {$effectThemeId} else {"visThemeEffects$effectThemeId"}))) {
			for ($index = 0; $index -lt $universalEffectThemes.Count; $index++) {
				if (($localizedEffectThemes[$index] -eq $effectThemeId) -or ($universalEffectThemes[$index] -eq $(if ($effectThemeId -match '^visThemeEffects') {$effectThemeId} else {"visThemeEffects$effectThemeId"}))) {
					$effectThemeId = $universalEffectThemes[$index]
					$effectThemeFound = $true
					break
				}
			}
		}
		if (-not $effectThemeFound) {
			Write-Error "The effect theme called '$Effects' was not found. These effects will not be applied to page $($visioPage.Name)."
			$cancelled = $true
			return
		}
		$processObject.ThemeColors  = [Microsoft.Office.Interop.Visio.VisThemeColors]$colorThemeId
		$processObject.ThemeEffects = [Microsoft.Office.Interop.Visio.VisThemeEffects]$effectThemeId
		#endregion

		#region Return the Visio page object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Set-VisioPageBackground {
	param(
		[string]   $Background  = $null,
		[PSObject] $InputObject = $null,
		[switch]   $None,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[bool]     $cancelled              = $false
		[PSObject] $processObject          = $null
		[PSObject] $visioDocumentWindow    = $null
		[string]   $modifiedBackgroundName = $null
		[PSObject] $backgroundPage         = $null
		[string]   $key                    = $null
		[PSObject] $backgroundTemplate     = $null
		#endregion

		#region Pre-process the parameters.
		if ($Background) {
			$Background = $Background.Trim()
		}
		if ($None -and $Background) {
			Write-Error 'Parameter set cannot be resolved using the specified named parameters.'
			$cancelled = $true
			return
		}
		#endregion
	}
	process {
		#region Return if cancelled.
		if ($cancelled) {
			return
		}
		#endregion

		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject          = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow    = $null
		$modifiedBackgroundName = $null
		$backgroundPage         = $null
		$key                    = $null
		$backgroundTemplate     = $null
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio page background cannot be changed because no Visio page object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Set-VisioPageBackground -Background $Background -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVPage]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVPage"". Error: ""A valid Visio COM page object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject) {
			$visioDocumentWindow.Page = $processObject
		}
		#endregion

		#region Set the background of the Visio page.
		if ($Background) {
			if (-not ($backgroundPage = $processObject.Document.Pages | Where-Object {($_.Type -eq [Microsoft.Office.Interop.Visio.VisPageTypes]::visTypeBackground) -and (($_.Name -eq $Background) -or ($_.NameU -eq $(if ($Background -match '^Background ') {$Background} else {"Background $Background"})))})) {
				$key = $(if ($Background -match '^Background ') {$Background} else {"Background $Background"})
				$backgroundTemplate = $global:VisioTemplateCache[$processObject.Application.ProcessId].Templates[$key]
				if (-not $backgroundTemplate) {
					Write-Error "The shape type '$Background' was not found. This shape will not be set as a background for page $($processObject.Name)."
					$backgroundPage.Delete(0)
					return
				}
				$processObject.BackPage = ''
				$processObject.Drop($backgroundTemplate,0,0) | Out-Null
				$processObject.BackPage.Name = $backgroundTemplate.Name
				$processObject.BackPage.NameU = $backgroundTemplate.NameU
			} else {
				$processObject.BackPage = $backgroundPage.Name
			}
			if ($processObject.BackPage) {
				if ($processObject.BackPage.PageSheet.CellsU('PageWidth').ResultIU -lt $processObject.PageSheet.CellsU('PageWidth').ResultIU) {
					$processObject.BackPage.PageSheet.CellsU('PageWidth').ResultIU = $processObject.PageSheet.CellsU('PageWidth').ResultIU
				}
				if ($processObject.BackPage.PageSheet.CellsU('PageHeight').ResultIU -lt $processObject.PageSheet.CellsU('PageHeight').ResultIU) {
					$processObject.BackPage.PageSheet.CellsU('PageHeight') = $processObject.PageSheet.CellsU('PageHeight').ResultIU
				}
			}
		} else {
			$processObject.BackPage = ''
		}
		#endregion

		#region Return the Visio page object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Format-VisioPageLayout {
	param(
		[switch]   $ArrangeShapes,
		[switch]   $CenterDrawing,
		[switch]   $ShrinkToFit,
		[PSObject] $InputObject = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio page layout cannot be changed because no Visio page object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Format-VisioPageLayout -ArrangeShapes:$ArrangeShapes -CenterDrawing:$CenterDrawing -ShrinkToFit:$ShrinkToFit -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVPage]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVPage"". Error: ""A valid Visio COM page object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject) {
			$visioDocumentWindow.Page = $processObject
		}
		#endregion

		#region Set the Visio page layout.
		if ($ArrangeShapes) {
			$processObject.Layout()
		}
		if ($CenterDrawing) {
			$processObject.CenterDrawing()
		}
		if ($ShrinkToFit) {
			$processObject.ResizeToFitContents()
		}
		if ($processObject.BackPage) {
			if ($processObject.BackPage.PageSheet.CellsU('PageWidth').ResultIU -lt $processObject.PageSheet.CellsU('PageWidth').ResultIU) {
				$processObject.BackPage.PageSheet.CellsU('PageWidth').ResultIU = $processObject.PageSheet.CellsU('PageWidth').ResultIU
			}
			if ($processObject.BackPage.PageSheet.CellsU('PageHeight').ResultIU -lt $processObject.PageSheet.CellsU('PageHeight').ResultIU) {
				$processObject.BackPage.PageSheet.CellsU('PageHeight') = $processObject.PageSheet.CellsU('PageHeight').ResultIU
			}
		}
		#endregion

		#region Return the Visio page object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

#endregion
#region VisioShape functions

function global:Select-VisioShape {
	param(
		[PSObject]    $InputObject = $null,
		[ScriptBlock] $ScriptBlock = $null,
		[String[]]    $ShapeId     = @(),
		[string]      $Name        = $null,
		[string]      $Label       = $null,
		[string]      $X           = $null,
		[string]      $Y           = $null,
		[switch]      $SmartLayout = $global:VisioDefaults.SmartLayout
	)
	begin {
		#region Convert the parameters to private scope.
		'InputObject','ScriptBlock','ShapeId','Name','Label','X','Y','SmartLayout' | ForEach-Object {
			Set-Variable -Name $_ -Option Private
		}
		#endregion

		#region Initialize local variables.
		[String[]] $private:commandsAtCurrentLevel = @()
		[string]   $private:item                   = $null
		[PSObject] $private:processObject          = $null
        [PSObject] $private:visioApplication       = $null
        [PSObject] $private:visioDocument          = $null
        [PSObject] $private:visioPage              = $null
        [PSObject] $private:visioShapes            = @()
		[PSObject] $private:visioDocumentWindow    = $null
		[double]   $private:xCoordinate            = 0.0
		[double]   $private:yCoordinate            = 0.0
		[double]   $private:positionValue          = 0.0
		[string]   $private:positionUnits          = $null
		[PSObject] $private:visioShape             = $null
		#endregion

		#region Define local script blocks.
		[ScriptBlock] $private:processVisioShapeScriptBlock = {
			param(
				[ScriptBlock] $ScriptBlock = $null,
				[switch]      $SmartLayout = $global:VisioDefaults.SmartLayout
			)
			begin {
				#region Convert the parameters to private scope.
				'ScriptBlock','SmartLayout' | ForEach-Object {
					Set-Variable -Name $_ -Option Private
				}
				#endregion
			}
			process {
				#region Initialize local variables.
				[PSObject] $visioApplication = $_.Application
				[PSObject] $visioDocument    = $_.Document
				[PSObject] $visioPage        = $_.ContainingPage
				[PSObject] $visioShape       = $_
				#endregion
				
				#region Invoke the ScriptBlock if it was provided.
				if ($ScriptBlock) {
					. $ScriptBlock | Out-Null
				}
				#endregion

				#region Re-layout the page if smart layout is enabled.
				if ($SmartLayout) {
					$visioPage.Layout()
					$visioPage.CenterDrawing()
				}
				#endregion

				#region Update the size of the background page if smart layout or auto-enlarge are enabled.
				if ($visioPage.BackPage -and ($SmartLayout -or ($visioPage.PageSheet.CellsU('ResizePage').ResultIU -eq 1))) {
					if ($visioPage.BackPage.PageSheet.CellsU('PageWidth').ResultIU -lt $visioPage.PageSheet.CellsU('PageWidth').ResultIU) {
						$visioPage.BackPage.PageSheet.CellsU('PageWidth').ResultIU = $visioPage.PageSheet.CellsU('PageWidth').ResultIU
					}
					if ($visioPage.BackPage.PageSheet.CellsU('PageHeight').ResultIU -lt $visioPage.PageSheet.CellsU('PageHeight').ResultIU) {
						$visioPage.BackPage.PageSheet.CellsU('PageHeight').ResultIU = $visioPage.PageSheet.CellsU('PageHeight').ResultIU
					}
				}
				#endregion

				#region Return the Visio shape object to the client.
				$visioShape
				#endregion
			}
		}
		#endregion

		#region Pre-process the parameters.
		if (($InputObject -is [ScriptBlock]) -and (-not $ScriptBlock)) {
			$ScriptBlock = $InputObject
			$InputObject = $null
		} elseif ((($InputObject -is [string]) -or ($InputObject -is [String[]])) -and (-not $ShapeId)) {
			$ShapeId = @($InputObject)
			$InputObject = $null
		}
		#endregion

		#region Create the commands that are supported in the Visio DSV at this level.
		if ($ScriptBlock) {
			#region Define the DSV commands that are available at this level.
			$commandsAtCurrentLevel = @(
				'DefaultPageBackground',
				'DefaultPageTheme',
				'DefaultPageAutoEnlarge',
				'DefaultPageDiagramStyle',
				'DefaultPageConnectorStyle',
				'SmartLayout',
				'Show',
				'Hide',
				'Exit',
				'Document',
				'Save',
				'Close',
				'Stencil',
				'Page',
				'RenamePage',
				'AutoEnlarge',
				'DiagramStyle',
				'ConnectorStyle',
				'Theme',
				'Background',
				'Layout',
				'Shape',
				'Name',
				'Label',
				'WebHyperlink',
				'FileHyperlink',
				'Move',
				'MoveToFront',
				'MoveToBack',
				'MoveForward',
				'MoveBackward',
				'Connect'
			)
			#endregion

			#region Remove any existing aliases for DSV commands at this level.
			foreach ($item in $commandsAtCurrentLevel) {
				if (Get-Alias -Name $item -ErrorAction SilentlyContinue) {
					Rename-Item -Path "Alias:$item" -NewName "RemoveAliasWorkaround_$([System.Guid]::NewGuid().ToString())" -Force
				}
			}
			#endregion

			#region Create aliases for DSV commands that can be used as defined.
			New-Alias -Name DefaultPageBackground     -Scope Local -Value Set-VisioDefaultPageBackground     -Description 'Sets the default Visio page background. This background will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageTheme          -Scope Local -Value Set-VisioDefaultPageTheme          -Description 'Sets the default Visio page theme. This theme will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageAutoEnlarge    -Scope Local -Value Set-VisioDefaultPageAutoEnlarge    -Description 'Sets the default Visio page auto enlarge property. This setting will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageDiagramStyle   -Scope Local -Value Set-VisioDefaultPageDiagramStyle   -Description 'Sets the default Visio page diagram style. This diagram style will be applied to any new Visio pages that are created.'
			New-Alias -Name DefaultPageConnectorStyle -Scope Local -Value Set-VisioDefaultPageConnectorStyle -Description 'Sets the default Visio page connector style. This connector style will be applied to any new Visio pages that are created.'
			#endregion

			#region Create functions for DSV commands that require variables defined in this function.
			function SmartLayout {
				param(
					[bool]$Enabled = $true
				)
				if ($Enabled) {
					Enable-VisioSmartLayout
				} else {
					Disable-VisioSmartLayout
				}
			}
			function Show {
				param(
					[Switch]$PassThru
				)
				Show-Visio -InputObject $visioApplication -PassThru:$PassThru
			}
			function Hide {
				param(
					[Switch]$PassThru
				)
				Hide-Visio -InputObject $visioApplication -PassThru:$PassThru
			}
			function Exit {
				Stop-Visio -InputObject $visioApplication
			}
			function Document {
				param(
					$DocumentId  = $null,
					$ScriptBlock = $null
				)
				[PSObject]$visioDocument = $null
				if (($DocumentId -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $DocumentId
					$DocumentId = @()
				} elseif ($DocumentId -and [System.Runtime.InteropServices.Marshal]::IsComObject($DocumentId)) {
					$visioDocument = $DocumentId
					$DocumentId = @()
				} elseif ($DocumentId -isnot [string]) {
					$DocumentId = [string]$DocumentId
				}
				Select-VisioDocument -InputObject $(if ($visioDocument) {$visioDocument} else {$visioApplication}) -ScriptBlock $ScriptBlock -DocumentId $DocumentId
			}
			function Save {
				param(
					$Filename = $null,
					[Switch]$Force,
					[Switch]$PassThru
				)
				Save-VisioDocument -InputObject $visioDocument -FileName $Filename -Force:$Force -PassThru:$PassThru
			}
			function Close {
				param(
					[Switch]$Force
				)
				Close-VisioDocument -InputObject $visioDocument -Force:$Force
			}
			function Stencil {
				param(
					$StencilId = $null
				)
				Select-VisioStencil -InputObject $visioDocument -StencilId $StencilId
			}
			function Page {
				param(
					$PageId      = $null,
					$ScriptBlock = $null
				)
				[PSObject]$visioPage = $null
				if (($PageId -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $PageId
					$PageId = @()
				} elseif ($PageId -and [System.Runtime.InteropServices.Marshal]::IsComObject($PageId)) {
					$visioPage = $PageId
					$PageId = @()
				} elseif ($PageId -isnot [string]) {
					$PageId = [string]$PageId
				}
				Select-VisioPage -InputObject $(if ($visioPage) {$visioPage} else {$visioDocument}) -ScriptBlock $ScriptBlock -PageId $PageId
			}
			function AutoEnlarge {
				param(
					$Enabled = $true,
					[switch]$PassThru
				)
				Set-VisioPageAutoEnlarge -InputObject $visioPage -Enabled $true -PassThru:$PassThru
			}
			function DiagramStyle {
				param(
					$Style          = $null,
					$Direction      = $null,
					$Alignment      = $null,
					$PlacementDepth = $null,
					[switch]$PassThru
				)
				Set-VisioPageDiagramStyle -InputObject $visioPage -Style $Style -Direction $Direction -Alignment $Alignment -PlacementDepth $PlacementDepth -PassThru:$PassThru
			}
			function ConnectorStyle {
				param(
					$Style     = $null,
					$Spacing   = $null,
					$Curvature = $null,
					[switch]$PassThru
				)
				Set-VisioPageConnectorStyle -InputObject $visioPage -Style $Style -Spacing $Spacing -Curvature $Curvature -PassThru:$PassThru
			}
			function Theme {
				param(
					$Colors,
					$Effects,
					[switch]$PassThru
				)
				Set-VisioPageTheme -InputObject $visioPage -Colors $Colors -Effects $Effects -PassThru:$PassThru
			}
			function Background {
				param(
					$Background,
					[switch]$None,
					[switch]$PassThru
				)
				Set-VisioPageBackground -InputObject $visioPage -Background $Background -None:$None -PassThru:$PassThru
			}
			function Layout {
				param(
					[switch]$ArrangeShapes,
					[switch]$CenterDrawing,
					[switch]$ShrinkToFit,
					[switch]$PassThru
				)
				Format-VisioPageLayout -InputObject $visioPage -ArrangeShapes:$ArrangeShapes -CenterDrawing:$CenterDrawing -ShrinkToFit:$ShrinkToFit -PassThru:$PassThru
			}
			function Shape {
				param(
					$ShapeId     = @(),
					$Name        = $null,
					$Label       = $null,
					$X           = $null,
					$Y           = $null,
					$ScriptBlock = $null,
					[switch]$SmartLayout = $global:VisioDefaults.SmartLayout
				)
				[PSObject]$visioShape = $null
				if (($ShapeId -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $ShapeId
					$ShapeId = @()
				} elseif ($ShapeId -and [System.Runtime.InteropServices.Marshal]::IsComObject($ShapeId)) {
					$visioShape = $ShapeId
					$ShapeId = @()
				} elseif ($ShapeId -isnot [string]) {
					$ShapeId = [string]$ShapeId
				}
				if (($Name -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $Name
					$Name = $null
				} elseif (($Label -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $Label
					$Label = $null
				} elseif (($X -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $X
					$X = $null
				} elseif (($Y -is [ScriptBlock]) -and -not $ScriptBlock) {
					$ScriptBlock = $Y
					$Y = $null
				}
				Select-VisioShape -InputObject $(if ($visioShape) {$visioShape} else {$visioPage}) -ShapeId $ShapeId -Name $Name -Label $Label -X $X -Y $Y -ScriptBlock $ScriptBlock -SmartLayout:$SmartLayout
			}
			function Name {
				param(
					$NewName,
					[switch]$PassThru
				)
				Rename-VisioShape -InputObject $visioShape -NewName $NewName -PassThru:$PassThru
			}
			function Label {
				param(
					$Label,
					[switch]$PassThru
				)
				Set-VisioShapeLabel -InputObject $visioShape -Label $Label -PassThru:$PassThru
			}
			function WebHyperlink {
				param(
					$Url         = $null,
					$Description = $null,
					[switch]$Default,
					[switch]$PassThru
				)
				Add-VisioShapeWebHyperlink -InputObject $visioShape -Url $Url -Description $Description -Default:$Default -PassThru:$PassThru
			}
			function FileHyperlink {
				param(
					$Filename    = $null,
					$PageName    = $null,
					$ShapeName   = $null,
					$Zoom        = $null,
					$Description = $null,
					[switch]$Default,
					[switch]$PassThru
				)
				Add-VisioShapeFileHyperlink -InputObject $visioShape -Filename $Filename -PageName $PageName -ShapeName $ShapeName -Zoom $Zoom -Description $Description -Default:$Default -PassThru:$PassThru
			}
			function Move {
				param(
					$X      = $null,
					$Y      = $null,
					$DeltaX = $null,
					$DeltaY = $null,
					[switch]$PassThru
				)
				Move-VisioShape -InputObject $visioShape -X $X -Y $Y -DeltaX $DeltaX -DeltaY $DeltaY -PassThru:$PassThru
			}
			function MoveToFront {
				param(
					[switch]$PassThru
				)
				Move-VisioShapeToFront -InputObject $visioShape -PassThru:$PassThru
			}
			function MoveToBack {
				param(
					[switch]$PassThru
				)
				Move-VisioShapeToBack -InputObject $visioShape -PassThru:$PassThru
			}
			function MoveForward {
				param(
					[switch]$PassThru
				)
				Move-VisioShapeForward -InputObject $visioShape -PassThru:$PassThru
			}
			function MoveBackward {
				param(
					[switch]$PassThru
				)
				Move-VisioShapeBackward -InputObject $visioShape -PassThru:$PassThru
			}
			function Connect {
				param(
					$ToShape   = $null,
					$Connector = $null,
					[switch]$Top,
					[switch]$Bottom,
					[switch]$Left,
					[switch]$Right,
					[switch]$Default,
					[switch]$SmartLayout = $global:VisioDefaults.SmartLayout,
					[switch]$PassThru
				)
				Connect-VisioShape -InputObject $visioShape -ToShape $ToShape -Connector $Connector -Top:$Top -Bottom:$Bottom -Left:$Left -Right:$Right -Default:$Default -SmartLayout:$SmartLayout -PassThru:$PassThru
			}
			#endregion
		}
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioApplication    = $null
        $visioDocument       = $null
		$visioPage           = $null
        $visioShapes         = @()
		$visioDocumentWindow = $null
		$item                = $null
		$xCoordinate         = 0.0
		$yCoordinate         = 0.0
		$positionValue       = 0.0
		$positionUnits       = $null
		$visioShape          = $null
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio shape cannot be selected because no Visio page or shape object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Select-VisioShape -ShapeId $ShapeId -Name $Name -Label $Label -X $X -Y $Y -ScriptBlock:$ScriptBlock -SmartLayout:$SmartLayout
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if (($processObject -isnot [Microsoft.Office.Interop.Visio.IVPage]) -and
		    ($processObject -isnot [Microsoft.Office.Interop.Visio.IVShape])) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVPage"" or type ""IVShape"". Error: ""A valid Visio COM page or shape object must be provided."""
			return
		}
		#endregion

		#region Return warning if the process object is a Visio shape object and ShapeId was used.
		if (($processObject -is [Microsoft.Office.Interop.Visio.IVShape]) -and $ShapeId) {
			Write-Warning 'ShapeId is only used when the input object is a Visio page object. It will be ignored.'
		}
		#endregion

		#region Assign the Visio objects we are using.
		if ($processObject -is [Microsoft.Office.Interop.Visio.IVPage]) {
			$visioApplication = $processObject.Application
			$visioDocument = $processObject.Document
			$visioPage = $processObject
		} elseif ($processObject -is [Microsoft.Office.Interop.Visio.IVShape]) {
			$visioApplication = $processObject.Application
			$visioDocument = $processObject.Document
			$visioPage = $processObject.ContainingPage
			$visioShapes = @($processObject)
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($visioDocument -ne $visioApplication.ActiveDocument) {
			$visioDocumentWindow = $visioApplication.Windows | Where-Object {$_.Document -eq $visioDocument}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($visioDocument.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $visioApplication.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $visioPage) {
			$visioDocumentWindow.Page = $visioPage
		}
		#endregion

		#region Process the Visio shapes, creating them if necessary.
		if ($visioShapes) {
			if ($Name -or $X -or $Y -or $Label) {
				Write-Warning "'Name', 'X', 'Y', and 'Label' are not applicable to shapes already on the page. These parameters will be ignored."
			}
			$visioShapes | & $processVisioShapeScriptBlock -ScriptBlock $ScriptBlock -SmartLayout:$SmartLayout
		} else {
			foreach ($item in $ShapeId) {
				if ($global:VisioTemplateCache[$visioApplication.ProcessId].Templates.Keys -notcontains $item) {
					$visioShapes = $visioPage.Shapes | Where-Object {$_.Name -like $item}
					if (-not $visioShapes) {
 						Write-Error  "The shape type '$item' was not found. This shape will not be added to page $($visioPage.Name)."
						continue
					}
					if ($Name -or $X -or $Y -or $Label) {
						Write-Warning "'Name', 'X', 'Y', and 'Label' are not applicable to shapes already on the page. These parameters will be ignored."
					}
					$visioShapes | & $processVisioShapeScriptBlock -ScriptBlock $ScriptBlock -SmartLayout:$SmartLayout
				} else {
					Write-Progress -Activity 'Adding shape to Visio diagram' -Status "Adding a shape of type '$item' to the Visio diagram."
					$xCoordinate = 0.0
					$yCoordinate = 0.0
					if ($X) {
						$positionValue = $X -replace ' ','' -replace '^(\d*(\.\d*)?)(.*)','$1'
						$positionUnits = $X -replace ' ','' -replace '^(\d*(\.\d*)?)(.*)','$3'
						$xCoordinate = $visioApplication.ConvertResult([double]$positionValue, $positionUnits, '')
					} elseif (@(5,11,12,13,14,16,19,25,26,27) -contains $visioPage.PageSheet.CellsU('PlaceStyle').ResultIU) {
						$xCoordinate = $global:VisioTemplateCache[$visioApplication.ProcessId].Templates[$item].Shapes.Item(1).CellsU('Width').ResultIU / 2
					} else {
						$xCoordinate = $visioPage.PageSheet.CellsU('PageWidth').ResultIU - ($global:VisioTemplateCache[$visioApplication.ProcessId].Templates[$item].Shapes.Item(1).CellsU('Width').ResultIU / 2)
					}
					if ($Y) {
						$positionValue = $Y -replace ' ','' -replace '^(\d*(\.\d*)?)(.*)','$1'
						$positionUnits = $Y -replace ' ','' -replace '^(\d*(\.\d*)?)(.*)','$3'
						$yCoordinate = $visioApplication.ConvertResult([double]$positionValue, $positionUnits, '')
					} elseif (@(4,9,10,11,12,19,20,21,22,25) -contains $visioPage.PageSheet.CellsU('PlaceStyle').ResultIU) {
						$yCoordinate = $visioPage.PageSheet.CellsU('PageHeight').ResultIU - ($global:VisioTemplateCache[$visioApplication.ProcessId].Templates[$item].Shapes.Item(1).CellsU('Height').ResultIU / 2)
					} else {
						$yCoordinate = $global:VisioTemplateCache[$visioApplication.ProcessId].Templates[$item].Shapes.Item(1).CellsU('Height').ResultIU / 2
					}
					$visioShape = $visioPage.Drop($global:VisioTemplateCache[$visioApplication.ProcessId].Templates[$item],$xCoordinate,$yCoordinate)
					if ($Name) {
						$visioShape.Name = $Name
					}
					if ($Label) {
						$visioShape.Text = $Label
					}
					$visioShape | & $processVisioShapeScriptBlock -ScriptBlock $ScriptBlock -SmartLayout:$SmartLayout
				}
			}
		}
		#endregion
	}
}

function global:Rename-VisioShape {
	param(
		[string]   $NewName     = $null,
		[PSObject] $InputObject = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		#endregion

		#region Pre-process the parameters.
		if ($NewName) {
			$NewName = $NewName.Trim()
		}
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio shape cannot be renamed because no Visio shape object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Rename-VisioShape -NewName $NewName -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVShape]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVShape"". Error: ""A valid Visio COM shape object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject.ContainingPage) {
			$visioDocumentWindow.Page = $processObject.ContainingPage
		}
		#endregion

		#region Rename the Visio shape.
		$processObject.Name = $NewName
		#endregion

		#region Return the Visio shape object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Set-VisioShapeLabel {
	param(
		[string]   $Label       = $null,
		[PSObject] $InputObject = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		#endregion

		#region Pre-process the parameters.
		if ($Label) {
			$Label = $Label.Trim()
		}
		if (-not $Label) {
			Write-Error "The label '$Label' is invalid. Shape labels will not be changed."
			return
		}
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio shape label cannot be changed because no Visio shape object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Set-VisioShapeLabel -Label $Label -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVShape]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVShape"". Error: ""A valid Visio COM shape object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject.ContainingPage) {
			$visioDocumentWindow.Page = $processObject.ContainingPage
		}
		#endregion

		#region Set the label on the Visio shape.
		$processObject.Text = $Label
		#endregion

		#region Return the Visio shape object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Add-VisioShapeWebHyperlink {
	param(
		[string]   $Url         = $null,
		[string]   $Description = $null,
		[PSObject] $InputObject = $null,
		[switch]   $Default,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		[PSObject] $visioHyperlink      = $null
		#endregion

		#region Pre-process the parameters.
		if ($Url) {
			$Url = $Url.Trim()
		}
		if (-not $Url) {
			Write-Error "The url '$Url' is invalid. The shape hyperlink will not be added."
			return
		}
		if ($Description) {
			$Description = $Description.Trim()
		}
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		$visioHyperlink      = $null
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The hyperlink cannot be added to a Visio shape because no Visio shape object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Add-VisioShapeWebHyperlink -Url $Url -Description $Description -Default:$Default -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVShape]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVShape"". Error: ""A valid Visio COM shape object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject.ContainingPage) {
			$visioDocumentWindow.Page = $processObject.ContainingPage
		}
		#endregion

		#region Add the hyperlink to the Visio shape.
		$visioHyperlink = $processObject.AddHyperLink()
		$visioHyperlink.Address = $Url
		if ($Description) {
			$visioHyperlink.Description = $Description
		}
		$visioHyperlink.IsDefaultLink = [bool]$Default
		#endregion

		#region Return the Visio shape object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Add-VisioShapeFileHyperlink {
	param(
		[string]   $Filename    = $null,
		[string]   $PageName    = $null,
		[string]   $ShapeName   = $null,
		[string]   $Zoom        = $null,
		[string]   $Description = $null,
		[PSObject] $InputObject = $null,
		[switch]   $Default,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		[PSObject] $visioHyperlink      = $null
		#endregion

		#region Pre-process the parameters.
		if ($Filename) {
			$Filename = $Filename.Trim()
		}
		if ($PageName) {
			$PageName = $PageName.Trim()
		}
		if ($ShapeName) {
			$ShapeName = $ShapeName.Trim()
		}
		if ((-not $Filename) -and (-not $PageName) -and (-not $ShapeName)) {
			Write-Error 'The hyperlink destination is invalid. At least one of Filename, PageName or ShapeName must be provided. The shape hyperlink will not be added.'
			return
		}
		if ($Zoom) {
			$Zoom = $Zoom.Trim() -replace '\W*%$',''
		}
		if ($Description) {
			$Description = $Description.Trim()
		}
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		$visioHyperlink      = $null
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The hyperlink cannot be added to a Visio shape because no Visio shape object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Add-VisioShapeFileHyperlink -Filename $Filename -PageName $PageName -ShapeName $ShapeName -Zoom $Zoom -Description $Description -Default:$Default -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVShape]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVShape"". Error: ""A valid Visio COM shape object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject.ContainingPage) {
			$visioDocumentWindow.Page = $processObject.ContainingPage
		}
		#endregion

		#region Add the hyperlink to the Visio shape.
		$visioHyperlink = $visioShape.AddHyperLink()
		if ($Filename) {
			$visioHyperlink.Address = $Filename
		}
		if ($PageName -and $ShapeName) {
			$visioHyperlink.SubAddress = "$PageName/$ShapeName"
		} elseif ($PageName) {
			$visioHyperlink.SubAddress = "$PageName"
		} elseif ($ShapeName) {
			$visioHyperlink.SubAddress = "$ShapeName"
		}
		if ($Zoom) {
			$visioHyperlink.ExtraInfo = "zoom=$Zoom"
		}
		$visioHyperlink.Description = $Description
		$visioHyperlink.IsDefaultLink = [bool]$Default
		#endregion

		#region Return the Visio shape object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Move-VisioShape {
	param(
		[string]   $X           = $null,
		[string]   $Y           = $null,
		[string]   $DeltaX      = $null,
		[string]   $DeltaY      = $null,
		[PSObject] $InputObject = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		[double]   $value               = 0.0
		[string]   $units               = $null
		[double]   $xDestination        = 0.0
		[double]   $yDestination        = 0.0
		#endregion

		#region Pre-process the parameters.
		if ($X) {
			$X = $X.Trim()
		}
		if ($Y) {
			$Y = $Y.Trim()
		}
		if ($DeltaX) {
			$DeltaX = $DeltaX.Trim()
		}
		if ($DeltaY) {
			$DeltaY = $DeltaY.Trim()
		}
		if ((-not $X) -and (-not $Y) -and (-not $DeltaX) -and (-not $DeltaY)) {
			Write-Error 'At least one of X, Y, DeltaX, or DeltaY must be provided. The shape will not be moved.'
			return
		}
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		$value               = 0.0
		$units               = $null
		$xDestination        = 0.0
		$yDestination        = 0.0
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio shape cannot be moved because no Visio shape object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Move-VisioShape -X $X -Y $Y -DeltaX $DeltaX -DeltaY $DeltaY -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVShape]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVShape"". Error: ""A valid Visio COM shape object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject.ContainingPage) {
			$visioDocumentWindow.Page = $processObject.ContainingPage
		}
		#endregion

		#region Move the Visio shape.
		$xDestination = $processObject.CellsU('PinX').ResultIU
		$yDestination = $processObject.CellsU('PinY').ResultIU
		if ($X) {
			$value = $X -replace ' ','' -replace '^(-?\d*(\.\d*)?)(.*)','$1'
			$units = $X -replace ' ','' -replace '^(-?\d*(\.\d*)?)(.*)','$3'
			$xDestination = $processObject.Application.ConvertResult($value,$(if ($units) {$units} else {$null}),'')
		}
		if ($DeltaX) {
			$value = $DeltaX -replace ' ','' -replace '^(-?\d*(\.\d*)?)(.*)','$1'
			$units = $DeltaX -replace ' ','' -replace '^(-?\d*(\.\d*)?)(.*)','$3'
			$xDestination += $processObject.Application.ConvertResult($value,$(if ($units) {$units} else {$null}),'')
		}
		if ($Y) {
			$value = $Y -replace ' ','' -replace '^(-?\d*(\.\d*)?)(.*)','$1'
			$units = $Y -replace ' ','' -replace '^(-?\d*(\.\d*)?)(.*)','$3'
			$yDestination = $processObject.Application.ConvertResult($value,$(if ($units) {$units} else {$null}),'')
		}
		if ($DeltaY) {
			$value = $DeltaY -replace ' ','' -replace '^(-?\d*(\.\d*)?)(.*)','$1'
			$units = $DeltaY -replace ' ','' -replace '^(-?\d*(\.\d*)?)(.*)','$3'
			$yDestination += $processObject.Application.ConvertResult($value,$(if ($units) {$units} else {$null}),'')
		}
		$processObject.SetCenter($xDestination,$yDestination)
		#endregion

		#region Return the Visio shape object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Move-VisioShapeToFront {
	param(
		[PSObject] $InputObject = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		#endregion

		#region Return asn error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio shape cannot be moved to the front because no Visio shape object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Move-VisioShapeToFront -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVShape]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVShape"". Error: ""A valid Visio COM shape object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject.ContainingPage) {
			$visioDocumentWindow.Page = $processObject.ContainingPage
		}
		#endregion

		#region Move the Visio shape to the front.
		$processObject.BringToFront()
		#endregion

		#region Return the Visio shape object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Move-VisioShapeToBack {
	param(
		[PSObject] $InputObject = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		#endregion

		#region Return asn error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio shape cannot be moved to the back because no Visio shape object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Move-VisioShapeToBack -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVShape]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVShape"". Error: ""A valid Visio COM shape object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject.ContainingPage) {
			$visioDocumentWindow.Page = $processObject.ContainingPage
		}
		#endregion

		#region Move the Visio shape to the back.
		$processObject.SendToBack()
		#endregion

		#region Return the Visio shape object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Move-VisioShapeForward {
	param(
		[PSObject] $InputObject = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		#endregion

		#region Return asn error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio shape cannot be moved forward because no Visio shape object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Move-VisioShapeForward -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVShape]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVShape"". Error: ""A valid Visio COM shape object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject.ContainingPage) {
			$visioDocumentWindow.Page = $processObject.ContainingPage
		}
		#endregion

		#region Move the Visio shape forward one level.
		$processObject.BringForward()
		#endregion

		#region Return the Visio shape object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Move-VisioShapeBackward {
	param(
		[PSObject] $InputObject = $null,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		#endregion

		#region Return asn error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio shape cannot be moved backward because no Visio shape object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Move-VisioShapeBackward -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVShape]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVShape"". Error: ""A valid Visio COM shape object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($processObject.Document -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject.ContainingPage) {
			$visioDocumentWindow.Page = $processObject.ContainingPage
		}
		#endregion

		#region Move the Visio shape backward one level.
		$processObject.SendBackward()
		#endregion

		#region Return the Visio shape object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

function global:Connect-VisioShape {
	param(
		[PSObject] $ToShape     = $null,
		[PSObject] $Connector   = $null,
		[PSObject] $InputObject = $null,
		[switch]   $Top,
		[switch]   $Bottom,
		[switch]   $Left,
		[switch]   $Right,
		[switch]   $Default,
		[switch]   $SmartLayout = $global:VisioDefaults.SmartLayout,
		[switch]   $PassThru
	)
	begin {
		#region Initialize local variables.
		[UInt16]   $direction           = 0
		[PSObject] $processObject       = $null
		[PSObject] $visioDocumentWindow = $null
		[PSObject] $visioConnector      = $null
		#endregion

		#region Pre-process the parameters.
		if ($Top) {
			$direction = 1
		} elseif ($Bottom) {
			$direction = 2
		} elseif ($Left) {
			$direction = 3
		} elseif ($Right) {
			$direction = 4
		} elseif ($Default) {
			$direction = 0
		}
		#endregion
	}
	process {
		#region Return an error if both parameter and pipeline input are detected.
		if ($InputObject -and $_) {
			Write-Error 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		#endregion

		#region Reset process block variables.
		$processObject       = $(if ($InputObject) {$InputObject} else {$_})
		$visioDocumentWindow = $null
		$visioConnector      = $null
		#endregion

		#region Return an error if there is nothing to process.
		if (-not $processObject) {
			Write-Error 'The Visio shape cannot be connected because no Visio shape object was provided.'
			return
		}
		#endregion

		#region Recurse if the process object is a collection.
		if ($processObject.Count -gt 1) {
			$processObject | Connect-VisioShape -ToShape $ToShape -Connector $Connector -Top:$Top -Bottom:$Bottom -Left:$Left -Right:$Right -Default:$Default -SmartLayout:$SmartLayout -PassThru:$PassThru
		}
		#endregion

		#region Return an error if the process object is not the right type.
		if ($processObject -isnot [Microsoft.Office.Interop.Visio.IVShape]) {
			Write-Error "Cannot convert value ""$processObject"" to type ""IVShape"". Error: ""A valid Visio COM shape object must be provided."""
			return
		}
		#endregion

		#region Activate the Visio document window if necessary.
		if ($visioDocument -ne $processObject.Application.ActiveDocument) {
			$visioDocumentWindow = $processObject.Application.Windows | Where-Object {$_.Document -eq $processObject.Document}
			if (-not $visioDocumentWindow) {
				Write-Error "Cannot activate the Visio document called ""$($processObject.Document.Name)"" because a window associated with that Visio document could not be found."
				return
			}
			$visioDocumentWindow.Activate()
		} else {
			$visioDocumentWindow = $processObject.Application.ActiveWindow
		}
		#endregion

		#region Activate the Visio page if necessary.
		if ($visioDocumentWindow.Page -ne $processObject.ContainingPage) {
			$visioDocumentWindow.Page = $processObject.ContainingPage
		}
		#endregion

		#region Connect the Visio shapes.
		if ($ToShape -isnot [Microsoft.Office.Interop.Visio.IVShape]) {
			$processObject | Connect-VisioShape -ToShape (Select-VisioShape -ShapeId $ToShape) -Connector $Connector -Top:$Top -Bottom:$Bottom -Left:$Left -Right:$Right -Default:$Default -SmartLayout:$SmartLayout -PassThru:$PassThru
			return
		}
		if ([System.Reflection.Assembly]::GetAssembly('Microsoft.Office.Interop.Visio.IVPage').FullName -eq 'Microsoft.Office.Interop.Visio, Version=11.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c') {
			if ($Connector) {
				if ($Connector -isnot [Microsoft.Office.Interop.Visio.IVShape]) {
					$visioConnector = Select-VisioShape -ShapeId $Connector
				} else {
					$visioConnector = $Connector
				}
			} else {
				$visioConnector = $processObject.ContainingPage.Drop($processObject.Application.ConnectorToolDataObject,0,0)
			}
			$visioConnector.CellsU("BeginX").GlueTo($ToShape.CellsU("PinX")) | Out-Null
			$visioConnector.CellsU("EndX").GlueTo($processObject.CellsU("PinX")) | Out-Null
		} else {
			if ($Connector) {
				if ($Connector -isnot [Microsoft.Office.Interop.Visio.IVShape]) {
					$visioConnector = Select-VisioShape -ShapeId $Connector
				} else {
					$visioConnector = $Connector
				}
				$ToShape.AutoConnect($processObject,$Direction,$Connector)
			} else {
				$ToShape.AutoConnect($processObject,$Direction,$processObject.Application.ConnectorToolDataObject)
			}
		}
		#endregion

		#region Center the Visio drawing and refresh the layout
		if ($SmartLayout) {
			$processObject.ContainingPage.Layout()
			$processObject.ContainingPage.CenterDrawing()
		}
		#endregion

		#region Return the Visio shape object if requested.
		if ($PassThru) {
			$processObject
		}
		#endregion
	}
}

#endregion
#region Visio aliases

#region Create an alias for the Visio DSV 'root' function.
if (-not (Get-Alias -Name Visio -ErrorAction SilentlyContinue)) {
	New-Alias -Name Visio -Scope Local -Value Use-Visio -Description 'Starts Visio and allows you to interact with Visio documents using a PowerShell-driven domain-specific vocabulary (DSV).'
}
#endregion

#endregion
#endregion
#region HTML Report Functions

function global:New-HtmlReport {
	param(
		[string]      $Title,
		[string]      $Filename    = "$($env:TEMP)\$(if (Get-Item -Path Function::Get-AdminConsoleName -Erroraction SilentlyContinue) {(Get-AdminConsoleName) -replace '[\s\[\]]',''} else {'PowerShell'})Report_$(Get-Date -Format hhmmss_ddMMyyyy).htm",
		[switch]      $OpenFile,
		[switch]      $OpenFolder,
		[PSObject]    $Content     = $null
	)
	[string]                     $reportContents = $null
	[string]                     $html           = $null
	[string]                     $htmFilePath    = $null
	[System.Diagnostics.Process] $process        = $null

	if ($Content) {
		if ($Content -is [ScriptBlock]) {
			& $Content | ForEach-Object {
				$reportContents += [string]$_
			}
			$reportContents.Trim("`n")
		} else {
			$reportContents = [string]$Content
		}
		$reportContents = $reportContents.Trim()
	}

	$h2background ="#ad1c18"
	$h3background = "#ADADAD"
			
	if (Get-Item -Path Function::Get-AdminConsoleName -Erroraction SilentlyContinue) { 
		if ((Get-AdminConsoleName) -match "EcoShell") {
			$h2background = "#8DC63F"
			$h3background = "#A5A5A5"
		} 
	}
	
	function Get-TableCssSettings {
		param(
			[string] $Display    = 'none',
			[UInt16] $LeftIndent = 16,
			[switch] $Frame
		)
		@"
    display: $Display;
    position: relative;
    color: #000000;
$(if ($Frame) {
	@'
    background-color: #f9f9f9;
    border-left: #b1babf 1px solid;
    border-right: #b1babf 1px solid;
    border-top: #b1babf 1px solid;
    border-bottom: #b1babf 1px solid;
'@
})
    padding-left: ${LeftIndent}px;
    padding-top: 4px;
    padding-bottom: 5px;
    margin-left: 0px;
    margin-right: 0px;
    margin-bottom: 0px;
"@
	}
	function Get-TableTitleCssSettings {
		param(
			[string] $BackgroundColor = '#0061bd'
		)
		@"
    display: block;
    position: relative;
    height: 2em;
    color: #ffffff;
    background-color: $BackgroundColor;
    border-left: #b1babf 1px solid;
    border-right: #b1babf 1px solid;
    border-top: #b1babf 1px solid;
    border-bottom: #b1babf 1px solid;
    padding-left: 5px;
    padding-top: 8px;
    margin-left: 0px;
    margin-right: 0px;
    font-family: Tahoma;
    font-size: 8pt;
    font-weight: bold;
"@
	}
	function Get-SpanCssSettings {
		@"
    display: block;
    position: absolute;
    color: #ffffff;
    top: 8px;
    font-family: Tahoma;
    font-size: 8pt;
    font-weight: bold;
    text-decoration: underline;
"@
	}
	$html = @"
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.org/TR/html4/frameset.dtd">
<html>
<head>
<title>$Title</title>
<meta http-equiv=Content-Type content='text/html; charset=windows-1252'></meta>
<meta name="save" content="history"></meta>
<style type="text/css">
body {
    margin-left: 4pt;
    margin-right: 4pt;
    margin-top: 6pt;
    font-family: Tahoma;
    font-size: 8pt;
    font-weight: normal;
}
h1 {
$(Get-TableTitleCssSettings -BackgroundColor '#0061bd')
}
h2 {
$(Get-TableTitleCssSettings -BackgroundColor $h2background)
}
h3 {
$(Get-TableTitleCssSettings -BackgroundColor $h3background)
}
span.expandableHeaderLink {
$(Get-SpanCssSettings)
}
span.expandableHeaderLinkRightJustified {
$(Get-SpanCssSettings)
    right: 8px;
}
table {
    table-layout: fixed;
    font-size: 100%;
    width: 100%;
    color: #000000;
}
th {
    color: #0061bd;
    padding-top: 2px;
    padding-bottom: 2px;
    vertical-align: top;
    text-align: left;
}
td {
    padding-top: 2px;
    padding-bottom: 2px;
    vertical-align: top;
}
*{margin:0}
div.visibleSection {
$(Get-TableCssSettings -Display 'block' -Frame)
}
div.hiddenSection {
$(Get-TableCssSettings -Display 'none' -Frame)
}
div.visibleSectionNoIndent {
$(Get-TableCssSettings -Display 'block' -LeftIndent 0 -Frame)
}
div.hiddenSectionNoIndent {
$(Get-TableCssSettings -Display 'none' -LeftIndent 0 -Frame)
}
div.visibleSectionNoFrame {
$(Get-TableCssSettings -Display 'block' -LeftIndent 0)
}
div.hiddenSectionNoFrame {
$(Get-TableCssSettings -Display 'none' -LeftIndent 0)
}
div.filler {
    display: block;
    position: relative;
    color: #ffffff;
    background: none transparent scroll repeat 0% 0%;
    border-left: medium none;
    border-right: medium none;
    border-top: medium none;
    border-bottom: medium none;
    padding-top: 4px;
    margin-left: 0px;
    margin-right: 0px;
    margin-bottom: -1px;
    font: 100%/8px Tahoma;
}
div.save {
    behavior: url(#default#savehistory);
}
</style>
<script type="text/javascript">
function toggleVisibility(tableHeader) {
    if (document.getElementById) {
        var triggerLabel = tableHeader.firstChild;
        while ((triggerLabel) && (triggerLabel.innerHTML != 'show') && (triggerLabel.innerHTML != 'hide')) {
            triggerLabel = triggerLabel.nextSibling
        }
        if (triggerLabel) {
            triggerLabel.innerHTML = (triggerLabel.innerHTML == 'hide' ? 'show' : 'hide');
            associatedTable = tableHeader.nextSibling
            while ((associatedTable) && (!(associatedTable.style))) {
                associatedTable = associatedTable.nextSibling
            }
            if (associatedTable) {
                associatedTable.style.display = (triggerLabel.innerHTML == 'hide' ? 'block' : 'none');
            }
        }
    }
}
if (!document.getElementById) {
    document.write('<style type="text/css">\n'+'\tdiv.hiddenSection {\n\t\tdisplay:block;\n\t}\n'+ '</style>');
}
</script>
</head>
<body>
<b><font face="Arial" size="5">$Title</font></b>
<hr size="8" color="#0061bd"></hr>
<font face="Arial" size="1"><b>Generated with $(if (Get-Item -Path Function::Get-AdminConsoleName -Erroraction SilentlyContinue) {Get-AdminConsoleName} else {'PowerShell'})</b></font>
<br />
<font face="Arial" size="1">Report created on $(Get-Date)</font>
<div class="filler"></div>
<div class="filler"></div>
<div class="filler"></div>
<div class="save">
$reportContents
</div>
</body>
</html>
"@
	if (-not $Filename) {
		$Filename = "$($env:TEMP)\$(if (Get-Item -Path Function::Get-AdminConsoleName -Erroraction SilentlyContinue) {(Get-AdminConsoleName) -replace '[\s\[\]]',''} else {'PowerShell'})Report_$(Get-Date -Format hhmmss_ddMMyyyy).htm"
	}
	$html | Out-File -Encoding Unicode -FilePath $Filename
	$htmFilePath = (Get-Item -LiteralPath $Filename -ErrorAction SilentlyContinue).PSPath
	if (-not $htmFilePath) {
		throw "File '$Filename' was not created"
	}
	if ($OpenFile) {
		if (Test-Path -LiteralPath "Registry::HKEY_CLASSES_ROOT\.htm" -ErrorAction SilentlyContinue) {
			Invoke-Item -LiteralPath $htmFilePath
		} else {
			$process = New-Object System.Diagnostics.Process
			$process.StartInfo.Filename = 'notepad.exe'
			$process.StartInfo.Arguments = "`"$($htmFilePath.Replace('Microsoft.PowerShell.Core\FileSystem::',''))`""
			if (-not $process.Start()) { 
				throw 'Unable to launch notepad.exe'
			}
		}
	}
	if ($OpenFolder) {
		$process = New-Object System.Diagnostics.Process
		$process.StartInfo.Filename = 'explorer.exe'
		$process.StartInfo.Arguments = "/select,`"$($htmFilePath.Replace('Microsoft.PowerShell.Core\FileSystem::',''))`""
		if (-not $process.Start()) { 
			throw 'Unable to launch explorer.exe'
		}
	}
	Get-Item -LiteralPath $htmFilePath
}

function global:Add-HtmlReportSeparator {
	@"
<hr />
"@
}

function global:Add-HtmlReportSubtitle {
	param(
		$Subtitle = $null
	)
	@"
<table>
<th><u>$Subtitle</u></th>
</table>
"@
}

function global:Add-HtmlReportSection {
	param(
		[string]   $Title         = $null,
		[UInt16]   $Level         = 1,
		[switch]   $NoIndent,
		[switch]   $NoFrame,
		[switch]   $Collapsible,
		[switch]   $Expanded,
		[PSObject] $Content       = $null
	)
	[UInt16] $headingLevel   = $(if (@(1,2,3) -notcontains $Level) {3} else {$Level})
	[string] $sectionClass   = 'visibleSection'
	[string] $reportContents = $null

	if ($Title) {
		if ($Collapsible) {
			if (-not $Expanded) {
				$sectionClass = 'hiddenSection'
			}
			@"
<h$headingLevel style="cursor: pointer" onclick="toggleVisibility(this)">
<span class="expandableHeaderLink">$Title</span>
<span class="expandableHeaderLinkRightJustified">$(if ($Expanded) {'hide'} else {'show'})</span>
</h$headingLevel>
"@
		} else {
			@"
<h$headingLevel>
$Title
</h$headingLevel>
"@
		}
	}
	if ($Content) {
		if ($Content -is [ScriptBlock]) {
			& $Content | ForEach-Object {
				$reportContents += [string]$_
			}
			$reportContents = $reportContents.Trim("`n")
		} else {
			$reportContents = [string]$Content
		}
		$reportContents = $reportContents.Trim()
		if ($NoFrame) {
			@"
<div class="${sectionClass}NoFrame">
$reportContents
</div>
"@
		} elseif ($NoIndent) {
			@"
<div class="${sectionClass}NoIndent">
$reportContents
</div>
"@
		} else {
			@"
<div class="$sectionClass">
$reportContents
</div>
"@
		}
	}
	@"
<div class="filler"></div>
"@		
}

function global:ConvertTo-HtmlReportTable {
	param(
		[PSObject] $InputObject       = $null,
		[String[]] $Property          = $null,
		[String[]] $GroupBy           = $null,
		[string]   $Title             = $null,
		[UInt16]   $Level             = 1,
		[string]   $Indent            = 'AllLevels',
		[switch]   $PrefixGroupNames,
		[switch]   $Collapsible,
		[switch]   $Expanded,
		[PSObject] $AdditionalContent = $null
	)
	begin {
		[PSObject] $processObject    = $null
		[array]    $objectCollection = @()
		[String[]] $innerHtml        = @()
		[string]   $groupNamePrefix  = $null
		[string]   $groupTitle       = $null
		[string]   $html             = $null

		if (@('None','OneLevel','AllLevels') -notcontains $Indent) {
			throw "Cannot bind parameter ""Indent"". Specify one of the following values and try again. The possible values are ""None"", ""OneLevel"", and ""AllLevels""."
			return
		}
	}
	process {
		if ($InputObject -and $_) {
			throw 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		if ($processObject = $(if ($InputObject) {$InputObject} else {$_})) {
			$objectCollection += $processObject
		}
	}
	end {
		if ($GroupBy) {
			$innerHtml = $objectCollection | Group-Object -Property $GroupBy[0] | ForEach-Object {
				$groupNamePrefix = $null
				if ($PrefixGroupNames) {
					$groupNamePrefix = "$($GroupBy[0]): "
				}
				$groupTitle = $(if ($_.Name) {"$groupNamePrefix$($_.Name)"} else {"$groupNamePrefix<i>Value not set</i>"})
				$_.Group | ConvertTo-HtmlReportTable -Property $Property -GroupBy $(if ($GroupBy.Count -gt 1) {$GroupBy[1..$($GroupBy.Count - 1)]} else {$null}) -Title $groupTitle -Level ($Level + 1) -Indent $(if ($Indent -eq 'OneLevel') {'None'} else {$Indent}) -PrefixGroupNames:$PrefixGroupNames -Collapsible -Expanded:$Expanded
			}
			if (-not $innerHtml) {
				$innerHtml = @()
			}
			$html = [string]::Join("`n",$innerHtml)
		} else {
			if ($Property) {
				$innerHtml = $objectCollection | ConvertTo-Html -Property $Property
			} else {
				$innerHtml = $objectCollection | ConvertTo-Html
			}
			if (-not $innerHtml) {
				$innerHtml = @()
			}
			$html = [string]::Join("`n",$innerHtml) -replace '(?s).*(<table>.*</table>).*','$1' -replace "<col>`n","<col></col>`n"
		}
		if ($AdditionalContent) {
			if ($AdditionalContent -is [ScriptBlock]) {
				$html += & $AdditionalContent
			} else {
				$html += [string]$AdditionalContent
			}
		}
		Add-HtmlReportSection -Title $Title -Level $Level -NoIndent:$($Indent -eq 'None') -Collapsible:$Collapsible -Expanded:$Expanded -Content $html
	}
}

function global:ConvertTo-HtmlReportList {
	param(
		[PSObject] $InputObject       = $null,
		[String[]] $Property          = $null,
		[String[]] $GroupBy           = $null,
		[string]   $Title             = $null,
		[UInt16]   $Level             = 1,
		[string]   $Indent            = 'AllLevels',
		[switch]   $PrefixGroupNames,
		[switch]   $Collapsible,
		[switch]   $Expanded,
		[PSObject] $AdditionalContent = $null
	)
	begin {
		[PSObject] $processObject    = $null
		[array]    $objectCollection = @()
		[String[]] $innerHtml        = @()
		[string]   $groupNamePrefix  = $null
		[string]   $groupTitle       = $null
		[string]   $html             = $null
		[UInt32]   $index            = 0
		[string]   $itemHtml         = $null

		if (@('None','OneLevel','AllLevels') -notcontains $Indent) {
			throw "Cannot bind parameter ""Indent"". Specify one of the following values and try again. The possible values are ""None"", ""OneLevel"", and ""AllLevels""."
			return
		}
	}
	process {
		if ($InputObject -and $_) {
			throw 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		if ($processObject = $(if ($InputObject) {$InputObject} else {$_})) {
			$objectCollection += $processObject
		}
	}
	end {
		if ($GroupBy) {
			$innerHtml = $objectCollection | Group-Object -Property $GroupBy[0] | ForEach-Object {
				$groupNamePrefix = $null
				if ($PrefixGroupNames) {
					$groupNamePrefix = "$($GroupBy[0]): "
				}
				$groupTitle = $(if ($_.Name) {"$groupNamePrefix$($_.Name)"} else {"$groupNamePrefix<i>Value not set</i>"})
				$_.Group | ConvertTo-HtmlReportList -Property $Property -GroupBy $(if ($GroupBy.Count -gt 1) {$GroupBy[1..$($GroupBy.Count - 1)]} else {$null}) -Title $groupTitle -Level ($Level + 1) -Indent $(if ($Indent -eq 'OneLevel') {'None'} else {$Indent}) -PrefixGroupNames:$PrefixGroupNames -Collapsible -Expanded:$Expanded
			}
			if (-not $innerHtml) {
				$innerHtml = @()
			}
			$html = [string]::Join("`n",$innerHtml)
		} else {
			$innerHtml = $(for ($index = 0; $index -lt $objectCollection.Count; $index++) {
				$itemHtml = $(foreach ($item in $(if ($Property) {$Property} else {$objectCollection[$index].PSObject.Properties | Where-Object {$_.IsGettable} | ForEach-Object {$_.Name}})) {
					@"
<tr>
<th width='25%'><b>${item}:</b></th>
<td width='75%'>$([string]($objectCollection[$index].$item))</td>
</tr>
"@
				})
				if ($index -eq ($objectCollection.Count - 1)) {
					$itemHtml
				} else {
					@"
$itemHtml
</table>
$(Add-HtmlReportSeparator)
<table>
"@
				}
			})
			if (-not $innerHtml) {
				$innerHtml = @()
			}
			$html = @"
<table>
$([string]::Join("`n",$innerHtml))
</table>
"@
		}
		if ($AdditionalContent) {
			if ($AdditionalContent -is [ScriptBlock]) {
				$html += & $AdditionalContent
			} else {
				$html += [string]$AdditionalContent
			}
		}
		Add-HtmlReportSection -Title $Title -Level $Level -NoFrame:$($Indent -eq 'None') -Collapsible:$Collapsible -Expanded:$Expanded -Content $html
	}
}

#endregion
#region Summary Generator Functions

function global:Get-VMSummary {
	param(
		$InputObject = $null
	)
	begin {
	}
	process {
		if ($InputObject -and $_) {
			throw 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		$processObject = $(if ($InputObject) {$InputObject} else {$_})
		if ($processObject) {
			$processObject | Select-Object -Property Name,Description,Host,PowerState,MemoryMB,NumCpu | Sort-Object -Property Name
		}
	}
	end {
	}
}

function global:Get-VMHostSummary {
	param(
		$InputObject = $null
	)
	begin {
	}
	process {
		if ($InputObject -and $_) {
			throw 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		$processObject = $(if ($InputObject) {$InputObject} else {$_})
		if ($processObject) {	
			$processObject | Get-View | Select-Object -Property Name,@{Name="State";Expression={$_.Summary.Runtime.ConnectionState}},@{Name="Num CPU";Expression={$_.Summary.Hardware.NumCPuPkgs}},@{Name="CPU Cores";Expression={$_.Summary.Hardware.NumCPuCores}},@{Name="Memory";Expression={[math]::truncate($_.Hardware.MemorySize / 1MB)}},@{Name="Num NICs";Expression={$_.Summary.Hardware.NumNics}},@{N="Num HBAs";E={$_.Summary.Hardware.NumHBAs}} | Sort-Object -Property Name
		}
	}
	end {
	}
}

function global:Get-VIEventSummary {
	param(
		$InputObject = $null
	)
	begin {
	}
	process {
		if ($InputObject -and $_) {
			throw 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		$processObject = $(if ($InputObject) {$InputObject} else {$_})
		if ($processObject) {	
			$processObject | Get-VIEvent | Where-Object {$_.CreatedTime -gt ((Get-Date).AddDays(-7))} | Select-Object -Property @{Name="Date";Expression={$_.CreatedTime}},@{Name="User Name";Expression={$_.UserName}},@{Name="Event";Expression={$_.FullFormattedMessage}}
		}
	}
	end {
	}
}

function global:Get-DatastoreSummary {
	param(
		$InputObject = $null
	)
	begin {
	}
	process {
		if ($InputObject -and $_) {
			throw 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		$processObject = $(if ($InputObject) {$InputObject} else {$_})
		if ($processObject) {
			$processObject | Select-Object -Property Name,Type,CapacityMB,FreeSpaceMB,@{Name="Free Space %";Expression={[math]::Round(((100 * ($_.FreeSpaceMB)) / ($_.CapacityMB)),0)}} | Sort-Object -Property Name
		}
	}
	end {
	}
}

function global:Get-VMDiskSummary {
	param(
		$InputObject = $null
	)
	begin {
	}
	process {
		if ($InputObject -and $_) {
			throw 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		$processObject = $(if ($InputObject) {$InputObject} else {$_})
		if ($processObject) {
			$processObject | Select-Object -Property DiskPath,@{Name="Capacity(MB)";Expression={[math]::truncate($_.Capacity / 1MB)}},@{Name="Free Space(MB)";Expression={[math]::truncate($_.FreeSpace / 1MB)}},@{Name="Free Space %";Expression={[math]::Round(((100 * ($_.FreeSpace)) / ($_.Capacity)),0)}}
		}
	}
	end {
	}
}

function global:Get-SnapshotSummary {
	param(
		$InputObject = $null
	)
	begin {
	}
	process {
		if ($InputObject -and $_) {
			throw 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		$processObject = $(if ($InputObject) {$InputObject} else {$_})
		if ($processObject) {
			$processObject | Select-Object -Property VM,PowerState,Name,Description,Created
		}
	}
	end {
	}
}

#endregion
#region VReport Functions

function global:Out-VReport {
	param(
		[PSObject] $InputObject = $null
	)
	begin {
		[array] $objectCollection = @()
	}
	process {
		if ($InputObject -and $_) {
			throw 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		$processObject = $(if ($InputObject) {$InputObject} else {$_})
		if ($processObject) {
			$objectCollection += $processObject
		}
	}
	end {
		switch ($objectCollection[0]) {
			{$_.PSObject.TypeNames -contains 'ManagedVMwareHost'} {
				New-HtmlReport -Title 'VirtualCenter Report' -OpenFile -Content {
					Add-HtmlReportSection -Title 'VirtualCenter' -Level 1
					Write-Progress -Activity 'Gathering all VirtualCenter information' -Status 'Please wait...' -PercentComplete 100
					$objectCollection = @($objectCollection | Where-Object {$_.Connected -and (Test-VMwareManagementServer -ManagedHost $_)})
					for ($index = 0; $index -lt $objectCollection.Count; $index++) {
						$virtualCenter = $objectCollection[$index]
						$managedHost = $_.Name
						Write-Progress -Activity 'Processing VirtualCenter information' -Status "$($virtualCenter.Name) ($($index + 1) of $($objectCollection.Count))" -PercentComplete (100 * ($index + 1) / $objectCollection.Count)
						$serviceInstance = Get-View ServiceInstance -Server $managedHost
						$licenseManager = Get-View $serviceInstance.Content.LicenseManager -Server $managedHost
						$resourcePools = @(Get-ResourcePool -Server $managedHost | Where-Object {$view = $_ | Get-View; $view.Parent.Type -eq 'ResourcePool'})
						$datacenters = @(Get-Datacenter -Server $managedHost)
						$clusters = @(Get-Cluster -Server $managedHost)
						$vmhosts = @(Get-VMHost -Server $managedHost)
						$vms = @(Get-VM -Server $managedHost)
						$datastores = @(VMware.VimAutomation.Core\Get-Datastore -Server $managedHost)
						$virtualCenterSummary = New-Object PSObject `
							| Add-Member -MemberType NoteProperty -Name 'VI Server Name' -Value $virtualCenter.Name -PassThru `
							| Add-Member -MemberType NoteProperty -Name 'VI Server Version' -Value $serviceInstance.Content.About.Version -PassThru `
							| Add-Member -MemberType NoteProperty -Name 'License Server' -Value $licenseManager.Source.LicenseServer -PassThru `
							| Add-Member -MemberType NoteProperty -Name 'Number of Resource Pools' -Value $resourcePools.Count -PassThru `
							| Add-Member -MemberType NoteProperty -Name 'Number of Datacenters' -Value $datacenters.Count -PassThru `
							| Add-Member -MemberType NoteProperty -Name 'Number of Clusters' -Value $clusters.Count -PassThru `
							| Add-Member -MemberType NoteProperty -Name 'Number of Hosts' -Value $vmhosts.Count -PassThru `
							| Add-Member -MemberType NoteProperty -Name 'Number of Virtual Machines' -Value $vms.Count -PassThru `
							| Add-Member -MemberType NoteProperty -Name 'Number of Datastores' -Value $datastores.Count -PassThru
						$virtualCenterSummary | ConvertTo-HtmlReportList -Title $virtualCenter.Name -Level 2 -Collapsible -Expanded -AdditionalContent {
							if ($vmhosts) {
								$vmhosts | Get-VMHostSummary | ConvertTo-HtmlReportTable -Title 'Hosts' -Level 3 -Collapsible -Expanded
							}
							if ($vms) {
								$vms | Get-VMSummary | ConvertTo-HtmlReportTable -Title 'Virtual Machines' -Level 3 -Collapsible -Expanded
							}
							if ($datastores) {
								$datastores | Get-DatastoreSummary | ConvertTo-HtmlReportTable -Title 'Datastores' -Level 3 -Collapsible -Expanded
							}
						}
					}
				}
				break
			}
			{$_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.ResourcePoolImpl]} {
				New-HtmlReport -Title 'Resource Pool Report' -OpenFile -Content {
					Add-HtmlReportSection -Title 'Resource Pools' -Level 1
					Write-Progress -Activity 'Gathering all resource pool information' -Status 'Please wait...' -PercentComplete 100
					for ($index = 0; $index -lt $objectCollection.Count; $index++) {
						$resourcePool = $objectCollection[$index]
						$resourcePoolView = $_ | Get-View
						$managedHost = $resourcePool.Host
						Write-Progress -Activity 'Processing resource pool information' -Status "$($resourcePool.Name) ($($index + 1) of $($objectCollection.Count))" -PercentComplete (100 * ($index + 1) / $objectCollection.Count)
						$vms = @($resourcePool | Get-VM)
						$childResourcePools = @($resourcePool | Get-ResourcePool | Where-Object {($_ | Get-View).Parent.Type -eq 'Resource'})
						$resourcePoolSummary = $resourcePool | Select-Object -Property Name,@{Name='Number of Child Resource Pools';Expression={$childResourcePools.Count}},@{Name='Number of Virtual Machines';Expression={$vms.Count}}
						$resourcePoolCPUSummary = $resourcePool | Select-Object -Property @{Name='Shares';Expression={"$($resourcePool.CpuSharesLevel) ($($resourcePool.NumCpuShares))"}},@{Name='Reservation';Expression={"$($resourcePool.CpuReservationMhz) MHz"}},@{Name='Type';Expression={if ($resourcePool.CpuExpandableReservation) {'Expandable'} else {'Fixed'}}},@{Name='Limit';Expression={if ($resourcePool.CpuLimitMHz -eq -1) {'Unlimited'} else {$resourcePool.CpuLimitMHz}}},@{Name='Unreserved';Expression={$resourcePool.Runtime.Cpu.UnreservedForPool}}
						$resourcePoolMemorySummary = $resourcePool | Select-Object -Property @{Name='Shares';Expression={"$($resourcePool.MemSharesLevel) ($($resourcePool.NumMemShares))"}},@{Name='Reservation';Expression={"$($resourcePool.MemReservationMB) MB"}},@{Name='Type';Expression={if ($resourcePool.MemLimitMB -eq -1) {'Unlimited'} else {$resourcePool.MemLimitMB}}},@{Name='Unreserved';Expression={$resourcePoolView.Runtime.Memory.UnreservedForPool}}
						$resourcePoolResourceSummary = $resourcePoolView | Select-Object -Property @{Name='CPU Usage';Expression={$_.Runtime.Cpu.OverallUsage}},@{Name='Memory Usage';Expression={"$($_.Runtime.Memory.OverallUsage / 1MB) MB"}}
						Add-HtmlReportSection -Title $resourcePool.Name -Level 2 -Collapsible -Expanded -Content {
							$resourcePoolSummary | ConvertTo-HtmlReportList -Indent 'None'
							if ($resourcePoolCPUSummary) {
								Add-HtmlReportSeparator
								Add-HtmlReportSubtitle -Subtitle 'CPU'
								$resourcePoolCPUSummary | ConvertTo-HtmlReportList -Indent 'None'
							}
							if ($resourcePoolMemorySummary) {
								Add-HtmlReportSeparator
								Add-HtmlReportSubtitle -Subtitle 'Memory'
								$resourcePoolMemorySummary | ConvertTo-HtmlReportList -Indent 'None'
							}
							if ($resourcePoolResourceSummary) {
								Add-HtmlReportSeparator
								Add-HtmlReportSubtitle -Subtitle 'Resources'
								$resourcePoolResourceSummary | ConvertTo-HtmlReportList -Indent 'None'
							}
							if ($vms) {
								$vms | Get-VMSummary | ConvertTo-HtmlReportTable -Title 'Virtual Machines' -Level 3 -Collapsible -Expanded
							}
						}
					}
				}
				break
			}
			{$_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.DatacenterImpl]} {
				New-HtmlReport -Title 'Datacenter Report' -OpenFile -Content {
					Add-HtmlReportSection -Title 'Datacenters' -Level 1
					Write-Progress -Activity 'Gathering all datacenter information' -Status 'Please wait...' -PercentComplete 100
					for ($index = 0; $index -lt $objectCollection.Count; $index++) {
						$datacenter = $objectCollection[$index]
						Write-Progress -Activity 'Processing datacenter information' -Status "$($datacenter.Name) ($($index + 1) of $($objectCollection.Count))" -PercentComplete (100 * ($index + 1) / $objectCollection.Count)
						$resourcePools = @($datacenter | Get-ResourcePool | Where-Object {$view = $_ | Get-View; $view.Parent.Type -eq 'ResourcePool'})
						$clusters = @($datacenter | Get-Cluster)
						$vmhosts = @($datacenter | Get-VMHost)
						$vms = @($datacenter | Get-VM)
						$datastores = @($datacenter | Get-Datastore)
						$datastoreSummary = New-Object PSObject `
							| Add-Member -MemberType NoteProperty -Name Name -Value $datacenter.Name -PassThru `
							| Add-Member -MemberType NoteProperty -Name 'Number of Resource Pools' -Value $resourcePools.Count -PassThru `
							| Add-Member -MemberType NoteProperty -Name 'Number of Clusters' -Value $clusters.Count -PassThru `
							| Add-Member -MemberType NoteProperty -Name 'Number of Hosts' -Value $vmhosts.Count -PassThru `
							| Add-Member -MemberType NoteProperty -Name 'Number of Virtual Machines' -Value $vms.Count -PassThru `
							| Add-Member -MemberType NoteProperty -Name 'Number of Datastores' -Value $datastores.Count -PassThru
						$datastoreSummary | ConvertTo-HtmlReportList -Title $datacenter.Name -Level 2 -Collapsible -Expanded -AdditionalContent {
							if ($vmhosts) {
								$vmhosts | Get-VMHostSummary | ConvertTo-HtmlReportTable -Title 'Hosts' -Level 3 -Collapsible -Expanded
							}
							if ($vms) {
								$vms | Get-VMSummary | ConvertTo-HtmlReportTable -Title 'Virtual Machines' -Level 3 -Collapsible -Expanded
							}
							if ($datastores) {
								$datastores | Get-DatastoreSummary | ConvertTo-HtmlReportTable -Title 'Datastores' -Level 3 -Collapsible -Expanded
							}
						}
					}
				}
				break
			}
			{$_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.ClusterImpl]} {
				New-HtmlReport -Title 'Cluster Report' -OpenFile -Content {
					Add-HtmlReportSection -Title 'Clusters' -Level 1
					Write-Progress -Activity 'Gathering all cluster information' -Status 'Please wait...' -PercentComplete 100
					for ($index = 0; $index -lt $objectCollection.Count; $index++) {
						$cluster = $objectCollection[$index]
						Write-Progress -Activity 'Processing cluster information' -Status "$($cluster.Name) ($($index + 1) of $($objectCollection.Count))" -PercentComplete (100 * ($index + 1) / $objectCollection.Count)
						$clusterView = $cluster | Get-View
						$vmhosts = @($cluster | Get-VMHost)
						$vms = @($cluster | Get-VM)
						$clusterSummary = $clusterView `
							| Select-Object -Property Name,@{Name='VMware DRS Enabled';Expression={$_.Configuration.DrsConfig.Enabled}},@{Name='VMware HA Enabled';Expression={$_.Configuration.DasConfig.Enabled}}
						$clusterResourceSummary = $clusterView `
							| Select-Object -Property @{Name='Total CPU Resources';Expression={"$($_.Summary.TotalCpu / 1024) Ghz"}},@{Name='Total Memory Resources';Expression={"$([Math]::Round(($_.Summary.TotalMemory / 1GB))) GB"}}
						$clusterHostSummary = $clusterView `
							| Select-Object -Property @{Name='Number of Hosts';Expression={$_.Host.Count}},@{Name='Total Migrations';Expression={$_.Summary.NumVmotions}}
						$clusterDasConfigSummary = $clusterView `
							| Select-Object -Property @{Name='Admission Control';Expression={if ($_.Configuration.DasConfig.AdmissionControlEnabled) {'Do not allow constraint violations'} else {'Allow constraint violations'}}},@{Name='Current Failover Capacity';Expression={"$($_.Summary.CurrentFailoverLevel) Hosts"}},@{Name='Configured Failover Capacity';Expression={"$($_.Configuration.DasConfig.FailoverLevel) Hosts"}}
						$clusterDrsConfigSummary = $clusterView `
							| Select-Object -Property @{Name='Migration Automation Level';Expression={switch ($_.Configuration.DrsConfig.DefaultVmBehavior) {'fullyAutomated' {'Fully automated'; break} 'partiallyAutomated' {'Partially automated'; break} 'manual' {'Manual'; break}}}},@{Name='Power Management';Expression={$_.ConfigurationEx.DpmConfigInfo.Enabled}},@{Name='DRS Recommendations';Expression={$_.DrsRecommendation}},@{Name='Migration Threshold';Expression={"Apply recommendations with $($_.Configuration.DrsConfig.VmotionRate) or more stars."}}
						Add-HtmlReportSection -Title $cluster.Name -Level 2 -Collapsible -Expanded -Content {
							$clusterSummary | ConvertTo-HtmlReportList -Indent 'None'
							Add-HtmlReportSeparator
							$clusterResourceSummary | ConvertTo-HtmlReportList -Indent 'None'
							Add-HtmlReportSeparator
							$clusterHostSummary | ConvertTo-HtmlReportList -Indent 'None'
							if ($clusterView.Configuration.DasConfig.Enabled) {
								$clusterDasConfigSummary | ConvertTo-HtmlReportList -Title 'VMware HA' -Level 3 -Collapsible -Expanded
							}
							if ($clusterView.Configuration.DrsConfig.Enabled) {
								$clusterDrsConfigSummary | ConvertTo-HtmlReportList -Title 'VMware DRS' -Level 3 -Collapsible -Expanded
							}
							if ($vmhosts) {
								$vmhosts | Get-VMHostSummary | ConvertTo-HtmlReportTable -Title 'Hosts' -Level 3 -Collapsible -Expanded
							}
							if ($vms) {
								$vms | Get-VMSummary | ConvertTo-HtmlReportTable -Title 'Virtual Machines' -Level 3 -Collapsible -Expanded
							}
						}
					}
				}
				break
			}
			{$_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.VMHostImpl]} {
				New-HtmlReport -Title 'Host Report' -OpenFile -Content {
					Add-HtmlReportSection -Title 'Hosts' -Level 1
					Write-Progress -Activity 'Gathering all host information' -Status 'Please wait...' -PercentComplete 100
					for ($index = 0; $index -lt $objectCollection.Count; $index++) {
						$vmhost = $objectCollection[$index]
						$managedHost = $vmhost.Host						
						Write-Progress -Activity 'Processing host information' -Status "$($vmhost.Name) ($($index + 1) of $($objectCollection.Count))" -PercentComplete (100 * ($index + 1) / $objectCollection.Count)
						$vmhostView = $vmhost | Get-View
						$vmhostSummary = $vmhostView | Select-Object -Property Name,@{Name='Boot Time';Expression={$_.Summary.Runtime.BootTime}},@{Name='Version';Expression={$_.Config.Product.FullName}},@{Name='Manufacturer';Expression={$_.Hardware.SystemInfo.Vendor}},@{Name='Model';Expression={$_.Hardware.SystemInfo.Model}},@{Name='Memory (MB)';Expression={[Math]::Truncate($_.Hardware.MemorySize / 1MB)}},@{Name='Processor Type';Expression={$_.Hardware.CpuPkg[0].Description}},@{Name='Hyperthreading';Expression={$_.Config.Hyperthread.Active}},@{Name='VMotion Enabled';Expression={$_.Summary.Config.VMotionEnabled}},@{Name='Time Zone';Expression={$_.Config.DateTimeInfo.TimeZone.Name}},@{Name='NTP Servers';Expression={$_.Config.DateTimeInfo.NtpConfig.Server}},@{Name='NTP Client Status';Expression={($_.Config.Service.Service | Where-Object {$_.Key -eq 'ntpd'}).Running}},@{Name='Number of Processors';Expression={$_.Hardware.CpuInfo.NumCpuPackages}},@{Name='Number of HBAs';Expression={$_.Summary.Hardware.NumHBAs}},@{Name='Number of NICs';Expression={$_.Summary.Hardware.NumNics}},@{Name='Number of Virtual Machines';Expression={$_.Vm.Count}}
						$vms = @($vmhost | Get-VM)
						$datastores = @($vmhost | Get-Datastore)
						$portGroups = @($vmhost | Get-VirtualPortGroup | Select-Object -Property Name,VirtualSwitchName,VlanId)
						$virtualSwitches = @()
						$networkSystem = Get-View $vmhostView.ConfigManager.NetworkSystem -Server $managedHost
						foreach ($physicalNic in $networkSystem.NetworkConfig.Pnic) {
							$physicalNicInfo = $networkSystem.QueryNetworkHint($physicalNic.Device)
							foreach ($item in $physicalNicInfo) {
								$virtualSwitch = New-Object PSObject `
									| Add-Member -MemberType NoteProperty -Name vSwitch -Value ($vmhost | Get-VirtualSwitch | Where-Object {$_.Nic -eq $item.Device}) -PassThru `
									| Add-Member -MemberType ScriptProperty -Name vSwitchPorts -Value {$this.vSwitch.NumPorts} -PassThru `
									| Add-Member -MemberType ScriptProperty -Name vSwitchPrtInUse -Value {$this.vSwitch.NumPorts - $this.vSwitch.NumPortsAvailable} -PassThru `
									| Add-Member -MemberType NoteProperty -Name PNic -Value $item.Device -PassThru `
									| Add-Member -MemberType NoteProperty -Name Speed -Value 0 -PassThru `
									| Add-Member -MemberType NoteProperty -Name MAC -Value $null -PassThru
								for ($physicalNicIndex = 0; $physicalNicIndex -lt $vmhostView.Config.Network.Pnic.Count; $physicalNicIndex++) {
									if ($item.Device -eq $vmhostView.Config.Network.Pnic[$physicalNicIndex].Device) {
										$virtualSwitch.Speed = $vmhostView.Config.Network.Pnic[$physicalNicIndex].LinkSpeed.SpeedMb
										$virtualSwitch.MAC = $vmhostView.Config.Network.Pnic[$physicalNicIndex].Mac
										break
									}
								}
								$virtualSwitches += $virtualSwitch
							}
						}
						$vmhostSummary | ConvertTo-HtmlReportList -Title $vmhost.Name -Level 2 -Collapsible -Expanded -AdditionalContent {
							if ($vms) {
								$vms | Get-VMSummary | ConvertTo-HtmlReportTable -Title 'Hosted Virtual Machines' -Level 3 -Collapsible -Expanded
							}
							if ($datastores) {
								$datastores | Get-DatastoreSummary | ConvertTo-HtmlReportTable -Title 'Datastore Details' -Level 3 -Collapsible -Expanded
							}
							if ($virtualSwitches) {
								$virtualSwitches | ConvertTo-HtmlReportTable -Title 'Virtual Switch Details' -Level 3 -Collapsible -Expanded
							}
							if ($portGroups) {
								$portGroups | ConvertTo-HtmlReportTable -Title 'Port Group Details' -Level 3 -Collapsible -Expanded
							}
						}
					}
				}
				break
			}
			{$_ -is [VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl]} {
				New-HtmlReport -Title 'Virtual Machine Report' -OpenFile -Content {
					Add-HtmlReportSection -Title 'Virtual Machines' -Level 1
					Write-Progress -Activity 'Gathering all virtual machine information' -Status 'Please wait...' -PercentComplete 100
					for ($index = 0; $index -lt $objectCollection.Count; $index++) {
						$vm = $objectCollection[$index]
						$managedHost = $vm.ManagedHost
						Write-Progress -Activity 'Processing virtual machine information' -Status "$($vm.Name) ($($index + 1) of $($objectCollection.Count))" -PercentComplete (100 * ($index + 1) / $objectCollection.Count)
						$vmView = $vm | Get-View
						$vmSummary = $vmView | Select-Object -Property Name,@{Name='Power State';Expression={$_.Runtime.PowerState}},@{Name='DNS Name';Expression={$_.Guest.HostName}},@{Name='VMX File Path';Expression={$_.Config.files.VmPathName}},@{Name='Parent Host';Expression={$_.Guest.HostName}},@{Name='Operating System';Expression={$_.Summary.Guest.GuestFullName}},@{Name='IP Address';Expression={$_.Guest.IPAddress}},@{Name='Number of CPUs';Expression={$_.Summary.Config.NumCpu}},@{Name='Memory';Expression={$_.Summary.Config.MemorySizeMB}},@{Name='Current CPU Usage';Expression={$_.Summary.QuickStats.OverallCpuUsage}},@{Name='Current Memory Usage';Expression={$_.Summary.QuickStats.GuestMemoryUsage}},@{Name='VMTools Status';Expression={$_.Guest.ToolsStatus}},@{Name='VMTools Version';Expression={$_.Guest.ToolsVersion}},@{Name='CPU Reservation';Expression={$_.Summary.Config.CpuReservation}},@{Name='Memory Reservation';Expression={$_.Summary.Config.MemoryReservation}}
						$recentEvents = @($vm | Get-VIEventSummary)
						$vmSummary | ConvertTo-HtmlReportList -Title $vm.Name -Level 2 -Collapsible -Expanded -AdditionalContent {
							if ($vm.HardDisks) {
								$vm.HardDisks | Select-Object -Property Name,Filename,CapacityKB,Persistence | ConvertTo-HtmlReportTable -Title 'VMDK Details' -Level 3 -Collapsible -Expanded
							}
							if ($vmView.Guest.ToolsStatus -eq 'toolsOk') {
								$vmView.Guest.Disk | Get-VMDiskSummary | ConvertTo-HtmlReportTable -Title 'Virtual Machine Disk Details' -Level 3 -Collapsible -Expanded
							}
							if ($vm.NetworkAdapters) {
								$vm.NetworkAdapters | Select-Object -Property Name,NetworkName,MacAddress | ConvertTo-HtmlReportTable -Title 'Network Adapter Details' -Level 3 -Collapsible -Expanded
							}
							if ($recentEvents) {
								$recentEvents | ConvertTo-HtmlReportTable -Title 'Events (Last 7 days)' -Level 3 -Collapsible -Expanded
							}
						}
					}
				}
				break
			}
			{$_ -is [VMware.VimAutomation.ViCore.Impl.V1.VM.SnapshotImpl]} {
				New-HtmlReport -Title 'Snapshot Report' -OpenFile -Content {
					Add-HtmlReportSection -Title 'Snapshots' -Level 1
					Write-Progress -Activity 'Gathering all snapshot information' -Status 'Please wait...' -PercentComplete 100
					$vmGroups = @($objectCollection | Sort-Object -Property VM,Created | Group-Object -Property VM)
					for ($index = 0; $index -lt $vmGroups.Count; $index++) {
						$vmName = $vmGroups[$index].Name
						Write-Progress -Activity 'Processing snapshot information' -Status "$vmName ($($index + 1) of $($vmGroups.Count))" -PercentComplete (100 * ($index + 1) / $vmGroups.Count)
						$vmGroups[$index].Group | Get-SnapshotSummary | ConvertTo-HtmlReportTable -Title "$vmName ($($vmGroups[$index].Group.Count) snapshot$(if ($vmGroups[$index].Group.Count -gt 1) {'s'}))" -Level 2 -Collapsible -Expanded
					}
				}
			}
		}
	}
}

function global:Out-CapacityReport {
	param(
		[PSObject] $InputObject = $null
	)
	begin {
		[array] $objectCollection = @()
	}
	process {
		if ($InputObject -and $_) {
			throw 'The input object cannot be bound to any parameters for the command either because the command does not take pipeline input or the input and its properties do not match any of the parameters that take pipeline input.'
			return
		}
		$processObject = $(if ($InputObject) {$InputObject} else {$_})
		if ($processObject) {
			$objectCollection += $processObject
		}
	}
	end {
		New-HtmlReport -Title 'Capacity Report' -OpenFile -Content {
			Add-HtmlReportSection -Title 'Virtualization Capacity Report for all installations.' -Level 1
			Write-Progress -Activity 'Gathering capacity information' -Status 'Please wait...' -PercentComplete 100
			$objectCollection = @($objectCollection | Where-Object {$_.Connected -and (Test-VMwareManagementServer -ManagedHost $_)})
			for ($index = 0; $index -lt $objectCollection.Count; $index++) {
				$virtualCenter = $objectCollection[$index]
				$managedHost = $_.Name
				Write-Progress -Activity 'Processing VirtualCenter information' -Status "$($virtualCenter.Name) ($($index + 1) of $($objectCollection.Count))" -PercentComplete (100 * ($index + 1) / $objectCollection.Count)
				$table = @"
				<table class=MsoNormalTable border=1 cellspacing=0 cellpadding=0 width=900
 style='width:675.0pt;border:solid black 1.0pt'>
 <tr>
  <td colspan=5 style='border:none;background:#CCCCCC;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal align=center style='text-align:center'><b><span
  style='font-family:"Verdana","sans-serif";color:black'>Virtualization
  Capacity Report for all installations.<o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr>
  <td style='border:none;background:#CCCCCC;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal><b><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>ESX Platform<o:p></o:p></span></b></p>
  </td>
  <td valign=top style='border:none;background:#CCCCCC;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal><b><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>All Platforms<o:p></o:p></span></b></p>
  </td>
  <td valign=top style='border:none;background:#CCCCCC;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal align=center style='text-align:center'><b><span
  style='font-size:8.5pt;font-family:"Verdana","sans-serif";color:black'>SYD1<o:p></o:p></span></b></p>
  </td>
  <td valign=top style='border:none;background:#CCCCCC;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal align=center style='text-align:center'><b><span
  style='font-size:8.5pt;font-family:"Verdana","sans-serif";color:black'>BNE<o:p></o:p></span></b></p>
  </td>
  <td valign=top style='border:none;background:#CCCCCC;padding:3.0pt 3.0pt 3.0pt 3.0pt'>
  <p class=MsoNormal align=center style='text-align:center'><b><span
  style='font-size:8.5pt;font-family:"Verdana","sans-serif";color:black'>WIC<o:p></o:p></span></b></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>Cluster<o:p></o:p></span></p>
  </td>
  <td style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>All Clusters<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>cluster1.syd1<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>cluster1.bne<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>cluster1.wic<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>Overall Platform Status<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>n/a<o:p></o:p></span></p>
  </td>
  <td style='border:none;background:red;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>Crossed N* value<o:p></o:p></span></p>
  </td>
  <td style='border:none;background:yellow;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>Crossed 80% of N* value<o:p></o:p></span></p>
  </td>
  <td style='border:none;background:#2BA853;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:white'>OK<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>No. VMs:<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>284<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>32<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>142<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>110<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>No. Running VMs:<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>259<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>32<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>122<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>105<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>No. VMs Provisioned within Period:<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>0<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>0<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>0<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>0<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>No. Physical Machines:<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>14<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>2<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>6<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>6<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>Consolidation Ratio (VM/Host):<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>23<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>32<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>24<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>21<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>Consolidation Ratio (VM/Core):<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>3<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>4<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>3<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>2<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>ESX Server Version Information:<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>VMware ESX Server 3.0.1 build-42829 - 14 host(s)<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>VMware ESX Server 3.0.1 build-42829 - 2 host(s)<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>VMware ESX Server 3.0.1 build-42829 - 6 host(s)<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>VMware ESX Server 3.0.1 build-42829 - 6 host(s)<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>Total CPU (Ghz):<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>264<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>38<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>111<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>115<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>No. CPUs:<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#2BA853;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:white'>56 (Licenses: 100)<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>8<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>24<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>24<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>No. CPU Cores:<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>104<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>16<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>40<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>48<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>Total Memory (GB)<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>424<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>64<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>168<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>192<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>Total Storage Space (GB)<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>18724<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>2526<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>10035<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:#EDEDED;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>6163<o:p></o:p></span></p>
  </td>
 </tr>
 <tr>
  <td style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>Free Storage Space (GB)<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>9317<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>1782<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>5141<o:p></o:p></span></p>
  </td>
  <td valign=top style='border:none;background:whitesmoke;padding:1.5pt 1.5pt 1.5pt 1.5pt'>
  <p class=MsoNormal><span style='font-size:8.5pt;font-family:"Verdana","sans-serif";
  color:black'>2394<o:p></o:p></span></p>
  </td>
 </tr>
</table>
"@
Add-HtmlReportSection -Title $Title -Level $Level -NoIndent:$($Indent -eq 'None') -Collapsible:$Collapsible -Expanded:$Expanded -Content "Hello World"
				}
			}
		}
		
	}


#endregion]]></script>
        </container>
      </items>
    </container>
    <container name="Chart Presets" predefined="False" id="686d9542-3d11-48d0-bb48-f8a030b9963d">
      <items>
        <container predefined="False" id="32312a0a-ba0f-4409-8add-17fd08a2429f">
          <script><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Preset ID="32312a0a-ba0f-4409-8add-17fd08a2429f" Version="1.0" Name="Memory Allocation" ChartType="Quest.PowerGUI.UI.WinForm.Controls.Charts.DoughnutMapper">
  <ApplicableToTypes>
    <Type Name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension" />
  </ApplicableToTypes>
  <ChartDefinition UseAnyProperty="False" NotShowInnerDefinitions="True">
    <IndependentVariable Name="Name" />
    <DependentVariable Name="MemoryMB">
      <ChartSettings Type="Quest.PowerGUI.UI.WinForm.Controls.Charts.ChartDefinitionColorSettings" ID="">
        <Color>108, 162, 36</Color>
      </ChartSettings>
    </DependentVariable>
  </ChartDefinition>
  <ChartSettings>
    <igchart:UltraChart EmptyChartText="" ChartType="DoughnutChart" BackgroundImageLayout="Center" DataBindings-DefaultDataSourceUpdateMode="OnValidation" xmlns:igchart="http://tempuri.org/">
      <ColorModel ModelStyle="CustomSkin" AlphaLevel="150">
        <Skin>
          <PEs>
            <igchartprop:PaintElement Fill="178, 89, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 156, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 111, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 111" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 156" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 91, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 176, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 158, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 109, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 113" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 154" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 93, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 174, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 160, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 107, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 115" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 152" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 95, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 172, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 162, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 105, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 117" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 97, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 170, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 164, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 103, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 119" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 99, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 168, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 166, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 101, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 101, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 165, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 168, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 99, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 143" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 103, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 163, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 170, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 96, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 141" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 105, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 161, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 172, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 94, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 139" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 108, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 159, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 175, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 92, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 130" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 137" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 110, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 157, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 177, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 90, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 132" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 135" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 112, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 155, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 134" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 133" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 114, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 153, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 136" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 131" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 116, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 151, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 138" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 118, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 149, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 140" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 120, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 147, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 142" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 122, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 145, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 124, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 142, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 120" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 126, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 140, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 118" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 128, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 138, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 151" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 116" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 131, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 136, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 153" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 114" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 133, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 134, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 155" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 112" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 135, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 132, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 90" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 177" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 157" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 110" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 137, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 130, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 92" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 175" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 159" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 108" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 139, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 128, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 94" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 161" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 141, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 126, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 96" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 163" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 143, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 124, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 165" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 145, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 122, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 166" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 147, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 119, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 164" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 97" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 149, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 117, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 162" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 95" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 152, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 115, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 107" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 160" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 174" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 93" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 154, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 113, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 109" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 158" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 176" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 91" xmlns:igchartprop="http://tempuri.org/1/" />
          </PEs>
        </Skin>
      </ColorModel>
      <Axis BackColor="255, 248, 220">
        <X Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;ITEM_LABEL&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X>
        <Y Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;DATA_VALUE:00.##&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y>
        <Y2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y2>
        <X2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X2>
        <Z Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z>
        <Z2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z2>
      </Axis>
      <DoughnutChart Concentric="True">
        <Labels FormatString="&lt;ITEM_LABEL&gt; : &lt;DATA_VALUE:##.00&gt; (&lt;PERCENT_VALUE:##.00&gt;%)" />
      </DoughnutChart>
      <RadarChart SplineTension="0" />
      <DoughnutChart3D Concentric="True">
        <Labels FormatString="&lt;ITEM_LABEL&gt; : &lt;DATA_VALUE:##.00&gt; (&lt;PERCENT_VALUE:##.00&gt;%)" />
      </DoughnutChart3D>
      <GanttChart>
        <CompletePercentagesPE Fill="Yellow" />
        <EmptyPercentagesPE Fill="White" />
        <LinkLineStyle EndStyle="ArrowAnchor" />
        <OwnersLabelStyle Font="Microsoft Sans Serif, 7.8pt" />
      </GanttChart>
      <ColumnLineChart>
        <Column SeriesSpacing="0" />
      </ColumnLineChart>
      <Tooltips FormatString="&lt;DATA_VALUE:##.00&gt;" TooltipControl="(none)" />
      <CompositeChart />
      <SplineAreaChart3D />
      <SplineChart3D />
    </igchart:UltraChart>
  </ChartSettings>
  <PowerPackIDs>
    <Guid ID="4603dc99-244c-4e87-b4ae-b4f0706b4103" />
  </PowerPackIDs>
</Preset>]]></script>
        </container>
        <container predefined="False" id="3dc2d51c-c0fb-47f1-967b-d773996b384d">
          <script><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Preset ID="3dc2d51c-c0fb-47f1-967b-d773996b384d" Version="1.0" Name="PowerState" ChartType="Quest.PowerGUI.UI.WinForm.Controls.Charts.DoughnutMapper">
  <ApplicableToTypes>
    <Type Name="PowerStateGrouping#VmwarePowerPackExtension" />
  </ApplicableToTypes>
  <ChartDefinition UseAnyProperty="False" NotShowInnerDefinitions="True">
    <IndependentVariable Name="Name" />
    <DependentVariable Name="Count">
      <ChartSettings Type="Quest.PowerGUI.UI.WinForm.Controls.Charts.ChartDefinitionColorSettings" ID="">
        <Color>108, 162, 36</Color>
      </ChartSettings>
    </DependentVariable>
  </ChartDefinition>
  <ChartSettings>
    <igchart:UltraChart EmptyChartText="" ChartType="DoughnutChart" BackgroundImageLayout="Center" DataBindings-DefaultDataSourceUpdateMode="OnValidation" xmlns:igchart="http://tempuri.org/">
      <ColorModel ModelStyle="CustomSkin" AlphaLevel="150">
        <Skin>
          <PEs>
            <igchartprop:PaintElement Fill="178, 89, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 156, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 111, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 111" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 156" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 91, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 176, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 158, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 109, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 113" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 154" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 93, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 174, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 160, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 107, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 115" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 152" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 95, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 172, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 162, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 105, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 117" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 97, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 170, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 164, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 103, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 119" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 99, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 168, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 166, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 101, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 101, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 165, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 168, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 99, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 143" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 103, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 163, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 170, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 96, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 141" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 105, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 161, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 172, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 94, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 139" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 108, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 159, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 175, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 92, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 130" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 137" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 110, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 157, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 177, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 90, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 132" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 135" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 112, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 155, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 134" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 133" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 114, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 153, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 136" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 131" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 116, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 151, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 138" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 118, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 149, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 140" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 120, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 147, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 142" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 122, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 145, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 124, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 142, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 120" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 126, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 140, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 118" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 128, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 138, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 151" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 116" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 131, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 136, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 153" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 114" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 133, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 134, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 155" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 112" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 135, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 132, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 90" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 177" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 157" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 110" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 137, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 130, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 92" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 175" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 159" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 108" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 139, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 128, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 94" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 161" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 141, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 126, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 96" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 163" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 143, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 124, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 165" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 145, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 122, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 166" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 147, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 119, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 164" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 97" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 149, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 117, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 162" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 95" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 152, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 115, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 107" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 160" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 174" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 93" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 154, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 113, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 109" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 158" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 176" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 91" xmlns:igchartprop="http://tempuri.org/1/" />
          </PEs>
        </Skin>
      </ColorModel>
      <Axis BackColor="255, 248, 220">
        <X Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;ITEM_LABEL&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X>
        <Y Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;DATA_VALUE:00.##&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y>
        <Y2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y2>
        <X2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X2>
        <Z Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z>
        <Z2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z2>
      </Axis>
      <DoughnutChart Concentric="True">
        <Labels FormatString="&lt;ITEM_LABEL&gt; : &lt;DATA_VALUE:##.00&gt; (&lt;PERCENT_VALUE:##.00&gt;%)" />
      </DoughnutChart>
      <RadarChart SplineTension="0" />
      <DoughnutChart3D Concentric="True">
        <Labels FormatString="&lt;ITEM_LABEL&gt; : &lt;DATA_VALUE:##.00&gt; (&lt;PERCENT_VALUE:##.00&gt;%)" />
      </DoughnutChart3D>
      <GanttChart>
        <CompletePercentagesPE Fill="Yellow" />
        <EmptyPercentagesPE Fill="White" />
        <LinkLineStyle EndStyle="ArrowAnchor" />
        <OwnersLabelStyle Font="Microsoft Sans Serif, 7.8pt" />
      </GanttChart>
      <ColumnLineChart>
        <Column SeriesSpacing="0" />
      </ColumnLineChart>
      <Tooltips FormatString="&lt;DATA_VALUE:##.00&gt;" TooltipControl="(none)" />
      <CompositeChart />
      <SplineAreaChart3D />
      <SplineChart3D />
    </igchart:UltraChart>
  </ChartSettings>
  <PowerPackIDs>
    <Guid ID="4603dc99-244c-4e87-b4ae-b4f0706b4103" />
  </PowerPackIDs>
</Preset>]]></script>
        </container>
        <container predefined="False" id="3f15125e-7563-4607-aba6-a7eb685ffaa0">
          <script><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Preset ID="3f15125e-7563-4607-aba6-a7eb685ffaa0" Version="1.0" Name="Disk Utilization" ChartType="Quest.PowerGUI.UI.WinForm.Controls.Charts.StackedColumnMapper">
  <ApplicableToTypes>
    <Type Name="VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#VmwarePowerPackExtension" />
  </ApplicableToTypes>
  <ChartDefinition UseAnyProperty="False" NotShowInnerDefinitions="False">
    <IndependentVariable Name="Name">
      <ChartSettings Type="Quest.PowerGUI.UI.WinForm.Controls.Charts.ChartSkipSeriesLabelsSettings" ID="X">
        <SkipSeriesLabels SkipType="DrawEveryIndex" SkipValue="1" />
      </ChartSettings>
    </IndependentVariable>
    <DependentVariable Name="FreeSpaceMB">
      <ChartSettings Type="Quest.PowerGUI.UI.WinForm.Controls.Charts.ChartDefinitionColorSettings" ID="">
        <Color>108, 162, 36</Color>
      </ChartSettings>
    </DependentVariable>
    <DependentVariable Name="UsedSpaceMB">
      <ChartSettings Type="Quest.PowerGUI.UI.WinForm.Controls.Charts.ChartDefinitionColorSettings" ID="">
        <Color>7, 108, 176</Color>
      </ChartSettings>
    </DependentVariable>
  </ChartDefinition>
  <ChartSettings>
    <igchart:UltraChart EmptyChartText="" ChartType="StackColumnChart" BackgroundImageLayout="Center" DataBindings-DefaultDataSourceUpdateMode="OnValidation" xmlns:igchart="http://tempuri.org/">
      <Legend Visible="True" />
      <Data UseRowLabelsColumn="True" />
      <ColorModel ModelStyle="CustomLinear" AlphaLevel="150">
        <Skin ApplyRowWise="False">
          <PEs>
            <igchartprop:PaintElement Fill="178, 89, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 156, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 111, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 111" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 156" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 91, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 176, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 158, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 109, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 113" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 154" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 93, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 174, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 160, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 107, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 115" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 152" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 95, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 172, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 162, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 105, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 117" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 97, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 170, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 164, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 103, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 119" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 99, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 168, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 166, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 101, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 101, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 165, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 168, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 99, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 143" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 103, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 163, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 170, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 96, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 141" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 105, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 161, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 172, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 94, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 139" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 108, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 159, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 175, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 92, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 130" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 137" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 110, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 157, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 177, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 90, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 132" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 135" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 112, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 155, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 134" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 133" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 114, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 153, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 136" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 131" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 116, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 151, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 138" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 118, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 149, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 140" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 120, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 147, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 142" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 122, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 145, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 124, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 142, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 120" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 126, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 140, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 118" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 128, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 138, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 151" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 116" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 131, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 136, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 153" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 114" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 133, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 134, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 155" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 112" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 135, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 132, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 90" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 177" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 157" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 110" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 137, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 130, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 92" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 175" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 159" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 108" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 139, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 128, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 94" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 161" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 141, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 126, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 96" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 163" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 143, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 124, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 165" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 145, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 122, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 166" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 147, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 119, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 164" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 97" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 149, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 117, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 162" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 95" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 152, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 115, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 107" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 160" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 174" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 93" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 154, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 113, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 109" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 158" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 176" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 91" xmlns:igchartprop="http://tempuri.org/1/" />
          </PEs>
        </Skin>
      </ColorModel>
      <Axis BackColor="255, 248, 220">
        <X Visible="True" TickmarkStyle="Smart">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;ITEM_LABEL&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="VerticalLeftFacing">
            <SeriesLabels FormatString="&lt;SKIP_SERIES_LABELS_X&gt;" HorizontalAlign="Center" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X>
        <Y Visible="True" TickmarkStyle="Smart" TickmarkInterval="20000">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;DATA_VALUE:00.##&gt;" HorizontalAlign="Far" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Far" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y>
        <Y2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;DATA_VALUE:00.##&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y2>
        <X2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;ITEM_LABEL&gt;" HorizontalAlign="Far" VerticalAlign="Center" Orientation="VerticalLeftFacing">
            <SeriesLabels HorizontalAlign="Far" VerticalAlign="Center" Orientation="VerticalLeftFacing">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X2>
        <Z Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z>
        <Z2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z2>
      </Axis>
      <RadarChart SplineTension="0" />
      <DoughnutChart3D />
      <GanttChart>
        <CompletePercentagesPE Fill="Yellow" />
        <EmptyPercentagesPE Fill="White" />
        <LinkLineStyle EndStyle="ArrowAnchor" />
        <OwnersLabelStyle Font="Microsoft Sans Serif, 7.8pt" />
      </GanttChart>
      <ColumnLineChart>
        <Column SeriesSpacing="0" />
      </ColumnLineChart>
      <Tooltips FormatString="&lt;DATA_VALUE:#00.00&gt;" TooltipControl="(none)" />
      <CompositeChart />
      <SplineAreaChart3D />
      <SplineChart3D />
    </igchart:UltraChart>
  </ChartSettings>
  <PowerPackIDs>
    <Guid ID="4603dc99-244c-4e87-b4ae-b4f0706b4103" />
  </PowerPackIDs>
</Preset>]]></script>
        </container>
        <container predefined="False" id="90d03a01-12c1-4689-bd69-1c061a5a3e8c">
          <script><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Preset ID="90d03a01-12c1-4689-bd69-1c061a5a3e8c" Version="1.0" Name="Disk Comparison" ChartType="Quest.PowerGUI.UI.WinForm.Controls.Charts.DoughnutMapper">
  <ApplicableToTypes>
    <Type Name="VMware.VimAutomation.ViCore.Impl.V1.DatastoreManagement.DatastoreImpl#VmwarePowerPackExtension" />
  </ApplicableToTypes>
  <ChartDefinition UseAnyProperty="False" NotShowInnerDefinitions="False">
    <IndependentVariable Name="Name" />
    <DependentVariable Name="FreeSpaceMB">
      <ChartSettings Type="Quest.PowerGUI.UI.WinForm.Controls.Charts.ChartDefinitionColorSettings" ID="">
        <Color>108, 162, 36</Color>
      </ChartSettings>
    </DependentVariable>
    <DependentVariable Name="UsedSpaceMB">
      <ChartSettings Type="Quest.PowerGUI.UI.WinForm.Controls.Charts.ChartDefinitionColorSettings" ID="">
        <Color>7, 108, 176</Color>
      </ChartSettings>
    </DependentVariable>
  </ChartDefinition>
  <ChartSettings>
    <igchart:UltraChart EmptyChartText="" ChartType="DoughnutChart" BackgroundImageLayout="Center" DataBindings-DefaultDataSourceUpdateMode="OnValidation" xmlns:igchart="http://tempuri.org/">
      <Legend Visible="True" />
      <Data SwapRowsAndColumns="True" />
      <ColorModel ModelStyle="CustomLinear" AlphaLevel="150">
        <Skin>
          <PEs>
            <igchartprop:PaintElement Fill="178, 89, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 156, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 111, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 111" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 156" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 91, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 176, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 158, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 109, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 113" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 154" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 93, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 174, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 160, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 107, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 115" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 152" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 95, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 172, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 162, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 105, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 117" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 97, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 170, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 164, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 103, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 119" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 99, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 168, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 166, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 101, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 101, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 165, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 168, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 99, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 143" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 103, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 163, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 170, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 96, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 141" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 105, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 161, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 172, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 94, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 139" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 108, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 159, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 175, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 92, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 130" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 137" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 110, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 157, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 177, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 90, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 132" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 135" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 112, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 155, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 134" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 133" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 114, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 153, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 136" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 131" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 116, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 151, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 138" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 118, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 149, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 140" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 120, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 147, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 142" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 122, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 145, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 124, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 142, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 120" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 126, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 140, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 118" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 128, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 138, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 151" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 116" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 131, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 136, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 153" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 114" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 133, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 134, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 155" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 112" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 135, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 132, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 90" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 177" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 157" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 110" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 137, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 130, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 92" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 175" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 159" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 108" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 139, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 128, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 94" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 161" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 141, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 126, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 96" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 163" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 143, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 124, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 165" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 145, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 122, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 166" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 147, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 119, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 164" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 97" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 149, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 117, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 162" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 95" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 152, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 115, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 107" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 160" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 174" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 93" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 154, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 113, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 109" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 158" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 176" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 91" xmlns:igchartprop="http://tempuri.org/1/" />
          </PEs>
        </Skin>
      </ColorModel>
      <Axis BackColor="255, 248, 220">
        <X Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;ITEM_LABEL&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X>
        <Y Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;DATA_VALUE:00.##&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y>
        <Y2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y2>
        <X2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X2>
        <Z Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z>
        <Z2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z2>
      </Axis>
      <DoughnutChart Concentric="True" OthersCategoryPercent="0">
        <Labels FormatString="&lt;ITEM_LABEL&gt; : &lt;DATA_VALUE:##.00&gt; (&lt;PERCENT_VALUE:##.00&gt;%)" />
      </DoughnutChart>
      <RadarChart SplineTension="0" />
      <DoughnutChart3D Concentric="True" OthersCategoryPercent="0">
        <Labels FormatString="&lt;ITEM_LABEL&gt; : &lt;DATA_VALUE:##.00&gt; (&lt;PERCENT_VALUE:##.00&gt;%)" />
      </DoughnutChart3D>
      <GanttChart>
        <CompletePercentagesPE Fill="Yellow" />
        <EmptyPercentagesPE Fill="White" />
        <LinkLineStyle EndStyle="ArrowAnchor" />
        <OwnersLabelStyle Font="Microsoft Sans Serif, 7.8pt" />
      </GanttChart>
      <ColumnLineChart>
        <Column SeriesSpacing="0" />
      </ColumnLineChart>
      <Tooltips FormatString="&lt;DATA_VALUE:##.00&gt;" TooltipControl="(none)" />
      <CompositeChart />
      <SplineAreaChart3D />
      <SplineChart3D />
    </igchart:UltraChart>
  </ChartSettings>
  <PowerPackIDs>
    <Guid ID="4603dc99-244c-4e87-b4ae-b4f0706b4103" />
  </PowerPackIDs>
</Preset>]]></script>
        </container>
        <container predefined="False" id="a24b42c8-ac29-4901-aded-d0a1ee7a0655">
          <script><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Preset ID="a24b42c8-ac29-4901-aded-d0a1ee7a0655" Version="1.0" Name="VM Memory" ChartType="Quest.PowerGUI.UI.WinForm.Controls.Charts.ColumnMapper">
  <ApplicableToTypes>
    <Type Name="VMware.VimAutomation.ViCore.Impl.V1.Inventory.VirtualMachineImpl#VmwarePowerPackExtension" />
  </ApplicableToTypes>
  <ChartDefinition UseAnyProperty="False" NotShowInnerDefinitions="True">
    <IndependentVariable Name="Name">
      <ChartSettings Type="Quest.PowerGUI.UI.WinForm.Controls.Charts.ChartSkipSeriesLabelsSettings" ID="X">
        <SkipSeriesLabels SkipType="DrawEveryIndex" SkipValue="1" />
      </ChartSettings>
      <ChartSettings Type="Quest.PowerGUI.UI.WinForm.Controls.Charts.ChartSkipLabelsSettings" ID="X">
        <SkipLabels SkipType="DrawEveryIndex" SkipValue="1" />
      </ChartSettings>
    </IndependentVariable>
    <DependentVariable Name="MemoryMB">
      <ChartSettings Type="Quest.PowerGUI.UI.WinForm.Controls.Charts.ChartDefinitionColorSettings" ID="">
        <Color>108, 162, 36</Color>
      </ChartSettings>
    </DependentVariable>
  </ChartDefinition>
  <ChartSettings>
    <igchart:UltraChart EmptyChartText="" BackgroundImageLayout="Center" DataBindings-DefaultDataSourceUpdateMode="OnValidation" xmlns:igchart="http://tempuri.org/">
      <Data UseRowLabelsColumn="True" SwapRowsAndColumns="True" />
      <ColorModel ModelStyle="CustomSkin" AlphaLevel="150">
        <Skin>
          <PEs>
            <igchartprop:PaintElement Fill="178, 89, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 156, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 111, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 111" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 156" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 91, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 176, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 158, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 109, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 113" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 154" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 93, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 174, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 160, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 107, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 115" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 152" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 95, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 172, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 162, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 105, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 117" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 97, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 170, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 164, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 103, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 119" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 99, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 168, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 166, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 101, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 101, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 165, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 168, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 99, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 143" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 103, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 163, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 170, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 96, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 141" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 105, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 161, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 172, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 94, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 139" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 108, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 159, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 175, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 92, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 130" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 137" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 110, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 157, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 177, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 90, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 132" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 135" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 112, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 155, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 134" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 133" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 114, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 153, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 136" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 131" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 116, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 151, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 138" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 118, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 149, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 140" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 120, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 147, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 142" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 122, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 145, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 124, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 142, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 120" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 126, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 140, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 118" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 128, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 138, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 151" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 116" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 131, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 136, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 153" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 114" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 133, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 134, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 155" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 112" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 135, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 132, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 90" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 177" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 157" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 110" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 137, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 130, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 92" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 175" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 159" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 108" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 139, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 128, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 94" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 161" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 141, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 126, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 96" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 163" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 143, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 124, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 165" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 145, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 122, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 166" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 147, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 119, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 164" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 97" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 149, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 117, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 162" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 95" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 152, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 115, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 107" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 160" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 174" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 93" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 154, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 113, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 109" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 158" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 176" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 91" xmlns:igchartprop="http://tempuri.org/1/" />
          </PEs>
        </Skin>
      </ColorModel>
      <Axis BackColor="255, 248, 220">
        <X Visible="True" TickmarkStyle="Smart">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;SKIP_LABELS_X&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="VerticalLeftFacing">
            <SeriesLabels FormatString="&lt;SKIP_SERIES_LABELS_X&gt;" HorizontalAlign="Center" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X>
        <Y RangeType="Custom" RangeMax="3096" Visible="True" TickmarkStyle="Smart" TickmarkInterval="400">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;DATA_VALUE:00.##&gt;" HorizontalAlign="Far" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Far" VerticalAlign="Center" Orientation="VerticalLeftFacing">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y>
        <Y2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;DATA_VALUE:00.##&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="VerticalLeftFacing">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y2>
        <X2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;ITEM_LABEL&gt;" HorizontalAlign="Far" VerticalAlign="Center" Orientation="VerticalLeftFacing">
            <SeriesLabels HorizontalAlign="Center" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X2>
        <Z Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z>
        <Z2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z2>
      </Axis>
      <RadarChart SplineTension="0" />
      <DoughnutChart3D />
      <GanttChart>
        <CompletePercentagesPE Fill="Yellow" />
        <EmptyPercentagesPE Fill="White" />
        <LinkLineStyle EndStyle="ArrowAnchor" />
        <OwnersLabelStyle Font="Microsoft Sans Serif, 7.8pt" />
      </GanttChart>
      <ColumnLineChart>
        <Column SeriesSpacing="0" />
      </ColumnLineChart>
      <Tooltips FormatString="&lt;DATA_VALUE:#00.00&gt;" TooltipControl="(none)" />
      <CompositeChart />
      <SplineAreaChart3D />
      <SplineChart3D />
    </igchart:UltraChart>
  </ChartSettings>
  <PowerPackIDs>
    <Guid ID="4603dc99-244c-4e87-b4ae-b4f0706b4103" />
  </PowerPackIDs>
</Preset>]]></script>
        </container>
        <container predefined="False" id="a87a5231-89f9-4920-8728-3fa78fc95224">
          <script><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Preset ID="a87a5231-89f9-4920-8728-3fa78fc95224" Version="1.0" Name="CPU Share Allocation" ChartType="Quest.PowerGUI.UI.WinForm.Controls.Charts.DoughnutMapper">
  <ApplicableToTypes>
    <Type Name="VMware.VimAutomation.ViCore.Impl.V1.VM.VMResourceConfigurationImpl#VmwarePowerPackExtension" />
  </ApplicableToTypes>
  <ChartDefinition UseAnyProperty="False" NotShowInnerDefinitions="True">
    <IndependentVariable Name="VMName" />
    <DependentVariable Name="NumCpuShares">
      <ChartSettings Type="Quest.PowerGUI.UI.WinForm.Controls.Charts.ChartDefinitionColorSettings" ID="">
        <Color>108, 162, 36</Color>
      </ChartSettings>
    </DependentVariable>
  </ChartDefinition>
  <ChartSettings>
    <igchart:UltraChart EmptyChartText="" ChartType="DoughnutChart" BackgroundImageLayout="Center" DataBindings-DefaultDataSourceUpdateMode="OnValidation" xmlns:igchart="http://tempuri.org/">
      <ColorModel ModelStyle="CustomSkin" AlphaLevel="150">
        <Skin>
          <PEs>
            <igchartprop:PaintElement Fill="178, 89, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 156, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 111, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 111" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 156" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 91, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 176, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 158, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 109, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 113" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 154" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 93, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 174, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 160, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 107, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 115" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 152" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 95, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 172, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 162, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 105, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 117" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 97, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 170, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 164, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 103, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 119" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 99, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 168, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 166, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 101, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 101, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 165, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 168, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 99, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 143" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 103, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 163, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 170, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 96, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 141" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 105, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 161, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 172, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 94, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 139" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 108, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 159, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 175, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 92, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 130" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 137" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 110, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 157, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 177, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 90, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 132" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 135" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 112, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 155, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 134" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 133" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 114, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 153, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 136" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 131" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 116, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 151, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 138" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 118, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 149, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 140" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 120, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 147, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 142" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 122, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 145, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 124, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 142, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 120" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 126, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 140, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 118" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 128, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 138, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 151" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 116" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 131, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 136, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 153" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 114" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 133, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 134, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 155" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 112" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 135, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 132, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 90" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 177" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 157" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 110" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 137, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 130, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 92" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 175" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 159" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 108" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 139, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 128, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 94" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 161" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 141, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 126, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 96" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 163" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 143, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 124, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 165" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 145, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 122, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 166" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 147, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 119, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 164" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 97" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 149, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 117, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 162" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 95" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 152, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 115, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 107" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 160" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 174" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 93" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 154, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 113, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 109" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 158" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 176" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 91" xmlns:igchartprop="http://tempuri.org/1/" />
          </PEs>
        </Skin>
      </ColorModel>
      <Axis BackColor="255, 248, 220">
        <X Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;ITEM_LABEL&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X>
        <Y Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;DATA_VALUE:00.##&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y>
        <Y2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y2>
        <X2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X2>
        <Z Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z>
        <Z2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z2>
      </Axis>
      <DoughnutChart Concentric="True">
        <Labels FormatString="&lt;ITEM_LABEL&gt; : &lt;DATA_VALUE:##.00&gt; (&lt;PERCENT_VALUE:##.00&gt;%)" />
      </DoughnutChart>
      <RadarChart SplineTension="0" />
      <DoughnutChart3D Concentric="True">
        <Labels FormatString="&lt;ITEM_LABEL&gt; : &lt;DATA_VALUE:##.00&gt; (&lt;PERCENT_VALUE:##.00&gt;%)" />
      </DoughnutChart3D>
      <GanttChart>
        <CompletePercentagesPE Fill="Yellow" />
        <EmptyPercentagesPE Fill="White" />
        <LinkLineStyle EndStyle="ArrowAnchor" />
        <OwnersLabelStyle Font="Microsoft Sans Serif, 7.8pt" />
      </GanttChart>
      <ColumnLineChart>
        <Column SeriesSpacing="0" />
      </ColumnLineChart>
      <Tooltips FormatString="&lt;DATA_VALUE:##.00&gt;" TooltipControl="(none)" />
      <CompositeChart />
      <SplineAreaChart3D />
      <SplineChart3D />
    </igchart:UltraChart>
  </ChartSettings>
  <PowerPackIDs>
    <Guid ID="4603dc99-244c-4e87-b4ae-b4f0706b4103" />
  </PowerPackIDs>
</Preset>]]></script>
        </container>
        <container predefined="False" id="c06e318a-4ec5-4a99-b7e0-82e7f122d4d5">
          <script><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Preset ID="c06e318a-4ec5-4a99-b7e0-82e7f122d4d5" Version="1.0" Name="Mem Share Allocation" ChartType="Quest.PowerGUI.UI.WinForm.Controls.Charts.DoughnutMapper">
  <ApplicableToTypes>
    <Type Name="VMware.VimAutomation.ViCore.Impl.V1.VM.VMResourceConfigurationImpl#VmwarePowerPackExtension" />
  </ApplicableToTypes>
  <ChartDefinition UseAnyProperty="False" NotShowInnerDefinitions="True">
    <IndependentVariable Name="VMName" />
    <DependentVariable Name="NumMemShares">
      <ChartSettings Type="Quest.PowerGUI.UI.WinForm.Controls.Charts.ChartDefinitionColorSettings" ID="">
        <Color>108, 162, 36</Color>
      </ChartSettings>
    </DependentVariable>
  </ChartDefinition>
  <ChartSettings>
    <igchart:UltraChart EmptyChartText="" ChartType="DoughnutChart" BackgroundImageLayout="Center" DataBindings-DefaultDataSourceUpdateMode="OnValidation" xmlns:igchart="http://tempuri.org/">
      <ColorModel ModelStyle="CustomSkin" AlphaLevel="150">
        <Skin>
          <PEs>
            <igchartprop:PaintElement Fill="178, 89, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 156, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 111, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 111" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 156" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 91, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 176, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 158, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 109, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 113" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 154" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 93, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 174, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 160, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 107, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 115" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 152" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 95, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 172, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 162, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 105, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 117" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 97, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 170, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 164, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 103, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 119" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 99, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 168, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 166, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 101, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 101, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 165, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 168, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 99, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 143" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 103, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 163, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 170, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 96, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 141" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 105, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 161, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 172, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 94, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 139" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 108, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 159, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 175, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 92, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 130" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 137" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 110, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 157, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 177, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 90, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 132" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 135" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 112, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 155, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 134" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 133" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 114, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 153, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 136" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 131" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 116, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 151, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 138" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 118, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 149, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 140" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 120, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 147, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 142" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 122, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 145, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 124, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 142, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 120" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 126, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 140, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 118" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 128, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 138, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 151" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 116" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 131, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 136, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 153" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 114" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 133, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 134, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 155" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 112" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 135, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 132, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 90" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 177" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 157" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 110" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 137, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 130, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 92" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 175" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 159" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 108" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 139, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 128, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 94" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 161" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 141, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 126, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 96" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 163" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 143, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 124, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 165" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 145, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 122, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 166" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 147, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 119, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 164" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 97" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 149, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 117, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 162" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 95" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 152, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 115, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 107" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 160" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 174" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 93" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 154, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 113, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 109" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 158" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 176" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 91" xmlns:igchartprop="http://tempuri.org/1/" />
          </PEs>
        </Skin>
      </ColorModel>
      <Axis BackColor="255, 248, 220">
        <X Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;ITEM_LABEL&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X>
        <Y Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;DATA_VALUE:00.##&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y>
        <Y2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y2>
        <X2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X2>
        <Z Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z>
        <Z2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z2>
      </Axis>
      <DoughnutChart Concentric="True">
        <Labels FormatString="&lt;ITEM_LABEL&gt; : &lt;DATA_VALUE:##.00&gt; (&lt;PERCENT_VALUE:##.00&gt;%)" />
      </DoughnutChart>
      <RadarChart SplineTension="0" />
      <DoughnutChart3D Concentric="True">
        <Labels FormatString="&lt;ITEM_LABEL&gt; : &lt;DATA_VALUE:##.00&gt; (&lt;PERCENT_VALUE:##.00&gt;%)" />
      </DoughnutChart3D>
      <GanttChart>
        <CompletePercentagesPE Fill="Yellow" />
        <EmptyPercentagesPE Fill="White" />
        <LinkLineStyle EndStyle="ArrowAnchor" />
        <OwnersLabelStyle Font="Microsoft Sans Serif, 7.8pt" />
      </GanttChart>
      <ColumnLineChart>
        <Column SeriesSpacing="0" />
      </ColumnLineChart>
      <Tooltips FormatString="&lt;DATA_VALUE:##.00&gt;" TooltipControl="(none)" />
      <CompositeChart />
      <SplineAreaChart3D />
      <SplineChart3D />
    </igchart:UltraChart>
  </ChartSettings>
  <PowerPackIDs>
    <Guid ID="4603dc99-244c-4e87-b4ae-b4f0706b4103" />
  </PowerPackIDs>
</Preset>]]></script>
        </container>
        <container predefined="False" id="d869eed0-3429-4ae7-be0e-43336c6fb37a">
          <script><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Preset ID="d869eed0-3429-4ae7-be0e-43336c6fb37a" Version="1.0" Name="OS Breakdown" ChartType="Quest.PowerGUI.UI.WinForm.Controls.Charts.DoughnutMapper">
  <ApplicableToTypes>
    <Type Name="OSGrouping#VmwarePowerPackExtension" />
  </ApplicableToTypes>
  <ChartDefinition UseAnyProperty="False" NotShowInnerDefinitions="True">
    <IndependentVariable Name="Name" />
    <DependentVariable Name="Count" />
  </ChartDefinition>
  <ChartSettings>
    <igchart:UltraChart EmptyChartText="" ChartType="DoughnutChart" BackgroundImageLayout="Center" DataBindings-DefaultDataSourceUpdateMode="OnValidation" xmlns:igchart="http://tempuri.org/">
      <ColorModel ModelStyle="CustomSkin" AlphaLevel="150">
        <Skin>
          <PEs>
            <igchartprop:PaintElement Fill="178, 89, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="133, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 156, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 111, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 111" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 156" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 91, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 176, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 158, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 109, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 113" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 154" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 93, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 174, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 160, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 107, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 115" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 152" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 95, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 172, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 162, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 105, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 117" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 97, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 170, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 164, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 103, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 119" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 99, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 168, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 166, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 101, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 101, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 165, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 168, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 99, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 143" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 103, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 163, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 170, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 96, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 141" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 105, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 161, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 172, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 94, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 139" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 108, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 159, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 175, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 92, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 130" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 137" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 110, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 157, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 177, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 90, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 132" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 135" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 112, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 155, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 134" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 133" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 114, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 153, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 136" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 131" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 116, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 151, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 138" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 128" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 118, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 149, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 140" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 126" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 120, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 147, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 142" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 124" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 122, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 145, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="167, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="100, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 145" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 122" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 124, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 142, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="98, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="169, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="165, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="102, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 147" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 120" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 126, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 140, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="96, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="171, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="163, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="104, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 149" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 118" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 128, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 138, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="94, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="173, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="161, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="106, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 151" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 116" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 131, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 136, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="92, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="175, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="158, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="108, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 153" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 114" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 133, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 134, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="177, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="156, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="110, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 155" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 112" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 135, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 132, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 90" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 177" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="154, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="112, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 157" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 110" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 137, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 130, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 92" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 175" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="152, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="115, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 159" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 108" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 139, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 128, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 94" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="150, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="117, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 161" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 141, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 126, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 96" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="148, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="119, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 163" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 143, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 124, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="146, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="121, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 165" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 145, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 122, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 101" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 166" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="144, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="123, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 168" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 99" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 147, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 119, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 103" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 164" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="142, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="125, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 170" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 97" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 149, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 117, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 105" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 162" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="140, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="127, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 172" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 95" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 152, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 115, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 107" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 160" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="138, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="129, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 174" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 93" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 154, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 113, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 109" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 158" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="135, 178, 89" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="131, 89, 178" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="89, 178, 176" xmlns:igchartprop="http://tempuri.org/1/" />
            <igchartprop:PaintElement Fill="178, 89, 91" xmlns:igchartprop="http://tempuri.org/1/" />
          </PEs>
        </Skin>
      </ColorModel>
      <Axis BackColor="255, 248, 220">
        <X Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;ITEM_LABEL&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X>
        <Y Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="&lt;DATA_VALUE:00.##&gt;" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y>
        <Y2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Y2>
        <X2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels FormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </X2>
        <Z Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z>
        <Z2 Visible="False">
          <MajorGridLines Visible="True" DrawStyle="Dot" Color="Gainsboro" AlphaLevel="255" />
          <MinorGridLines Visible="False" DrawStyle="Dot" Color="LightGray" AlphaLevel="255" />
          <Labels ItemFormatString="" HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
            <SeriesLabels HorizontalAlign="Near" VerticalAlign="Center" Orientation="Horizontal">
              <Layout Behavior="Auto" />
            </SeriesLabels>
            <Layout Behavior="Auto" />
          </Labels>
        </Z2>
      </Axis>
      <DoughnutChart Concentric="True">
        <Labels FormatString="&lt;ITEM_LABEL&gt; : &lt;DATA_VALUE:##.00&gt; (&lt;PERCENT_VALUE:##.00&gt;%)" />
      </DoughnutChart>
      <RadarChart SplineTension="0" />
      <DoughnutChart3D Concentric="True">
        <Labels FormatString="&lt;ITEM_LABEL&gt; : &lt;DATA_VALUE:##.00&gt; (&lt;PERCENT_VALUE:##.00&gt;%)" />
      </DoughnutChart3D>
      <GanttChart>
        <CompletePercentagesPE Fill="Yellow" />
        <EmptyPercentagesPE Fill="White" />
        <LinkLineStyle EndStyle="ArrowAnchor" />
        <OwnersLabelStyle Font="Microsoft Sans Serif, 7.8pt" />
      </GanttChart>
      <ColumnLineChart>
        <Column SeriesSpacing="0" />
      </ColumnLineChart>
      <Tooltips FormatString="&lt;DATA_VALUE:##.00&gt;" TooltipControl="(none)" />
      <CompositeChart />
      <SplineAreaChart3D />
      <SplineChart3D />
    </igchart:UltraChart>
  </ChartSettings>
  <PowerPackIDs>
    <Guid ID="4603dc99-244c-4e87-b4ae-b4f0706b4103" />
  </PowerPackIDs>
</Preset>]]></script>
        </container>
      </items>
    </container>
  </items>
</configuration>
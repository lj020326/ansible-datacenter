#version: '3'
version: "3.7"

networks:
  default:
    driver: bridge
#  socket_proxy:
#    external: true

volumes:
  {}

configs:
  {}

##
## To be used in combination with the molecule tests to debug containers
##
services:

  ## ref: https://jacar.es/en/como-instalar-portainer-con-docker-compose/
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
#    networks:
#      - socket_proxy
    depends_on:
      - socket-proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${HOME}/docker/portainer-data:/data
    ports:
      - 9000:9000

  socket-proxy:
    image: fluencelabs/docker-socket-proxy
    container_name: socket-proxy
    privileged: True
#    networks:
#      - socket_proxy
    ports:
      - 127.0.0.1:2375:2375
    restart: always
    environment:
      ## app envs
      AUTH: 0
      BUILD: 0
      COMMIT: 0
      CONFIGS: 0
      CONTAINERS: 1
      CONTAINERS_CREATE: 1
      CONTAINERS_DELETE: 1
      CONTAINERS_START: 1
      CONTAINERS_UPDATE: 1
      DELETE: 1
      DISTRIBUTION: 0
      EVENTS: 1
      EXEC: 0
      IMAGES: 1
      IMAGES_DELETE: 1
      INFO: 1
      LOG_LEVEL: debug
      NETWORKS: 1
      NODES: 0
      PING: 1
      PLUGINS: 0
      POST: 1
      SECRETS: 0
      SERVICES: 1
      SESSION: 0
      SWARM: 0
      SYSTEM: 0
      TASKS: 1
      VERSION: 1
      VOLUMES: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

#  whoami:
#    image: containous/whoami
#    container_name: whoami
#    hostname: whoami

  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
#    networks:
#      - socket_proxy
    depends_on:
      - socket-proxy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      ## app envs
      DOCKER_HOST: tcp://socket-proxy:2375
      DOZZLE_FILTER: status=running
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
    ports:
      - 8888:8080

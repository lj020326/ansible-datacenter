---
- name: Restart systemd-journald
  ansible.builtin.systemd:
    name: "systemd-journald"
    state: "restarted"
- name: Cleanup udev script
  ansible.builtin.file:
    path: "/tmp/rule-syntax-check.py"
    state: "absent"
- name: Restart systemd-timesyncd
  ansible.builtin.systemd:
    name: "systemd-timesyncd"
    state: "restarted"
  when:
    - "hostvars[inventory_hostname]['bootstrap_linux_systemd_timesyncd'] is defined"
    - "hostvars[inventory_hostname]['bootstrap_linux_systemd_timesyncd'] != ''"
    - "hostvars[inventory_hostname]['systemd_timesyncd'] |
      community.general.json_query(vars['systemd_timesyncd_restart']) is
      defined"
    - "hostvars[inventory_hostname]['systemd_timesyncd'] |
      community.general.json_query(vars['systemd_timesyncd_restart']) == 'true'"
  vars:
    systemd_timesyncd_restart: "[] | map(&restart || 'false', @) | [0]"
- name: Restart systemd-resolved
  ansible.builtin.systemd:
    name: "systemd-resolved"
    state: "restarted"
  when:
    - "hostvars[inventory_hostname]['systemd_resolved'] is defined"
    - "hostvars[inventory_hostname]['systemd_resolved'] != ''"
    - "hostvars[inventory_hostname]['systemd_resolved'] |
       community.general.json_query(vars['systemd_resolved_restart']) is
       defined"
    - "hostvars[inventory_hostname]['systemd_resolved'] |
       community.general.json_query(vars['systemd_resolved_restart']) == 'true'"
  vars:
    systemd_resolved_restart: "[] | map(&restart || 'false', @) | [0]"
- name: Restart systemd-networkd
  ansible.builtin.systemd:
    name: "systemd-networkd"
    state: "restarted"
  when:
    - "hostvars[inventory_hostname]['systemd_networkd'] is defined"
    - "hostvars[inventory_hostname]['systemd_networkd'] != ''"
    - "hostvars[inventory_hostname]['systemd_networkd'] |
       community.general.json_query(vars['systemd_networkd_restart']) is
       defined"
    - "hostvars[inventory_hostname]['systemd_networkd'] |
       community.general.json_query(vars['systemd_networkd_restart']) == 'true'"
  vars:
    systemd_networkd_restart: "[] | map(&restart || 'false', @) | [0]"

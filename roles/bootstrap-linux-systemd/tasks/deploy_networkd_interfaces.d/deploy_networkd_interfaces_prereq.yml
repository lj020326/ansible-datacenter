---

- name: bootstrap_linux_systemd | Assert that type for interface is defined
  ansible.builtin.assert:
    that: "item['type'] is defined and item['type'] != ''"
    msg: "{{ 'type for ' ~ outer_item ~ ' is not defined' }}"
    quiet: "true"
  loop: "{{ bootstrap_linux_systemd_networkd |
    community.general.json_query(\"[].interfaces[?interface=='\" ~
    outer_item ~ \"']\") | flatten(levels=1) }}"
  loop_control:
    label: "{{ 'interface: ' ~ outer_item }}"

- name: bootstrap_linux_systemd | Assert that physaddr for interface is defined
  ansible.builtin.assert:
    that: "item['physaddr'] is defined and item['physaddr'] != ''"
    msg: "{{ 'physaddr for ' ~ outer_item ~ ' is not defined' }}"
    quiet: "true"
  loop: "{{ bootstrap_linux_systemd_networkd |
    community.general.json_query(\"[].interfaces[?interface=='\" ~
    outer_item ~ \"']\") | flatten(levels=1) }}"
  loop_control:
    label:
      "{{ 'interface: ' ~ outer_item ~ ' [' + item['type'] + ']' }}"
  when:
    - item['type'] == 'ether'
    - item['match_override'] is not defined or (
      item['match_override'] is defined and item['match_override'] == '')

- name: bootstrap_linux_systemd | Assert that physaddr for interface is valid hwaddr
  ansible.builtin.assert:
    that: "item['physaddr'] is defined and item['physaddr'] |
      ansible.utils.hwaddr()"
    msg: "{{ 'physaddr for ' ~ outer_item ~ ' is invalid, value is `' ~
      item['physaddr'] ~ '`' }}"
    quiet: "true"
  loop: "{{ bootstrap_linux_systemd_networkd |
    community.general.json_query(\"[].interfaces[?interface=='\" ~
    outer_item ~ \"']\") | flatten(levels=1) }}"
  loop_control:
    label:
      "{{ 'interface: ' ~ outer_item ~ ' [' + item['type'] + ']' }}"
  when:
    - item['type'] == 'ether'
    - item['match_override'] is not defined or (
      item['match_override'] is defined and
      item['match_override'] == '')

---

- name: bootstrap_linux_systemd | Assert that type for interface is defined
  ansible.builtin.assert:
    that: item['type'] | d('') | length > 0
    msg: "{{ 'type for ' ~ outer_item ~ ' is not defined' }}"
    quiet: true
  loop: "{{ bootstrap_linux_systemd__networkd |
    community.general.json_query(\"[].interfaces[?interface=='\" ~
    outer_item ~ \"']\") | flatten(levels=1) }}"
  loop_control:
    label: "{{ 'interface: ' ~ outer_item }}"

- name: bootstrap_linux_systemd | Assert physaddr for interface is defined/valid
  when:
    - item['type'] == 'ether'
    - item['match_override'] | d('') | length == 0
  block:
    - name: bootstrap_linux_systemd | Assert that physaddr for interface is defined
      ansible.builtin.assert:
        that: item['physaddr'] | d('') | length > 0
        msg: "{{ 'physaddr for ' ~ outer_item ~ ' is not defined' }}"
        quiet: true
      loop: "{{ bootstrap_linux_systemd__networkd |
        community.general.json_query(\"[].interfaces[?interface=='\" ~
        outer_item ~ \"']\") | flatten(levels=1) }}"
      loop_control:
        label: "{{ 'interface: ' ~ outer_item ~ ' [' + item['type'] + ']' }}"

    - name: bootstrap_linux_systemd | Assert that physaddr for interface is valid hwaddr
      ansible.builtin.assert:
        that: item['physaddr'] | ansible.utils.hwaddr()
        msg: "{{ 'physaddr for ' ~ outer_item ~ ' is invalid, value is `' ~ item['physaddr'] ~ '`' }}"
        quiet: true
      loop: "{{ bootstrap_linux_systemd__networkd |
        community.general.json_query(\"[].interfaces[?interface=='\" ~
        outer_item ~ \"']\") | flatten(levels=1) }}"
      loop_control:
        label: "{{ 'interface: ' ~ outer_item ~ ' [' + item['type'] + ']' }}"

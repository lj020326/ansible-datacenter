---

# Gather Ansible Facts About Host #
- name: Gather Ansible Facts About Host
  setup:
    gather_subset:
      - all
- debug:
    msg: "{{ ansible_facts }}"

# Set Reportable Facts #
- name: Set Reportable Windows Host Facts
  set_fact:
    nodename: "{{ ansible_facts['nodename'] }}"
    domain: "{{ ansible_facts['domain'] }}"
    windows_domain_member: "{{ ansible_facts['windows_domain_member'] }}"
    windows_domain_role: "{{ ansible_facts['windows_domain_role'] }}"
    distribution: "{{ ansible_facts['distribution'] }}"
    distribution_major_version: "{{ ansible_facts['distribution_major_version'] }}"
    distribution_version: "{{ ansible_facts['distribution_version'] }}"
    architecture: "{{ ansible_facts['architecture'] }}"
    bios_date: "{{ ansible_facts['bios_date'] }}"
    bios_version: "{{ ansible_facts['bios_version'] }}"
    connection_name: "{{ ansible_facts | json_query('interfaces[*].connection_name') }}"
    interface_name: "{{ ansible_facts | json_query('interfaces[*].interface_name') }}"
    ipv4_address: "{{ ansible_facts | json_query('ip_addresses[0]') }}"
    ipv6_address: "{{ ansible_facts | json_query('ip_addresses[1]') }}"
    default_gateway: "{{ ansible_facts | json_query('interfaces[*].default_gateway') }}"
    mac_address: "{{ ansible_facts | json_query('interfaces[*].macaddress') }}"
    lastboot: "{{ ansible_facts['lastboot'] }}"
    reboot_pending: "{{ ansible_facts['reboot_pending'] }}"
    uptime: "{{ ansible_facts['uptime_seconds'] }}"
    machine_id: "{{ ansible_facts['machine_id'] }}"
    total_memory: "{{ ansible_facts['memtotal_mb'] }}"
    processor: "{{ ansible_facts | json_query('processor[1]') }}"
    processor_cores: "{{ ansible_facts['processor_cores'] }}"
    processor_count: "{{ ansible_facts['processor_count']}}"
    product_name: "{{ ansible_facts['product_name'] }}"


- name: "get_cert_repo | Clone cert repo"
  delegate_to: "localhost"
  become: no
  run_once: yes
  block:

    - name: Create temporary build directory
      ansible.builtin.tempfile:
        state: directory
        suffix: build
      register: tempdir

    - name: Set fact for report_windows_facts_repo_dir
      set_fact:
        report_windows_facts_repo_dir: "{{ tempdir.path }}/report-windows-facts"

    - name: Set fact for report_windows_facts_reports_dir
      set_fact:
        report_windows_facts_reports_dir: : "{{ report_windows_facts_repo_dir }}/docs/ansible-inventory-reports/SERVERS/WINDOWS"

    - name: Display report_windows_facts_repo_dir
      debug:
        msg:
          - "report_windows_facts_repo_dir={{ report_windows_facts_repo_dir }}"
          - "report_windows_facts_reports_dir={{ report_windows_facts_reports_dir }}"

#    - name: "Git - Clone inventory report repo to {{ report_windows_facts_repo_dir }}"
#      shell: "git clone {{ inventory_report_git_repo }} {{ report_windows_facts_repo_dir }}"
#      register: gitclone

    - name: "get_cert_repo | Clone  {{ ca_keyring_certs_dir }}"
      git:
        repo: "{{ report_windows_facts_git_repo_url }}"
        dest: "{{ report_windows_facts_repo_dir }}"
        version: "{{ report_windows_facts_git_repo_branch }}"
        force: true
        update: yes
        clone: yes
        accept_hostkey: true
        key_file: "{{ report_windows_facts_git_ssh_private_keyfile }}"
      register: gitclone

    # Create JSON file with Ansible Facts #
    - name: Create raw JSON file
      copy:
        content: |
          {% for host in ansible_play_hosts %}
          {{ hostvars[host].ansible_facts | to_nice_json }}
          {% endfor %}
        dest: "{{ report_windows_facts_reports_dir }}/json/server_facts.json"

    # Create YAML file with Ansible Facts #
    - name: Create raw YAML
      copy:
        content: |
          {% for host in ansible_play_hosts %}
          {{ hostvars[host].ansible_facts | to_nice_yaml }}
          {% endfor %}
        dest: "{{ report_windows_facts_reports_dir }}/yaml/server_facts.yml"

    # Add Headers to YAML #
    - name: Header Row
      lineinfile:
        path: "{{ report_windows_facts_reports_dir }}/yaml/server_facts.yml"
        insertbefore: BOF
        line: ---

    # Create CSV file with results #
    - name: Create CSV
      copy:
        content: |
          {% for host in ansible_play_hosts %}
          {{ hostvars[host].nodename }},{{ hostvars[host].domain }},{{ hostvars[host].windows_domain_member }},{{ hostvars[host].windows_domain_role }}, {{ hostvars[host].distribution }},{{ hostvars[host].distribution_major_version }},{{ hostvars[host].distribution_version }},{{ hostvars[host].architecture }},{{ hostvars[host].bios_date }},{{ hostvars[host].bios_version }},{{ hostvars[host].connection_name }},{{ hostvars[host].interface_name }},{{ hostvars[host].ipv4_address }},{{ hostvars[host].ipv6_address }},{{ hostvars[host].default_gateway }},{{ hostvars[host].mac_address }},{{ hostvars[host].lastboot }},{{ hostvars[host].reboot_pending }},{{ hostvars[host].uptime }},{{ hostvars[host].machine_id }},{{ hostvars[host].total_memory }},{{ hostvars[host].processor }},{{ hostvars[host].processor_cores }},{{ hostvars[host].processor_count }},{{ hostvars[host].product_name }}
          {% endfor %}
        dest: "{{ report_windows_facts_reports_dir }}/csv/server_facts.csv"

    # Format CSV #
    - name: Format CSV File Clean Up
      replace:
        path: "{{ report_windows_facts_reports_dir }}/csv/server_facts.csv"
        regexp: '\[|\]|"'
        replace: ''

    # Format CSV #
    - name: Format CSV File Clean Up
      replace:
        path: "{{ report_windows_facts_reports_dir }}/csv/server_facts.csv"
        regexp: "'"
        replace: ''

    # Add Header Row to CSV #
    - name: Header Row
      lineinfile:
        path: "{{ report_windows_facts_reports_dir }}/csv/server_facts.csv"
        insertbefore: BOF
        line: Hostname,Domain,Domain Member,Domain Role,OS,Major Version,Version,Architecture,Bios Date,Bios Version,Connection Names,Interface Names,IPv4 Address,IPv6 Address,Default Gateway,MAC Address,Last Boot,Reboot Pending,Uptime Seconds,Machine ID,Total Memory (MB),Processors,Processor Cores,Processor Count,Product Name

    # Create Markdown file with results #
    - name: Create Markdown
      copy:
        content: |
          {% for host in ansible_play_hosts %}
          | {{ hostvars[host].nodename }} | {{ hostvars[host].domain }} | {{ hostvars[host].windows_domain_member }} | {{ hostvars[host].windows_domain_role }} |  {{ hostvars[host].distribution }} | {{ hostvars[host].distribution_major_version }} | {{ hostvars[host].distribution_version }} | {{ hostvars[host].architecture }} | {{ hostvars[host].bios_date }} | {{ hostvars[host].bios_version }} | {{ hostvars[host].connection_name }} | {{ hostvars[host].interface_name }} | {{ hostvars[host].ipv4_address }} | {{ hostvars[host].ipv6_address }} | {{ hostvars[host].default_gateway }} | {{ hostvars[host].mac_address }} | {{ hostvars[host].lastboot }} | {{ hostvars[host].reboot_pending }} | {{ hostvars[host].uptime }} | {{ hostvars[host].machine_id }} | {{ hostvars[host].total_memory }} | {{ hostvars[host].processor }} | {{ hostvars[host].processor_cores }} | {{ hostvars[host].processor_count }} | {{ hostvars[host].product_name }} |
          {% endfor %}
        dest: "{{ report_windows_facts_reports_dir }}/markdown/server_facts.md    "

    # Format Markdown #
    - name: Format Markdown File New Lines
      replace:
        path: "{{ report_windows_facts_reports_dir }}/markdown/server_facts.md"
        regexp: '],'
        replace: ']\n'

    # Format Markdown #
    - name: Format Markdown File Clean Up
      replace:
        path: "{{ report_windows_facts_reports_dir }}/markdown/server_facts.md"
        regexp: '\[|\]|"'
        replace: ''

    # Format Markdown #
    - name: Format Markdown File Commas to Pipes
      replace:
        path: "{{ report_windows_facts_reports_dir }}/markdown/server_facts.md"
        regexp: ','
        replace: ' | '

    # Format Markdown #
    - name: Format Markdown File Clean Up
      replace:
        path: "{{ report_windows_facts_reports_dir }}/markdown/server_facts.md"
        regexp: "'"
        replace: ''

    # Add Header Rows to Markdown #
    - name: Header Row
      lineinfile:
        path: "{{ report_windows_facts_reports_dir }}/markdown/server_facts.md"
        insertbefore: BOF
        line: "{{ item.property }}"
      with_items:
        - { property: '| -------- | ------ | ------------- | ----------- | -- | ------------- | ------- | ------------ | --------- | ------------ | ---------------- | --------------- | ---- | ---- | --------------- | ----------- | --------- | -------------- | -------------- | ---------- | ----------------- | ---------- | --------------- | --------------- | ------------ |' }
        - { property: '| Hostname | Domain | Domain Member | Domain Role | OS | Major Version | Version | Architecture | Bios Date | Bios Version | Connection Names | Interface Names | IPv4 | IPv6 | Default Gateway | MAC Address | Last Boot | Reboot Pending | Uptime Seconds | Machine ID | Total Memory (MB) | Processors | Processor Cores | Processor Count | Product Name |' }
        - { property: '# Windows' }

    # Create Mind Map #
    - name: create server_facts Mind Map
      shell: "markmap --no-open "{{ report_windows_facts_reports_dir }}/markdown/server_facts.md -o {{ report_windows_facts_reports_dir }}/mindmap/server_facts.html""
      register: markmap

    - set_fact:
        git_message: "ansible [{{ role_path|basename }}] windows inventory report updated as of {{ ansible_date_time.iso8601 }}"

    - name: Git - Add
      shell: "git add ../*"
      register: gitadd

    - name: Git - commit
      shell: git commit -m "{{ git_message }}"
      register: gitcommit

    - name: Git - push
      shell: git push
      register: gitpush

---

- name: "{{ __bootstrap_docker__log_prefix_install }} install htpasswd deps with pip"
  ansible.builtin.pip:
    name: passlib[bcrypt]

- name: "{{ __bootstrap_docker__log_prefix_install }} Remove registry, if it exists"
  community.docker.docker_container:
    name: "{{ bootstrap_docker_registry__container_name }}"
    state: absent
    container_default_behavior: compatibility
#    container_default_behavior: no_defaults

- name: "{{ __bootstrap_docker__log_prefix_install }} Ensure directories exists for CA signed TLS certs."
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ bootstrap_docker_registry__config_path }}"
    - "{{ bootstrap_docker_registry__auth_path }}"
    - "{{ bootstrap_docker_registry__cert_path }}"

## ref: https://codeblog.dotsandbrackets.com/private-registry-swarm/
- name: "{{ __bootstrap_docker__log_prefix_install }} Copy ca cert and node cert to registry cert path ({{ bootstrap_docker_registry__cert_path }})"
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
#    force: "{{ overwrite_configs }}"
    remote_src: true
    mode: "0644"
  loop:
    - src: "{{ pki_cert_dir }}/ca.pem"
      dest: "{{ bootstrap_docker_registry__cert_path }}/ca.pem"
    - src: "{{ pki_cert_dir }}/{{ bootstrap_docker_registry__cert_file }}"
      dest: "{{ bootstrap_docker_registry__cert_path }}/{{ bootstrap_docker_registry__cert_file }}"
    - src: "{{ pki_key_dir }}/{{ bootstrap_docker_registry__key_file }}"
      dest: "{{ bootstrap_docker_registry__cert_path }}/{{ bootstrap_docker_registry__key_file }}"
    - src: "{{ pki_cert_dir }}/ca-certificates.crt"
      dest: "{{ bootstrap_docker_registry__cert_path }}/ca-certificates.crt"

- name: "{{ __bootstrap_docker__log_prefix_install }} Configure {{ bootstrap_docker_registry__auth_file }} users file"
  when: bootstrap_docker_registry__enable_auth|bool
  no_log: yes
  community.general.htpasswd: 
    path: "{{ bootstrap_docker_registry__auth_path }}/{{ bootstrap_docker_registry__auth_file }}"
    name: "{{ item.username }}"
    password: "{{ item.password }}"
    owner: "root" 
    group: "root"
    mode: "0600"
    crypt_scheme: bcrypt
  loop: "{{ bootstrap_docker_registry__users }}"

- name: "{{ __bootstrap_docker__log_prefix_install }} Install registry config settings"
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
#    force: "{{ overwrite_configs }}"
    mode: "0664"
  loop:
    - {src: 'config-registry.yml.j2', dest: "{{ bootstrap_docker_registry__config_path }}/config.yml"}

- name: "{{ __bootstrap_docker__log_prefix_install }} Setup docker registry services"
  when: bootstrap_docker_registry__enable_service | bool
  ansible.builtin.include_tasks: setup-services.yml
  vars:
    ansible_python_interpreter: "{{ ansible_python_docker_interpreter }}"

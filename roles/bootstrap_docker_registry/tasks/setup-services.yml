---

#- name: Install latest docker py with pip
#  ansible.builtin.pip:
#    name: docker

- name: Create secure docker registry with auth enabled
  when: bootstrap_docker_registry__enable_auth
  community.docker.docker_container:
    name: "{{ bootstrap_docker_registry__container_name }}"
    image: registry:2
    restart_policy: unless-stopped
    container_default_behavior: compatibility
#    container_default_behavior: no_defaults
    volumes:
      - "{{ bootstrap_docker_registry__cert_path }}:/certs"
      - "{{ bootstrap_docker_registry__auth_path }}:/auth"
      - "{{ bootstrap_docker_registry__config_path }}/config.yml:/etc/docker/registry/config.yml:ro"
    env:
      REGISTRY_HTTP_TLS_CERTIFICATE: "/certs/{{ bootstrap_docker_registry__cert_file }}"
      REGISTRY_HTTP_TLS_KEY: "/certs/{{ bootstrap_docker_registry__key_file }}"
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: "{{ bootstrap_docker_registry__realm }}"
      REGISTRY_AUTH_HTPASSWD_PATH: "/auth/{{ bootstrap_docker_registry__auth_file }}"
    ports:
      - "{{ bootstrap_docker_registry__host_port }}:{{ bootstrap_docker_registry__container_port }}"
  register: output

- name: Create secure docker registry without auth enabled
  when: not bootstrap_docker_registry__enable_auth
  community.docker.docker_container:
    name: "{{ bootstrap_docker_registry__container_name }}"
    image: registry:2
    restart_policy: unless-stopped
    container_default_behavior: compatibility
#    container_default_behavior: no_defaults
    volumes:
      - "{{ bootstrap_docker_registry__cert_path }}:/certs"
      - "{{ bootstrap_docker_registry__auth_path }}:/auth"
      - "{{ bootstrap_docker_registry__config_path }}/config.yml:/etc/docker/registry/config.yml:ro"
    env:
      REGISTRY_HTTP_TLS_CERTIFICATE: "/certs/{{ bootstrap_docker_registry__cert_file }}"
      REGISTRY_HTTP_TLS_KEY: "/certs/{{ bootstrap_docker_registry__key_file }}"
    ports:
      - "{{ bootstrap_docker_registry__host_port }}:{{ bootstrap_docker_registry__container_port }}"
  register: output

## ref: https://github.com/ansible/ansible/issues/31377
- name: Setup registry frontend container
  community.docker.docker_container:
    name: registry-frontend
#    hostname: registry-frontend
    state: started
    restart_policy: always
    image: konradkleine/docker-registry-frontend:v2
    container_default_behavior: compatibility
#    container_default_behavior: no_defaults
    links: "{{ bootstrap_docker_registry__container_name }}:registry"
    ports:
      - "{{ bootstrap_docker_registry__frontend_port }}:443"
    volumes:
      - "{{ bootstrap_docker_registry__cert_path }}/{{ bootstrap_docker_registry__cert_file }}:/etc/apache2/server.crt:ro"
      - "{{ bootstrap_docker_registry__cert_path }}/{{ bootstrap_docker_registry__key_file }}:/etc/apache2/server.key:ro"
    env:
      ENV_DOCKER_REGISTRY_HOST: registry
      ENV_DOCKER_REGISTRY_PORT: "{{ bootstrap_docker_registry__host_port }}"
      ENV_USE_SSL: "yes"
      ENV_DOCKER_REGISTRY_USE_SSL: "1"
      FRONTEND_BROWSE_ONLY_MODE: "false"
      ENV_REGISTRY_PROXY_FQDN: "{{ bootstrap_docker_registry__proxy_fqdn }}"
      ENV_REGISTRY_PROXY_PORT: "443"

- name: "Test docker registry"
  block: ## Test docker registry
    - name: Wait for registry to start
      ansible.builtin.wait_for:
        host: 127.0.0.1
        port: "{{ bootstrap_docker_registry__host_port }}"

    - name: Get container state
      ansible.builtin.command: "{% raw %}docker inspect --format='{{ .State.Running }}' registry{% endraw %}"
      changed_when: false
      register: container_state

    - name: Assert container is running
      ansible.builtin.assert:
        that:
          - container_state.stdout == 'true'

    ## can also test using curl
    ## curl -u testuser:testpassword -vkIsS https://media.johnson.int:5000/v2/
    - name: Authenticate each user
      when: bootstrap_docker_registry__enable_auth
      community.docker.docker_login:
        registry_url: "https://localhost:5000"
        username: "{{ item.username }}"
        password: "{{ item.password }}"
      loop: "{{ bootstrap_docker_registry__users }}"

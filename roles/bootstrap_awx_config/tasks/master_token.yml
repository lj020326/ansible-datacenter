---

- name: Ensure /awx/ folder exists
  delegate_to: localhost
  become: false
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  ansible.builtin.file:
    path: '/tmp/awx/'
    recurse: true
    mode: '0755'
    state: directory

- name: Ensure /awx/tokens.yml file exists
  delegate_to: localhost
  become: false
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  ansible.builtin.file:
    path: '/tmp/awx/tokens.yml'
    mode: '0600'
    state: touch

- name: Insert '# AWX/Automation Controller Token' spacer to tokens.yml
  delegate_to: localhost
  become: false
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  ansible.builtin.lineinfile:
    path: /tmp/awx/tokens.yml
    line: '# AWX/Automation Controller Token'
    mode: '0600'

- name: Include AWX/Automation Controller master token from tokens.yml
  delegate_to: localhost
  become: false
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  ansible.builtin.include_vars:
    file: /tmp/awx/tokens.yml
  no_log: True

- name: "Get AWX/Automation Controller administrator token (1/2)"
  changed_when: false
  ansible.builtin.shell: |
    kubectl get pods --namespace=awx | grep -v 'NAME\|awx-operator\|awx-postgres' | awk '{print $1}'
  register: awx_pod

- name: "Get AWX/Automation Controller administrator token (2/2)"
  changed_when: false
  ansible.builtin.command: |
      kubectl exec -n awx -i -t {{ awx_pod.stdout }} --container awx-task -- /bin/bash \
        -c 'awx-manage create_oauth2_token --user {{ bootstrap_awx_admin_username }}'
  register: awx_token
  #no_log: True

- name: Add master_token line to tokens.yml file
  delegate_to: localhost
  become: false
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  ansible.builtin.lineinfile:
    path: '/tmp/awx/tokens.yml'
    insertafter: '# AWX/Automation Controller Token'
    regexp: "^#? *{{ item.key | regex_escape() }}:"
    line: "{{ item.key }}: {{ item.value }}"
    mode: '0600'
    state: present
  with_dict:
    'master_token': '{{ awx_token.stdout }}'
#    'master_token': '{{ master_token_creation.ansible_facts.tower_token.token }}'
  no_log: True

- name: Add master_token_id line to tokens.yml file
  delegate_to: localhost
  become: false
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  ansible.builtin.lineinfile:
    path: '/tmp/awx/tokens.yml'
    insertafter: '# AWX/Automation Controller Token'
    regexp: "^#? *{{ item.key | regex_escape() }}:"
    line: "{{ item.key }}: {{ item.value }}"
    mode: '0600'
    state: present
  with_dict:
    'master_token_id': 'null'
#    'master_token_id': '{{ master_token_creation.ansible_facts.tower_token.id }}'

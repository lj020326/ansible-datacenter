---

- name: Bootstrap openstack kolla settings
  tags:
    - bootstrap-openstack-settings
  block:
    - name: Ensure openstack config dirs exist
      file:
        path: "{{ item.path }}"
        state: directory
        owner: "{{ item.owner | default( omit ) }}"
        group: "{{ item.owner | default( omit ) }}"
        mode: "{{ item.mode | default( omit ) }}"
        recurse: "{{ item.recurse | default( omit ) }}"
      with_items:
        - { path: "/etc/kolla", owner: "root", group: "root", recurse: yes  }

    - name: Install openstack config settings
      template:
        backup: yes
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        force: "{{ item.force | default('no') }}"
        mode: "{{ item.mode | default(omit) }}"
        owner: "{{ item.owner | default(omit) }}"
        group: "{{ item.group | default(omit) }}"
      with_items:
        - { src: 'kolla/globals.yml.j2', dest: "/etc/kolla/globals.yml", force: yes }
        - { src: 'kolla/passwords.yml.j2', dest: "/etc/kolla/passwords.yml" }

    - name: generating kolla openstack passwords
      shell: kolla-genpwd
      args:
        creates: '/etc/kolla/passwords.yml'

    ## ref: https://docs.openstack.org/kolla-ansible/latest/admin/advanced-configuration.html#openstack-service-configuration-in-kolla
    ## ref: https://docs.ansible.com/ansible/latest/plugins/lookup/filetree.html
    - name: Reset/remove kolla config directory at /etc/kolla/config
      file:
        path: "/etc/kolla/config/*"
        state: absent

    - name: Create kolla custom config directory at /etc/kolla/config
      file:
        path: "/etc/kolla/config"
        state: directory
        owner: "root"
        group: "root"

    ## ref: https://docs.openstack.org/kolla-ansible/latest/admin/advanced-configuration.html#openstack-service-configuration-in-kolla
    ## ref: https://docs.ansible.com/ansible/latest/plugins/lookup/filetree.html
    - name: Copy custom kolla config directory tree to /etc/kolla/config
      when: item.state == 'directory'
      file:
        path: "/etc/kolla/config/{{ item.path }}"
        state: directory
        mode: '{{ item.mode }}'
        owner: "root"
        group: "root"
      with_filetree:
        - "templates/kolla/config/"

    - name: Copy custom kolla configs to /etc/kolla/config
      when: item.state == 'file'
      template:
        src: "{{ item.src }}"
        dest: "/etc/kolla/config/{{ item.path }}"
#        force: "yes"
        owner: "root"
        group: "root"
#      with_fileglob:
#        - "../templates/kolla/config/*"
      with_filetree:
        - "templates/kolla/config/"

    - name: Copy rndc.conf to /etc/kolla/config
      when: openstack_kolla_options.designate_backend|bool or openstack_kolla_options.designate_backend_external=="bind9"
      copy:
        src: "{{ item.src }}"
        dest: "/etc/kolla/config/designate/{{ item.path | default(item.src | basename) }}"
#        force: "yes"
        owner: "root"
        group: "root"
      with_items:
        - { src: "~/.bind/rndc.conf", path: "rndc.conf" }
        - { src: "~/.bind/rndc.key" }

- name: Setup openstack virtualenv
  include_tasks: setup-openstack-venv.yml

- name: Run Openstack Kolla playbooks
  when: openstack_kolla_run_playbooks | default(no)
  block:

    - name: Create Openstack Kolla inventory file directory if not exists
      file:
        path: "{{ openstack_kolla_pb_inventory_dir }}"
        state: directory

    - name: Setup Openstack Kolla inventory file
      template:
        src: kolla/inventory.ini.j2
        dest: "{{ openstack_kolla_pb_inventory_dir }}/{{ openstack_kolla_pb_inventory_file }}"

    - name: Run openstack kolla playbooks
      tags:
        - openstack-kolla-playbook
      include_tasks: run-openstack-kolla-playbook.yml
      with_items: "{{ openstack_kolla_playbooks }}"
      loop_control:
        loop_var: kolla_playbook

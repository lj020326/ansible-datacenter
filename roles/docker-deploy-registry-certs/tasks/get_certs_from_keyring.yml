---

- name: "get_certs_from_keyring:{{ inventory_hostname }} | Ensure {{ ca_keyring_certs_dir }} exists"
  file:
    path: "{{ ca_keyring_certs_dir }}"
    state: directory
    mode: 0755

- name: Display cacert_keyring_host
  debug:
    msg:
      - "cacert_keyring_host={{cacert_keyring_host}}"
      - "ansible_ssh_user={{ansible_ssh_user}}"

#- name: "get_certs_from_keyring:{{ inventory_hostname }} | Copy registry certs"
#  become: yes
#  become_user: root
#  delegate_to: "{{ cacert_keyring_host }}"
#  vars:
#    ansible_python_interpreter: "{{ os_python3_interpreter }}"
##    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
#    ansible_ssh_common_args: "-o ControlMaster=no -o ControlPersist=30m -o ServerAliveInterval=50 -o StrictHostKeyChecking=no"
##    ssh_args: "-o ControlMaster=none -o ControlPersist=30m -o ServerAliveInterval=50"
#  fetch:
#    src: "{{ keyring_cacerts_base_dir }}/{{ item.host }}/{{ item.host }}.pem"
#    dest: "{{ ca_keyring_certs_dir }}/{{ item.host }}.pem"
#    mode: "644"
#    flat: yes
#  loop: "{{ docker_registries }}"

- name: "get_certs_from_keyring:{{ inventory_hostname }} | Copy registry certs"
  become: no
  delegate_to: "localhost"
  shell: >
    rsync -arP -e'ssh -o StrictHostKeyChecking=no'
    {{ ansible_ssh_user }}@{{ cacert_keyring_host }}:{{ keyring_cacerts_base_dir }}/{{ item.host }}/{{ item.host }}.chain.pem
    {{ ca_keyring_certs_dir }}/{{ item.host }}.pem
  loop: "{{ docker_registries }}"



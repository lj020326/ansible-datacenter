---
- name: Ensuring directories for secret materials exist
  block:
    - name: Set secret
      when: secret is not defined
      ansible.builtin.set_fact:
        #        secret: "{{ (inventory_dir + '/../secrets/') | realpath }}"
        secret: "{{ (playbook_dir + '/secrets/') | realpath }}"

    - name: Ensure secret directories
      ansible.builtin.file:
        path: "{{ secret + '/' + item }}"
        state: directory
        mode: "0755"
      loop:
        - credentials
        - certificates/{{ ansible_fqdn }}/issuing
      delegate_to: localhost

- name: Checking if issuing CA materials exist
  ansible.builtin.stat:
    path: "{{ secret + '/certificates/' + ansible_fqdn + '/issuing/' + issuing_ca_keyname }}"
  register: ca_priv
  delegate_to: localhost

- name: Display error if ca_priv does not exist
  when: not ca_priv.stat.exists
  ansible.builtin.fail:
    msg: Issuing CA material does not exist!

- name: Installing golang
  ansible.builtin.package:
    name: "{{ stepca_golang_package }}"
#    default_release: testing

- name: Stopping services that could be running
  ignore_errors: true # noqa: ignore-errors
  block:
    - name: Ensure running services are stopped
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
      loop: "{{ stepca_services }}"

#    - ansible.builtin.systemd:
#        name: "{{ item }}"
#        state: stopped
#      loop: "{{ ctlog_services if stepca_ca_server else ['stepca-test-ct'] }}"

## Step-ca
- name: Download Step-ca Server .deb package
  ansible.builtin.get_url:
    url: "{{ stepca__step_ca_deb_url }}"
    dest: "{{ stepca__src + '/' + stepca__step_ca_deb_url | basename }}"
    mode: "0644"
  #    checksum: "{{ stepca__step_ca_deb_checksum }}"
  #  become: True
  #  become_user: "{{ stepca__user }}"
  register: stepca__register_step_ca_package
  until: stepca__register_step_ca_package is succeeded

- name: Verify Step-ca Server package signature
  ansible.builtin.command: dpkg-sig --verify {{ stepca__src + '/' + (stepca__step_ca_deb_url | basename) }}
  #  become: True
  #  become_user: "{{ stepca__user }}"
  changed_when: false
  check_mode: false

- name: Install Step-ca Server .deb package
  ansible.builtin.apt:
    deb: "{{ stepca__src }}/{{ stepca__step_ca_deb_url | basename }}"
    state: present
  register: stepca__register_step_ca_deb
  until: stepca__register_step_ca_deb is succeeded

- name: Creating Step-ca service account
  no_log: true
  ansible.builtin.user:
    name: "{{ ca_svc_user }}"
    password: "*"
    shell: /sbin/nologin
    create_home: false
    system: true

- name: Creating installation directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ install_root }}/config"
    - "{{ install_root }}/config/dburl"
    - "{{ install_root }}/certs/web"
    - "{{ install_root }}/certs/grpc"
    - "{{ ct_install_root }}/config"
    - "{{ ct_install_root }}/signing_keys"
    - "{{ trillian_install_root }}/config"

- name: Moving Step-ca binaries
  ansible.builtin.copy:
    dest: "{{ install_root }}/{{ item }}"
    remote_src: true
    src: "{{ src_root }}/bin/{{ item }}"
    owner: "{{ ca_svc_user }}"
    group: "{{ ca_svc_user }}"
    mode: ug=rwx,o=r
  loop: "{{ stepca_apps }}"

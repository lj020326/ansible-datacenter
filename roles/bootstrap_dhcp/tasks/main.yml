---

- name: Set OS specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "{{ default }}.yml"
  tags: dhcp

- name: Install packages
  ansible.builtin.package:
    name: "{{ dhcp_packages }}"
    state: "{{ dhcp_packages_state }}"
  tags: dhcp

- name: Run apparmor-fix.yml
  ansible.builtin.include_tasks: apparmor-fix.yml
  when: ansible_os_family == 'Debian' and dhcp_apparmor_fix|bool
  tags: dhcp

- name: Run default-fix.yml
  ansible.builtin.include_tasks: default-fix.yml
  when: ansible_os_family == 'Debian'
  tags: dhcp

- name: Install custom includes
  ansible.builtin.template:
    src: "{{ item.0 }}"
    dest: "{{ dhcp_config_dir }}/{{ ( item.0 | basename ).split('.j2')[0] }}"
    owner: root
    mode: "{{ item.1 | default('0644') }}"
  loop: "{{ dhcp_custom_includes | zip_longest(dhcp_custom_includes_modes | default([])) | list }}"
  when: dhcp_custom_includes is defined
  notify: restart dhcp
  tags: dhcp

- name: Install includes # noqa: ignore-errors
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ dhcp_config_dir }}/{{ item | basename }}"
    mode: "0644"
  loop: "{{ dhcp_global_includes }}"
  when: dhcp_global_includes is defined
  ignore_errors: "{{ dhcp_global_includes_missing }}"
  tags: dhcp

- name: Set config directory perms
  ansible.builtin.file:
    path: "{{ dhcp_config | dirname }}"
    state: directory
    mode: "0755"
  tags: dhcp

- name: Install config file
  ansible.builtin.template:
    src: etc_dhcp_dhcpd.conf.j2
    dest: "{{ dhcp_config }}"
    owner: root
    mode: "0644"
    validate: 'dhcpd -t -cf %s'
  notify: restart dhcp
  tags: dhcp

- name: "Ensure service is {{ dhcp_global_server_state | default('started') }}"
  ansible.builtin.service:
    name: "{{ dhcp_service }}"
    state: "{{ dhcp_global_server_state | default('started') }}"
    enabled: true
  tags: dhcp

---
## ref: https://medium.com/@perwagnernielsen/ansible-tutorial-part-2-installing-packages-41d3ab28337d
## ref: https://github.com/tcosta84/ansible-role-python/blob/master/tasks/install_python.yml
## ref: https://solarianprogrammer.com/2017/06/30/building-python-ubuntu-wsl-debian/
## ref: https://awsbloglink.wordpress.com/2017/06/14/python-3-installation-ansible/
## also: https://stackoverflow.com/questions/32546506/how-to-install-python3-4-3-with-ansible

- include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "default.yml"

- name: "Installing Packages required by python"
  package:
    name: "{{ python_packages }}"
    state: present
#    state: latest
#    update_cache: yes

- name: "Check for existing python install"
  stat:
    path: "{{ path_to_python }}"
  register: python_path
#  ignore_errors: true

## ref: https://stackoverflow.com/questions/33094929/ansible-how-to-check-shell-output
- name: "Check python version"
  when: "not python_path.stat.exists"
  shell: "python -V"
  ignore_errors: true
  changed_when: False
  failed_when: False
  register: python_version

- name: make SRC directory
#  when: "not python_path.stat.exists"
  file:
    path: "{{ package_src_dir }}"
    state: directory

- name: "Check for existing python src dir"
  when: "not python_path.stat.exists"
  stat:
    path: "{{ python_src_dir }}"
  register: package_src_dir_path
#  ignore_errors: true

## ref: https://github.com/ansible/ansible/issues/47927
- name: unarchive
#  when: "python_version.stdout.find ('\"{{ python_target_version }}\"') == -1"
#  when: "(not python_path.stat.exists or python_target_version not in python_version.stdout) and not package_src_dir_path.stat.exists"
  when: "not python_path.stat.exists and not package_src_dir_path.stat.exists"
  unarchive:
    src: "{{ python_url }}"
    dest: "{{ package_src_dir }}"
    remote_src: True
  register: reg
  changed_when: False
  failed_when: False

- name: make
#  when: "python_version.stdout.find ('\"{{ python_target_version }}\"') == -1"
#  when: "not python_path.stat.exists or python_target_version not in python_version.stdout"
  when: "not python_path.stat.exists and python_target_version not in python_version.stdout"
#  shell: cd "{{ python_src_dir }}" && ./configure --shared --prefix={{ path_prefix_to_python }} && make && make install
#  shell: cd "{{ python_src_dir }}" && bash ./configure --enable-optimizations --shared --prefix={{ path_prefix_to_python }} && make -j 8 && make altinstall
  shell: cd "{{ python_src_dir }}" && bash ./configure --enable-optimizations --prefix={{ path_prefix_to_python }} && make -j 8 && make altinstall
  changed_when: False
  failed_when: False
  become: true
  become_method: sudo

## Install pip and pip common libs
- include_tasks: "install-pip.yml"

#- name: create links to python
#  file:
#    src: '{{ item.src }}'
#    dest: '{{ item.dest }}'
#    state: link
#  ignore_errors: true
#  changed_when: False
#  failed_when: False
#  with_items:
##    - { src: '/usr/local/bin/python{{ python_target_dist }}', dest: '/usr/local/bin/python' }
#    - { src: '/usr/local/bin/python{{ python_target_dist }}', dest: '/usr/local/bin/python{{ python_major_version }}' }
##    - { src: '/usr/local/bin/pip{{ python_target_dist }}'   , dest: '/usr/local/bin/pip'    }
#    - { src: '/usr/local/bin/pip{{ python_target_dist }}'   , dest: '/usr/local/bin/pip{{ python_major_version }}'    }
##    - { src: '/usr/local/bin/easy_install-{{ python_target_dist }}'   , dest: '/usr/local/bin/easy_install'    }
##    - { src: '/usr/local/bin/pyvenv-{{ python_target_dist }}'   , dest: '/usr/local/bin/pyvenv'    }

- name: Install Virtualenv
  pip:
    name: "virtualenv"


---

- name: Set os info
  set_fact:
    os_family: "{{ 'os_linux' if ansible_os_family|lower|d('') in ['debian', 'redhat'] else ansible_os_family|d('Unknown') }}"
    os_distribution: "os_{{ ansible_facts['distribution'] |d('Unknown') | lower | replace(' ','_') }}"
    os_distribution_version: "os_{{ ansible_facts['distribution'] |d('Unknown') | lower | replace(' ','_') }}_{{ ansible_facts['distribution_major_version'] | d(ansible_facts['distribution_release']) |d('Unknown') | lower | replace('.','_') | replace(' ','_') }}"
    os_machine_type: "os_machine_type_{{ ansible_virtualization_type | replace(',', '') | lower | d('baremetal') }}"

- name: Set os info for windows for vmware esx
  when: ansible_os_family|d('')=='VMkernel'
  set_fact:
    os_family: "os_esxi"
    os_distribution: "esxi"
    os_distribution_version: "os_esxi_{{ ansible_facts['distribution_major_version'] | d(ansible_facts['distribution_release']) |d('Unknown') | lower | replace('.','_') | replace(' ','_') }}"

- name: Set os info for windows for vmware vcenter
  when: ansible_os_family|d('')=='VMware Photon'
  set_fact:
    os_family: "os_vsphere"
    os_distribution: "vsphere"
    os_distribution_version: "os_vsphere_{{ ansible_facts['distribution'] |d('Unknown') | lower | replace(' ','_') }}_v{{ ansible_facts['distribution_major_version'] |d('Unknown') }}"

- name: Set os info for windows
  when: ansible_os_family|d('')|lower is search('windows')
  set_fact:
    os_family: "os_windows"
    os_distribution: "windows"
    os_distribution_version: "os_windows_{{ ansible_facts['distribution']|d('Unknown') | lower | replace(' ','_') | regex_replace('(microsoft_|windows_)', '') }}"

- name: Display os group classification info
  debug:
    msg:
      - "os_family={{ os_family }}"
      - "os_distribution={{ os_distribution }}"
      - "os_distribution_version={{ os_distribution_version }}"
      - "os_machine_type={{ os_machine_type }}"

- name: Group hosts based on os_family
  changed_when: no
  group_by:
    key: "{{ os_family }}"

- name: Group hosts based on os_distribution
  changed_when: no
  group_by:
    key: "{{ os_distribution }}"
    parents: "{{ os_family }}"

- name: Group hosts based on os_distribution_version
  changed_when: no
  group_by:
    key: "{{ os_distribution_version }}"
    parents: "{{ os_distribution }}"

- name: Group hosts based on os_machine_type
  changed_when: no
  group_by:
    key: "{{ os_machine_type }}"

#- name: Classify hosts depending on their internal domain
#  changed_when: no
#  group_by:
#    key: ca_domain_{{ ('_').join( inventory_hostname.split('.')[1::]|reverse ) | d(internal_domain) }}

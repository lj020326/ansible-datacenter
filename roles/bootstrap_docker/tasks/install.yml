---

- name: Docker | OS not supported by docker-ce
  ansible.builtin.fail:
    msg: This OS is not supported by Docker-CE, and therefore not supported by this role.
  when:
    - bootstrap_docker__edition == "ce"
    - (ansible_distribution|lower == "centos" and ansible_distribution_major_version | int == "6") or ansible_distribution|lower == "oraclelinux"

- name: Docker | Include {{ ansible_distribution }} specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version|lower }}.yml"
    - "{{ ansible_distribution|lower }}.yml"
    - "{{ ansible_os_family|lower }}.yml"
    - default.yml

- name: Docker | EE | Check Requirements
  when:
    - bootstrap_docker__edition == "ee"
    - bootstrap_docker__ee_url is not defined
  ansible.builtin.fail:
    msg: Variable bootstrap_docker__ee_url is required and is not defined.

- name: Docker | Storage Driver
  ansible.builtin.include_tasks: storage_drivers/{{ bootstrap_docker__storage_driver }}.yml
  when: bootstrap_docker__storage_driver is defined

- name: Docker | Start Installation using {{ ansible_pkg_mgr }} package manager
  ansible.builtin.include_tasks: "{{ bootstrap_docker__edition }}/{{ ansible_pkg_mgr }}.yml"
  when: bootstrap_docker__repo == "docker"

- name: Docker | Start Installation using {{ ansible_pkg_mgr }} package manager using RHSM
  ansible.builtin.include_tasks: "{{ bootstrap_docker__edition }}/{{ ansible_pkg_mgr }}-rhsm.yml"
  when: bootstrap_docker__repo == "rhsm"

- name: Docker | Start Installation | Other repo
  ansible.builtin.include_tasks: other_repo.yml
  when: bootstrap_docker__repo == "other"

- name: Docker | Install additional packages
  when: bootstrap_docker__additional_packages|d([])|length>0
  ansible.builtin.package:
    name: "{{ bootstrap_docker__additional_packages }}"
    state: present

- name: Docker | Ensure service starts at boot
  ansible.builtin.service:
    name: docker
    enabled: "{{ bootstrap_docker__service_enabled }}"

- name: Docker | Setup LVM for docker
  when: bootstrap_docker__setup_lvm|bool
  ansible.builtin.include_tasks: lvm_setup.yml

- name: Docker | Deploy Config
  ansible.builtin.include_tasks: deploy_config.yml

- name: Docker | Proxy configuration
  ansible.builtin.include_tasks: proxy.yml
  when: bootstrap_docker__http_proxy is defined or bootstrap_docker__https_proxy is defined or bootstrap_docker__no_proxy_params is defined

- name: Docker | Setup docker users
  when: bootstrap_docker__users is defined
  ansible.builtin.include_tasks: docker_users.yml

- name: Docker | Ensure service started
  when: bootstrap_docker__service_started|bool
  ansible.builtin.service:
    name: docker
    state: started

- name: Docker | Setup docker-compose
  when: bootstrap_docker__install_compose | bool
  ansible.builtin.include_tasks: docker_compose.yml

- name: Docker | Get docker system info on docker host
  when: bootstrap_docker__service_started|bool
  block:

    - name: Docker | Get docker system info on docker host
      community.docker.docker_host_info:
      register: __docker_info_result

    - name: Docker | Display __docker_info_result
      ansible.builtin.debug:
        var: __docker_info_result

    - name: Docker | Assert docker setup successful
      ansible.builtin.assert:
        that:
          - not __docker_info_result.failed

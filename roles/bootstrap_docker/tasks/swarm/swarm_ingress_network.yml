---

- name: "{{ __bootstrap_docker__log_prefix_network }} Get network info for ingress network"
  community.docker.docker_network_info:
    name: "{{ bootstrap_docker__ingress_network }}"
  register: __docker_network_info_result

- name: "{{ __bootstrap_docker__log_prefix_network }} Display __docker_network_info_result"
  ansible.builtin.debug:
    var: __docker_network_info_result

- name: "{{ __bootstrap_docker__log_prefix_network }} Set __docker_network_ingress_subnet"
  when: __docker_network_info_result.network.IPAM.Config is defined
  ansible.builtin.set_fact:
    __docker_network_ingress_subnet: "{{ (__docker_network_info_result.network.IPAM.Config | first)['Subnet'] }}"

- name: "{{ __bootstrap_docker__log_prefix_network }} Init __bootstrap_docker__ingress_network_invalid"
  ansible.builtin.set_fact:
    __bootstrap_docker__ingress_network_invalid: false

- name: "{{ __bootstrap_docker__log_prefix_network }} Set __bootstrap_docker__ingress_network_invalid if network.Ingress not defined"
  when: not __docker_network_info_result.network.Ingress is defined
  ansible.builtin.set_fact:
    __bootstrap_docker__ingress_network_invalid: true

- name: "{{ __bootstrap_docker__log_prefix_network }} Set __bootstrap_docker__ingress_network_invalid if network.Ingress false"
  when:
    - __docker_network_info_result.network.Ingress is defined
    - not __docker_network_info_result.network.Ingress|bool
  ansible.builtin.set_fact:
    __bootstrap_docker__ingress_network_invalid: true

- name: "{{ __bootstrap_docker__log_prefix_network }} Display bootstrap_docker__host_network_default_addr_pool"
  ansible.builtin.debug:
    var: bootstrap_docker__host_network_default_addr_pool

- name: "{{ __bootstrap_docker__log_prefix_network }} Display __docker_network_ingress_subnet"
  ansible.builtin.debug:
    var: __docker_network_ingress_subnet

- name: "{{ __bootstrap_docker__log_prefix_network }} Set invalid if ingress subnet in host network"
  when:
    - __docker_network_ingress_subnet is defined
    - bootstrap_docker__host_network_default_addr_pool | ansible.utils.network_in_network(__docker_network_ingress_subnet)
  ansible.builtin.set_fact:
    __bootstrap_docker__ingress_network_invalid: true

- name: "{{ __bootstrap_docker__log_prefix_network }} Display __bootstrap_docker__ingress_network_invalid"
  ansible.builtin.debug:
    var: __bootstrap_docker__ingress_network_invalid

- name: "{{ __bootstrap_docker__log_prefix_network }} Get docker info"
  community.docker.docker_stack_info:
  register: __docker_info_result

- name: "{{ __bootstrap_docker__log_prefix_network }} Remove and rejoin swarm node"
  when:
    - not bootstrap_docker__swarm_leader|bool
    - __docker_network_info_result.exists
    - __bootstrap_docker__ingress_network_invalid|bool
  ansible.builtin.include_tasks: swarm_node_rejoin.yml

## ref: https://stackoverflow.com/questions/59007780/container-running-on-docker-swarm-not-accessible-from-outside
- name: "{{ __bootstrap_docker__log_prefix_network }} Remove ingress network {{ bootstrap_docker__ingress_network }}"
  when:
    - bootstrap_docker__swarm_leader|bool
    - __bootstrap_docker__ingress_network_invalid|bool
  block:

    - name: "{{ __bootstrap_docker__log_prefix_network }} Remove ingress network {{ bootstrap_docker__ingress_network }}"
      community.docker.docker_network:
        name: "{{ bootstrap_docker__ingress_network }}"
        state: absent
        force: true

    - name: "{{ __bootstrap_docker__log_prefix_network }} Get network info for ingress network"
      community.docker.docker_network_info:
        name: "{{ bootstrap_docker__ingress_network }}"
      register: __docker_network_info_result

    - name: "{{ __bootstrap_docker__log_prefix_network }} Display __docker_network_info_result"
      ansible.builtin.debug:
        var: __docker_network_info_result

    - name: "{{ __bootstrap_docker__log_prefix_network }} Remove ingress network {{ bootstrap_docker__ingress_network }}"
      when: __docker_network_info_result.exists
      community.docker.docker_network:
        name: "{{ bootstrap_docker__ingress_network }}"
        state: absent
        force: true

  rescue:

    ## ref: https://stackoverflow.com/questions/67603029/unable-to-control-swarm-ingress-network-with-ansible
    - name: "{{ __bootstrap_docker__log_prefix_network }} Remove default ingress network"
      ansible.builtin.expect:
        command: docker network rm --force {{ bootstrap_docker__ingress_network }}
        responses:
          "[y/N]": "y"
      register: __network_remove_result

    - name: "{{ __bootstrap_docker__log_prefix_network }} Display __network_remove_result"
      ansible.builtin.debug:
        var: __network_remove_result

    - name: "{{ __bootstrap_docker__log_prefix_network }} Restart docker service"
      ansible.builtin.service:
        name: docker
        state: restarted

    - name: "{{ __bootstrap_docker__log_prefix_network }} Get network info for ingress network"
      community.docker.docker_network_info:
        name: "{{ bootstrap_docker__ingress_network }}"
      register: __docker_network_info_result

    - name: "{{ __bootstrap_docker__log_prefix_network }} Display __docker_network_info_result"
      ansible.builtin.debug:
        var: __docker_network_info_result

    - name: "{{ __bootstrap_docker__log_prefix_network }} Remove ingress network {{ bootstrap_docker__ingress_network }}"
      when:
        - __docker_network_info_result.exists
      ansible.builtin.expect:
        command: docker network rm --force {{ bootstrap_docker__ingress_network }}
        responses:
          "[y/N]": "y"
      register: __network_remove_result

    - name: "{{ __bootstrap_docker__log_prefix_network }} Display __network_remove_result"
      ansible.builtin.debug:
        var: __network_remove_result

    - name: "{{ __bootstrap_docker__log_prefix_network }} Restart docker service"
      ansible.builtin.service:
        name: docker
        state: restarted

- name: "{{ __bootstrap_docker__log_prefix_network }} Ensure ingress network"
  when: __bootstrap_docker__ingress_network_invalid|bool
  block:
#    ## ref: The module right now only handles plain docker networks
#    ## ref: https://github.com/ansible-collections/community.docker/issues/69
#    - name: "{{ __bootstrap_docker__log_prefix_network }} Ensure ingress network does not overlap with internal network"
#      community.docker.docker_network:
#        name: "{{ bootstrap_docker__ingress_network }}"
#        force: true
#        attachable: false
#        internal: false
#        scope: swarm
#        driver: overlay
#        driver_options:
#          ingress: true
#        ipam_config: "{{ __bootstrap_docker__ingress_network_ipam_config }}"
#      register: __configure_docker_network_ingress

    ## ref: https://stackoverflow.com/questions/59007780/container-running-on-docker-swarm-not-accessible-from-outside
    ## ref: https://stackoverflow.com/questions/67603029/unable-to-control-swarm-ingress-network-with-ansible
    - name: "{{ __bootstrap_docker__log_prefix_network }} Create customized ingress network"
      changed_when: false
      ansible.builtin.shell: |
        docker network create \
          --ingress \
          --driver overlay \
          --subnet {{ bootstrap_docker__ingress_network_subnet_cidr }} \
          --gateway {{ bootstrap_docker__ingress_network_subnet_gateway }} \
          ingress

    - name: "{{ __bootstrap_docker__log_prefix_network }} Get network info for ingress network"
      community.docker.docker_network_info:
        name: "{{ bootstrap_docker__ingress_network }}"
      register: __docker_network_info_result

    - name: "{{ __bootstrap_docker__log_prefix_network }} Display __docker_network_info_result"
      ansible.builtin.debug:
        var: __docker_network_info_result

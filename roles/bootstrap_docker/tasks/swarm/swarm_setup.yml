---
- name: "{{ __bootstrap_docker__log_prefix_swarm }} Display bootstrap_docker__swarm_managers"
  ansible.builtin.debug:
    var: bootstrap_docker__swarm_managers

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Display ansible_fqdn"
  ansible.builtin.debug:
    var: ansible_fqdn

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Display __bootstrap_docker__swarm_remote_addrs"
  ansible.builtin.debug:
    var: __bootstrap_docker__swarm_remote_addrs

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Display bootstrap_docker__swarm_adv_addr"
  ansible.builtin.debug:
    var: bootstrap_docker__swarm_adv_addr

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Display role swarm option vars"
  ansible.builtin.debug:
    msg:
      - "bootstrap_docker__swarm_role={{ bootstrap_docker__swarm_role }}"
      - "bootstrap_docker__swarm_leader={{ bootstrap_docker__swarm_leader }}"
      - "bootstrap_docker__swarm_manager={{ bootstrap_docker__swarm_manager }}"
      - "bootstrap_docker__swarm_worker={{ bootstrap_docker__swarm_worker }}"
      - "bootstrap_docker__swarm_leave={{ bootstrap_docker__swarm_leave }}"

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Assert required swarm config variables are defined"
  ansible.builtin.assert:
    that:
      - bootstrap_docker__swarm_leader_host is defined
      - bootstrap_docker__swarm_managers|d([])|length>0
#      - __bootstrap_docker__swarm_remote_addrs|d([])|length>0

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Display ansible_python_interpreter"
  ansible.builtin.debug:
    var: ansible_python_interpreter

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Display ansible_user"
  ansible.builtin.debug:
    var: ansible_user

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Get installed python module/package list"
  #    ignore_errors: true
  #    failed_when: false
  no_log: true
  community.general.pip_package_info:
    clients: [pip3]
  register: __python_package_info

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Display __python_package_info"
  ansible.builtin.debug:
    var: __python_package_info
    verbosity: 2

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Set __docker_package_info"
  when: __python_package_info.packages.pip3 is defined
  #    no_log: true
  ansible.builtin.set_fact:
    __docker_package_info: "{{ __python_package_info.packages.pip3['docker'] | d({}) }}"

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Display __docker_package_info"
  ansible.builtin.debug:
    var: __docker_package_info|d('')

## ref: https://stackoverflow.com/questions/2589711/find-full-path-of-the-python-interpreter-python-executable
- name: "{{ __bootstrap_docker__log_prefix_swarm }} Get python exec path"
  changed_when: false
  ansible.builtin.shell: |
    {{ ansible_python_interpreter }} -c "import sys; print(print(sys.executable))"
  register: __python_path_info

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Display __python_path_info.stdout"
  ansible.builtin.debug:
    var: __python_path_info.stdout | d('')

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Display __bootstrap_docker__swarm_firewalld_ports"
  ansible.builtin.debug:
    var: __bootstrap_docker__swarm_firewalld_ports

## ref: https://docs.docker.com/engine/swarm/ingress/
## ref: https://docs.docker.com/engine/swarm/swarm-tutorial/#the-ip-address-of-the-manager-machine
## ref: https://stackoverflow.com/questions/54298815/is-it-necessary-to-open-ports-2377-7946-4789-to-create-a-docker-swarm
- name: "{{ __bootstrap_docker__log_prefix_swarm }} Configure firewall for docker swarm communications"
  when: __bootstrap_docker__swarm_firewalld_ports|d([])|length > 0
  ansible.builtin.include_role:
    name: bootstrap_linux_firewalld
  vars:
    firewalld_action: configure
    firewalld_ports: "{{ __bootstrap_docker__swarm_firewalld_ports | d([]) }}"

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Setup leader node"
  when: bootstrap_docker__swarm_leader|bool
  ansible.builtin.include_tasks: swarm_leader.yml

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Setup manager/worker node"
  when: bootstrap_docker__swarm_manager|bool or bootstrap_docker__swarm_worker|bool
  ansible.builtin.include_tasks: swarm_node.yml

#- name: "{{ __bootstrap_docker__log_prefix_swarm }} MANAGERS"
#  when: bootstrap_docker__swarm_manager|bool
#  ansible.builtin.include_tasks: swarm_manager.yml
#
#- name: "{{ __bootstrap_docker__log_prefix_swarm }} WORKERS"
#  when: bootstrap_docker__swarm_worker|bool
#  ansible.builtin.include_tasks: swarm_worker.yml

- name: "{{ __bootstrap_docker__log_prefix_swarm }} Leave swarm"
  when: bootstrap_docker__swarm_leave|bool
  ansible.builtin.include_tasks: swarm_leave.yml

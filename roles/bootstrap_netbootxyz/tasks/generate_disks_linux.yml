---

- name: Copy netboot.xyz local legacy iPXE configs
  ansible.builtin.copy:
    src: "ipxe/local/{{ item }}"
    dest: "{{ ipxe_source_dir }}/src/config/local/{{ item }}"
    mode: "0644"
  with_items:
    - colour.h
    - console.h
    - crypto.h

- name: Copy netboot.xyz general.h.efi iPXE config
  ansible.builtin.copy:
    src: "ipxe/local/general.h.efi"
    dest: "{{ ipxe_source_dir }}/src/config/local/general.h"
    mode: "0644"

- name: Set trust file to ipxe ca
  ansible.builtin.set_fact:
    trust_files: "{{ cert_dir }}/{{ ipxe_ca_filename }}"
  when: not generate_signatures

- name: Combine trust args if set
  ansible.builtin.set_fact:
    trust_files: "{{ cert_dir }}/{{ ipxe_ca_filename }},{{ cert_dir }}/{{ cert_file_filename }}"
  when: generate_signatures | bool

- name: Compile iPXE Linux bootloader for Legacy BIOS
  changed_when: false
  ansible.builtin.shell: |
    make clean
    make -j{{ make_num_jobs }} \
         EMBED={{ bootloader_filename }} \
         TRUST={{ trust_files }} \
         bin-x86_64-linux/slirp.linux
  args:
    chdir: "{{ ipxe_source_dir }}/src"
  when: not ipxe_debug_enabled | bool

- name: Compile iPXE Linux bootloader for Legacy BIOS with debug flags
  changed_when: false
  ansible.builtin.shell: |
    make clean
    make -j{{ make_num_jobs }} \
         EMBED={{ bootloader_filename }} \
         DEBUG={{ ipxe_debug_options }} \
         TRUST={{ trust_files }} \
         bin-x86_64-linux/slirp.linux
  args:
    chdir: "{{ ipxe_source_dir }}/src"
  when: ipxe_debug_enabled | bool

- name: Copy iPXE linux binary for Legacy BIOS to http directory
  ansible.builtin.copy:
    src: "{{ ipxe_source_dir }}/src/bin-x86_64-linux/slirp.linux"
    dest: "{{ netbootxyz_root }}/ipxe/{{ bootloader_filename }}-linux.bin"
    remote_src: true
    mode: "0644"
  when: bootloader_filename != "netboot.xyz-metal"

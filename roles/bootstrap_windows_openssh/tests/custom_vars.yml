---
- name: install with custom vars
  hosts: os_windows
  gather_facts: false
  vars:
    opt_openssh_install_path: C:\OpenSSH
    opt_openssh_port: 2222
    opt_openssh_pubkey_auth: false
    opt_openssh_password_auth: false
    opt_openssh_skip_start: true
    opt_openssh_version: v7.9.0.0p1-Beta
    opt_openssh_pubkeys: mypubkey
    opt_openssh_default_shell: powershell.exe
    opt_openssh_shared_admin_key: true
    opt_openssh_powershell_subsystem: C:\PROGRA~1\POWERS~1\7\pwsh.exe

  roles:
    - role: bootstrap_windows_openssh
      run: 1
    - role: bootstrap_windows_openssh
      run: 2

  post_tasks:
    - name: get info on the sshd service
      ansible.windows.win_service:
        name: sshd
      register: sshd_service

    - name: get info on the ssh-agent service
      ansible.windows.win_service:
        name: ssh-agent
      register: sshagent_service

    - name: check sshd is listening in on port 2222
      ansible.windows.win_shell: Get-NetTCPConnection -State Listen -LocalPort 2222 -LocalAddress 0.0.0.0 -ErrorAction SilentlyContinue; exit 0
      changed_when: false
      register: listener_process

    - name: check if firewall rule is set
      ansible.windows.win_shell: if (Get-NetFirewallRule -DisplayName "Win32-OpenSSH inbound" -ErrorAction SilentlyContinue) { $true } else { $false }
      check_mode: false
      changed_when: false
      register: firewall_rule

    - name: get environment values
      ansible.windows.win_command: cmd.exe /c set
      check_mode: false
      changed_when: false
      register: env_values

    - name: get PATH variable
      ansible.windows.win_reg_stat:
        path: HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Environment
        name: PATH
      register: path_values

    - name: get the contents of the sshd_config_default file
      ansible.windows.win_shell: Get-Content -Path C:\OpenSSH\sshd_config_default
      changed_when: false
      register: sshd_config
      when: not ansible_check_mode

    - name: get the contents of the user's authorized_keys file
      ansible.windows.win_shell: Get-Content -Path $env:USERPROFILE\.ssh\authorized_keys
      changed_when: false
      register: auth_keys
      when: not ansible_check_mode

    - name: get permissions of the .ssh folder
      ansible.windows.win_shell: icacls.exe "$($env:USERPROFILE)\.ssh"
      changed_when: false
      register: ssh_acl

    - name: get permissions of the authorized_keys file
      ansible.windows.win_shell: icacls.exe "$($env:USERPROFILE)\.ssh\authorized_keys"
      changed_when: false
      register: pubkeys_acl

    - name: get default shell registry key value
      ansible.windows.win_reg_stat:
        path: HKLM:\SOFTWARE\OpenSSH
        name: DefaultShell
      register: default_shell

    - name: assert results (check mode)
      ansible.builtin.assert:
        that:
          - not sshd_service.exists
          - not sshagent_service.exists
          - not firewall_rule.stdout_lines[0]|bool
          - '"OPENSSH_HOME=C:\Program Files\OpenSSH" not in env_values.stdout_lines'
          - '"%OPENSSH_HOME%" not in path_values.raw_value'
      when: ansible_check_mode

    # Avoids quoting hell required in assert
    - name: Set expected_subsystem_line
      ansible.builtin.set_fact: # noqa: no-tabs
        expected_subsystem_line: "Subsystem\tpowershell\tC:\\PROGRA~1\\POWERS~1\\7\\pwsh.exe -sshs -NoLogo -NoProfile"

    - name: assert results
      ansible.builtin.assert:
        that:
          - sshd_service.path == '"C:\OpenSSH\sshd.exe"'
          - sshd_service.start_mode == "manual"
          - sshd_service.state == "stopped"
          - sshagent_service.path == '"C:\OpenSSH\ssh-agent.exe"'
          - sshagent_service.start_mode == "manual"
          - sshagent_service.state == "stopped"
          - not listener_process.stdout
          - firewall_rule.stdout_lines[0]|bool
          - '"OPENSSH_HOME=C:\OpenSSH" in env_values.stdout_lines'
          - '"%OPENSSH_HOME%" in path_values.raw_value'
          - '"Port 2222" in sshd_config.stdout_lines'
          - '"#Port 22" not in sshd_config.stdout_lines'
          - '"PubkeyAuthentication no" in sshd_config.stdout_lines'
          - '"#PubkeyAuthentication yes" not in sshd_config.stdout_lines'
          - '"PasswordAuthentication no" in sshd_config.stdout_lines'
          - '"#PasswordAuthentication yes" not in sshd_config.stdout_lines'
          - '"mypubkey" in auth_keys.stdout_lines'
          - '"       AuthorizedKeysFile __PROGRAMDATA__/ssh/administrators_authorized_keys" in sshd_config.stdout_lines'
          - expected_subsystem_line in sshd_config.stdout_lines
          - '"NT AUTHORITY\SYSTEM:(OI)(CI)(F)" in ssh_acl.stdout'
          - '"BUILTIN\Administrators:(OI)(CI)(F)" in ssh_acl.stdout'
          - ansible_user + ":(OI)(CI)(F)" in ssh_acl.stdout
          - '"NT AUTHORITY\SYSTEM:(I)(F)" in pubkeys_acl.stdout'
          - '"BUILTIN\Administrators:(I)(F)" in pubkeys_acl.stdout'
          - ansible_user + ":(I)(F)" in pubkeys_acl.stdout
          - default_shell.value == 'powershell.exe'
      when: not ansible_check_mode

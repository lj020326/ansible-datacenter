---
## ref: https://osric.com/chris/accidental-developer/2018/03/using-ansible-to-check-version-before-install-or-upgrade/
- name: "Check for existing zlib install"
  tags: libz
  stat:
    path: "{{ path_to_libz }}"
  register: libz_path
#  ignore_errors: true

- name: "Check for existing zlib tmp dir"
  tags: libz
  stat:
    path: "{{ zlib_dir }}"
  register: libz_src_dir_path
#  ignore_errors: true

## ref: https://stackoverflow.com/questions/33094929/ansible-how-to-check-shell-output
- name: "Check zlib version"
  when: libz_path.stat.exists
  tags: libz
  shell: "cat {{ path_to_libz_header }} | grep \"#define ZLIB_VERSION\" | awk '{print $3}'"
  ignore_errors: true
  changed_when: False
  failed_when: False
  register: libz_version

## ref: https://github.com/ansible/ansible/issues/47927
- name: unarchive
#  when: "zlib_version.stdout.find ('\"{{ libz_target_version }}\"') == -1"
  when: "(not libz_path.stat.exists or libz_target_version not in libz_version.stdout) and not libz_src_dir_path.stat.exists"
  tags: libz
  unarchive:
    src: "{{ zlib_url }}"
    dest: "{{ zlib_tmp }}"
    remote_src: True
  register: reg
  changed_when: False
  failed_when: False

- name: make
#  when: "zlib_version.stdout.find ('\"{{ libz_target_version }}\"') == -1"
  when: "not libz_path.stat.exists or libz_target_version not in libz_version.stdout"
  tags: libz
#  shell: cd "{{ zlib_dir }}" && ./configure --shared --prefix={{ path_prefix_to_libz }} && make && make install
  shell: cd "{{ zlib_dir }}" && bash ./configure --shared --prefix={{ path_prefix_to_libz }} && make && make install
  changed_when: False
  failed_when: False
  become: true
  become_method: sudo

---

- name: Ensuring directories for secret materials exist
  block:
    - set_fact:
#        secret: '{{ (inventory_dir + "/../secrets/") | realpath }}'
        secret: '{{ (playbook_dir + "/secrets/") | realpath }}'
      when: secret is not defined

    - file:
        path: '{{ secret + "/" + item }}'
        state: directory
      loop:
        - credentials
        - 'certificates/{{ ansible_fqdn }}/issuing'
      delegate_to: localhost

- name: Checking if issuing CA materials exist
  stat:
    path: '{{ secret + "/certificates/" + ansible_fqdn + "/issuing/" + issuing_ca_keyname }}'
  register: ca_priv
  delegate_to: localhost

- fail:
    msg: Issuing CA material does not exist!
  when: not ca_priv.stat.exists

- name: "Installing golang"
  package:
    name: "{{ stepca_golang_package }}"
#    default_release: testing

- name: Stopping services that could be running
  block:
    - systemd:
        name: '{{ item }}'
        state: stopped
      loop: '{{ stepca_services }}'

#    - systemd:
#        name: '{{ item }}'
#        state: stopped
#      loop: '{{ ctlog_services if stepca_ca_server else ["stepca-test-ct"] }}'
  ignore_errors: yes

## Step-ca
- name: Download Step-ca Server .deb package
  get_url:
    url: "{{ stepca__step_ca_deb_url }}"
    dest: "{{ stepca__src + "/" + stepca__step_ca_deb_url | basename }}"
#    checksum: "{{ stepca__step_ca_deb_checksum }}"
#  become: True
#  become_user: '{{ stepca__user }}'
  register: stepca__register_step_ca_package
  until: stepca__register_step_ca_package is succeeded

- name: Verify Step-ca Server package signature
  command: dpkg-sig --verify {{ stepca__src + '/' + (stepca__step_ca_deb_url | basename) }}
#  become: True
#  become_user: '{{ stepca__user }}'
  changed_when: False
  check_mode: False

- name: Install Step-ca Server .deb package
  apt:
    deb: "{{ stepca__src }}/{{ stepca__step_ca_deb_url | basename }}"
    state: 'present'
  register: stepca__register_step_ca_deb
  until: stepca__register_step_ca_deb is succeeded

- name: Creating Step-ca service account
  user:
    name: '{{ ca_svc_user }}'
    password: '*'
    shell: /sbin/nologin
    create_home: no
    system: yes

- name: Creating installation directories
  file:
    path: '{{ item }}'
    state: directory
  loop:
    - '{{ install_root }}/config'
    - '{{ install_root }}/config/dburl'
    - '{{ install_root }}/certs/web'
    - '{{ install_root }}/certs/grpc'
    - '{{ ct_install_root }}/config'
    - '{{ ct_install_root }}/signing_keys'
    - '{{ trillian_install_root }}/config'

- name: Moving Step-ca binaries
  copy:
    dest: '{{ install_root }}/{{ item }}'
    remote_src: yes
    src: '{{ src_root }}/bin/{{ item }}'
    owner: '{{ ca_svc_user }}'
    group: '{{ ca_svc_user }}'
    mode: ug=rwx,o=r
  loop: '{{ stepca_apps }}'

---

- name: Set os info
  set_fact:
    os_family: "os_{{ 'linux' if ansible_os_family|d('unknown')|lower in ['debian', 'redhat'] else ansible_os_family|d('unknown')|lower }}"
    os_distribution: "os_{{ ansible_facts['distribution'] | d('unknown') | lower | replace(' ','_') }}"
    os_distribution_version: "os_{{ ansible_facts['distribution'] | d('unknown') | lower | replace(' ','_') }}_{{ ansible_facts['distribution_major_version'] | d(ansible_facts['distribution_release']) |d('unknown') | lower | replace('.','_') | replace(' ','_') }}"

- name: Set os info for windows for vmware esx
  when: ansible_os_family|d('')=='VMkernel'
  set_fact:
    os_family: "os_esxi"
    os_distribution: "os_{{ ansible_facts['distribution'] | d('unknown') | lower | replace(' ','_') }}"
    os_distribution_version: "os_esxi_{{ ansible_facts['distribution_major_version'] | d(ansible_facts['distribution_release']) |d('unknown') | lower | replace('.','_') | replace(' ','_') }}"

- name: Set os info for windows for vmware vcenter
#  when: ansible_os_family|d('')=='VMware Photon'
  when: ansible_os_family|d('')|lower is search('vmware.*photon')
  set_fact:
    os_family: "os_vcenter"
    os_distribution: "os_{{ ansible_facts['distribution'] | d('unknown') | lower | replace(' ','_') }}"
    os_distribution_version: "os_vcenter_{{ ansible_facts['distribution'] |d('unknown') | lower | replace(' ','_') }}_v{{ ansible_facts['distribution_major_version'] |d('unknown') }}"

- name: Set os info for windows
  when: ansible_os_family|d('')|lower is search('windows')
  set_fact:
    os_family: "os_windows"
    os_distribution: "os_{{ ansible_facts['distribution'] | d('unknown') | lower | replace(' ','_') }}"
    os_distribution_version: "os_windows_{{ ansible_facts['distribution']|d('unknown') | lower | replace(' ','_') | regex_replace('(microsoft_|windows_)', '') }}"

- name: Get machine type
  include_tasks: get-machine-type.yml

- name: Display os group classification info
  debug:
    msg:
      - "os_family={{ os_family }}"
      - "os_distribution={{ os_distribution }}"
      - "os_distribution_version={{ os_distribution_version }}"
      - "os_machine_type={{ os_machine_type }}"

- name: Group hosts based on os_family
#  changed_when: no
  group_by:
    key: "{{ os_family }}"

- name: Group hosts based on os_distribution
  when: os_distribution != os_family
#  changed_when: no
  group_by:
    key: "{{ os_distribution }}"
    parents: "{{ os_family }}"

- name: Group hosts based on os_distribution_version
#  changed_when: no
  group_by:
    key: "{{ os_distribution_version }}"
    parents: "{{ os_distribution }}"

- name: Group hosts based on os_machine_type
#  changed_when: no
  group_by:
    key: "{{ os_machine_type }}"

#- name: Classify hosts depending on their internal domain
#  changed_when: no
#  group_by:
#    key: ca_domain_{{ ('_').join( inventory_hostname.split('.')[1::]|reverse ) | d(internal_domain) }}

- name: Display important common variable information
  when: inventory_hostname in ansible_play_hosts
  debug:
    msg:
      - "ansible_run_tags={{ ansible_run_tags }}"
      - "inventory_hostname={{ inventory_hostname | d('unknown') }}"
      - "inventory_hostname_short={{ inventory_hostname_short | d('unknown') }}"
      - "internal_subdomain={{ internal_subdomain | d('') }}"
      - "internal_domain={{ internal_domain | d('unknown') }}"
      ## BEGIN dynamically derived os_* groups
      - "os_family={{ os_family }}"
      - "os_distribution={{ os_distribution }}"
      - "os_distribution_version={{ os_distribution_version }}"
      - "os_machine_type={{ os_machine_type }}"
      ## END dynamically derived os_* groups
      - "os_python_interpreter={{ os_python_interpreter| d('') }}"
      - "ansible_python_interpreter={{ ansible_python_interpreter | d('unknown') }}"
      - "ansible_pip_interpreter={{ ansible_pip_interpreter | d('unknown') }}"
      - "ansible_host={{ ansible_host }}"
      - "ansible_hostname={{ ansible_hostname | d('') }}"
      - "ansible_port={{ ansible_port | d('') }}"
      - "ansible_fqdn={{ ansible_fqdn | d('') }}"
      - "ansible_default_ipv4.address={{ ansible_default_ipv4.address | d(ansible_all_ipv4_addresses[0]) | d('') }}"
      - "ansible_connection={{ ansible_connection|d('') }}"
      - "ansible_virtualization_type={{ ansible_virtualization_type|d('') }}"
      - "ansible_virtualization_role={{ ansible_virtualization_role|d('') }}"
      - "ansible_system_vendor={{ ansible_system_vendor|d('') }}"
      - "ansible_product_name={{ ansible_product_name|d('') }}"
      - "ansible_winrm_transport={{ ansible_winrm_transport|d('') }}"
      - "ansible_winrm_scheme={{ ansible_winrm_scheme|d('') }}"
      - "ansible_winrm_server_cert_validation={{ ansible_winrm_server_cert_validation|d('') }}"
      - "ansible_os_family={{ ansible_os_family | d('unknown') }}"
      - "ansible_distribution={{ ansible_distribution | d('unknown') }}"
      - "ansible_distribution_release={{ ansible_distribution_release | d('unknown') }}"
      - "ansible_distribution_major_version={{ ansible_distribution_major_version | d('unknown') }}"
      - "ansible_distribution_version={{ ansible_distribution_version | d('unknown') }}"
      - "group_names={{ group_names | d('') }}"
      - "bootstrap_ntp_servers={{ bootstrap_ntp_servers | d('') }}"
      - "firewalld_enabled={{ firewalld_enabled | d('') }}"
      - "docker_stack_external_domain={{ docker_stack_external_domain | d('') }}"
      - "docker_stack_internal_domain={{ docker_stack_internal_domain | d('') }}"
      - "ca_domain={{ ca_domain | d('unknown') }}"
      - "ca_domains_hosted={{ ca_domains_hosted | d('') }}"

- name: Display important common variable information
  when: inventory_hostname in ansible_play_hosts
  debug:
    msg:
      - "trace_var={{ trace_var|d('') }}"
      - "bootstrap_user={{ bootstrap_user }}"
      - "ansible_user={{ ansible_user }}"

- name: Display bootstrap_linux_mount_list
  debug:
    var: bootstrap_linux_mount_list
    verbosity: 1

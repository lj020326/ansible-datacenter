#!ipxe

goto ${menu} ||

:live_menu
set os Kali Linux
menu ${os} - Current Arch [ ${arch} ]
iseq ${arch} x86_64 && set arch_a amd64 || set arch_a ${arch}
item --gap ${os} Versions
item rolling ${space} ${os} Rolling
choose live_version || goto live_exit
menu ${os} ${live_version}
item --gap ${os} Flavors
goto ${live_version}

:rolling
{% for key, value in endpoints.items() | sort %}
{% if value.os == "kali" and 'squash' in key and value.version == "rolling" and value.flavor == "xfce" %}
item {{ key }} ${space} {{ value.os | title }} {{ value.version | title }} {{ value.flavor | upper }}
{% endif %}
{% endfor %}
{% for key, value in endpoints.items() | sort %}
{% if value.os == "kali" and 'squash' in key and value.version == "rolling" and value.flavor != "xfce" %}
item {{ key }} ${space} {{ value.os | title }} 2019.4 {{ value.flavor | upper }}
{% endif %}
{% endfor %}
goto flavor_select

:flavor_select
choose flavor || goto live_menu
echo ${cls}
goto ${flavor} ||

{% for key, value in endpoints.items() | sort %}
{% if value.os == "kali" and 'squash' in key and value.flavor != "xfce" %}
{% set kernel_name = value.kernel %}
:{{ key }}
set squash_url ${live_endpoint}{{ value.path }}filesystem.squashfs
set params components username=root hostname=kali
{% for key, value in endpoints.items() | sort %}
{% if key == kernel_name %}
set kernel_url ${live_endpoint}{{ value.path }}
{% endif %}
{% endfor %}
goto boot
{% elif value.os == "kali" %}
set squash_url ${live_endpoint}{{ value.path }}filesystem.squashfs
set kernel_url ${live_endpoint}{{ value.path }}
set params components
{% endif %}
{% endfor %}

:boot
imgfree
kernel ${kernel_url}vmlinuz boot=live ${params} fetch=${squash_url} initrd=initrd
initrd ${kernel_url}initrd
boot

:live_exit
clear menu
exit 0


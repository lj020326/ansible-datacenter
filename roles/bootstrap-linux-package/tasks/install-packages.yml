---

#######################
## the CentOS 8 image/template should already be switched to stream
## ref: https://www.techrepublic.com/article/how-to-convert-centos-8-to-centos-8-stream/
##
## ONLY needed for CentOS version < 8
- name: "{{ __bootstrap_linux_package__log_prefix_packages }} Update yum package repos"
  when:
    - ansible_pkg_mgr == 'yum'
    - bootstrap_linux_package__yum_repo_list|d([])|length>0
    - ansible_distribution_major_version|int is version('8', '<')
  include_tasks: update-repo-yum.yml

#- name: "{{ __bootstrap_linux_package__log_prefix_packages }} Update yum package repos"
#  when:
#    - ansible_pkg_mgr == 'dnf'
#    - bootstrap_linux_package__yum_repo_list|d([])|length>0
#  include_tasks: update-repo-dnf.yml

- name: "{{ __bootstrap_linux_package__log_prefix_packages }} Set up EPEL from rpm"
  when:
#    - ansible_pkg_mgr | ['yum','dnf']
    - ansible_os_family|lower == 'redhat'
    - bootstrap_linux_package__setup_epel_from_rpm
  include_role:
    name: bootstrap-epel-repo

- name: "{{ __bootstrap_linux_package__log_prefix_packages }} RedHat - Install centos yum package repos"
  when:
    - ansible_distribution|lower == 'redhat'
    - bootstrap_linux_package__redhat_install_centos_repos|bool
  include_tasks: update-repo-yum-rhel-centos.yml

- name: "{{ __bootstrap_linux_package__log_prefix_packages }} Update apt package repos"
  when: ansible_pkg_mgr == 'apt'
  include_tasks: update-repo-apt.yml

- name: "{{ __bootstrap_linux_package__log_prefix_packages }} Install present packages"
  when:
    - __bootstrap_linux_package__package_list_by_priority[item].present is defined
    - __bootstrap_linux_package__package_list_by_priority[item].present.keys()|d([])|length>0
  package:
    name: "{{ __bootstrap_linux_package__package_list_by_priority[item].present.keys() }}"
    state: "present"
    update_cache: "{{ bootstrap_linux_package__update_cache }}"
  loop: "{{ __bootstrap_linux_package__package_list_by_priority.keys()|sort }}"
  loop_control:
    label: "package state=present priority={{ item }}"

- name: "{{ __bootstrap_linux_package__log_prefix_packages }} Install latest packages"
  when:
    - __bootstrap_linux_package__package_list_by_priority[item].latest is defined
    - __bootstrap_linux_package__package_list_by_priority[item].latest.keys()|d([])|length>0
  package:
    name: "{{ __bootstrap_linux_package__package_list_by_priority[item].latest.keys() }}"
    state: "latest"
    update_cache: "{{ bootstrap_linux_package__update_cache }}"
  loop: "{{ __bootstrap_linux_package__package_list_by_priority.keys()|sort }}"
  loop_control:
    label: "package state=latest priority={{ item }}"

- name: "{{ __bootstrap_linux_package__log_prefix_packages }} Remove packages"
  when:
    - __bootstrap_linux_package__package_list_by_priority[item].absent is defined
    - __bootstrap_linux_package__package_list_by_priority[item].absent.keys()|d([])|length>0
  package:
    name: "{{ __bootstrap_linux_package__package_list_by_priority[item].absent.keys() }}"
    state: "absent"
    update_cache: "{{ bootstrap_linux_package__update_cache }}"
  loop: "{{ __bootstrap_linux_package__package_list_by_priority.keys()|sort }}"
  loop_control:
    label: "package state=absent priority={{ item }}"

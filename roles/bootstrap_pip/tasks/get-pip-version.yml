---
## ref: https://stackoverflow.com/questions/73293401/ansible-install-python-module-only-if-it-not-exist
- name: "{{ __bootstrap_pip__log_prefix_get_pip_version }} Gather installed pip version, if there is any"
  ansible.builtin.shell: |
    bash set -o pipefail # <-- adding this will prevent surprises
    {{ __bootstrap_pip_env.pip_executable | d(__bootstrap_pip__pip_executable) }} --version | cut -d ' ' -f 2
  register: result
  failed_when: result.rc != 0 and result.rc != 127
  # Since this is a reporting task, it should never change
  # as well run and register a result in any case
  changed_when: false
  check_mode: false

- name: "{{ __bootstrap_pip__log_prefix_get_pip_version }} Set default version, if there is no"
  ansible.builtin.set_fact:
    result:
      stdout_lines: 00.0.0
  when: "'command not found' in result.stdout"

- name: "{{ __bootstrap_pip__log_prefix_get_pip_version }} Report result"
  ansible.builtin.debug:
    msg: "{{ result.stdout }}"

- name: "{{ __bootstrap_pip__log_prefix_get_pip_version }} Report result"
  ansible.builtin.set_fact:
    __pip_current_version_matches: true
  when: result.stdout is version(__pip_version,"==")

---

- name: "Display key role inputs"
  debug:
    msg:
      - "bootstrap_packer__arch={{ bootstrap_packer__arch }}"
      - "bootstrap_packer__version={{ bootstrap_packer__version }}"
      - "bootstrap_packer__bin_path={{ bootstrap_packer__bin_path }}"

#######################
## older redhat versions have a symbolic link `/usr/sbin/packer` to a little-used `/usr/sbin/cracklib-packer` utility
## it has been since removed from more modern RHEL versions
## just in case it is found, the symlink can be safely removed
## ref: https://bugzilla.redhat.com/show_bug.cgi?id=1994196
##
- name: "Remove `packer` symlink to `/usr/sbin/cracklib-packer`"
  file:
   path: "/usr/sbin/packer"
   state: absent

- name: "Ensure required packages are installed."
  ansible.builtin.package:
    name: "{{ bootstrap_packer__required_packages }}"
    state: present

- name: "Get installed packer version."
  environment:
    PATH: "{{ ansible_env.PATH }}:/usr/local/bin"
  command: "packer --version"
  ignore_errors: yes
  changed_when: false
#  failed_when: false
  check_mode: false
  register: __bootstrap_packer__installed_version

- name: "Display __bootstrap_packer__installed_version.stdout"
  debug:
    var: __bootstrap_packer__installed_version.stdout

- name: "Display __bootstrap_packer__installed_version.stdout is version"
  when: not __bootstrap_packer__installed_version.failed
  debug:
    var: (__bootstrap_packer__installed_version.stdout is version(bootstrap_packer__version, operator="!="))

- name: "Force packer install if the version numbers do not match."
  ansible.builtin.set_fact:
    bootstrap_packer__reinstall_from_source: true
  when:
    - (bootstrap_packer__install_from_source_force_update | bool) or
      (__bootstrap_packer__installed_version.failed) or
      (__bootstrap_packer__installed_version.stdout is version(bootstrap_packer__version, operator="!="))

- name: "Display bootstrap_packer__reinstall_from_source"
  debug:
    var: bootstrap_packer__reinstall_from_source

- name: "Download and unarchive Packer."
  when: bootstrap_packer__reinstall_from_source | bool
  unarchive:
    src: https://releases.hashicorp.com/packer/{{ bootstrap_packer__version }}/packer_{{ bootstrap_packer__version }}_linux_{{ bootstrap_packer__arch }}.zip
    dest: "{{ bootstrap_packer__bin_path }}"
    remote_src: true
#    creates: "{{ bootstrap_packer__bin_path }}/packer"
    mode: "0755"
  register: bootstrap_packer__install_result

- name: "Display bootstrap_packer__install_result"
  when: bootstrap_packer__reinstall_from_source | bool
  debug:
    var: bootstrap_packer__install_result

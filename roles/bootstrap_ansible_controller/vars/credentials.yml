---
controller_credentials:
  - name: Dettonville Credentials Vault Key
    description:
    organization: dettonville
    credential_type: Vault
    inputs:
      vault_password: "{{ vaulted_credentials['ansible_credentials_vault_key'] }}"

  - name: AAP Project Deploy Key
    description:
    organization: dettonville
    credential_type: git deploy key
    inputs:
      private_key: "{{ vaulted_credentials['aap_project_git_deploy_key'] }}"

  - name: AAP Bitbucket Push SSH Key
    description:
    organization: dettonville
    credential_type: git deploy key
    inputs:
      private_key: "{{ vaulted_credentials['aap_bitbucket_git_push_key'] }}"

  - name: dettonville - Ansible - git
    description:
    organization: dettonville
    credential_type: Source Control
    inputs:
      username: "{{ vaulted_credentials['dettonville_ansible_git_username'] }}"
      ssh_key_data: "{{ vaulted_credentials['dettonville_ansible_git_key'] }}"

  - name: dettonville - Ansible Conjur Injector - sandbox
    description:
    organization: dettonville
    credential_type: Conjur Lookup Injector
    inputs:
      conjur_account: "{{ vaulted_credentials['conjur_account'] }}"
      conjur_url: "{{ vaulted_credentials['conjur_url'] }}"
      conjur_username: "{{ vaulted_credentials['conjur_username'] }}"
      conjur_apikey: "{{ vaulted_credentials['conjur_apikey_sandbox'] }}"
      conjur_cert: "{{ vaulted_credentials['conjur_cert'] }}"
    environments:
      - sandbox

  - name: dettonville - Ansible Conjur Injector - dev
    description:
    organization: dettonville
    credential_type: Conjur Lookup Injector
    inputs:
      conjur_account: "{{ vaulted_credentials['conjur_account'] }}"
      conjur_url: "{{ vaulted_credentials['conjur_url'] }}"
      conjur_username: "{{ vaulted_credentials['conjur_username_dev'] }}"
      conjur_apikey: "{{ vaulted_credentials['conjur_apikey_dev'] }}"
      conjur_cert: "{{ vaulted_credentials['conjur_cert'] }}"
    environments:
      - dev

  - name: dettonville - Ansible Conjur Injector - qa
    description:
    organization: dettonville
    credential_type: Conjur Lookup Injector
    inputs:
      conjur_account: "{{ vaulted_credentials['conjur_account'] }}"
      conjur_url: "{{ vaulted_credentials['conjur_url'] }}"
      conjur_username: "{{ vaulted_credentials['conjur_username_qa'] }}"
      conjur_apikey: "{{ vaulted_credentials['conjur_apikey_qa'] }}"
      conjur_cert: "{{ vaulted_credentials['conjur_cert'] }}"
    environments:
      - qa

  - name: dettonville - Ansible Conjur Injector - prod
    description:
    organization: dettonville
    credential_type: Conjur Lookup Injector
    inputs:
      conjur_account: "{{ vaulted_credentials['conjur_account'] }}"
      conjur_url: "{{ vaulted_credentials['conjur_url'] }}"
      conjur_username: "{{ vaulted_credentials['conjur_username_prod'] }}"
      conjur_apikey: "{{ vaulted_credentials['conjur_apikey_prod'] }}"
      conjur_cert: "{{ vaulted_credentials['conjur_cert'] }}"
    environments:
      - prod

  - name: dettonville - cyberark credential Ansible
    description:
    organization: dettonville
    credential_type: cyberark_credential
    inputs:
      cyberark_username: "{{ vaulted_credentials['cyberark_ansible_username'] }}"
      cyberark_password: "{{ vaulted_credentials['cyberark_ansible_password'] }}"
      cyberark_base_url: https://cyberarkpas.admin.dettonville.int

  - name: dettonville - cyberark credential Test Ansible
    description:
    organization: dettonville
    credential_type: cyberark_credential
    inputs:
      cyberark_username: "{{ vaulted_credentials['cyberark_ansible_username'] }}"
      cyberark_password: "{{ vaulted_credentials['cyberark_ansible_password'] }}"
      cyberark_base_url: https://cyberarkpast.admin.dettonville.int
    environments:
      - sandbox

  - name: dettonville - CyberArk prod safe addition
    description:
    organization: dettonville
    credential_type: cyberark_credential
    inputs:
      cyberark_username: "{{ vaulted_credentials['cyberark_prod_safe_username'] }}"
      cyberark_password: "{{ vaulted_credentials['cyberark_prod_safe_password'] }}"
      cyberark_base_url: https://cyberarkpas.admin.dettonville.int

  - name: dettonville - CyberArk test safe addition
    description:
    organization: dettonville
    credential_type: cyberark_credential
    inputs:
      cyberark_username: "{{ vaulted_credentials['cyberark_test_safe_username'] }}"
      cyberark_password: "{{ vaulted_credentials['cyberark_test_safe_password'] }}"
      cyberark_base_url: https://cyberarkpast.admin.dettonville.int
    environments:
      - sandbox

  - name: dettonville - JIRA PROD
    description:
    organization: dettonville
    credential_type: Jira_custom
    inputs:
      jira_username: "{{ vaulted_credentials['jira_prod_username'] }}"
      jira_password: "{{ vaulted_credentials['jira_prod_password'] }}"
      jira_url: https://jira.admin.dettonville.int
    roles:
      use:
        - SG - Ansible-TRP

  - name: dettonville M365
    description:
    organization: dettonville
    credential_type: M365 Application Access
    inputs:
      m365_tenant_id: 62a96f9a-a561-4bfb-a978-70a73a08dc02
      m365_certificate_thumbprint: "{{ vaulted_credentials['dettonville_m365_thumbprint'] }}"
      m365_application_id: 1092f9aa-2b96-4939-a434-ca2d3a3497ea

  - name: dettonville - Rapid7 Scanner
    description:
    organization: dettonville
    credential_type: Rapid7_Credentials
    inputs:
      username: "{{ vaulted_credentials['rapid7_scanner_username'] }}"
      password: "{{ vaulted_credentials['rapid7_scanner_password'] }}"
      hostname: R7-IVMdettonville.int
      port: "3780"

  - name: dettonville - VCSA4 CRUD
    description:
    organization: dettonville
    credential_type: VMware vCenter
    inputs:
      host: VCSA.s4.dettonville.int
      username: "{{ vaulted_credentials['vmware_vcenter_username'] }}"
      password: "{{ vaulted_credentials['vmware_vcenter_password'] }}"

  - name: dettonville - VCSA1 CRUD
    description:
    organization: dettonville
    credential_type: VMware vCenter
    inputs:
      host: VCSA.s1.dettonville.int
      username: "{{ vaulted_credentials['vmware_vcenter_username'] }}"
      password: "{{ vaulted_credentials['vmware_vcenter_password'] }}"

  - name: Ansible Automation Hub
    description:
    organization: dettonville
    credential_type: Ansible Galaxy/Automation Hub API Token
    inputs:
      url: https://console.redhat.com/api/automation-hub/content/730905-synclist/
      auth_url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
      token: "{{ vaulted_credentials['redhat_automation_hub_token'] }}"

  - name: ansible-integration
    description:
    organization: dettonville
    credential_type: automationhub publish
    inputs:
      url: https://ansible-galaxy.admin.dettonville.int/api/galaxy/content/inbound-dettonville/
      apikey: "{{ vaulted_credentials['private_hub_token'] }}"

  - name: AWS Dynamic Inventory
    description:
    organization: dettonville
    credential_type: Amazon Web Services
    inputs:
      username: "{{ vaulted_credentials['aws_dynamic_inventory_username'] }}"
      password: "{{ vaulted_credentials['aws_dynamic_inventory_password'] }}"

  - name: AWS EC2 Instance
    description:
    organization: dettonville
    credential_type: Machine
    inputs:
      username: "{{ vaulted_credentials['aws_ec2_username'] }}"
      password: "{{ vaulted_credentials['aws_ec2_password'] }}"
      become_password: "{{ vaulted_credentials['aws_ec2_password'] }}"

  - name: ControlM - Patching
    description:
    organization: dettonville
    credential_type: ControlM Login
    inputs:
      controlm_user: AnsibleUser
      controlm_password: "{{ vaulted_credentials['controlm_patching_password'] }}"

  - name: DBOps AD SQL Service Account
    description:
    organization: dettonville
    credential_type: Machine
    inputs:
      username: "{{ vaulted_credentials['sql_service_acct_username'] }}"
      password: "{{ vaulted_credentials['sql_service_acct_password'] }}"
    roles:
      use:
        - SG - Ansible-BIDE

  - name: DCC - AAC Management
    description:
    organization: dettonville
    credential_type: tower api access
    inputs:
      hostname: "{{ bootstrap_ansible_controller__env_specific_vars[controller_env]['dcc_aac_management_hostname'] }}"
      oauth_token: "{{ bootstrap_ansible_controller__env_specific_vars[controller_env]['aac_management_token'] }}"

  - name: AAC PreSandbox
    description:
    organization: dettonville
    credential_type: controller api access
    inputs:
      hostname: atrnext01.dev.s4.dettonville.int
      oauth_token: "{{ vaulted_credentials['aac_pre_sandbox_token'] }}"
      controller_env: sandbox

  - name: AAC Sandbox
    description:
    organization: dettonville
    credential_type: controller api access
    inputs:
      hostname: aap.dev.dettonville.int
      oauth_token: "{{ vaulted_credentials['aac_sandbox_token'] }}"
      controller_env: sandbox
    environments:
      - sandbox

  - name: AAC Dev
    description:
    organization: dettonville
    credential_type: controller api access
    inputs:
      hostname: aap.dev.dettonville.int
      oauth_token: "{{ vaulted_credentials['aac_dev_token'] }}"
      controller_env: dev
    environments:
      - sandbox
      - dev

  - name: AAC QA
    description:
    organization: dettonville
    credential_type: controller api access
    inputs:
      hostname: aap.qa.dettonville.int
      oauth_token: "{{ vaulted_credentials['aac_qa_token'] }}"
      controller_env: qa
    environments:
      - sandbox
      - qa

  - name: AAC Production
    description:
    organization: dettonville
    credential_type: controller api access
    inputs:
      hostname: aap.dettonville.int
      oauth_token: "{{ vaulted_credentials['aac_prod_token'] }}"
      controller_env: prod
    environments:
      - sandbox
      - prod

  - name: Domain Join dettonville
    description:
    organization: dettonville
    credential_type: Domain Join
    inputs:
      domain_join_username: "{{ vaulted_credentials['ansibledomain_user_username'] }}"
      domain_join_password: "{{ vaulted_credentials['ansibledomain_user_password'] }}"
      domain_join_dns: dettonville.int

  - name: ScienceLogic
    description: ""
    organization: dettonville
    credential_type: ScienceLogic
    inputs:
      sciencelogic_username: "{{ vaulted_credentials['sciencelogic_username'] }}"
      sciencelogic_password: "{{ vaulted_credentials['sciencelogic_password'] }}"
      sciencelogic_url: https://sciencelogic.dettonville.int/
      sciencelogic_validate_certs: false

  - name: Windows Domain Credential
    description:
    organization: dettonville
    credential_type: Machine
    inputs:
      username: "{{ vaulted_credentials['ansibledomain_user_username'] }}"
      password: "{{ vaulted_credentials['ansibledomain_user_password'] }}"

  - name: EE Build Credentials
    description:
    organization: dettonville
    credential_type: EE Build Credentials
    inputs:
      redhat_registry_url: registry.redhat.io
      redhat_registry_username: "{{ vaulted_credentials['redhat_registry_username'] }}"
      redhat_registry_password: "{{ vaulted_credentials['redhat_registry_password'] }}"
      private_hub_url: "{{ vaulted_credentials['private_hub_url'] }}"
      private_hub_username: "{{ vaulted_credentials['private_hub_username'] }}"
      private_hub_password: "{{ vaulted_credentials['private_hub_password'] }}"

  - name: Registry Ansible
    description:
    organization: dettonville
    credential_type: Container Registry
    inputs:
      host: registry.redhat.io
      username: "{{ vaulted_credentials['redhat_registry_username'] }}"
      password: "{{ vaulted_credentials['redhat_registry_password'] }}"

  - name: Private Hub
    description:
    organization: dettonville
    credential_type: Container Registry
    inputs:
      host: ansible-galaxy.admin.dettonville.int
      username: "{{ vaulted_credentials['private_hub_username'] }}"
      password: "{{ vaulted_credentials['private_hub_password'] }}"

  - name: git EE key
    description:
    organization: dettonville
    credential_type: git EE build key
    inputs:
      private_key: "{{ vaulted_credentials['git_ee_build_key'] }}"

  - name: InfraDB User
    description:
    organization: dettonville
    credential_type: MSSQLv2
    inputs:
      username: "{{ vaulted_credentials['infradb_user_username'] }}"
      password: "{{ vaulted_credentials['infradb_user_password'] }}"

  - name: LNX - Ansible Linux
    description:
    organization: dettonville
    credential_type: Machine
    inputs:
      username: "{{ vaulted_credentials['lnx_ansible_user_username'] }}"
      password: "{{ vaulted_credentials['lnx_ansible_user_password'] }}"
      become_password: "{{ vaulted_credentials['lnx_ansible_user_password'] }}"
    roles:
      use:
        - SG - Ansible-Infrasec
        - SG - Ansible-TRP

  - name: LNX - satp1s4 foreman
    description:
    organization: dettonville
    credential_type: Foreman Login
    inputs:
      username: "{{ vaulted_credentials['foreman_username'] }}"
      password: "{{ vaulted_credentials['foreman_password'] }}"
      url: https://sat01.s4.dettonville.int

  - name: Men and Mice
    description:
    organization: dettonville
    credential_type: Men and Mice
    inputs:
      mm_username: "{{ vaulted_credentials['men_and_mice_username'] }}"
      mm_password: "{{ vaulted_credentials['men_and_mice_password'] }}"
      mm_url: https://mmp1.s1.dettonville.int

  - name: MIDWA - CyberArk
    description:
    organization: dettonville
    credential_type: cyberark_credential
    inputs:
      cyberark_username: "{{ vaulted_credentials['midwa_cyberark_username'] }}"
      cyberark_password: "{{ vaulted_credentials['midwa_cyberark_password'] }}"
      cyberark_base_url: "{{ vaulted_credentials['midwa_cyberark_base_url'] }}"

  - name: Private Automation Hub Published
    description:
    organization: dettonville
    credential_type: Ansible Galaxy/Automation Hub API Token
    inputs:
      url: https://ansible-galaxy.admin.dettonville.int/api/galaxy/content/published/
      token: "{{ vaulted_credentials['private_hub_token'] }}"

  - name: Private Automation Hub RedHat Certified
    description:
    organization: dettonville
    credential_type: Ansible Galaxy/Automation Hub API Token
    inputs:
      url: https://ansible-galaxy.admin.dettonville.int/api/galaxy/content/rh-certified/
      token: "{{ vaulted_credentials['private_hub_token'] }}"

  - name: Private Automation Hub Community
    description:
    organization: dettonville
    credential_type: Ansible Galaxy/Automation Hub API Token
    inputs:
      url: https://ansible-galaxy.admin.dettonville.int/api/galaxy/content/community/
      token: "{{ vaulted_credentials['private_hub_token'] }}"

  - name: Private Automation Hub Staging
    description:
    organization: dettonville
    credential_type: Ansible Galaxy/Automation Hub API Token
    inputs:
      url: https://ansible-galaxy.admin.dettonville.int/api/galaxy/content/staging/
      token: "{{ vaulted_credentials['private_hub_token'] }}"
    environments:
      - sandbox

  - name: SentinelOne Site Token - Server
    description:
    organization: dettonville
    credential_type: SentinelOne Site Token
    inputs:
      sentinelone_token: eyJ1cmwiOiAiaHR0cHM6Ly91c2VhMS1zMXN5LnNlbnRpbmVsb25lLm5ldCIsICJzaXRlX2tleSI6ICJhZzY3Njc5MTcyNjAxMTdhIn0=

  - name: ReadyAPI Validation - Service Account
    description:
    organization: dettonville
    credential_type: ReadyAPI Credentials
    inputs:
      readyapi_username: "{{ vaulted_credentials['readyapi_username_svc_account'] }}"
      readyapi_password: "{{ vaulted_credentials['readyapi_password_svc_account'] }}"
      readyapi_accesskey: "{{ vaulted_credentials['readyapi_accesskey_svc_account'] }}"
    environments:
      - sandbox
      - prod

  - name: VMWARE Template Admin
    description:
    organization: dettonville
    credential_type: VMWARE Template
    inputs:
      vmware_template_username: "{{ vaulted_credentials['vmware_template_admin_username'] }}"
      vmware_template_password: "{{ vaulted_credentials['vmware_template_admin_password'] }}"

  - name: VWS Local Admin
    description:
    organization: dettonville
    credential_type: Machine
    inputs:
      username: "{{ vaulted_credentials['vmware_template_admin_username'] }}"
      password: "{{ vaulted_credentials['vmware_template_admin_password'] }}"

  - name: Ivanti Security Controls
    description:
    organization: dettonville
    credential_type: Ivanti Security Controls
    inputs:
      ivanti_username: "{{ vaulted_credentials['ivanti_security_controls_username'] }}"
      ivanti_password: "{{ vaulted_credentials['ivanti_security_controls_password'] }}"
      ivanti_url: 'isccp1.s1.dettonville.int:3121'

  - name: Rubrik Service Account
    description:
    organization: dettonville
    credential_type: Service Account
    inputs:
      username: "{{ vaulted_credentials['rubrik_service_acct_username'] }}"
      password: "{{ vaulted_credentials['rubrik_service_acct_password'] }}"

  - name: lnx_metrics mssql
    description: Prod lnx_metrics Database User
    organization: dettonville
    credential_type: SQL SERVER connection
    inputs:
      username: "{{ vaulted_credentials['lnx_metrics_mssql_username'] }}"
      password: "{{ vaulted_credentials['lnx_metrics_mssql_password'] }}"

  - name: ITAM MSSQL Dev
    description: Dev ITAM Database User
    organization: dettonville
    credential_type: SQL SERVER connection
    inputs:
      username: "{{ vaulted_credentials['itam_dev_mssql_username'] }}"
      password: "{{ vaulted_credentials['itam_dev_mssql_password'] }}"

  - name: LNX - OCP4-prod-access
    description:
    organization: dettonville
    credential_type: openshift_prod_auth_4
    inputs:
      username: "{{ vaulted_credentials['ocp4_username'] }}"
      devs1token: "{{ vaulted_credentials['ocp4_prod_devs1token'] }}"
      devs4token: "{{ vaulted_credentials['ocp4_prod_devs4token'] }}"
      prods1token: "{{ vaulted_credentials['ocp4_prod_prods1token'] }}"
      prods4token: "{{ vaulted_credentials['ocp4_prod_prods4token'] }}"

  - name: LNX - ocp-np-credentials
    description:
    organization: dettonville
    credential_type: openshift_np_auth_4
    inputs:
      username: "{{ vaulted_credentials['ocp4_username'] }}"
      devs1token: "{{ vaulted_credentials['ocp_np_devs1token'] }}"
      devs4token: "{{ vaulted_credentials['ocp_np_devs4token'] }}"
      qas1token: "{{ vaulted_credentials['ocp_np_qas1token'] }}"
      qas4token: "{{ vaulted_credentials['ocp_np_qas4token'] }}"
      sboxs1token: "{{ vaulted_credentials['ocp_np_sboxs1token'] }}"

  - name: LNX - OCP4-aws-access
    description:
    organization: dettonville
    credential_type: openshift_aws_auth_4
    inputs:
      sandbox_token: "{{ vaulted_credentials['ocp4_aws_sandbox_token'] }}"
      dev_token: "{{ vaulted_credentials['ocp4_aws_dev_token'] }}"
      qa_token: "{{ vaulted_credentials['ocp4_aws_qa_token'] }}"
      prod_token: "{{ vaulted_credentials['ocp4_aws_prod_token'] }}"

  - name: APP - AppValidation - Git
    description:
    organization: dettonville
    credential_type: git deploy key
    inputs:
      private_key: "{{ vaulted_credentials['appvalidation_git_key'] }}"

  - name: APP - AppValidation Ops - Git
    description:
    organization: dettonville
    credential_type: git deploy key
    inputs:
      private_key: "{{ vaulted_credentials['appvalidation_ops_git_key'] }}"
    roles:
      use:
        - SG - Ansible-TRP

  - name: DB OPS Cyberark
    description:
    organization: dettonville
    credential_type: cyberark_credential
    inputs:
      cyberark_username: "{{ vaulted_credentials['db_ops_cyberark_username'] }}"
      cyberark_password: "{{ vaulted_credentials['db_ops_cyberark_password'] }}"
      cyberark_base_url: https://cyberarkpas.admin.dettonville.int

  - name: dbops bitbucket deploy key
    description:
    organization: dettonville
    credential_type: git deploy key
    inputs:
      private_key: "{{ vaulted_credentials['dbops_bitbucket_deploy_key'] }}"

  - name: SQL master key passwords
    description:
    organization: dettonville
    credential_type: DB - MSSQL Master Keys
    inputs:
      dms_master_key_pwd: "{{ vaulted_credentials['sql_master_key_dms_password'] }}"
      dmsstage_master_key_pwd: "{{ vaulted_credentials['sql_master_key_dmsstage_password'] }}"
      dms_ssisdb_master_key_pwd: "{{ vaulted_credentials['sql_master_key_dms_ssisdb_password'] }}"
      processaudit_master_key_pwd: "{{ vaulted_credentials['sql_master_key_processaudit_password'] }}"
      intdb_ssisdb_master_key_pwd: "{{ vaulted_credentials['sql_master_key_intdb_ssisdb_password'] }}"

  - name: LNX - OCP - master
    description: ocp 4.x master ssh
    organization: dettonville
    credential_type: Machine
    inputs:
      username: "{{ vaulted_credentials['ocp4_master_username'] }}"
      ssh_key_data: "{{ vaulted_credentials['ocp4_master_ssh_key'] }}"

  - name: Trendmicro - DSA
    description: Trendmicro DSA control password
    organization: dettonville
    credential_type: Trendmicro DSA
    inputs:
      DSA_PW: "{{ vaulted_credentials['trendmicro_dsa_password'] }}"

  - name: DCC - CISCO Phone Numbers
    description:
    organization: dettonville
    credential_type: MSSQLv2
    inputs:
      username: "{{ vaulted_credentials['dcc_cisco_odsdev_db_username'] }}"
      password: "{{ vaulted_credentials['dcc_cisco_odsdev_db_password'] }}"
      instance: odsdev
      database: DBAutoTemp

  - name: Tableau Admin
    description:
    organization: dettonville
    credential_type: Tableau
    inputs:
      user: tableauadmin
      password: "{{ vaulted_credentials['tableau_admin_password'] }}"

  - name: Unica DB Credential - DEV
    description: DEV Credential for Unica DB
    organization: dettonville
    credential_type: Unica DB Credential
    inputs:
      unica_db_password: "{{ vaulted_credentials['unica_dev_db_password'] }}"

  - name: Unica DB Credential - PROD
    description: PROD Credential for Unica DB
    organization: dettonville
    credential_type: Unica DB Credential
    inputs:
      unica_db_password: "{{ vaulted_credentials['unica_prod_db_password'] }}"

  - name: Unica DB Credential - QA
    description: QA Credential for Unica DB
    organization: dettonville
    credential_type: Unica DB Credential
    inputs:
      unica_db_password: "{{ vaulted_credentials['unica_qa_db_password'] }}"

  - name: WND - DMZ
    description:
    organization: dettonville
    credential_type: Machine
    inputs:
      username: "{{ vaulted_credentials['windows_dmz_username'] }}"
      password: "{{ vaulted_credentials['windows_dmz_password'] }}"

  - name: midwa-bitbucket-pull-deploy-key
    description: MIDWA bitbucket read repo pull credential
    organization: dettonville
    credential_type: git deploy key
    inputs:
      private_key: "{{ vaulted_credentials['midwa_bitbucket_pull_deploy_key'] }}"

  - name: MIDWA - dettonville_dp_devops_dev
    description: dettonville_dp_devops - DEV - dpd1s4
    organization: dettonville
    credential_type: Service Account
    inputs:
      username: "{{ vaulted_credentials['dettonville_dp_devops_dev_username'] }}"
      password: "{{ vaulted_credentials['dettonville_dp_devops_dev_password'] }}"

  - name: MIDWA - dettonville_dp_devops_qa
    description: dettonville_dp_devops - QA/iQA - dpp1s1 and dpp2s4
    organization: dettonville
    credential_type: Service Account
    inputs:
      username: "{{ vaulted_credentials['dettonville_dp_devops_qa_username'] }}"
      password: "{{ vaulted_credentials['dettonville_dp_devops_qa_password'] }}"

  - name: MIDWA - dettonville_dp_devops_prod
    description: dettonville_dp_devops - PROD/iPROD/iPCI - dpp1s1 and dpp2s4
    organization: dettonville
    credential_type: Service Account
    inputs:
      username: "{{ vaulted_credentials['dettonville_dp_devops_prod_username'] }}"
      password: "{{ vaulted_credentials['dettonville_dp_devops_prod_password'] }}"

  - name: NTW - Akamai
    description:
    organization: dettonville
    credential_type: NTW - Akamai
    inputs:
      akamai_access_token: "{{ vaulted_credentials['ntw_akamai_access_token'] }}"
      akamai_client_token: "{{ vaulted_credentials['ntw_akamai_client_token'] }}"
      akamai_client_secret: "{{ vaulted_credentials['ntw_akamai_client_secret'] }}"
      akamai_api_host: "{{ vaulted_credentials['ntw_akamai_api_host'] }}"

  - name: NTW - f5 - admin
    description:
    organization: dettonville
    credential_type: F5_Credentials
    inputs:
      user: admin
      password: "{{ vaulted_credentials['ntw_f5_admin_password_sandbox'] }}"
    environments:
      - sandbox

  - name: NTW - f5 - admin
    description:
    organization: dettonville
    credential_type: F5_Credentials
    inputs:
      user: admin
      password: "{{ vaulted_credentials['ntw_f5_admin_password_prod'] }}"
    environments:
      - prod

  - name: NTW - Meraki - API
    description: meraki api key to manage devices
    organization: dettonville
    credential_type: NTW-Meraki
    inputs:
      meraki_api_key: "{{ vaulted_credentials['ntw_meraki_api_key'] }}"

  - name: NTW - Meraki Dashboard API
    description: Meraki Dashboard API Key
    organization: dettonville
    credential_type: Meraki Dashboard API
    inputs:
      meraki_api_key: "{{ vaulted_credentials['ntw_meraki_api_key'] }}"

  - name: LNX - Checkpoint-Machine
    description:
    organization: dettonville
    credential_type: Machine
    inputs:
      username: "{{ vaulted_credentials['lnx_checkpoint_machine_username'] }}"
      password: "{{ vaulted_credentials['lnx_checkpoint_machine_password'] }}"

  - name: NTW - Palo Alto
    description:
    organization: dettonville
    credential_type: panos - palo alto
    inputs:
      username: "{{ vaulted_credentials['ntw_palo_alto_username'] }}"
      password: "{{ vaulted_credentials['ntw_palo_alto_password'] }}"

  - name: Ansible Conjure Access
    description:
    organization: dettonville
    credential_type: Service Account
    inputs:
      username: "{{ vaulted_credentials['ansible_conjure_access_username'] }}"
      password: "{{ vaulted_credentials['ansible_conjure_access_password'] }}"

  - name: WND - Administrator
    description:
    organization: dettonville
    credential_type: Machine
    inputs:
      username: "{{ vaulted_credentials['windows_local_admin_username'] }}"
      password: "{{ vaulted_credentials['windows_local_admin_password'] }}"

  - name: dettonville - AnsibleSQL
    description:
    organization: dettonville
    credential_type: Machine
    inputs:
      username: "{{ vaulted_credentials['dettonville_ansiblesql_username'] }}"
      password: "{{ vaulted_credentials['dettonville_ansiblesql_password'] }}"

  - name: Ansible Satellite
    description:
    organization: dettonville
    credential_type: Satellite Collection Credential
    inputs:
      username: "{{ vaulted_credentials['ansible_satellite_username'] }}"
      password: "{{ vaulted_credentials['ansible_satellite_password'] }}"
      url: "{{ vaulted_credentials['ansible_satellite_url'] }}"
      validate_certs: true

  - name: Netbrain
    description: connects to netbappp2.s4.dettonville.int
    organization: dettonville
    credential_type: Netbrain
    inputs:
      netbrain_username: "{{ vaulted_credentials['netbrain_username'] }}"
      netbrain_password: "{{ vaulted_credentials['netbrain_password'] }}"
      netbrain_hostname: "{{ vaulted_credentials['netbrain_hostname'] }}"

  - name: Controller Omnibus
    description: For VM Creation to launch post provisioning jobs
    organization: dettonville
    credential_type: controller omnibus credential
    inputs:
      sandbox_hostname: aap.sandbox.dettonville.int
      sandbox_oauth_token: "{{ vaulted_credentials['aac_sandbox_token'] }}"
      dev_hostname: aap.dev.dettonville.int
      dev_oauth_token: "{{ vaulted_credentials['aac_dev_token'] }}"
      qa_hostname: aap.qa.dettonville.int
      qa_oauth_token: "{{ vaulted_credentials['aac_qa_token'] }}"
      prod_hostname: aap.dettonville.int
      prod_oauth_token: "{{ vaulted_credentials['aac_prod_token'] }}"
    environments:
      - sandbox
      - prod

  - name: AAP - Vault
    description:
    organization: dettonville
    credential_type: Vault
    inputs:
      vault_password: "{{ vaulted_credentials['dcc_vault_password'] }}"

  - name: Ansible Bitbucket API
    description:
    organization: dettonville
    credential_type: Bitbucket API credential
    inputs:
      bitbucket_api_url: "{{ vaulted_credentials['ansible_bitbucket_url'] }}"
      bitbucket_api_username: "{{ vaulted_credentials['ansible_bitbucket_username'] }}"
      bitbucket_api_token: "{{ vaulted_credentials['ansible_bitbucket_token'] }}"
      bitbucket_api_project: AAP
      bitbucket_api_repo: aap-inventory
      bitbucket_api_validate_certs: false

  - name: Tableau QA API
    description:
    organization: dettonville
    credential_type: Tableau API Credential
    inputs:
      tableau_base_url: "{{ vaulted_credentials['tableau_api_qa_url'] }}"
      tableau_verify_ssl: false
      tableau_api_version: '3.15'
      tableau_site_name: dettonville
      tableau_username: "{{ vaulted_credentials['tableau_api_qa_username'] }}"
      tableau_password: "{{ vaulted_credentials['tableau_api_qa_password'] }}"
    environments:
      - sandbox
      - dev
      - qa

  - name: Tableau Prod API
    description:
    organization: dettonville
    credential_type: Tableau API Credential
    inputs:
      tableau_base_url: "{{ vaulted_credentials['tableau_api_prod_url'] }}"
      tableau_verify_ssl: true
      tableau_api_version: '3.15'
      tableau_site_name: dettonville
      tableau_username: "{{ vaulted_credentials['tableau_api_prod_username'] }}"
      tableau_password: "{{ vaulted_credentials['tableau_api_prod_password'] }}"
    environments:
      - sandbox
      - prod

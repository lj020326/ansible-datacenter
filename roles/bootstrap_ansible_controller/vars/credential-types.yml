---
# Note: If a credential type is in use by a credential,
# inputs and injectors cannot be modified

##########################
## using the original lookup query below does not retrieve all valid cred types presumably due to default pagination
##
## E.g., the valid credential type "Vault" is missing from the default cred type set
##       when querying the API via the browser, the 'Vault' credential type does not appear until the 3rd page:
##   https://aap.dev.dettonville.int/api/v2/credential_types/?page=3
##
## The original credential type query only returns 25 items:
## ref: https://aap.dev.dettonville.int/#/jobs/playbook/11271/output:
##
##  "__controller_default_credential_types": [
##    "Amazon Web Services",
##    "Google Compute Engine",
##    "Microsoft Azure Resource Manager",
##    "OpenStack",
##    "Red Hat Ansible Automation Platform",
##    "Red Hat Satellite 6",
##    "Red Hat Virtualization",
##    "VMware vCenter",
##    "GPG Public Key",
##    "Centrify Vault Credential Provider Lookup",
##    "CyberArk AIM Central Credential Provider Lookup",
##    "CyberArk Conjur Secret Lookup",
##    "HashiCorp Vault Secret Lookup",
##    "HashiCorp Vault Signed SSH",
##    "Microsoft Azure Key Vault",
##    "Thycotic DevOps Secrets Vault",
##    "Thycotic Secret Server",
##    "Ansible Galaxy/Automation Hub API Token",
##    "Insights",
##    "OpenShift or Kubernetes API Bearer Token",
##    "Network",
##    "Container Registry",
##    "Source Control",
##    "Machine",
##    "GitHub Personal Access Token"
##  ],
##
## The 2 managed credential types that fall off the first 25 results are missing:
## ref: https://aap.dev.dettonville.int/#/jobs/playbook/11298/output:
##
##    "GitLab Personal Access Token",
##    "Vault"
##
## SOLUTION:
##   Setting the `return_all=true` parameter to the api lookup resolves the truncation/pagination of api query results.
##
## ref: https://docs.ansible.com/ansible/latest/collections/awx/awx/controller_api_lookup.html#parameter-return_all
## ref: https://docs.ansible.com/ansible/latest/collections/awx/awx/credential_module.html#parameter-credential_type
# __controller_default_credential_types:
#  "{{ query('ansible.controller.controller_api', 'credential_types', query_params={'managed': true}) | map(attribute='name') | list }}"

# Provides list of credential types included with Controller
__controller_default_credential_types:
  "{{ query('ansible.controller.controller_api', 'credential_types',
        query_params={'managed': true},
        return_all=true,
        host=__bootstrap_ansible_controller__controller_host,
        oauth_token=__bootstrap_ansible_controller__controller_oauth_token,
        verify_ssl=__bootstrap_ansible_controller__controller_verify_ssl)
    | map(attribute='name') | list }}"

controller_credential_types:
  - name: automationhub publish
    description:
    inputs:
      fields:
        - id: url
          type: string
          label: automation hub upload url
        - id: apikey
          type: string
          label: automation hub upload api key
          secret: true
      required:
        - url
        - apikey
    injectors:
      extra_vars:
        automationhub_url: !unsafe '{{ url }}'
        automationhub_apikey: !unsafe '{{ apikey }}'

  - name: ControlM Login
    description:
    inputs:
      fields:
        - id: controlm_user
          type: string
          label: Username
        - id: controlm_password
          type: string
          label: Password
          secret: true
      required:
        - controlm_user
        - controlm_password
    injectors:
      extra_vars:
        controlm_user: !unsafe '{{ controlm_user }}'
        controlm_password: !unsafe '{{ controlm_password }}'

  - name: ScienceLogic
    description:
    inputs:
      fields:
        - id: sciencelogic_username
          type: string
          label: Username
        - id: sciencelogic_password
          type: string
          label: Password
          secret: true
        - id: sciencelogic_url
          type: string
          label: Base url
        - id: sciencelogic_validate_certs
          type: boolean
          label: Verify SSL Certs
      required:
        - sciencelogic_username
        - sciencelogic_password
        - sciencelogic_url
    injectors:
      extra_vars:
        sciencelogic_url: !unsafe '{{ sciencelogic_url }}'
        sciencelogic_password: !unsafe '{{ sciencelogic_password }}'
        sciencelogic_username: !unsafe '{{ sciencelogic_username }}'
        sciencelogic_validate_certs: !unsafe '{{ sciencelogic_validate_certs }}'

  - name: Conjur Lookup Injector
    description: Credential type separate from the normal Conjur Lookup so it can be attached to job templates for host credential lookups
    inputs:
      fields:
        - id: conjur_cert
          type: string
          label: Public Key Certificate
          multiline: true
        - id: conjur_account
          type: string
          label: Account
        - id: conjur_url
          type: string
          label: Conjur URL
        - id: conjur_username
          type: string
          label: Username
        - id: conjur_apikey
          type: string
          label: API Key
          secret: true
    injectors:
      env:
        CONJUR_ACCOUNT: !unsafe '{{ conjur_account }}'
        CONJUR_CERT_FILE: !unsafe '{{ tower.filename.cert_file }}'
        CONJUR_AUTHN_LOGIN: !unsafe '{{ conjur_username }}'
        CONJUR_APPLIANCE_URL: !unsafe '{{ conjur_url }}'
        CONJUR_AUTHN_API_KEY: !unsafe '{{ conjur_apikey }}'
      file:
        template.cert_file: !unsafe '{{ conjur_cert }}'

  - name: cyberark_credential
    description:
    inputs:
      fields:
        - id: cyberark_username
          type: string
          label: Enter cyberark username
        - id: cyberark_password
          type: string
          label: Enter cyberark password
          secret: true
        - id: cyberark_base_url
          type: string
          label: Enter CyberArk base url
      required:
        - cyberark_username
        - cyberark_password
        - cyberark_base_url
    injectors:
      extra_vars:
        cyberark_base_url: !unsafe '{{ cyberark_base_url }}'
        cyberark_password: !unsafe '{{ cyberark_password }}'
        cyberark_username: !unsafe '{{ cyberark_username }}'

  - name: Domain Join
    description:
    inputs:
      fields:
        - id: domain_join_username
          type: string
          label: Username
        - id: domain_join_password
          type: string
          label: Password
          secret: true
        - id: domain_join_dns
          type: string
          label: Domain DNS
      required:
        - domain_join_username
        - domain_join_password
        - domain_join_dns
    injectors:
      extra_vars:
        domain_join_dns: !unsafe '{{domain_join_dns}}'
        domain_join_password: !unsafe '{{domain_join_password}}'
        domain_join_username: !unsafe '{{domain_join_username}}'

  - name: EE Build Credentials
    description:
    inputs:
      fields:
        - id: redhat_registry_url
          type: string
          label: RedHat Registry URL
        - id: redhat_registry_username
          type: string
          label: RedHat Username
        - id: redhat_registry_password
          type: string
          label: RedHat Password
          secret: true
        - id: private_hub_url
          type: string
          label: Private Hub URL
        - id: private_hub_username
          type: string
          label: Private Hub Username
        - id: private_hub_password
          type: string
          label: Private Hub Password
          secret: true
      required:
        - redhat_registry_url
        - redhat_registry_username
        - redhat_registry_password
        - private_hub_url
        - private_hub_username
        - private_hub_password
    injectors:
      extra_vars:
        private_hub_url: !unsafe '{{ private_hub_url }}'
        redhat_registry_url: !unsafe '{{ redhat_registry_url }}'
        private_hub_password: !unsafe '{{ private_hub_password }}'
        private_hub_username: !unsafe '{{ private_hub_username }}'
        redhat_registry_password: !unsafe '{{ redhat_registry_password }}'
        redhat_registry_username: !unsafe '{{ redhat_registry_username }}'

  - name: Foreman Login
    description:
    inputs:
      fields:
        - id: username
          type: string
          label: Satellite Username
        - id: password
          type: string
          label: Satellite Password
          secret: true
        - id: url
          type: string
          label: Satellite URL
          secret: false
      required:
        - username
        - password
        - url
    injectors:
      env:
        FOREMAN_USER: !unsafe '{{ username }}'
        FOREMAN_SERVER: !unsafe '{{ url }}'
        FOREMAN_PASSWORD: !unsafe '{{ password }}'

  - name: git deploy key
    description:
    inputs:
      fields:
        - id: private_key
          type: string
          label: SSH private key
          format: ssh_private_key
          secret: true
          multiline: true
      required:
        - private_key
    injectors:
      file:
        template: !unsafe |
          {{ private_key }}
          ''
      extra_vars:
        deploy_key_location: !unsafe '{{ tower.filename }}'

  - name: git EE build key
    description:
    inputs:
      fields:
        - id: private_key
          type: string
          label: SSH private key
          format: ssh_private_key
          secret: true
          multiline: true
      required:
        - private_key
    injectors:
      extra_vars:
        git_key_contents: !unsafe '{{ private_key }}'

  - name: Jira_custom
    description:
    inputs:
      fields:
        - id: jira_username
          type: string
          label: Username
        - id: jira_password
          type: string
          label: Password
          secret: true
        - id: jira_url
          type: string
          label: Base url
      required:
        - jira_username
        - jira_password
        - jira_url
    injectors:
      extra_vars:
        jira_url: !unsafe '{{jira_url}}'
        jira_password: !unsafe '{{jira_password}}'
        jira_username: !unsafe '{{jira_username}}'

  - name: M365 Application Access
    description:
    inputs:
      fields:
        - id: m365_tenant_id
          type: string
          label: Tenant ID
        - id: m365_certificate_thumbprint
          type: string
          label: cerficate thumbprint
          secret: true
        - id: m365_application_id
          type: string
          label: application id
      required:
        - m365_tenant_id
        - m365_certificate_thumbprint
        - m365_application_id
    injectors:
      extra_vars:
        m365_tenant_id: !unsafe '{{ m365_tenant_id }}'
        m365_application_id: !unsafe '{{ m365_application_id }}'
        m365_certificate_thumbprint: !unsafe '{{ m365_certificate_thumbprint }}'

  - name: Men and Mice
    description:
    inputs:
      fields:
        - id: mm_username
          type: string
          label: Username
        - id: mm_password
          type: string
          label: Password
          secret: true
        - id: mm_url
          type: string
          label: Men and Mice URL
      required:
        - mm_username
        - mm_password
        - mm_url
    injectors:
      extra_vars:
        mm_url: !unsafe '{{mm_url}}'
        mm_password: !unsafe '{{mm_password}}'
        mm_username: !unsafe '{{mm_username}}'

  - name: MSSQLv2
    description:
    inputs:
      fields:
        - id: username
          type: string
          label: MSSQL username
        - id: password
          type: string
          label: MSSQL password
          secret: true
        - id: instance
          type: string
          label: MSSQL Instance
        - id: database
          type: string
          label: MSSQL Database
      required:
        - username
        - password
    injectors:
      extra_vars:
        mssql_database: !unsafe '{{ database }}'
        mssql_instance: !unsafe '{{ instance }}'
        mssql_password: !unsafe '{{ password }}'
        mssql_username: !unsafe '{{ username }}'

  - name: Rapid7_Credentials
    description: Credential Type for Rapid7 Scanner
    inputs:
      fields:
        - id: username
          type: string
          label: Rapid7 Username
        - id: password
          type: string
          label: Rapid7 Password
          secret: true
        - id: hostname
          type: string
          label: Rapid7 Hostname
        - id: port
          type: string
          label: Rapid7 Port
      required:
        - username
        - password
        - hostname
        - port
    injectors:
      env:
        RAPID7_PORT: !unsafe '{{ port }}'
        RAPID7_HOSTNAME: !unsafe '{{ hostname }}'
        RAPID7_PASSWORD: !unsafe '{{ password }}'
        RAPID7_USERNAME: !unsafe '{{ username }}'
      extra_vars:
        rapid7_port: !unsafe '{{ port }}'
        rapid7_hostname: !unsafe '{{ hostname }}'

  - name: ReadyAPI Credentials
    description: Credentials for ReadyAPI License Management
    inputs:
      fields:
        - id: readyapi_username
          type: string
          label: Username
        - id: readyapi_password
          type: string
          label: Password
          secret: true
        - id: readyapi_accesskey
          type: string
          label: Access Key
          secret: true
      required:
        - readyapi_username
        - readyapi_password
        - readyapi_accesskey
    injectors:
      extra_vars:
        readyapi_accesskey: !unsafe '{{ readyapi_accesskey }}'
        readyapi_password: !unsafe '{{ readyapi_password }}'
        readyapi_username: !unsafe '{{ readyapi_username }}'

  - name: SentinelOne Site Token
    description: Site Token for SentinelOne registration
    inputs:
      fields:
        - id: sentinelone_token
          type: string
          label: Enter SentinelOne Site Token
    injectors:
      extra_vars:
        sentinelone_token: !unsafe '{{ sentinelone_token }}'

  - name: tower api access
    description:
    inputs:
      fields:
        - id: hostname
          type: string
          label: Tower Host
        - id: verify_ssl
          type: boolean
          label: Verify SSL
        - id: oauth_token
          type: string
          label: Oauth Token
          secret: true
      required:
        - hostname
        - oauth_token
    injectors:
      env:
        TOWER_HOST: !unsafe '{{ hostname }}'
        TOWER_VERIFY_SSL: !unsafe '{{ verify_ssl }}'
        TOWER_OAUTH_TOKEN: !unsafe '{{ oauth_token }}'
      extra_vars:
        tower_host: !unsafe '{{ hostname }}'
        tower_verify_ssl: !unsafe '{{ verify_ssl }}'
        tower_oauth_token: !unsafe '{{ oauth_token }}'

  - name: controller api access
    description:
    inputs:
      fields:
        - id: hostname
          type: string
          label: Tower Host
        - id: verify_ssl
          type: boolean
          label: Verify SSL
        - id: controller_env
          type: string
          label: Controller Environment
          choices:
            - sandbox
            - dev
            - qa
            - prod
        - id: oauth_token
          type: string
          label: Oauth Token
          secret: true
      required:
        - hostname
        - oauth_token
        - controller_env
    injectors:
      env:
        TOWER_HOST: !unsafe '{{ hostname }}'
        TOWER_VERIFY_SSL: !unsafe '{{ verify_ssl }}'
        TOWER_OAUTH_TOKEN: !unsafe '{{ oauth_token }}'
      extra_vars:
        tower_host: !unsafe '{{ hostname }}'
        controller_env: !unsafe '{{ controller_env }}'
        tower_verify_ssl: !unsafe '{{ verify_ssl }}'
        tower_oauth_token: !unsafe '{{ oauth_token }}'

  - name: VMWARE Template
    description: default username and password for vmware templates prior to deployment
    inputs:
      fields:
        - id: vmware_template_username
          type: string
          label: Username
        - id: vmware_template_password
          type: string
          label: Password
          secret: true
      required:
        - vmware_template_username
        - vmware_template_password
    injectors:
      extra_vars:
        vmware_template_password: !unsafe '{{vmware_template_password}}'
        vmware_template_username: !unsafe '{{vmware_template_username}}'

  - name: Ivanti Security Controls
    description:
    inputs:
      fields:
        - id: ivanti_username
          type: string
          label: Username
        - id: ivanti_password
          type: string
          label: Password
          secret: true
        - id: ivanti_url
          type: string
          label: Ivanti URL
      required:
        - ivanti_username
        - ivanti_password
        - ivanti_url
    injectors:
      extra_vars:
        ivanti_password: !unsafe '{{ivanti_password}}'
        ivanti_url: !unsafe '{{ivanti_url}}'
        ivanti_username: !unsafe '{{ivanti_username}}'

  - name: Service Account
    description:
    inputs:
      fields:
        - id: username
          type: string
          label: Username
        - id: password
          type: string
          label: Password
          secret: true
      required:
        - username
        - password
    injectors:
      extra_vars:
        service_password: !unsafe '{{ password }}'
        service_username: !unsafe '{{ username }}'

  - name: SQL SERVER connection
    description:
    inputs:
      fields:
        - id: username
          type: string
          label: MSSQL username
        - id: password
          type: string
          label: MSSQL password
          secret: true
      required:
        - username
        - password
    injectors:
      extra_vars:
        mssql_password: !unsafe '{{ password }}'
        mssql_username: !unsafe '{{ username }}'

  - name: openshift_prod_auth_4
    description:
    inputs:
      fields:
        - id: username
          type: string
          label: Username
        - id: devs1token
          type: string
          label: devs1Password
          secret: true
        - id: devs4token
          type: string
          label: devs4Password
          secret: true
        - id: prods1token
          type: string
          label: prods1Password
          secret: true
        - id: prods4token
          type: string
          label: prods4Password
          secret: true
      required:
        - username
        - devs1token
        - devs4token
        - prods1token
        - prods4token
    injectors:
      extra_vars:
        ans_username: !unsafe '{{username}}'
        devs1_token: !unsafe '{{devs1token}}'
        devs4_token: !unsafe '{{devs4token}}'
        prods1_token: !unsafe '{{prods1token}}'
        prods4_token: !unsafe '{{prods4token}}'

  - name: openshift_np_auth_4
    description:
    inputs:
      fields:
        - id: username
          type: string
          label: Username
        - id: devs1token
          type: string
          label: devs1Password
          secret: true
        - id: devs4token
          type: string
          label: devs4Password
          secret: true
        - id: qas1token
          type: string
          label: qas1Password
          secret: true
        - id: qas4token
          type: string
          label: qas4Password
          secret: true
        - id: sboxs1token
          type: string
          label: sboxs1Password
          secret: true
      required:
        - username
        - devs1token
        - devs4token
        - qas1token
        - qas4token
    injectors:
      extra_vars:
        ans_username: !unsafe '{{username}}'
        devs1_token: !unsafe '{{devs1token}}'
        devs4_token: !unsafe '{{devs4token}}'
        qas1_token: !unsafe '{{qas1token}}'
        qas4_token: !unsafe '{{qas4token}}'
        sboxs1_token: !unsafe '{{sboxs1token}}'

  - name: openshift_aws_auth_4
    description:
    inputs:
      fields:
        - id: sandbox_token
          type: string
          label: Sandbox Token
          secret: true
        - id: dev_token
          type: string
          label: Dev Token
          secret: true
        - id: qa_token
          type: string
          label: QA Token
          secret: true
        - id: prod_token
          type: string
          label: Prod Token
          secret: true
      required:
        - sandbox_token
        - dev_token
        - qa_token
        - prod_token
    injectors:
      extra_vars:
        aws_dev_token: !unsafe '{{ dev_token }}'
        aws_prod_token: !unsafe '{{ prod_token }}'
        aws_qa_token: !unsafe '{{ qa_token }}'
        aws_sbox_token: !unsafe '{{ sandbox_token }}'

  - name: DB - MSSQL Master Keys
    description:
    inputs:
      fields:
        - id: dms_master_key_pwd
          type: string
          label: dms Master Key Password
          secret: true
        - id: dmsstage_master_key_pwd
          type: string
          label: dms stage Master Key Password
          secret: true
        - id: dms_ssisdb_master_key_pwd
          type: string
          label: dms ssisdb Master Key Password
          secret: true
        - id: processaudit_master_key_pwd
          type: string
          label: Intdb Process Audit Master Key Password
          secret: true
        - id: intdb_ssisdb_master_key_pwd
          type: string
          label: Intdb ssisdb Master Key Password
          secret: true
    injectors:
      extra_vars:
        dms_master_key_pwd: !unsafe '{{ dms_master_key_pwd }}'
        dms_ssisdb_master_key_pwd: !unsafe '{{ dms_ssisdb_master_key_pwd }}'
        dmsstage_master_key_pwd: !unsafe '{{ dmsstage_master_key_pwd }}'
        intdb_ssisdb_master_key_pwd: !unsafe '{{ intdb_ssisdb_master_key_pwd }}'
        processaudit_master_key_pwd: !unsafe '{{ processaudit_master_key_pwd }}'

  - name: Trendmicro DSA
    description: DSA control password
    inputs:
      fields:
        - id: DSA_PW
          type: string
          label: Trendmicro DSA Password
          secret: true
      required:
        - DSA_PW
    injectors:
      extra_vars:
        dsa_control_password: !unsafe '{{ DSA_PW }}'

  - name: Tableau
    description:
    inputs:
      fields:
        - id: user
          type: string
          label: Tableau Admin Username
        - id: password
          type: string
          label: Tableau Admin
          secret: true
      required:
        - user
        - password
    injectors:
      extra_vars:
        TABLEAU_PASSWORD: !unsafe '{{ password }}'
        TABLEAU_USER: !unsafe '{{ user }}'

  - name: Unica DB Credential
    description:
    inputs:
      fields:
        - id: unica_db_password
          type: string
          label: unica_db_password
          secret: true
    injectors:
      extra_vars:
        unica_db_password: !unsafe '{{unica_db_password}}'

  - name: NTW - Akamai
    description: network akamai api key
    inputs:
      fields:
        - id: akamai_access_token
          type: string
          label: Akamai Network API Key use "NTW_AKAMAI_ACCESS_TOKEN" in playbooks
          secret: true
        - id: akamai_client_token
          type: string
          label: Akamai Network Client Token use "NTW_AKAMAI_CLIENT_TOKEN" in playbooks
          secret: true
        - id: akamai_client_secret
          type: string
          label: Akamai Network Client Secret use "NTW_AKAMAI_CLIENT_SECRET" in playbooks
          secret: true
        - id: akamai_api_host
          type: string
          label: Akamai API Hostname use "NTW_AKAMAI_HOST" in playbooks
          secret: false
    injectors:
      extra_vars:
        NTW_AKAMAI_ACCESS_TOKEN: !unsafe '{{ akamai_access_token }}'
        NTW_AKAMAI_CLIENT_SECRET: !unsafe '{{ akamai_client_secret }}'
        NTW_AKAMAI_CLIENT_TOKEN: !unsafe '{{ akamai_client_token }}'
        NTW_AKAMAI_HOST: !unsafe '{{ akamai_api_host }}'

  - name: F5_Credentials
    description: Credential Type for F5
    inputs:
      fields:
        - id: user
          type: string
          label: F5 Username
        - id: password
          type: string
          label: F5 Password
          secret: true
      required:
        - user
        - password
    injectors:
      env:
        F5_PASSWORD: !unsafe '{{ password }}'
        F5_USER: !unsafe '{{ user }}'

  - name: Meraki Dashboard API
    description: Credential Type for Meraki Dashboard API
    inputs:
      fields:
        - id: meraki_api_key
          type: string
          label: Meraki Dashboard API Key
      required:
        - meraki_api_key
    injectors:
      env:
        MERAKI_DASHBOARD_API_KEY: !unsafe '{{ meraki_api_key }}'

  - name: NTW-Meraki
    description: meraki creds
    inputs:
      fields:
        - id: meraki_api_key
          type: string
          label: Meraki API Key
          secret: true
    injectors:
      extra_vars:
        NTW_MERAKI_API: !unsafe '{{ meraki_api_key }}'

  - name: panos - palo alto
    description:
    inputs:
      fields:
        - id: username
          type: string
          label: Username
        - id: password
          type: string
          label: Password
          secret: true
      required:
        - username
        - password
    injectors:
      extra_vars:
        panos_password: !unsafe '{{ password }}'
        panos_username: !unsafe '{{ username }}'

  - name: Satellite Collection Credential
    description: Credential type used for the redhat.satellite collection modules
    inputs:
      fields:
        - id: username
          type: string
          label: Satellite Username
        - id: password
          type: string
          label: Satellite Password
          secret: true
        - id: url
          type: string
          label: Satellite URL
          secret: false
        - id: validate_certs
          type: boolean
          label: Validate Certs
      required:
        - username
        - password
        - url
    injectors:
      env:
        SATELLITE_PASSWORD: !unsafe '{{ password }}'
        SATELLITE_USERNAME: !unsafe '{{ username }}'
        SATELLITE_SERVER_URL: !unsafe '{{ url }}'
        SATELLITE_VALIDATE_CERTS: !unsafe '{{ validate_certs }}'

  - name: Netbrain
    description: Used against Netbrain REST api
    inputs:
      fields:
        - id: netbrain_username
          type: string
          label: Username
        - id: netbrain_password
          type: string
          label: Password
          secret: true
        - id: netbrain_hostname
          type: string
          label: Hostname
      required:
        - netbrain_username
        - netbrain_password
        - netbrain_hostname
    injectors:
      extra_vars:
        netbrain_hostname: !unsafe '{{ netbrain_hostname }}'
        netbrain_password: !unsafe '{{ netbrain_password }}'
        netbrain_username: !unsafe '{{ netbrain_username }}'

  - name: controller omnibus credential
    description: Used for VM creation to have access to all Controller environments
    inputs:
      fields:
        - id: sandbox_hostname
          type: string
          label: Sandbox Controller URL
        - id: sandbox_verify_ssl
          type: boolean
          label: Sandbox Controller Verify SSL
        - id: sandbox_oauth_token
          type: string
          label: Sandbox Controller Oauth Token
          secret: true
        - id: dev_hostname
          type: string
          label: Dev Controller URL
        - id: dev_verify_ssl
          type: boolean
          label: Dev Controller Verify SSL
        - id: dev_oauth_token
          type: string
          label: Dev Controller Oauth Token
          secret: true
        - id: qa_hostname
          type: string
          label: QA Controller URL
        - id: qa_verify_ssl
          type: boolean
          label: QA Controller Verify SSL
        - id: qa_oauth_token
          type: string
          label: QA Controller Oauth Token
          secret: true
        - id: prod_hostname
          type: string
          label: Prod Controller URL
        - id: prod_verify_ssl
          type: boolean
          label: Prod Controller Verify SSL
        - id: prod_oauth_token
          type: string
          label: Prod Controller Oauth Token
          secret: true
      required:
        - sandbox_hostname
        - sandbox_oauth_token
        - dev_hostname
        - dev_oauth_token
        - qa_hostname
        - qa_oauth_token
        - prod_hostname
        - prod_oauth_token
    injectors:
      extra_vars:
        sandbox_controller_host: !unsafe '{{ sandbox_hostname }}'
        sandbox_controller_verify_ssl: !unsafe '{{ sandbox_verify_ssl }}'
        sandbox_controller_oauth_token: !unsafe '{{ sandbox_oauth_token }}'
        dev_controller_host: !unsafe '{{ dev_hostname }}'
        dev_controller_verify_ssl: !unsafe '{{ dev_verify_ssl }}'
        dev_controller_oauth_token: !unsafe '{{ dev_oauth_token }}'
        qa_controller_host: !unsafe '{{ qa_hostname }}'
        qa_controller_verify_ssl: !unsafe '{{ qa_verify_ssl }}'
        qa_controller_oauth_token: !unsafe '{{ qa_oauth_token }}'
        prod_controller_host: !unsafe '{{ prod_hostname }}'
        prod_controller_verify_ssl: !unsafe '{{ prod_verify_ssl }}'
        prod_controller_oauth_token: !unsafe '{{ prod_oauth_token }}'

  - name: Bitbucket API credential
    description: Username and personal access token for Bitbucket API calls
    inputs:
      fields:
        - id: bitbucket_api_username
          type: string
          label: Username
        - id: bitbucket_api_token
          type: string
          label: Personal Access Token
          secret: true
        - id: bitbucket_api_url
          type: string
          label: Bitbucket URL
        - id: bitbucket_api_project
          type: string
          label: Project key used for credential validation (e.g. AAP)
        - id: bitbucket_api_repo
          type: string
          label: Repository used for credential validation (e.g. aap-inventory)
        - id: bitbucket_api_validate_certs
          type: boolean
          label: Validate certs
      required:
        - bitbucket_api_username
        - bitbucket_api_token
        - bitbucket_api_url
        - bitbucket_api_project
        - bitbucket_api_repo
        - bitbucket_api_validate_certs
    injectors:
      extra_vars:
        bitbucket_api_url: !unsafe '{{bitbucket_api_url}}'
        bitbucket_api_token: !unsafe '{{bitbucket_api_token}}'
        bitbucket_api_username: !unsafe '{{bitbucket_api_username}}'
        bitbucket_api_project: !unsafe '{{bitbucket_api_project}}'
        bitbucket_api_repo: !unsafe '{{bitbucket_api_repo}}'
        bitbucket_api_validate_certs: !unsafe '{{bitbucket_api_validate_certs}}'

  - name: Tableau API Credential
    description:
    inputs:
      fields:
        - id: tableau_base_url
          type: string
          label: Tableau base URL
        - id: tableau_verify_ssl
          type: boolean
          label: Verify SSL
        - id: tableau_api_version
          type: string
          label: Tableau API version (used to build URLs)
        - id: tableau_site_name
          type: string
          label: Tableau site name (used to build URLs)
        - id: tableau_username
          type: string
          label: Tableau username
        - id: tableau_password
          type: string
          label: Tableau password
          secret: true
      required:
        - tableau_base_url
        - tableau_api_version
        - tableau_site_name
        - tableau_username
        - tableau_password
    injectors:
      env:
        TABLEAU_BASE_URL: !unsafe '{{ tableau_base_url }}'
        TABLEAU_PASSWORD: !unsafe '{{ tableau_password }}'
        TABLEAU_USERNAME: !unsafe '{{ tableau_username }}'
        TABLEAU_SITE_NAME: !unsafe '{{ tableau_site_name }}'
        TABLEAU_VERIFY_SSL: !unsafe '{{ tableau_verify_ssl }}'
        TABLEAU_API_VERSION: !unsafe '{{ tableau_api_version }}'
      extra_vars:
        tableau_base_url: !unsafe '{{ tableau_base_url }}'
        tableau_password: !unsafe '{{ tableau_password }}'
        tableau_username: !unsafe '{{ tableau_username }}'
        tableau_site_name: !unsafe '{{ tableau_site_name }}'
        tableau_verify_ssl: !unsafe '{{ tableau_verify_ssl }}'
        tableau_api_version: !unsafe '{{ tableau_api_version }}'

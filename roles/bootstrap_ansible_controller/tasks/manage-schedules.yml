---
- name: Create rrule definition
  ansible.builtin.set_fact:
    schedule_rrule: "{{ query('ansible.controller.schedule_rruleset',
      __schedule_loop_var['start_date'], rules=__schedule_loop_var['rule_parameters'], timezone='America/Chicago') }}"
  when: bootstrap_ansible_controller__state == 'present'

- name: Display rrule
  ansible.builtin.debug:
    var: schedule_rrule
  when: bootstrap_ansible_controller__state == 'present'

- name: Create schedule
  when: bootstrap_ansible_controller__state == 'present'
  ansible.controller.schedule:
    name: "{{ __schedule_loop_var['schedule_name'] | mandatory }}"
    unified_job_template: "{{ __schedule_loop_var['job_template_name'] | d(__schedule_loop_var['workflow_job_name']) | mandatory }}"
    rrule: "{{ schedule_rrule | mandatory }}"
    description: "{{ __schedule_loop_var['description'] | d('', true) }}"
    enabled: "{{ __schedule_loop_var['enabled'] | d(true) }}"
    extra_data: "{{ __schedule_loop_var['extra_data'] | d({}, true) }}"
    limit: "{{ __schedule_loop_var['limit'] | d(omit, true) }}"
    job_tags: "{{ __schedule_loop_var['job_tags'] | d(omit, true) }}" # '' fails if unified_job_template doesn't have prompt for job_tags enabled.
    skip_tags: "{{ __schedule_loop_var['skip_tags'] | d(omit, true) }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Remove schedule
  ansible.controller.schedule:
    name: "{{ __schedule_loop_var['schedule_name'] }}"
    state: absent
  when: bootstrap_ansible_controller__state == 'absent'

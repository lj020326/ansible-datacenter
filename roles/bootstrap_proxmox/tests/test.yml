---

- name: Ensure Proxmox Web UI returns a successful HTTP response
  hosts: all
  tasks:
    - name: Ensure Proxmox Web UI returns a successful HTTP response
      ansible.builtin.uri:
        url: https://{{ inventory_hostname }}:8006

    - name: Query PVE cluster status
      ansible.builtin.command: pvesh get /cluster/status --output=json
      register: _pve_cluster
      changed_when: false

    - name: Check that this node is within the cluster and it is in quorum
      ansible.builtin.assert:
        that: (_pve_cluster.stdout | from_json | community.general.json_query(query_regex)) == 1
      vars:
        query_regex: ([?type=='cluster'].quorate)[0]

    - name: Query PVE groups
      ansible.builtin.command: pvesh get /access/groups --output=json
      register: _pve_groups
      changed_when: false

    - name: Check that PVE groups exist
      ansible.builtin.assert:
        that: (_pve_groups.stdout | from_json | community.general.json_query(query_regex)) == 1
      vars:
        query_regex: length([?groupid=='{{ item.name }}'])
      run_once: true # noqa: run-once[task]
      loop: "{{ pve_groups }}"

    - name: Query PVE users
      ansible.builtin.command: pvesh get /access/users --output=json
      register: _pve_users
      changed_when: false

    - name: Check that PVE users exist
      ansible.builtin.assert:
        that: (_pve_users.stdout | from_json | community.general.json_query(query_regex)) == 1
      vars:
        query_regex: length([?userid=='{{ item.name }}'])
      run_once: true # noqa: run-once[task]
      loop: "{{ pve_users }}"

    - name: Query PVE ACLs
      ansible.builtin.command: pvesh get /access/acl --output=json
      register: _pve_acl
      changed_when: false

    - name: Check that PVE ACLs exist
      ansible.builtin.assert:
        that: (_pve_acl.stdout | from_json | community.general.json_query(query_regex)) == 3
      vars:
        query_regex: length([])
      run_once: true # noqa: run-once[task]

    - name: Query PVE storages
      ansible.builtin.command: pvesh get /storage --output=json
      register: _pve_storage
      changed_when: false

    - name: Construct storage list
      ansible.builtin.set_fact:
        sto_list: "{{ sto_list | default([]) }} + [ '{{ item.name }}' ]"
      loop: "{{ pve_storages }}"

    - name: Check that PVE storages exist
      ansible.builtin.assert:
        that: sto_list is subset(_pve_storage.stdout | from_json | community.general.json_query(query_regex))
      vars:
        query_regex: "[*].storage"
      run_once: true # noqa: run-once[task]

    - name: Read datacenter.cfg file
      ansible.builtin.slurp:
        src: /etc/pve/datacenter.cfg
      register: datacenter_cfg

    - name: Check datacenter.cfg content
      ansible.builtin.assert:
        that: "'console: xtermjs' in datacenter_cfg.content | b64decode"

    - name: Query PVE HA groups
      changed_when: false
      ansible.builtin.command: pvesh get /cluster/ha/groups --output=json
      register: _ha_group_list
      run_once: true # noqa: run-once[task]

    - name: Check PVE HA group configuration
      ansible.builtin.assert:
        that:
          - item.name == ha_group.group
          - item.comment == ha_group.comment
          - item.nodes == ha_group.nodes
          - item.restricted == ha_group.restricted
          - "'nofailback' not in ha_group"
      vars:
        ha_group: '{{ _ha_group_list.stdout | from_json
                      | community.general.json_query("[?group==''" + item.name + "'']") | first }}'
      loop: "{{ pve_cluster_ha_groups }}"

    - name: Get pve services status
      ignore_errors: true # noqa: ignore-errors
      block:
        - name: Get pvedaemon service status
          ansible.builtin.command: journalctl --no-pager -xu pvedaemon.service
          changed_when: false

        - name: Get pve-cluster service status
          ansible.builtin.command: journalctl --no-pager -xu pve-cluster.service
          changed_when: false

        - name: Get pveproxy service status
          ansible.builtin.command: journalctl --no-pager -xu pveproxy.service
          changed_when: false

        - name: Display hosts file
          ansible.builtin.command: cat /etc/hosts
          changed_when: false

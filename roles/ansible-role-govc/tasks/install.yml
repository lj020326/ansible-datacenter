# Copyright Â© 2017 VMware, Inc. All Rights Reserved.
# SPDX-License-Identifier: MIT OR GPL-3.0-only
---

- name: Check the current govc version (if any)
  command: "{{ govc_path }}/govc version"
  ignore_errors: true
  register: govc_version_found
  changed_when: false

- block:

  - name: Download archive 32 bits
    get_url:
      url: "{{ govc_download_url }}/govc_{{ ansible_system|lower }}_386.gz"
      dest: "{{ govc_tmp }}/govc-{{ govc_version }}.gz"
      validate_certs: false
    when: "'32' in ansible_architecture"

  - name: Download archive 64 bits
    get_url:
      url: "{{ govc_download_url }}/govc_{{ ansible_system|lower }}_amd64.gz"
      dest: "{{ govc_tmp }}/govc-{{ govc_version }}.gz"
      validate_certs: false
    when: "'64' in ansible_architecture"

  - name: Uncompress govc binary
    command: "gunzip {{ govc_tmp }}/govc-{{ govc_version }}.gz"
    args:
      creates: "{{ govc_tmp }}/govc-{{ govc_version }}"

  - name: move govc into place
    command: mv "{{ govc_tmp }}/govc-{{ govc_version }}" "{{ govc_file }}"

  - name: Ensure govc executable
    file:
      path: "{{ govc_file }}"
      mode: 0755
  when: |
    ( govc_version_found is defined and govc_version_found is failed )
    or ( govc_version_found.stdout is defined and govc_version not in govc_version_found.stdout )

- name: Verify installed govc version
  command: "{{ govc_path }}/govc version"
  ignore_errors: false
  register: govc_version_installed
  changed_when: false

- name: Assert correct installed version
  assert:
    that: "govc_version_installed is not failed and govc_version_installed.stdout is defined and govc_version in govc_version_installed.stdout"
  when: not ansible_check_mode

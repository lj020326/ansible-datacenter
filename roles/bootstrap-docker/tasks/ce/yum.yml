---

- ansible.builtin.set_fact:
    __log_prefix_yum: "Docker | CE | YUM |"

- name: "{{ __log_prefix_yum }} Remove older Docker installations"
  ansible.builtin.package:
    name:
      - docker
      - docker-common
      - docker-engine
    state: absent

- name: "{{ __log_prefix_yum }} Remove conflicting runc installations"
  ansible.builtin.package:
    name: runc
    state: absent

- name: "{{ __log_prefix_yum }} Add repository key"
  block:
    - name: "{{ __log_prefix_yum }} Add repository key"
      ansible.builtin.rpm_key:
        key: "{{ bootstrap_docker__ce_gpg_key }}"
        state: present

  rescue:
    - name: "{{ __log_prefix_yum }} Ensure curl is present (systems without SNI)."
      ansible.builtin.package:
        name: curl
      register: task_result
      until: task_result is success
      retries: 10
      delay: 2
    - name: "{{ __log_prefix_yum }} Download GPG key (systems without SNI)."
      ansible.builtin.shell: "curl -sSL {{ bootstrap_docker__ce_gpg_key }} -o /tmp/docker-gpg"
    - name: "{{ __log_prefix_yum }} Add Docker GPG key (systems without SNI)."
      ansible.builtin.shell: rpm --import /tmp/docker-gpg
    - name: "{{ __log_prefix_yum }} Remove docker-gpg from tmp folder"
      ansible.builtin.file:
        path: /tmp/docker-gpg
        state: absent

- name: "{{ __log_prefix_yum }} Deploy repository"
  block:
    - name: "{{ __log_prefix_yum }} Deploy repository"
      ansible.builtin.get_url:
        url: "{{ bootstrap_docker__ce_repo_file_url }}"
        dest: /etc/yum.repos.d/docker-ce.repo
        owner: root
        group: root
        mode: "0644"
  rescue:
    - name: "{{ __log_prefix_yum }} Install yum-utils (systems without SNI)"
      ansible.builtin.yum:
        name: yum-utils
      register: task_result
      until: task_result is success
      retries: 10
      delay: 2
    - name: "{{ __log_prefix_yum }} Deploy repository (systems without SNI)"
      ansible.builtin.shell: "yum-config-manager --add-repo {{ bootstrap_docker__ce_repo_file_url }}"
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

- name: "{{ __log_prefix_yum }} Enable edge repository"
  ansible.builtin.yum_repository:
    name: docker-ce-edge
    description: "Docker CE Edge - $basearch"
    baseurl: "{{ bootstrap_docker__ce_edge_repo_url }}"
    gpgcheck: true
    gpgkey: "{{ bootstrap_docker__ce_gpg_key }}"
    enabled: true
    file: docker-ce
  when: bootstrap_docker__channel == "edge"

- name: "{{ __log_prefix_yum }} Perform specific os tasks"
  ansible.builtin.include_tasks: "{{ lookup('first_found', __file_params) }}"
  vars:
    __file_params:
      files:
        - "{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version|lower }}.yml"
        - "{{ ansible_distribution|lower }}.yml"
        - "{{ ansible_distribution|lower }}.yml"
        - "default.yml"
      paths:
        - "tasks/ce/os"
#        - "{{ role_path }}/tasks/ce/os"

- name: "{{ __log_prefix_yum }} Install docker-ce"
  ansible.builtin.package:
    name: docker-ce
    state: present
  notify: Docker | Restart Docker
  register: task_result
  until: task_result is success
  retries: 10
  delay: 2

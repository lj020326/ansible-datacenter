---
# Get VMware Tools status after uninstall
- name: Run ../../common/vm_get_vmtools_status.yml
  ansible.builtin.include_tasks: ../../common/vm_get_vmtools_status.yml
- name: Verify VMware Tools is not running and not installed after uninstall
  ansible.builtin.assert:
    that:
      - vmtools_is_installed is defined
      - not vmtools_is_installed | bool
      - vmtools_is_running is defined
      - not vmtools_is_running | bool
    fail_msg: "VMware Tools installed and running status: '{{ vmtools_is_installed }}/{{ vmtools_is_running }}', which should be 'false/false' after VMware Tools
      uninstall."

- name: Handle inbox drivers contained in guest OS situation
  when:
    - guest_os_with_inbox_drivers is defined
    - guest_os_with_inbox_drivers | bool
  block:
    - name: Run check_pvscsi_not_uninstalled.yml
      ansible.builtin.include_tasks: check_pvscsi_not_uninstalled.yml

    - name: Run check_vmxnet3_not_uninstalled.yml
      ansible.builtin.include_tasks: check_vmxnet3_not_uninstalled.yml
      when: win_pvscsi_vmxnet3_installers.vmxnet3[0] == 'Windows'

    - name: Run check_vmxnet3_inbox_loaded.yml
      ansible.builtin.include_tasks: check_vmxnet3_inbox_loaded.yml
      when: win_pvscsi_vmxnet3_installers.vmxnet3[0] == 'MSI'

    - name: Run ../utils/win_get_problem_device.yml
      ansible.builtin.include_tasks: ../utils/win_get_problem_device.yml
    - name: Check no problem device listed after VMware Tools uninstall
      ansible.builtin.assert:
        that:
          - gos_has_problem_device is defined
          - not gos_has_problem_device
        fail_msg: "Problem devices found in guest after VMware Tools uninstall, please check listed problem devices: {{ gos_problem_device_list }}"

---
# For Ubuntu or Debian , modify sshd config to keep connection alive
- name: Run ../utils/ssh_keep_alive.yml
  ansible.builtin.include_tasks: ../utils/ssh_keep_alive.yml
  when: guest_os_family == "Debian"

# Diable auto update for Ubuntu
- name: Run ../utils/disable_auto_update.yml
  ansible.builtin.include_tasks: ../utils/disable_auto_update.yml
  when: guest_os_ansible_distribution in ["Ubuntu"]

- when: guest_os_ansible_distribution == "VMware Photon OS"

  block:
    - name: Run ../../common/vm_get_vmtools_status.yml
      ansible.builtin.include_tasks: ../../common/vm_get_vmtools_status.yml
      when: vmtools_is_running is undefined or not vmtools_is_running

    - name: Run ../utils/disable_iptables.yml
      ansible.builtin.include_tasks: ../utils/disable_iptables.yml
      when:
        - (new_vm is undefined) or (not new_vm | bool)
        - vmtools_is_running

    # Photon OS needs to disable DNSSEC and DNSOverTLS while connecting online repo
    - name: Run ../utils/set_dns.yml
      ansible.builtin.include_tasks: ../utils/set_dns.yml

    # Update photon repo cache
    - name: Run ../utils/repo_update.yml
      ansible.builtin.include_tasks: ../utils/repo_update.yml
      vars:
        check_update_cmd: tdnf makecache

    - name: Run ../utils/get_installed_package_info.yml
      ansible.builtin.include_tasks: ../utils/get_installed_package_info.yml
      vars:
        package_name: gawk

    - name: Run ../utils/install_uninstall_package.yml
      ansible.builtin.include_tasks: ../utils/install_uninstall_package.yml
      vars:
        package_name: gawk
        package_state: present
      when:
        - package_info is defined
        - package_info | length == 0
- when: guest_os_ansible_distribution == "SLED"
  block:
    - name: Run ../utils/get_service_info.yml
      ansible.builtin.include_tasks: ../utils/get_service_info.yml
      vars:
        service_name: packagekit.service

    - when:
        - service_info
        - service_info.state is defined
        - service_info.state in ['active', 'running']

      # Remove PackageKit
      block:
        - name: Disable and stop PackageKit Service
          ansible.builtin.service:
            name: packagekit.service
            state: stopped
            enabled: false
          delegate_to: "{{ vm_guest_ip }}"

        # Reboot VM to make sure packagekit.service is disabled and stopped
        - name: Run ../utils/reboot.yml
          ansible.builtin.include_tasks: ../utils/reboot.yml
    - name: Run ../utils/get_installed_package_info.yml
      ansible.builtin.include_tasks: ../utils/get_installed_package_info.yml
      vars:
        package_name: PackageKit

    - name: Run ../utils/install_uninstall_package.yml
      ansible.builtin.include_tasks: ../utils/install_uninstall_package.yml
      vars:
        package_name: PackageKit
        package_state: absent
      when:
        - package_info is defined
        - package_info | length > 0

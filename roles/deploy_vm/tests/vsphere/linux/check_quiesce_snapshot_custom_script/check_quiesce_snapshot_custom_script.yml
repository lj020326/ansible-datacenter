---
# Description:
#   This test case is used for check taking quiesce snapshot on VM through VMware tools.
# When VMware tools is not installed or not running in VM, this test case result is 'No Run'.
#
- name: check_quiesce_snapshot_custom_script
  hosts: localhost
  gather_facts: false
  vars_files:
    - "{{ testing_vars_file | default('../../vars/test.yml') }}"
  tasks:
    - name: Test case block
      block:
        - name: Run ../setup/test_setup.yml
          ansible.builtin.include_tasks: ../setup/test_setup.yml
          vars:
            skip_test_no_vmtools: true

        # Take quiesce snapshot
        - name: Set quiesce snapshot variables
          ansible.builtin.set_fact:
            qs_snapshot_name: quiesce_snapshot_{{ lookup('pipe', 'date +%Y-%m-%d-%H-%M-%S') }}
            backup_script_dir: /etc/vmware-tools/backupScripts.d
            vss_shell_script: vss_script_sh.sh
            vss_bin_script: vss_script_bin_{{ guest_os_bit | replace('-', '') }}
            vss_log_path: /vss.log
            vss_content: ""

        # Copy vss_script_sh.sh to /etc/vmware-tools/backupScripts.d/vss_script_sh.sh
        - name: Create backup script dir {{ backup_script_dir }}
          ansible.builtin.file:
            path: "{{ backup_script_dir }}"
            state: directory
            mode: "0755"
          delegate_to: "{{ vm_guest_ip }}"

        - name: Copy custom script {{ vss_shell_script }}
          ansible.builtin.copy:
            src: "{{ vss_shell_script }}"
            dest: "{{ backup_script_dir }}/{{ vss_shell_script }}"
            mode: "0755"
          delegate_to: "{{ vm_guest_ip }}"

        # Copy pre-freeze-script and post-thaw-script to /usr/sbin/
        - name: Copy custom script pre-freeze-script and post-thaw-script to /usr/sbin
          ansible.builtin.copy:
            src: "{{ vss_bin_script }}"
            dest: /usr/sbin/{{ item }}
            mode: "0755"
          loop:
            - pre-freeze-script
            - post-thaw-script
          delegate_to: "{{ vm_guest_ip }}"
          when: "'Flatcar' not in guest_os_ansible_distribution"

        # Ensure /vss.log is absent
        - name: Remove {{ vss_log_path }} if it exists
          ansible.builtin.file:
            path: "{{ vss_log_path }}"
            state: absent
          delegate_to: "{{ vm_guest_ip }}"

        - name: Run ../../common/vm_take_snapshot.yml
          ansible.builtin.include_tasks: ../../common/vm_take_snapshot.yml
          vars:
            snapshot_name: "{{ qs_snapshot_name }}"
            is_quiesce: "yes"
            dump_memory: "no"

        # After snapshot is taken, check log file /vss.log in guest, which should have below contents:
        # /usr/sbin/pre-freeze-script freeze
        # /etc/vmware-tools/backupScripts.d/vss_script_sh.sh freeze
        # /etc/vmware-tools/backupScripts.d/vss_script_sh.sh thaw
        # /usr/sbin/post-thaw-script thaw
        - name: Check {{ vss_log_path }} existence
          ansible.builtin.stat:
            path: "{{ vss_log_path }}"
          register: vss_stat
          delegate_to: "{{ vm_guest_ip }}"

        - name: "{{ ansible_play_name }} failed"
          ansible.builtin.fail:
            msg: "{{ vss_log_path }} doesn't exist after quiesce snapshot"
          when: >
            (vss_stat is undefined) or
            (vss_stat.stat is undefined) or
            (vss_stat.stat.exists is undefined) or
            (vss_stat.stat.exists is defined and
             not vss_stat.stat.exists)

        - name: Retrieve /vss.log
          when:
            - vss_stat is defined
            - vss_stat.stat is defined
            - vss_stat.stat.exists is defined
            - vss_stat.stat.exists
          block:
            # Retrieve /vss.log
            - name: Run ../../common/vm_guest_file_operation.yml
              ansible.builtin.include_tasks: ../../common/vm_guest_file_operation.yml
              vars:
                operation: fetch_file
                src_path: "{{ vss_log_path }}"
                dest_path: "{{ current_test_log_folder }}{{ vss_log_path }}"

            - name: Get file content in /vss.log
              ansible.builtin.command: cat {{ current_test_log_folder }}{{ vss_log_path }}
              register: vss_content
              changed_when: false

        # Test failed for non-Flatcar guest
        - name: "{{ ansible_play_name }} failed"
          when: ('Flatcar' not in guest_os_ansible_distribution) and (( not vss_content ) 
            or ( vss_content.stdout_lines is undefined ) or ( vss_content.stdout_lines | length != 4 ) 
            or ( vss_content.stdout_lines[0] != "/usr/sbin/pre-freeze-script freeze" ) 
            or ( vss_content.stdout_lines[1] != "/etc/vmware-tools/backupScripts.d/vss_script_sh.sh freeze" ) 
            or ( vss_content.stdout_lines[2] != "/etc/vmware-tools/backupScripts.d/vss_script_sh.sh thaw" ) 
            or ( vss_content.stdout_lines[3] != "/usr/sbin/post-thaw-script thaw" ))
          ansible.builtin.fail:
            msg: "{{ vss_log_path }} has incorrect content"

        # Test failed for Flatcar guest
        - name: "{{ ansible_play_name }} failed"
          ansible.builtin.fail:
            msg: "{{ vss_log_path }} has incorrect content"
          when: ('Flatcar' in guest_os_ansible_distribution) and (( not vss_content ) or ( vss_content.stdout_lines is undefined ) or ( vss_content.stdout_lines |
            length != 2 ) or ( vss_content.stdout_lines[0] != "/etc/vmware-tools/backupScripts.d/vss_script_sh.sh freeze") or ( vss_content.stdout_lines[1] != "/etc/vmware-tools/backupScripts.d/vss_script_sh.sh
            thaw" ))

        # Remove quiesce snapshot for successful test
        - name: Run ../../common/vm_remove_snapshot.yml
          ansible.builtin.include_tasks: ../../common/vm_remove_snapshot.yml
          vars:
            snapshot_name: "{{ qs_snapshot_name }}"
      rescue:
        - name: Run ../../common/test_rescue.yml
          ansible.builtin.include_tasks: ../../common/test_rescue.yml

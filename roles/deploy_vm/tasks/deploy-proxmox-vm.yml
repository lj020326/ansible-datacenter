---
- name: Load relevant secrets
  ansible.builtin.include_vars: ~/0/vault/proxmox.yml
  no_log: false

- name: include vars
  ansible.builtin.include_vars: main.yml

- name: create containers
  community.general.proxmox:
    password: "{{ root_password }}"
    vmid: "{{ hostvars[item].vmid | default([])}}"
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    api_host: "{{ api_host }}"
    hostname: "{{ hostvars[item].inventory_hostname }}"
    node: "{{ hostvars[item].deploy_vm__vm_proxmox_node }}"
    cores: "{{ hostvars[item].cores | default(deploy_vm__vm_proxmox_defaults.cores) }}"
    cpus: "{{ hostvars[item].cpus | default(deploy_vm__vm_proxmox_defaults.cpus) }}"
    netif: "{{ '{\"net0\":\"name=eth0,type=veth,bridge=vmbr0,ip6=auto,gw=10.3.3.1,hwaddr=' + hostvars[item].mac_address + ',ip=' + hostvars[item].ansible_host + '/25\"\
      }' | default(deploy_vm__vm_proxmox_defaults.netif) }}"
    memory: "{{ hostvars[item].memory | default(deploy_vm__vm_proxmox_defaults.memory.ct) }}"
    swap: "{{ hostvars[item].swap | default(deploy_vm__vm_proxmox_defaults.swap.ct) }}"
    disk: "{{ hostvars[item].disk | default(deploy_vm__vm_proxmox_defaults.disk.ct) }}"
    storage: "{{ hostvars[item].storage | default(deploy_vm__vm_proxmox_defaults.storage.lvm) }}"
    onboot: "{{ hostvars[item].onboot | default(deploy_vm__vm_proxmox_defaults.onboot) }}"
    pubkey: "{{ id_ed25519_pub }}"
    searchdomain: "{{ hostvars[item].searchdomain | default(deploy_vm__vm_proxmox_defaults.searchdomain) }}"
    nameserver: "{{ hostvars[item].nameserver | default(deploy_vm__vm_proxmox_defaults.nameserver) }}"
    deploy_vm__vm_os_template: "{{ deploy_vm__vm_os_template }}"
    state: present
  loop: "{{ deploy_vm__containers }}"
  loop_control:
    pause: 5
  notify:
    - sleep
  register: created_cts_pve

- name: flush_handlers when created_cts_pve.changed
  when: created_cts_pve.changed # noqa: no-handler
  ansible.builtin.meta: flush_handlers

- name: start containers
  community.general.proxmox:
    api_user: "{{ api_user }}"
    api_password: "{{ api_password }}"
    api_host: "{{ api_host }}"
    node: "{{ item['invocation']['module_args']['node'] }}"
    hostname: "{{ item['item'] }}"
    state: started
  loop: "{{ created_cts_pve.results }}"
  notify:
    - sleep
    #when: 'item.changed'

- name: flush_handlers when created_cts_pve.changed
  when: created_cts_pve.changed # noqa: no-handler
  ansible.builtin.meta: flush_handlers

## source: https://github.com/htpcBeginner/docker-traefik/blob/master/traefik2/rules/middlewares.yml.example
http:
  middlewares:
    middlewares-basic-auth:
      basicAuth:
        # users:
        #   - "user:$apsdfs.$EntPC0w3FtswWvC/6fTVJ7IUVtX1"
        usersFile: "/shared/.htpasswd" #be sure to mount the volume through docker-compose.yml
        realm: "Traefik 2 Basic Auth"

    middlewares-rate-limit:
      rateLimit:
        average: 100
        burst: 50

    middlewares-secure-headers:
      headers:
        accessControlAllowMethods:
          - GET
          - OPTIONS
          - PUT
        accessControlMaxAge: 100
        hostsProxyHeaders:
          - "X-Forwarded-Host"
        sslRedirect: true
        stsSeconds: 63072000
        stsIncludeSubdomains: true
        stsPreload: true
        forceSTSHeader: true
        ## CSP takes care of this but may be needed for organizr.
        # frameDeny: true #overwritten by customFrameOptionsValue
#        customFrameOptionsValue: "allow-from https:{{ docker_stack_internal_domain }}" #CSP takes care of this but may be needed for organizr.
        ## ALLOW FROM with multiple domains
        ## http://blog.raastech.com/2017/09/include-multiple-domains-in-allow-from.html
        customFrameOptionsValue: "allow-from https:{{ docker_stack_internal_domain }}"
        contentTypeNosniff: true
        browserXssFilter: true
        # sslForceHost: true # add sslHost to all of the services
        # sslHost: "example.com"
        referrerPolicy: "same-origin"
        # Setting contentSecurityPolicy is more secure but it can break things. Proper auth will reduce the risk.
        # the below line also breaks some apps due to 'none' - sonarr, radarr, etc.
        # contentSecurityPolicy: "frame-ancestors '*.example.com:*';object-src 'none';script-src 'none';"
        featurePolicy: "camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; vr 'none';"
        customResponseHeaders:
          X-Robots-Tag: "none,noarchive,nosnippet,notranslate,noimageindex,"
          server: ""

    middlewares-secure-headers-ext:
      headers:
        accessControlAllowMethods:
          - GET
          - OPTIONS
          - PUT
        accessControlMaxAge: 100
        hostsProxyHeaders:
          - "X-Forwarded-Host"
        sslRedirect: true
        stsSeconds: 63072000
        stsIncludeSubdomains: true
        stsPreload: true
        forceSTSHeader: true
        ## CSP takes care of this but may be needed for organizr.
        # frameDeny: true #overwritten by customFrameOptionsValue
#        customFrameOptionsValue: "allow-from https:{{ docker_stack_internal_domain }}" #CSP takes care of this but may be needed for organizr.
        ## ALLOW FROM with multiple domains
        ## http://blog.raastech.com/2017/09/include-multiple-domains-in-allow-from.html
        customFrameOptionsValue: "allow-from https:{{ docker_stack_external_domain }}"
        contentTypeNosniff: true
        browserXssFilter: true
        # sslForceHost: true # add sslHost to all of the services
        # sslHost: "example.com"
        referrerPolicy: "same-origin"
        # Setting contentSecurityPolicy is more secure but it can break things. Proper auth will reduce the risk.
        # the below line also breaks some apps due to 'none' - sonarr, radarr, etc.
        # contentSecurityPolicy: "frame-ancestors '*.example.com:*';object-src 'none';script-src 'none';"
        featurePolicy: "camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; vr 'none';"
        customResponseHeaders:
          X-Robots-Tag: "none,noarchive,nosnippet,notranslate,noimageindex,"
          server: ""

    middlewares-oauth:
      forwardAuth:
        address: "http://oauth:4181" # Make sure you have the OAuth service in docker-compose.yml
        trustForwardHeader: true
        authResponseHeaders:
          - "X-Forwarded-User"

    middlewares-authelia:
      forwardAuth:
        address: "http://authelia:9091/api/verify?rd=https://authelia.{{ docker_stack_internal_domain }}"
        trustForwardHeader: true
        authResponseHeaders:
          - "Remote-User"
          - "Remote-Groups"
#          - "Remote-Name"
#          - "Remote-Email"

    ## ref: https://ptarmiganlabs.com/blog/2020/09/08/superpowers-to-qlik-sense-enterprise-the-traefik-reverse-proxy-part-1/
    sslheaders:
      headers:
        customRequestHeaders:
          X-Forwarded-Proto: https
        hostsProxyHeaders:
          - "X-Forwarded-Host"

    https-only:
      redirectScheme:
        scheme: "https"
{% if __docker_stack_appspecs__base_traefik_https != '443' %}
        port: "{{ __docker_stack_appspecs__base_traefik_https }}"
{% endif %}

    auth-users:
      basicAuth:
        usersFile: "/shared/.htpasswd"
#        users:
#        - "test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/"

    known-ips:
      ipWhiteList:
        sourceRange:
        - "192.168.0.0/16"
        - "172.0.0.0/8"
        - "127.0.0.1/32"

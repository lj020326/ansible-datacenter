#debug = true

#logLevel = "ERROR" #DEBUG, INFO, WARN, ERROR, FATAL, PANIC
#logLevel = "DEBUG" #DEBUG, INFO, WARN, ERROR, FATAL, PANIC
logLevel = "INFO" #DEBUG, INFO, WARN, ERROR, FATAL, PANIC

## ref: https://github.com/linuxserver/Heimdall/issues/96
insecureSkipVerify = true

defaultEntryPoints = ["https", "http"]

## WEB interface of Traefik - it will show web page with overview of frontend and backend configurations
#[web]
#address = ":8080"
#debug = true
#  [web.auth.basic]
#  usersFile = "/shared/.htpasswd"

[api]
#debug = true
entryPoint = "traefik"
dashboard = true
address = ":8080"
usersFile = "/shared/.htpasswd"
#  [web.auth.basic]
#  usersFile = "/shared/.htpasswd"

# Force HTTPS
[entryPoints]
  [entryPoints.http]
  address = ":80"
    [entryPoints.http.redirect]
    entryPoint = "https"
  [entryPoints.https]
  address = ":443"
  useXForwardedFor = true
    [entryPoints.https.tls]
      [[entryPoints.https.tls.certificates]]
      certFile = "/certs/{{ docker_stack_ssl_internal_cert_file }}"
      keyFile = "/certs/{{ docker_stack_ssl_internal_privatekey_file }}"

[file]
  ## use a rules.toml if there are non-docker backend services
  ## ref: https://www.smarthomebeginner.com/traefik-reverse-proxy-tutorial-for-docker/
  ## ref: https://www.smarthomebeginner.com/traefik-reverse-proxy-tutorial-for-docker/#Proxying_Non-Docker_Host_System_Apps
  directory = "/etc/traefik/rules/"
  watch = true

# Let's encrypt configuration
[acme]
email = "{{ admin_email_address }}"
storage="/etc/traefik/acme/acme.json"
entryPoint = "https"
acmeLogging=true
onDemand = false #create certificate when container is created
#onHostRule = true #disable for wildcard domains
# Use a HTTP-01 acme challenge rather than TLS-SNI-01 challenge
#[acme.httpChallenge] #does not work with wildcard domains, use dns challenge
#  entryPoint = "http" #does not work with wildcard domains

## staging mode: https://github.com/containous/traefik/issues/3468
{% if __docker_stack_appspecs__base_traefik_certresolver_enable_qa|d(True)|bool %}
caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"
{% endif %}
[acme.dnsChallenge]
  provider = "cloudflare"
  delayBeforeCheck = 90
[[acme.domains]]
   main = "*.{{ docker_stack_external_domain }}"
   sans = ["{{ docker_stack_external_domain }}"]

## ref: https://github.com/containous/traefik/issues/3445
#[[acme.domains]]
#  main = "*.{{ docker_stack_external_domain }}"
#
#[[acme.domains]]
#  main = "{{ docker_stack_external_domain }}"

# Connection to docker host system (docker.sock)
[docker]
endpoint = "unix:///var/run/docker.sock"
#endpoint = "tcp://socket-proxy:2375"
#domain = "{{ docker_stack_external_domain }}"
domain = "{{ docker_stack_internal_domain }}"
watch = true
# This will hide all docker containers that don't have explicitly  
# set label to "enable"
exposedbydefault = false

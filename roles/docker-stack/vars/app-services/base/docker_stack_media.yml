---

__docker_stack_appspecs__media_plex_host: "{{ docker_stack_plex_host | d('media.example.int:32400') }}"
__docker_stack_appspecs__media_plex_host_url: "{{ docker_stack_plex_host_url | d('http://' + __docker_stack_appspecs__media_plex_host + '/') }}"
__docker_stack_appspecs__media_plex_host_ip: "{{ docker_stack_plex_host_ip | d('192.168.1.105') }}"
__docker_stack_appspecs__media_plex_host_port: "{{ docker_stack_plex_host_port | d('32400') }}"
__docker_stack_appspecs__media_plex_apikey: "{{ docker_stack_plex_apikey | d('apikey') }}"
__docker_stack_appspecs__media_plex_claim: "{{ docker_stack_plex_claim | d('claim-sdfasdfadgadfgdfgadfg') }}"

#__docker_stack_appspecs__media_openvpn_image: "{{ docker_stack_openvpn_image | d('bubuntux/nordvpn:latest') }}"
__docker_stack_appspecs__media_openvpn_image: "{{ docker_stack_openvpn_image | d('azinchen/nordvpn:latest') }}"
__docker_stack_appspecs__media_openvpn_network: "{{ docker_stack_openvpn_network | d('192.168.0.0/16') }}"

__docker_stack_appspecs__media_transmission_image: "{{ docker_stack_transmission_image | d('dperson/transmission:latest') }}"
__docker_stack_appspecs__media_qbittorrent_image: "{{ docker_stack_qbittorrent_image | d('ghcr.io/linuxserver/qbittorrent:latest') }}"

__docker_stack_appspecs__media_sonarr_image: "{{ docker_stack_sonarr_image | d('linuxserver/sonarr:latest') }}"
__docker_stack_appspecs__media_radarr_image: "{{ docker_stack_radarr_image | d('linuxserver/radarr:latest') }}"
__docker_stack_appspecs__media_lidarr_image: "{{ docker_stack_lidarr_image | d('linuxserver/lidarr:latest') }}"
__docker_stack_appspecs__media_bazarr_image: "{{ docker_stack_bazarr_image | d('linuxserver/bazarr:latest') }}"

########## MEDIA NODE CONFIGS ############
#__docker_stack_appspecs__media_create_folders: yes

## downloads and media directories
__docker_stack_appspecs__media_path: "{{ docker_stack_mediaserver_media_path | d('/srv/media') }}"
__docker_stack_appspecs__media_nas_path: "{{ docker_stack_mediaserver_nas_media_path | d('/srv/media') }}"

__docker_stack_appspecs__media_movies: movies
__docker_stack_appspecs__media_tv: tv_shows
__docker_stack_appspecs__media_music: music
#__docker_stack_appspecs__media_books: books
#__docker_stack_appspecs__media_books: books/lazylibrarian
#__docker_stack_appspecs__media_books: books/readarr
__docker_stack_appspecs__media_books: books
__docker_stack_appspecs__media_pictures: pictures

__docker_stack_appspecs__media_movies_path: "{{ __docker_stack_appspecs__media_nas_path }}/{{ __docker_stack_appspecs__media_movies }}"
__docker_stack_appspecs__media_tv_path: "{{ __docker_stack_appspecs__media_nas_path }}/{{ __docker_stack_appspecs__media_tv }}"
__docker_stack_appspecs__media_music_path: "{{ __docker_stack_appspecs__media_nas_path }}/{{ __docker_stack_appspecs__media_music }}"
__docker_stack_appspecs__media_books_path: "{{ __docker_stack_appspecs__media_nas_path }}/{{ __docker_stack_appspecs__media_books }}"
__docker_stack_appspecs__media_pictures_path: "{{ __docker_stack_appspecs__media_nas_path }}/{{ __docker_stack_appspecs__media_pictures }}"

__docker_stack_appspecs__media_downloads: "{{ __docker_stack_appspecs__media_path }}/downloads"
__docker_stack_appspecs__media_downloads_watch: "{{ __docker_stack_appspecs__media_downloads }}/watch"
__docker_stack_appspecs__media_downloads_complete: "{{ __docker_stack_appspecs__media_downloads }}/completed"
__docker_stack_appspecs__media_downloads_incomplete: "{{ __docker_stack_appspecs__media_downloads }}/incomplete"
__docker_stack_appspecs__media_config_dir: "{{ docker_stack_dir }}"
__docker_stack_appspecs__media_scripts_dir: "{{ __docker_stack_appspecs__media_config_dir }}/scripts"

__docker_stack_appspecs__media_shared_data_dir: "{{ docker_stack_mediaserver_shared_data_dir | d('/data') }}"

#__docker_stack_appspecs__media_shared_data: "{{ __docker_stack_appspecs__media_path }}/shared"

#app_source: "/var/lib/src"

#__docker_stack_appspecs__media_bittorrent_port: 9091
__docker_stack_appspecs__media_bittorrent_port: 8168
__docker_stack_appspecs__media_sabnzbd_port: "{{ docker_stack_sabnzbd_port | d('8080') }}"

__docker_stack_appspecs__media_emby_port: 8096
__docker_stack_appspecs__media_jellyfin_port: 8196

###
#media_server_fqdn: media.example.int

__docker_stack_appspecs__media_sickbeard_api_key: "{{ docker_stack_sickbeard_api_key | d('00000000000000000000000000000001') }}"
__docker_stack_appspecs__media_couchpotato_apikey: "{{ docker_stack_couchpotato_apikey | d('00000000000000000000000000000001') }}"
__docker_stack_appspecs__media_lidarr_apikey: "{{ docker_stack_lidarr_apikey | d('00000000000000000000000000000001') }}"
__docker_stack_appspecs__media_sonarr_apikey: "{{ docker_stack_sonarr_apikey | d('00000000000000000000000000000001') }}"
__docker_stack_appspecs__media_radarr_apikey: "{{ docker_stack_radarr_apikey | d('00000000000000000000000000000001') }}"

__docker_stack_appspecs__media_sabnzbd_apikey: "{{ docker_stack_sabnzbd_apikey | d('00000000000000000000000000000001') }}"
__docker_stack_appspecs__media_sabnzbd_nzbkey: "{{ docker_stack_sabnzbd_nzbkey | d('00000000000000000000000000000001') }}"
__docker_stack_appspecs__media_sabnzbd_rating_apikey: "{{ docker_stack_sabnzbd_rating_apikey | d('00000000000000000000000000000001') }}"

__docker_stack_appspecs__media_newznab_key: "{{ docker_stack_newznab_key | d('00000000000000000000000000000001') }}"

#__docker_stack_appspecs__media_sabnzbd_host: "{{ docker_stack_media_server_fqdn }}:{{ __docker_stack_appspecs__media_sabnzbd_port }}"
__docker_stack_appspecs__media_sabnzbd_host: "{{ docker_stack_sabnzbd_host | d('sabnzbd.' + docker_stack_internal_domain) }}"
__docker_stack_appspecs__media_sabnzbd_host_url: "https://{{ __docker_stack_appspecs__media_sabnzbd_host }}/"

__docker_stack_appspecs__media_email_from: "{{ docker_stack_email_from | d('admin@example.com') }}"
__docker_stack_appspecs__media_email_to: "{{ docker_stack_email_to | d('admin@example.com') }}"

__docker_stack_appspecs__media_smtp: "{{ docker_stack_smtp | d('mail.example.int') }}"

# Single or multiple news servers can be defined.
__docker_stack_appspecs__media_newsgroups_servers_default:
  - name: news.someserver.com
    options:
      name: news.someserver.com
      username: foo
      password: bar
      connections: 10
  - name: eu.news.someserver.com
    options:
      name: eu.news.someserver.com
      username: foo
      password: bar
      connections: 10

__docker_stack_appspecs__media_newsgroups_servers: "{{ docker_stack_newsgroups_servers | d(__docker_stack_appspecs__media_newsgroups_servers_default) }}"

__docker_stack_appspecs__media_couchpotato_password: "{{ docker_stack_couchpotato_password | d('password') }}"
__docker_stack_appspecs__media_vnc_password: "{{ docker_stack_vnc_passwd | d('password') }}"

#__docker_stack_appspecs__media_transmission_host: "{{ docker_stack_internal_domain }}:{{ __docker_stack_appspecs__media_bittorrent_port }}"
__docker_stack_appspecs__media_transmission_host: "transmission.{{ docker_stack_internal_domain }}"
__docker_stack_appspecs__media_transmission_host_url: "https://{{ __docker_stack_appspecs__media_transmission_host }}/"
__docker_stack_appspecs__media_transmission_host_url_with_port: "https://{{ __docker_stack_appspecs__media_transmission_host }}:443/"
__docker_stack_appspecs__media_transmission_rpc_username: "{{ docker_stack_transmission_rpc_username | d('transmission') }}"
__docker_stack_appspecs__media_transmission_rpc_password: "{{ docker_stack_transmission_rpc_password | d('password') }}"

__docker_stack_appspecs__media_openvpn_ip: "{{ docker_stack_openvpn_ip | d('8.8.8.8') }}"
__docker_stack_appspecs__media_openvpn_http_port: "{{ docker_stack_openvpn_http_port | d('8088') }}"
__docker_stack_appspecs__media_openvpn_port: "{{ docker_stack_openvpn_port | d(1194) }}"
__docker_stack_appspecs__media_openvpn_proto: "{{ docker_stack_openvpn_proto | d('udp') }}"

__docker_stack_appspecs__media_openvpn_username: "{{ docker_stack_openvpn_username | d('testuser') }}"
__docker_stack_appspecs__media_openvpn_password: "{{ docker_stack_openvpn_password | d('password') }}"

__docker_stack_appspecs__media_openvpn_certkey_default: |
  -----BEGIN OpenVPN Static key V1-----
  7ea403c98f786260b5d3d9d8e4e63c0e
  00000000000000000000000000000000
  00000000000000000000000000000000
  00000000000000000000000000000000
  00000000000000000000000000000000
  00000000000000000000000000000000
  -----END OpenVPN Static key V1-----

__docker_stack_appspecs__media_openvpn_certkey: "{{ docker_stack_openvpn_certkey | d(__docker_stack_appspecs__media_openvpn_certkey_default) }}"

### piwigo
#docker_piwigo_mysql_host: "db.example.int:3306"
#docker_piwigo_mysql_username: "piwigo"
#docker_piwigo_mysql_pwd: "password"


docker_stack_appspec_networks__media:
  vpn:
    external:
      name: vpn


docker_stack_appspec_config_dirs__media:
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/ip2geo", mode: "0644"}
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/heimdall" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/heimdall-int" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/openvpn" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/transmission" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/qbittorrent" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/sabnzbd" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/flaresolverr" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/prowlarr" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/jackett" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/sonarr" }
  ## ref: https://blog.linuxserver.io/2019/09/14/customizing-our-containers/
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/sonarr/custom-cont-init.d", owner: root, group: root }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/sonarr/certs" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/radarr" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/radarr/custom-cont-init.d", owner: root, group: root }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/radarr/certs" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/lidarr" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/lidarr/custom-cont-init.d", owner: root, group: root }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/lidarr/certs" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/bazarr" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/bazarr/custom-cont-init.d", owner: root, group: root }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/bazarr/certs" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/picard" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/airsonic" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/airsonic/config" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/airsonic/podcasts" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/airsonic/playlists" }
#  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/lazylibrarian" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/readarr" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/calibre" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/calibre-web" }

  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/embyms" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/jellyfin" }

  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/makemkv" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/mariadb" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/lychee" }
#    - { path: "{{ __docker_stack_appspecs__media_config_dir }}/piwigo" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/photoshow" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/nextcloud" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/nextcloud/certs" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/nextcloud/config" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/nextcloud/data" }
#  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/nextcloud/www/nextcloud/config" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/pydio" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/couchpotato" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/ombi" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/homeassistant" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/hydra" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/shared" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/thelounge"}
  ## converters
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/handbrake/config" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/handbrake/watch"}
  - { path: "{{ __docker_stack_appspecs__media_path }}/handbrake/output" }
  - { path: "{{ __docker_stack_appspecs__media_config_dir }}/mkvtoolnix/config" }
  ## app dirs:
  - { path: "{{ __docker_stack_appspecs__media_path }}" }
  - { path: "{{ __docker_stack_appspecs__media_tv_path }}" }
  - { path: "{{ __docker_stack_appspecs__media_movies_path }}" }
  - { path: "{{ __docker_stack_appspecs__media_music_path }}" }
  - { path: "{{ __docker_stack_appspecs__media_books_path }}" }
  - { path: "{{ __docker_stack_appspecs__media_pictures_path }}" }
  - { path: "{{ __docker_stack_appspecs__media_path }}/makemkv/output" }
  - { path: "{{ __docker_stack_appspecs__media_downloads }}" }
  - { path: "{{ __docker_stack_appspecs__media_downloads_watch }}" }
  - { path: "{{ __docker_stack_appspecs__media_downloads_complete }}" }
  - { path: "{{ __docker_stack_appspecs__media_downloads_complete }}/tv" }
  - { path: "{{ __docker_stack_appspecs__media_downloads_complete }}/movies" }
  - { path: "{{ __docker_stack_appspecs__media_downloads_complete }}/music" }
  - { path: "{{ __docker_stack_appspecs__media_downloads_complete }}/books" }
  - { path: "{{ __docker_stack_appspecs__media_downloads_incomplete }}" }
  - { path: "{{ __docker_stack_appspecs__media_downloads }}/wip_media" }


docker_stack_appspec_config_tpls__media:
#  - { src: 'media/config-nordvpn.ovpn.j2', dest: "{{ __docker_stack_appspecs__media_config_dir }}/openvpn/nordvpn.ovpn" }
  - { src: 'media/config-sabnzbd.ini.j2', dest: "{{ __docker_stack_appspecs__media_config_dir }}/sabnzbd/sabnzbd.ini" }
  - { src: 'media/config-couchpotato.ini.j2', dest: "{{ __docker_stack_appspecs__media_config_dir }}/couchpotato/config.ini" }
#    - { src: 'media/config-radarr.xml.j2', dest: "{{ __docker_stack_appspecs__media_config_dir }}/radarr/config.xml" }
#    - { src: 'media/config-sonarr.xml.j2', dest: "{{ __docker_stack_appspecs__media_config_dir }}/sonarr/config.xml" }
#    - { src: 'media/config-lidarr.xml.j2', dest: "{{ __docker_stack_appspecs__media_config_dir }}/lidarr/config.xml" }
#    - { src: 'media/config-lazylibrarian.xml.j2', dest: "{{ __docker_stack_appspecs__media_config_dir }}/lazylibrarian/config.xml" }
  - { src: 'media/config-transmission.json.j2', dest: "{{ __docker_stack_appspecs__media_config_dir }}/transmission/settings.json", force: yes }
#  - { src: 'media/config-nextcloud.php.j2', dest: "{{ __docker_stack_appspecs__media_config_dir }}/nextcloud/www/nextcloud/config/config.php" }
  - { src: 'media/config-nextcloud.php.j2', dest: "{{ __docker_stack_appspecs__media_config_dir }}/nextcloud/config/www/nextcloud/config/config.php" }
#    - { src: 'media/config-organizr-nginx-default.conf.j2', dest: "{{ __docker_stack_appspecs__media_config_dir }}/organizr/nginx/site-confs/default" }

docker_stack_appspec_config_files__media:
  - { src: 'files/mono_image/entrypoint.sh', dest: "/opt/scripts/mono-entrypoint.sh", mode: "0770" }
#  - { src: 'files/scripts/certs/validate_ssl_endpoint.sh', dest: "{{ __docker_stack_appspecs__media_config_dir }}/shared/validate_ssl_endpoint.sh" }
  - { src: 'files/ombi/docker/OmbiSettings.db', dest: "{{ __docker_stack_appspecs__media_config_dir }}/ombi/OmbiSettings.db"}
#    - { src: 'files/openvpn/nordvpn.udp.ovpn', dest: "{{ __docker_stack_appspecs__media_config_dir }}/openvpn/nordvpn.upd.ovpn"}
  - { src: 'files/prometheus/rules/swarm_node.rules.yml', dest: "{{ __docker_stack_appspecs__media_config_dir }}/prometheus/rules/swarm_node.rules.yml" }
  - { src: 'files/prometheus/rules/swarm_task.rules.yml', dest: "{{ __docker_stack_appspecs__media_config_dir }}/prometheus/rules/swarm_task.rules.yml" }
  - { src: "{{ docker_stack_internal_ssl_cert_dir }}/{{ docker_stack_internal_domain }}.chain.pem", dest: "{{ __docker_stack_appspecs__media_config_dir }}/nextcloud/config/keys/cert.crt", remote_src: yes }
  - { src: "{{ docker_stack_internal_ssl_certkey_dir }}/{{ docker_stack_internal_domain }}-key.pem", dest: "{{ __docker_stack_appspecs__media_config_dir }}/nextcloud/config/keys/cert.key", remote_src: yes }
#  - { src: "{{ docker_stack_internal_ssl_cert_dir }}/{{ docker_stack_internal_domain }}.chain.pem", dest: "{{ __docker_stack_appspecs__media_config_dir }}/sonarr/certs/{{ docker_stack_internal_domain }}.chain.cer", remote_src: yes }
#  - { src: "{{ docker_stack_internal_ssl_cert_dir }}/{{ docker_stack_internal_domain }}.chain.pem", dest: "{{ __docker_stack_appspecs__media_config_dir }}/radarr/certs/{{ docker_stack_internal_domain }}.chain.cer", remote_src: yes }
#  - { src: "{{ docker_stack_internal_ssl_cert_dir }}/{{ docker_stack_internal_domain }}.chain.pem", dest: "{{ __docker_stack_appspecs__media_config_dir }}/lidarr/certs/{{ docker_stack_internal_domain }}.chain.cer", remote_src: yes }
#  - { src: "{{ docker_stack_host_ca_bundle }}", dest: "{{ __docker_stack_appspecs__media_config_dir }}/sonarr/certs/ca-certificates.crt", remote_src: yes }
#  - { src: "{{ docker_stack_host_ca_bundle }}", dest: "{{ __docker_stack_appspecs__media_config_dir }}/radarr/certs/ca-certificates.crt", remote_src: yes }
#  - { src: "{{ docker_stack_host_ca_bundle }}", dest: "{{ __docker_stack_appspecs__media_config_dir }}/lidarr/certs/ca-certificates.crt", remote_src: yes }
#  - { src: "{{ docker_stack_host_ca_bundle }}", dest: "{{ __docker_stack_appspecs__media_config_dir }}/bazarr/certs/ca-certificates.crt", remote_src: yes }
  ## ref: https://www.linuxserver.io/blog/2019-09-14-customizing-our-containers
  - { src: 'files/mono_image/sync-cacerts.sh', dest: "{{ __docker_stack_appspecs__media_config_dir }}/sonarr/custom-cont-init.d/sync-cacerts.sh", owner: root, group: root, mode: "0770", backup: no }

docker_stack_firewalld_appspec_ports__media:
  - "{{ __docker_stack_appspecs__media_sabnzbd_port }}/tcp"
  - "{{ __docker_stack_appspecs__media_openvpn_http_port }}/tcp"
  - "{{ __docker_stack_appspecs__media_bittorrent_port }}/tcp"
  - "{{ __docker_stack_appspecs__media_emby_port }}/tcp"
  - "{{ __docker_stack_appspecs__media_jellyfin_port }}/tcp"

docker_stack_container_configs: {}

## ref: https://support.nmi.com/hc/en-gb/articles/360021544791-How-to-Check-If-the-Correct-Certificates-Are-Installed-on-Linux
#docker_stack_container_configs:
#  sonarr:
#    command: |
#      cert-sync {{ ca_cert_bundle }}
#  radarr:
#    command: |
#      cert-sync {{ ca_cert_bundle }}
#  lidarr:
#    command: |
#      cert-sync {{ ca_cert_bundle }}

#docker_stack_container_configs:
#  sonarr:
#    command: |
#      certmgr -add -c -v -m Trust /config/certs/{{ docker_stack_internal_domain }}.chain.cer
#      certmgr -list -c -m Trust
#  radarr:
#    command: |
#      certmgr -add -c -v -m Trust /config/certs/{{ docker_stack_internal_domain }}.chain.cer
#  lidarr:
#    command: |
#      certmgr -add -c -v -m Trust /config/certs/{{ docker_stack_internal_domain }}.chain.cer


docker_stack_appspec__media:
  dirs: "{{ docker_stack_appspec_config_dirs__media | d([]) }}"
  files: "{{ docker_stack_appspec_config_files__media | d([]) }}"
  templates: "{{ docker_stack_appspec_config_tpls__media | d([]) }}"
  firewalld_services: "{{ docker_stack_firewalld_appspec_services__media | d([]) }}"
  firewalld_ports: "{{ docker_stack_firewalld_appspec_ports__media | d([]) }}"
  networks: "{{ docker_stack_appspec_networks__media | d({}) }}"
  volumes: "{{ docker_stack_appspec_volumes__media | d({}) }}"
  docker_services: "{{ docker_stack_appspec_services__media | d({}) }}"

---

docker_stack_appspec_services__jenkins:
  ## ref: https://github.com/jenkinsci/docker
  ## ref: https://medium.com/swlh/quickstart-ci-with-jenkins-and-docker-in-docker-c3f7174ee9ff
  ## ref: https://github.com/4OH4/jenkins-docker
  ## ref: https://github.com/lj020326/jenkins-docker
  jenkins:
    image: "{{ __docker_stack_appspecs__jenkins_image }}"
    container_name: jenkins
    restart: "unless-stopped"
    networks:
      - "{{ docker_stack_traefik_proxy_network }}"
    ports:
      - "{{ __docker_stack_appspecs__jenkins_http }}:8080/tcp"  ## jenkins web server
      - "{{ __docker_stack_appspecs__jenkins_agent_port }}:9000/tcp"
#      command: "--httpsCertificate=/var/lib/jenkins/cert --httpsPrivateKey=/var/lib/jenkins/pk"
    volumes:
#        - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ __docker_stack_appspecs__jenkins_stack_dir }}/jenkins/passwd:/etc/passwd:ro"
      - "{{ __docker_stack_appspecs__jenkins_stack_dir }}/jenkins/group:/etc/group:ro"
      - "{{ __docker_stack_appspecs__jenkins_stack_dir }}/jenkins/jenkins_home:/var/jenkins_home"
      - "{{ docker_stack_host_ca_bundle }}:/etc/ssl/certs/ca-certificates.crt:ro"
      - "{{ ca_java_keystore }}:/var/lib/jenkins/cacerts"
      - "{{ __docker_stack_appspecs__jenkins_data_dir }}:/data"
      - "{{ docker_stack_vmware_data_dir }}:/vmware"
    user: "{{ docker_user_uid }}:{{ docker_user_gid }}"
    environment:
      TZ: "{{ timezone }}"
#        uid: "{{ docker_user_uid }}"
#        gid: "{{ docker_user_gid }}"
      JENKINS_SLAVE_AGENT_PORT: 9000
#        JAVA_OPTS: "-Djava.awt.headless=true -Djavax.net.ssl.trustStore=/var/lib/jenkins/cacerts -Djavax.net.ssl.trustStorePassword=changeit -Dhudson.model.DownloadService.noSignatureCheck=true"
      JAVA_OPTS: "-Djava.awt.headless=true -Djavax.net.ssl.trustStore=/var/lib/jenkins/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
      ## ref: https://github.com/jenkinsci/docker/pull/577
#        PLUGINS_FORCE_UPGRADE: 'true'
      ## ref: https://github.com/jenkinsci/docker/issues/594
      ## ref: https://medium.com/@shahmaulikn/install-jenkins-plugins-using-command-line-interface-8df0d0eed349
#        JENKINS_UC_DOWNLOAD: "http://updates.jenkins.io"
#        JENKINS_UC_DOWNLOAD: "http://mirrors.jenkins-ci.org"
#        JENKINS_UC_DOWNLOAD: "http://updates.jenkins-ci.org"
#        JENKINS_UC_DOWNLOAD: "https://mirrors.xmission.com/jenkins/updates/update-center.json"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=jenkins"
      - "traefik.frontend.rule=Host:jenkins.{{ docker_stack_internal_domain }}"
      - "traefik.port=8080"
      - "traefik.docker.network={{ docker_stack_traefik_proxy_network }}"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
#        - "traefik.frontend.headers.frameDeny=true"

  ## JENKINS INBOUNT AGENT #1
  ## ref: https://github.com/jenkinsci/docker-inbound-agent
  ## ref: https://github.com/cloudbees/jnlp-slave-with-java-build-tools-dockerfile
  ## ref: https://wiki.tds.tieto.com/display/TDSKB/Executing+Jenkins+jobs+when+only+one+way+network+connection+exists
  ## ref: https://stackoverflow.com/questions/58719522/tcpslaveagentlistener-is-invalid-404-not-found
  jenkins-agent-01:
    container_name: jenkins-agent-01
    image: "{{ __docker_stack_appspecs__jenkins_agent_image }}"
    environment:
      JENKINS_URL: "{{ __docker_stack_appspecs__jenkins_agent_jenkins_url }}"
      JENKINS_TUNNEL: "{{ __docker_stack_appspecs__jenkins_agent_tunnel }}"
      JENKINS_AGENT_WORKDIR: "{{ __docker_stack_appspecs__jenkins_agent_workdir }}"
      JENKINS_SECRET: "{{ __docker_stack_appspecs__jenkins_agent_secret }}"
      JENKINS_AGENT_NAME: "{{ __docker_stack_appspecs__jenkins_agent_name }}"
      JAVA_OPTS: "-Djavax.net.ssl.trustStore=/var/lib/jenkins/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
      gid: "{{ docker_user_gid }}"
      uid: "{{ docker_user_uid }}"
    networks:
    - "{{ docker_stack_traefik_proxy_network }}"
    ports:
    - "{{ __docker_stack_appspecs__jenkins_agent_ssh_port }}:4444/tcp"
    restart: unless-stopped
    depends_on:
      - jenkins
    volumes:
    - "/var/run/docker.sock:/var/run/docker.sock"
    - "{{ __docker_stack_appspecs__jenkins_stack_dir }}/jenkins_agent:/home/jenkins"
    - "{{ docker_stack_host_ca_bundle }}:/etc/ssl/certs/ca-certificates.crt:ro"
    - "{{ ca_java_keystore }}:/var/lib/jenkins/cacerts"
#    - /etc/pki/ca-trust/extracted/java/cacerts:/home/jenkins/.cacerts
#    - /export/data/jenkins/osimages:/data
    - "{{ __docker_stack_appspecs__jenkins_data_dir }}:/data"
    - "{{ docker_stack_vmware_data_dir }}:/vmware"


docker_stack_appspec__jenkins:
  dirs: "{{ docker_stack_appspec_config_dirs__jenkins | d([]) }}"
  files: "{{ docker_stack_appspec_config_files__jenkins | d([]) }}"
  templates: "{{ docker_stack_appspec_config_tpls__jenkins | d([]) }}"
  firewalld_services: "{{ docker_stack_firewalld_appspec_services__jenkins | d([]) }}"
  firewalld_ports: "{{ docker_stack_firewalld_appspec_ports__jenkins | d([]) }}"
  docker_services: "{{ docker_stack_appspec_services__jenkins | d({}) }}"

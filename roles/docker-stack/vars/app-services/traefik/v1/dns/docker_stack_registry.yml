---

__docker_stack__registry__services:
  ## ref: https://docs.docker.com/registry/deploying/#deploy-your-registry-using-a-compose-file
  registry:
    container_name: "{{__docker_stack__registry__container_name}}"
    restart: unless-stopped
    image: registry:2
    networks:
      - net
    ports:
      - "{{ __docker_stack__registry__host_port }}:{{ __docker_stack__registry__container_port }}"
    volumes:
      - "{{ __docker_stack__registry__data_path }}:/var/lib/registry"
      - "{{ __docker_stack__registry__cert_path }}:/certs"
      - "{{ __docker_stack__registry__host_auth_path }}:/auth"
      - "{{ __docker_stack__registry__config_path }}/config.yml:/etc/docker/registry/config.yml:ro"
    environment: "{{ __docker_stack__registry__env }}"

  registry-frontend:
    hostname: registry-frontend
    container_name: registry-frontend
    restart: unless-stopped
    image: konradkleine/docker-registry-frontend:v2
    links:
      - "{{__docker_stack__registry__container_name}}:registry"
    networks:
      - "{{ docker_stack__traefik_proxy_network }}"
      - net
#      ports:
#        - "{{ __docker_stack__registry__frontend_port }}:443"
    volumes:
      - "{{ __docker_stack__registry__cert_path }}/{{ __docker_stack__registry__cert }}:/etc/apache2/server.crt:ro"
      - "{{ __docker_stack__registry__cert_path }}/{{ __docker_stack__registry__certkey }}:/etc/apache2/server.key:ro"
    environment:
      ENV_DOCKER_REGISTRY_HOST: "{{__docker_stack__registry__container_name}}"
      ENV_DOCKER_REGISTRY_PORT: "{{ __docker_stack__registry__host_port }}"
      ENV_USE_SSL: "yes"
      ENV_DOCKER_REGISTRY_USE_SSL: "1"
      FRONTEND_BROWSE_ONLY_MODE: "false"
      ENV_REGISTRY_PROXY_FQDN: "{{ __docker_stack__registry__domain }}"
      ENV_REGISTRY_PROXY_PORT: "443"
    labels:
      - "traefik.enable=true"
      - "traefik.backend=registry-frontend"
      - "traefik.frontend.rule=Host:{{ __docker_stack__registry__frontend_fqdn }}"
      - "traefik.port=443"
      - "traefik.protocol=https"
      - "traefik.docker.network={{ docker_stack__traefik_proxy_network }}"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost={{ __docker_stack__registry__domain }}"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"


__docker_stack__appspec__registry:
  dirs: "{{ __docker_stack__registry__config_dirs | d([]) }}"
  files: "{{ __docker_stack__registry__config_files | d([]) }}"
  templates: "{{ __docker_stack__registry__config_tpls | d([]) }}"
  firewalld_services: "{{ __docker_stack__registry__firewalld_services | d([]) }}"
  firewalld_ports: "{{ __docker_stack__registry__firewalld_ports | d([]) }}"
  networks: "{{ __docker_stack__registry__networks | d({}) }}"
  volumes: "{{ __docker_stack__registry__volumes | d({}) }}"
  docker_services: "{{ __docker_stack__registry__services | d({}) }}"

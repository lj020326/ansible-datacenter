---

__docker_stack_appspecs__traefik_labels_traefik_default:
  #autoheal: true
  traefik.enable: true
  # HTTP-to-HTTPS Redirect
  traefik.http.routers.http-catchall.entrypoints: http
  traefik.http.routers.http-catchall.rule: HostRegexp(`{host:.+}`)
  traefik.http.routers.http-catchall.middlewares: redirect-to-https
  traefik.http.middlewares.redirect-to-https.redirectscheme.scheme: https
  ## Services - API
  traefik.http.routers.traefik-rtr.service: api@internal
  traefik.http.routers.traefik-rtr.entrypoints: https
  traefik.http.routers.traefik-rtr.rule: Host(`traefik.{{ docker_stack_internal_domain }}`)
#  traefik.http.routers.traefik-rtr.middlewares: chain-oauth@file
  ## Healthcheck/ping
  traefik.http.routers.ping.entrypoints: https
  traefik.http.routers.ping.service: ping@internal
  traefik.http.routers.ping.rule: Path(`/ping`)

__docker_stack_appspecs__traefik_labels_whoami_default:
  traefik.enable: true
  ## HTTP Routers
#  traefik.http.routers.whoami-rtr.entrypoints: https
#  traefik.http.routers.whoami-rtr.rule: Host(`whoami.{{ docker_stack_external_domain }}`)
  traefik.http.routers.whoami-rtr-int.entrypoints: https
#  traefik.http.routers.whoami-rtr-int.rule: Host(`whoami.{{ docker_stack_internal_domain }}`)
  traefik.http.routers.whoami-rtr-int.rule: Host(`whoami.{{ docker_stack_external_domain }}`,`whoami.{{ docker_stack_internal_domain }}`)
#  traefik.http.routers.whoami-rtr-int.service: whoami-svc
#  traefik.http.services.whoami-svc.loadbalancer.server.port: 80

__docker_stack_appspecs__traefik_labels_portainer_default:
  traefik.enable: true
  ## HTTP Routers
  traefik.http.routers.portainer-rtr.entrypoints: https
  traefik.http.routers.portainer-rtr.rule: Host(`portainer.{{ docker_stack_internal_domain }}`)
#  ## Middlewares
#  traefik.http.routers.portainer-rtr.middlewares: chain-no-auth@file # No Authentication
#  traefik.http.routers.portainer-rtr.middlewares: chain-authelia@file # Authelia
#  traefik.http.routers.portainer-rtr.middlewares: chain-oauth@file # Google OAuth 2.0
  ## HTTP Services
  traefik.http.routers.portainer-rtr.service: portainer-svc
  traefik.http.services.portainer-svc.loadbalancer.server.port: 9000

__docker_stack_appspecs__traefik_labels_dozzle_default:
  traefik.enable: true
  ## HTTP Routers
  traefik.http.routers.dozzle-rtr.entrypoints: https
  traefik.http.routers.dozzle-rtr.rule: HostHeader(`dozzle.{{ docker_stack_internal_domain }}`)
  ## Middlewares
#  traefik.http.routers.dozzle-rtr.middlewares: chain-authelia@file
  ## HTTP Services
  traefik.http.routers.dozzle-rtr.service: dozzle-svc
  traefik.http.services.dozzle-svc.loadbalancer.server.port: 8080

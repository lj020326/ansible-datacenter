---

__docker_stack__sonarqube__stack_dir: "{{ docker_stack__dir | d('/home/user/docker-dirs') }}"

__docker_stack__sonarqube__http: "{{ docker_stack__sonarqube_http | d('10180') }}"

#__docker_stack__sonarqube__image: "{{ docker_stack__registry_endpoint }}/sonarqube:latest"
__docker_stack__sonarqube__image: "sonarqube:community"

__docker_stack__sonarqube__db: sonar
__docker_stack__sonarqube__db_user: test
__docker_stack__sonarqube__db_password: test


#__docker_stack__sonarqube__data_dir: /export/data/sonarqube/osimages
#__docker_stack__sonarqube__data_dir: /export/data/sonarqube

__docker_stack__sonarqube__config_dirs:
  - { path: "{{ __docker_stack__sonarqube__stack_dir }}/sonarqube" }

#__docker_stack__sonarqube__config_tpls:
#  - { src: 'sonarqube/config-group.conf.j2', dest: "{{ __docker_stack__sonarqube__stack_dir }}/sonarqube/group" }
#  - { src: 'sonarqube/config-passwd.conf.j2', dest: "{{ __docker_stack__sonarqube__stack_dir }}/sonarqube/passwd" }

__docker_stack__sonarqube__firewalld_ports:
  - "{{ __docker_stack__sonarqube__agent_tcp_port }}/tcp"


__docker_stack__sonarqube__volumes:
  sonar_psql:
    driver: local
    driver_opts:
        type: none
        device: "$PWD/sonar_psql"
        o: bind

  sonar_psql_data:
    driver: local
    driver_opts:
        type: none
        device: "$PWD/sonar_psql_data"
        o: bind

  sonarqube_data:
    driver: local
    driver_opts:
        type: none
        device: "$PWD/sonarqube_data"
        o: bind

  sonarqube_extensions:
    driver: local
    driver_opts:
        type: none
        device: "$PWD/sonarqube_extensions"
        o: bind

  sonarqube_logs:
    driver: local
    driver_opts:
        type: none
        device: "$PWD/sonarqube_logs"
        o: bind


docker_stack__appspec__sonarqube:
  dirs: "{{ __docker_stack__sonarqube__config_dirs | d([]) }}"
  files: "{{ __docker_stack__sonarqube__config_files | d([]) }}"
  templates: "{{ __docker_stack__sonarqube__config_tpls | d([]) }}"
  firewalld_services: "{{ __docker_stack__sonarqube__firewalld_services | d([]) }}"
  firewalld_ports: "{{ __docker_stack__sonarqube__firewalld_ports | d([]) }}"
  networks: "{{ __docker_stack__sonarqube__networks | d({}) }}"
  volumes: "{{ __docker_stack__sonarqube__volumes | d({}) }}"
  docker_services: "{{ __docker_stack__sonarqube__services | d({}) }}"


__docker_stack__sonarqube__traefik_labels: "{{ docker_stack__sonarqube__traefik_labels
  | d(__docker_stack__sonarqube__traefik_labels_default) }}"

## ref: https://community.traefik.io/t/using-ports-endpoints-for-containers/9386
## ref: https://techexpert.tips/sonarqube/sonarqube-docker-installation/
__docker_stack__sonarqube__services:
  sonar-db:
    image: 'postgres:10'
    restart: unless-stopped
    depends_on:
        - sonarqube
    networks:
      - net
    labels:
      - traefik.enable=false
    volumes:
      - "sonar_psql:/var/lib/postgresql"
      - "sonar_psql_data:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: "{{ __docker_stack__sonarqube__db }}"
      POSTGRES_USER: "{{ __docker_stack__sonarqube__db_user }}"
      POSTGRES_PASSWORD: "{{ __docker_stack__sonarqube__db_password }}"

  sonarqube:
    container_name: sonarqube
    hostname: sonarqube
    image: "{{ __docker_stack__sonarqube__image }}"
    networks:
      - "{{ docker_stack__traefik_proxy_network }}"
      - net
    labels: "{{ __docker_stack__sonarqube__traefik_labels }}"
    environment:
      SONAR_JDBC_URL: "jdbc:postgresql://sonar-db:5432/{{ __docker_stack__sonarqube__db }}"
      SONAR_JDBC_USERNAME: "{{ __docker_stack__sonarqube__db_user }}"
      SONAR_JDBC_PASSWORD: "{{ __docker_stack__sonarqube__db_password }}"
    restart: unless-stopped
    volumes:
      - "sonarqube_data:/opt/sonarqube/data"
      - "sonarqube_extensions:/opt/sonarqube/extensions"
      - "sonarqube_logs:/opt/sonarqube/logs"


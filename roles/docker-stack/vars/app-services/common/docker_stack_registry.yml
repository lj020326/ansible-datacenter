---

##
## registry configs
##

#__docker_stack__registry__domain: "{{ docker_stack__registry_service_domain | d(registry_domain) | d('registry.example.int') }}"
__docker_stack__registry__domain: "{{ docker_stack__registry_service_domain | d(internal_domain) | d('registry.example.int') }}"
#__docker_stack__registry__name: "{{ docker_stack__registry_service_name | d(inventory_hostname) }}"
__docker_stack__registry__name: "{{ docker_stack__registry_service_name | d('registry') }}"

__docker_stack__registry__host_port: "{{ docker_stack__registry_host_port | d(5000) }}"
__docker_stack__registry__container_port: "{{ docker_stack__registry_container_port | d(5000) }}"

#__docker_stack__docker_registry: "{{docker_stack__registry_service_name}}.{{__docker_stack__registry__domain}}:{{__docker_stack__registry__host_port}}"
#__docker_stack__registry__fqdn: "{{ docker_stack__docker_registry_fqdn | d(__docker_stack__registry__domain) }}"
__docker_stack__registry__fqdn: "{{ docker_stack__docker_registry_endpoint | d(__docker_stack__registry__name + '.' + __docker_stack__registry__domain) }}"
__docker_stack__registry__endpoint: "{{ docker_stack__docker_registry_url | d(__docker_stack__registry__fqdn + ':' + __docker_stack__registry__host_port) }}"

__docker_stack__registry__common_name: "{{ docker_stack__registry_service_common_name | d(__docker_stack__registry__fqdn) }}"

#__docker_stack__registry__backend_fqdn: "{{ docker_stack__registry_endpoint | d('registry.example.int') }}"
#__docker_stack__registry__backend_fqdn: "{{ docker_stack__registry_endpoint | d(__docker_stack__registry__domain) }}"
__docker_stack__registry__backend_fqdn: "{{ __docker_stack__registry__fqdn }}"
__docker_stack__registry__backend_endpoint: "{{ docker_stack__registry_backend_endpoint | d(__docker_stack__registry__backend_fqdn + ':' + __docker_stack__registry__host_port) }}"

__docker_stack__registry__frontend_fqdn: "{{ docker_stack__registry_frontend_fqdn | d('registry.' + __docker_stack__registry__domain) }}"
#__docker_stack__registry__frontend_fqdn: "{{ docker_stack__registry_frontend_fqdn | d(__docker_stack__registry__backend_fqdn) }}"

__docker_stack__registry__enable_passthru: "{{ docker_stack__registry_enable_passthru | d(True) }}"
__docker_stack__registry__proxy_remote_url: "{{ docker_stack__registry_proxy_remote_url | d('https://registry-1.docker.io') }}"

__docker_stack__registry__stack_dir: "{{ docker_stack__dir | d('/home/user/docker-dirs') }}"
__docker_stack__registry__data_path: "{{ docker_stack__registry_service_data_path | d('/srv/data/docker-registry') }}"
#__docker_stack__registry__config_path: "/etc/docker-registry"
__docker_stack__registry__config_path: "{{ docker_stack__registry_config_path | d(__docker_stack__registry__stack_dir + '/docker-registry') }}"
#__docker_stack__registry__auth_path: "{{ role_path }}/files/auth"
__docker_stack__registry__auth_path: "{{ docker_stack__registry_auth_path | d(__docker_stack__registry__config_path + '/files/auth') }}"
__docker_stack__registry__auth_file: "{{ docker_stack__registry_auth_file | d('htpasswd') }}"

__docker_stack__registry__cert_path: "{{ docker_stack__registry_cert_path | d(__docker_stack__registry__config_path + '/certs') }}"

#__docker_stack__registry__cert: "{{ docker_stack__registry_service_common_name }}.crt"
__docker_stack__registry__cert: "{{ docker_stack__registry_cert_file | d(__docker_stack__registry__common_name + '.pem') }}"
__docker_stack__registry__certkey: "{{ docker_stack__registry_key_file | d(__docker_stack__registry__common_name + '-key.pem') }}"

__docker_stack__registry__host_cert_path: "{{ docker_stack__registry_host_cert_path | d(__docker_stack__registry__cert_path) }}"
__docker_stack__registry__host_auth_path: "{{ docker_stack__registry_host_auth_path | d(__docker_stack__registry__auth_path) }}"


__docker_stack__registry__enable_auth: "{{ docker_stack__registry_enable_auth | default(false) | bool }}"

__docker_stack__registry__users_default:
  - username: testuser
    password: testpassword
  - username: testuser2
    password: testpassword2

__docker_stack__registry__users: "{{ docker_stack__registry_users | d(__docker_stack__registry__users_default) }}"
__docker_stack__registry__container_name: "registry"

__docker_stack__registry__env_default:
  REGISTRY_HTTP_TLS_CERTIFICATE: "/certs/{{ __docker_stack__registry__cert }}"
  REGISTRY_HTTP_TLS_KEY: "/certs/{{ __docker_stack__registry__certkey }}"

__docker_stack__registry__env_auth_default:
  REGISTRY_AUTH: htpasswd
  REGISTRY_AUTH_HTPASSWD_REALM: "Registry Realm"
  REGISTRY_AUTH_HTPASSWD_PATH: "/auth/{{ __docker_stack__registry__auth_file }}"

__docker_stack__registry__env_auth: "{{ __docker_stack__registry__env_auth_default if __docker_stack__registry__enable_auth else {} }}"

__docker_stack__registry__env: "{{ docker_stack__registry_env | d(__docker_stack__registry__env_default) | combine(__docker_stack__registry__env_auth) }}"



__docker_stack__registry__config_dirs:
  - { path: "{{ __docker_stack__registry__data_path }}" }
  - { path: "{{ __docker_stack__registry__config_path }}" }
  - { path: "{{ __docker_stack__registry__auth_path }}" }
  - { path: "{{ __docker_stack__registry__cert_path }}" }

## ref: https://codeblog.dotsandbrackets.com/private-registry-swarm/
__docker_stack__registry__config_files:
  - src: "{{ docker_stack__internal_ssl_cert_dir }}/{{ docker_stack__ca_root_cn }}.pem"
    dest: "{{ __docker_stack__registry__cert_path }}/ca.pem"
    remote_src: yes
  - src: "{{ docker_stack__internal_ssl_cert_dir }}/{{ __docker_stack__registry__cert }}"
    dest: "{{ __docker_stack__registry__cert_path }}/{{ __docker_stack__registry__cert }}"
    remote_src: yes
  - src: "{{ docker_stack__internal_ssl_certkey_dir }}/{{ __docker_stack__registry__certkey }}"
    dest: "{{ __docker_stack__registry__cert_path }}/{{ __docker_stack__registry__certkey }}"
    remote_src: yes
  - src: "{{ __docker_stack__ca_cert_bundle }}"
    dest: "{{ __docker_stack__registry__cert_path }}/ca-certificates.crt"
    remote_src: yes

__docker_stack__registry__config_tpls:
#  - { src: "registry/config-registry.yml.j2", dest: "{{ __docker_stack__registry__config_path }}/config.yml", mode: "0664" }
  - { src: "registry/config-registry.yml.j2", dest: "{{ __docker_stack__registry__config_path }}/config.yml" }

__docker_stack__registry__firewalld_ports:
  - "8443/tcp"
  - "8080/tcp"


__docker_stack__appspec__registry:
  dirs: "{{ __docker_stack__registry__config_dirs | d([]) }}"
  files: "{{ __docker_stack__registry__config_files | d([]) }}"
  templates: "{{ __docker_stack__registry__config_tpls | d([]) }}"
  firewalld_services: "{{ __docker_stack__registry__firewalld_services | d([]) }}"
  firewalld_ports: "{{ __docker_stack__registry__firewalld_ports | d([]) }}"
  networks: "{{ __docker_stack__registry__networks | d({}) }}"
  volumes: "{{ __docker_stack__registry__volumes | d({}) }}"
  docker_services: "{{ __docker_stack__registry__services | d({}) }}"


__docker_stack__traefik__labels_registry: "{{ docker_stack__traefik__labels_registry | d(__docker_stack__traefik__labels_registry_default) }}"

__docker_stack__registry__services:
  ## ref: https://docs.docker.com/registry/deploying/#deploy-your-registry-using-a-compose-file
  registry:
    container_name: "{{__docker_stack__registry__container_name}}"
    restart: unless-stopped
    image: registry:2
    networks:
      - net
    ports:
      - "{{ __docker_stack__registry__host_port }}:{{ __docker_stack__registry__container_port }}"
    volumes:
      - "{{ __docker_stack__registry__data_path }}:/var/lib/registry"
      - "{{ __docker_stack__registry__cert_path }}:/certs"
      - "{{ __docker_stack__registry__host_auth_path }}:/auth"
      - "{{ __docker_stack__registry__config_path }}/config.yml:/etc/docker/registry/config.yml:ro"
    environment: "{{ __docker_stack__registry__env }}"

  registry-frontend:
#      hostname: registry-frontend
    container_name: registry-frontend
    restart: unless-stopped
#    image: productionwentdown/docker-registry-frontend-static
    image: konradkleine/docker-registry-frontend:v2
    links:
      - "{{__docker_stack__registry__container_name}}:registry"
    networks:
      - "{{ docker_stack__traefik_proxy_network }}"
      - net
#      ports:
#        - "{{ __docker_stack__registry__frontend_port }}:443"
    volumes:
      - "{{ __docker_stack__registry__cert_path }}/{{ __docker_stack__registry__cert }}:/etc/apache2/server.crt:ro"
      - "{{ __docker_stack__registry__cert_path }}/{{ __docker_stack__registry__certkey }}:/etc/apache2/server.key:ro"
    environment:
      ENV_DOCKER_REGISTRY_HOST: "{{__docker_stack__registry__container_name}}"
      ENV_DOCKER_REGISTRY_PORT: "{{ __docker_stack__registry__host_port }}"
      ENV_USE_SSL: "yes"
      ENV_DOCKER_REGISTRY_USE_SSL: "1"
      FRONTEND_BROWSE_ONLY_MODE: "false"
      ENV_REGISTRY_PROXY_FQDN: "{{ __docker_stack__registry__domain }}"
      ENV_REGISTRY_PROXY_PORT: "443"
    labels: "{{ __docker_stack__traefik__labels_registry }}"

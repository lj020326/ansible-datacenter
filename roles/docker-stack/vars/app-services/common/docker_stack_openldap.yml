---

#__docker_stack__openldap__image: "{{ docker_stack__registry_endpoint }}/openldap:latest"
#__docker_stack__openldap__image: "osixia/openldap:1.4.0"
__docker_stack__openldap__image: "osixia/openldap:1.5.0"

__docker_stack__openldap__root_password: "{{ docker_stack__ldap_root_password | d('password') }}"
__docker_stack__openldap__admin_password: "{{ docker_stack__ldap_admin_password | d('password') }}"
__docker_stack__openldap__config_password: "{{ docker_stack__ldap_config_password | d('passsword') }}"
#__docker_stack__openldap__host: "{{ docker_stack__ldap_host | d('ldap.example.int') }}"
__docker_stack__openldap__readonly_user: "true"
__docker_stack__openldap__readonly_username: "readonly"
__docker_stack__openldap__readonly_password: "{{ docker_stack__ldap_bind_user_password }}"

__docker_stack__openldap__port: 389

__docker_stack__openldap__config_dirs:
  - { path: "{{ docker_stack__dir }}/openldap" }
#  - { path: "{{ docker_stack__dir }}/openldap/other" }
  - { path: "{{ docker_stack__dir }}/openldap/environment" }
  - { path: "{{ docker_stack__dir }}/openldap/certs" }
  - { path: "{{ docker_stack__dir }}/openldap/ldif" }
  - { path: "{{ docker_stack__dir }}/openldap/schema" }
  - { path: "{{ docker_stack__dir }}/openldap/slapd" }
  - { path: "{{ docker_stack__dir }}/openldap/slapd/database" }
  - { path: "{{ docker_stack__dir }}/openldap/slapd/config" }

__docker_stack__openldap__config_files:
  - src: 'scripts/reset-openldap.sh'
    dest: "{{ docker_stack__dir }}"
    mode: "0770"
#  - { src: 'openldap/environment/default.startup.yaml', dest: "{{ docker_stack__dir }}/openldap/environment/default.startup.yaml"}
  - { src: 'openldap/schema/samba.schema', dest: "{{ docker_stack__dir }}/openldap/schema/samba.schema"}
  - { src: 'openldap/schema/sudo.schema', dest: "{{ docker_stack__dir }}/openldap/schema/sudo.schema"}
  - { src: 'openldap/schema/rfc2307bis.schema', dest: "{{ docker_stack__dir }}/openldap/schema/rfc2307bis.schema"}
  - { src: 'openldap/schema/openssh-ldap.schema', dest: "{{ docker_stack__dir }}/openldap/schema/openssh-ldap.schema"}
  - { src: 'openldap/schema/dyngroup.schema', dest: "{{ docker_stack__dir }}/openldap/schema/dyngroup.schema"}
  - { src: 'openldap/ldif/02-security.ldif', dest: "{{ docker_stack__dir }}/openldap/ldif/02-security.ldif"}
  - { src: 'openldap/ldif/03-memberOf.ldif', dest: "{{ docker_stack__dir }}/openldap/ldif/03-memberOf.ldif"}
  - { src: 'openldap/ldif/04-refint.ldif', dest: "{{ docker_stack__dir }}/openldap/ldif/04-refint.ldif"}
  - { src: 'openldap/ldif/05-dyngroup.ldif', dest: "{{ docker_stack__dir }}/openldap/ldif/05-dyngroup.ldif"}
  - { src: 'openldap/ldif/06-autogroup.ldif', dest: "{{ docker_stack__dir }}/openldap/ldif/06-autogroup.ldif"}
  - { src: 'openldap/ldif/08-index.ldif', dest: "{{ docker_stack__dir }}/openldap/ldif/08-index.ldif"}
#  ## olcDbCacheSize is a bdb/hdb attribute
#  ## ref: https://bmaupin.github.io/wiki/archive/applications/ldap/optimizing-openldap.html
#  ## ref: https://lists.openldap.org/hyperkitty/list/openldap-bugs@openldap.org/thread/YBS5VWI2MMX5GAXGUZ4UKVXPCPOXZYLU/
#  - { src: 'openldap/ldif/09-cache.ldif', dest: "{{ docker_stack__dir }}/openldap/ldif/09-cache.ldif"}

__docker_stack__openldap__config_tpls:
  - src: 'openldap/ldap_seed_info.ldif.j2'
    dest: "{{ docker_stack__dir }}/openldap/ldif/10-bootstrap.ldif"

__docker_stack__openldap__firewalld_services:
  - name: "ldap"

__docker_stack__openldap__firewalld_ports:
  - "{{ __docker_stack__openldap__port }}/tcp"
  - "636/tcp"


docker_stack__appspec__openldap:
  dirs: "{{ __docker_stack__openldap__config_dirs | d([]) }}"
  files: "{{ __docker_stack__openldap__config_files | d([]) }}"
  templates: "{{ __docker_stack__openldap__config_tpls | d([]) }}"
  firewalld_services: "{{ __docker_stack__openldap__firewalld_services | d([]) }}"
  firewalld_ports: "{{ __docker_stack__openldap__firewalld_ports | d([]) }}"
  docker_services: "{{ __docker_stack__openldap__services | d({}) }}"


__docker_stack__openldap__services:
  ## must have --copy-service for runtime bootstrap to work
  ## ref: https://github.com/osixia/docker-openldap/issues/163
  openldap:
    container_name: "openldap"
#    image: {{ docker_stack__registry_endpoint }}/openldap:latest
    image: "{{ __docker_stack__openldap__image }}"
#    hostname: "{{ docker_stack__ldap_host }}"
    command: --copy-service --loglevel debug
    ports:
      - 389:389
      - 636:636
    restart: "unless-stopped"
    networks:
#      - internal
      - net
    volumes:
      - "{{ docker_stack__dir }}/openldap/slapd/database:/var/lib/ldap"
      - "{{ docker_stack__dir }}/openldap/slapd/config:/etc/ldap/slapd.d"
#      - "{{ docker_stack__dir }}/openldap/slapd/certs:/container/service/slapd/assets/certs"
      - "{{ docker_stack__dir }}/openldap/ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom"
      - "{{ docker_stack__dir }}/openldap/environment:/container/environment/01-custom"
      ## custom schema
      ## ref: https://github.com/osixia/docker-openldap/issues/177
      - "{{ docker_stack__dir }}/openldap/schema:/container/service/slapd/assets/config/bootstrap/schema"
    environment:
#      HOSTNAME: "{{ __docker_stack__openldap__host }}"
#      LDAP_TLS: 0
      LDAP_OPENLDAP_UID: "{{ docker_stack__user_uid }}"
      LDAP_OPENLDAP_GID: "{{ docker_stack__user_gid }}"
      LDAP_ORGANISATION: "{{ docker_stack__ldap_organisation }}"
      LDAP_DOMAIN: "{{ docker_stack__ldap_domain }}"
      LDAP_BASE_DN: "{{ docker_stack__ldap_base_dn }}"
      LDAP_ADMIN_PASSWORD: "{{ __docker_stack__openldap__admin_password }}"
      LDAP_READONLY_USER: "{{ __docker_stack__openldap__readonly_user }}"
      LDAP_READONLY_USER_USERNAME: "{{ __docker_stack__openldap__readonly_username }}"
      LDAP_READONLY_USER_PASSWORD: "{{ __docker_stack__openldap__readonly_password }}"
      LDAP_REPLICATION: "false"
      LDAP_CONFIG_PASSWORD: "{{ __docker_stack__openldap__config_password }}"
      LDAP_RFC2307BIS_SCHEMA: "false"
      ## ref: https://github.com/osixia/docker-openldap/issues/199#issuecomment-513565530
      LDAP_TLS_VERIFY_CLIENT: "try"
#      SLAPD_ADDITIONAL_MODULES: "memberof"
    deploy:
      mode: replicated
      placement:
        constraints:
          - "node.hostname == {{ __docker_stack__base__traefik_host }}"
#          - node.role == manager
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s



__docker_stack__ldap_samba_domain_map_yaml: |-
  {
  {{ docker_stack__ldap_domain }}: { 'sid': {{ docker_stack__ldap_domain_sid_root }} }
  }

__docker_stack__ldap_samba_domain_map: "{{ __docker_stack__ldap_samba_domain_map_yaml | from_yaml }}"


## ref: https://serverfault.com/questions/885324/background-on-sambasid-calculation
__docker_stack__ldap_domain_user_map_yaml: |-
  {
  {% for user_key,user_config in docker_stack__ldap_domain_user_map.items() %}
    {% set _uid = user_config.uid|d(user_key) %}
    {% set _uid_number_default = (range(100, 999) | random(seed=_uid))|int + 10000 %}
    {% set _uid_number = user_config.uid_number | d(_uid_number_default) %}
    {% set _gid_number = user_config.gid_number | d(_uid_number) %}
    {% set _uid = user_config.uid|d(user_key) %}
    {% set _dn = 'uid='+_uid+','+ docker_stack__ldap_user_base_dn %}
    {% set _object_class_list = user_config.object_class_list | d(docker_stack__ldap_domain_user_object_class_list_default) %}
    {% set _user_config = { 'dn': _dn, 'object_class_list': _object_class_list } %}
    {% if 'posixAccount' in _object_class_list %}
      {% set __ = _user_config.update({ 'uid_number': _uid_number, 'gid_number': _gid_number }) %}
    {% endif %}
    {% if 'sambaSamAccount' in _object_class_list %}
      {% set _user_config_samba = user_config.samba | d({}) %}
      {% if _user_config_samba.sid is not defined %}
        {% set _samba_sid_default = docker_stack__ldap_domain_sid_root+'-'+((_uid_number|int*2+1000)|string) %}
        {% set __ = _user_config_samba.update({'sid': _samba_sid_default }) %}
      {% endif %}
      {% set __ = _user_config.update({ 'samba': _user_config_samba }) %}
    {% endif %}
    {{ user_key }}: {{ user_config | combine(_user_config, recursive=True) }},
  {% endfor %}
  }

__docker_stack__ldap_domain_user_map: "{{ __docker_stack__ldap_domain_user_map_yaml | from_yaml }}"

__docker_stack__ldap_domain_group_map_yaml: |-
  {
  {% for group_key,group_config in docker_stack__ldap_domain_group_map.items() %}
    {% set _gid = group_config.gid|d(group_key) %}
    {% set _gid_number_default = (range(100, 999) | random(seed=_gid))|int + 10000 %}
    {% set _gid_number = group_config.gid_number | d(_gid_number_default) %}
    {% set _group_cn = group_config.cn | d(group_key) %}
    {% if group_config.parent_ou is defined %}
        {% set _dn = 'cn='+_group_cn+','+group_config.parent_ou+','+docker_stack__ldap_base_dn %}
    {% else %}
        {% set _dn = 'cn='+_group_cn+','+ docker_stack__ldap_group_base_dn %}
    {% endif %}
    {% set _object_class_list = group_config.object_class_list | d(docker_stack__ldap_domain_group_object_class_list_default) %}
    {% set _group_config = { 'dn': _dn, 'cn': _group_cn, 'object_class_list': _object_class_list } %}
    {% if 'posixGroup' in _object_class_list %}
      {% set __ = _group_config.update({ 'gid_number': _gid_number }) %}
    {% endif %}
    {% if 'sambaGroupMapping' in _object_class_list %}
      {% set _group_config_samba = group_config.samba | d({}) %}
      {% if _group_config_samba.sid is not defined %}
        {% set _samba_group_sid_default = docker_stack__ldap_domain_sid_root+'-'+((_gid_number|int*2+1001)|string) %}
        {% set __ = _group_config_samba.update({'sid': _samba_group_sid_default }) %}
      {% endif %}
      {% set __ = _group_config.update({ 'samba': _group_config_samba }) %}
    {% endif %}
    {{ group_key }}: {{ group_config | combine(_group_config, recursive=True) }},
  {% endfor %}
  }

__docker_stack__ldap_domain_group_map: "{{ __docker_stack__ldap_domain_group_map_yaml | from_yaml }}"

__docker_stack__ldap_domain_host_map_yaml: |-
  {
  {% for host_key in docker_stack__ldap_domain_host_list %}
    {% set _host_ldap_config = hostvars[host_key].ldap_host_config %}
    {% set _uid = _host_ldap_config.uid|d(host_key) %}
    {% set _uid_number_default = (range(100, 999) | random(seed=_uid))|int + 50000 %}
    {% set _uid_number = _host_ldap_config.uid_number | d(_uid_number_default) %}
    {% set _gid_number = _host_ldap_config.gid_number | d(_uid_number) %}
    {% set _host_cn = _host_ldap_config.cn | d(host_key) %}
    {% set _dn = 'cn='+_host_cn+','+ docker_stack__ldap_host_base_dn %}
    {% set _object_class_list = _host_ldap_config.object_class_list | d(docker_stack__ldap_domain_host_object_class_list_default) %}
    {% set _host_config = { 'dn': _dn, 'cn': _host_cn, 'object_class_list': _object_class_list } %}
    {% if 'posixAccount' in _host_ldap_config.object_class_list|d(docker_stack__ldap_domain_host_object_class_list_default) %}
      {% set __ = _host_config.update({ 'uid_number': _uid_number, 'gid_number': _gid_number }) %}
    {% endif %}
    {% if 'sambaSamAccount' in _object_class_list %}
      {% set _host_config_samba = _host_ldap_config.samba | d({}) %}
      {% if _host_config_samba.sid is not defined %}
        {% set _samba_sid_default = docker_stack__ldap_domain_sid_root+'-'+((_uid_number|int*2+1000)|string) %}
        {% set __ = _host_config_samba.update({'sid': _samba_sid_default }) %}
      {% endif %}
      {% if _host_config_samba.primary_group_sid is not defined %}
        {% set __ = _host_config_samba.update({'primary_group_sid': docker_stack__ldap_domain_computers_group_sid }) %}
      {% endif %}
      {% set __ = _host_config.update({ 'samba': _host_config_samba }) %}
    {% endif %}
    {{ host_key }}: {{ _host_config }},
  {% endfor %}
  }

__docker_stack__ldap_domain_host_map: "{{ __docker_stack__ldap_domain_host_map_yaml | from_yaml }}"

---

__docker_stack__jenkins_jcac_ansible_tool_python_interpreter_default: "python3"
__docker_stack__jenkins_jcac_ansible_tool_python_interpreter: "{{
  docker_stack__jenkins_jcac_ansible_tool_python_interpreter
  | d(__docker_stack__jenkins_jcac_ansible_tool_python_interpreter_default) }}"

__docker_stack__jenkins_jcac_stack_dir: "{{ docker_stack__dir | d('/home/user/docker-dirs') }}"
__docker_stack__jenkins_jcac_base_dir_default: "{{ __docker_stack__jenkins_jcac_stack_dir }}/jenkins_jcac"
__docker_stack__jenkins_jcac_base_dir: "{{ docker_stack__jenkins_jcac_dir | d(__docker_stack__jenkins_jcac_base_dir_default) }}"

__docker_stack__jenkins_jcac_traefik_host_default: "jenkins.example.int"
__docker_stack__jenkins_jcac_host: "{{ docker_stack__jenkins_jcac_host
  | d(docker_stack__jenkins_host)
  | d(docker_stack__traefik_host)
  | d(__docker_stack__jenkins_jcac_traefik_host_default) }}"

__docker_stack__jenkins_jcac_agent_base_dir_default: "{{ __docker_stack__jenkins_jcac_stack_dir }}/jenkins_agent"
__docker_stack__jenkins_jcac_agent_base_dir: "{{ docker_stack__jenkins_jcac_agent_base_dir
  | d(__docker_stack__jenkins_jcac_agent_base_dir_default) }}"

__docker_stack__jenkins_jcac_http: "{{ docker_stack__jenkins_jcac_http | d('10180') }}"

## ref: https://www.jenkins.io/blog/2020/05/11/docker-windows-agents/
## ref: https://support.cloudbees.com/hc/en-us/articles/115001771692-How-to-Create-Permanent-Agents-with-Docker
## ref: https://github.com/jenkinsci/docker-inbound-agent
## ref: https://wiki.tds.tieto.com/display/TDSKB/Executing+Jenkins+jobs+when+only+one+way+network+connection+exists
__docker_stack__jenkins_jcac_agent_port: "{{ docker_stack__jenkins_jcac_agent_port | d('9000') }}"
__docker_stack__jenkins_jcac_agent_tcp_port: "{{ docker_stack__jenkins_jcac_tcp_port | d('9000') }}"
__docker_stack__jenkins_jcac_agent_ssh_port: "{{ docker_stack__jenkins_jcac_ssh_port | d('4444') }}"

__docker_stack__jenkins_jcac_agent_tunnel: "{{ __docker_stack__jenkins_endpoint }}:9000"

__docker_stack__jenkins_jcac_mgr_pwd_secret: "{{ docker_stack__jenkins_jcac_mgr_pwd_secret | d('00000000000000000000000') }}"

__docker_stack__jenkins_jcac__agent_username: "{{ docker_stack__jenkins_jcac__agent_username | d('00000000000000000000000') }}"
__docker_stack__jenkins_jcac__agent_password: "{{ docker_stack__jenkins_jcac__agent_password | d('00000000000000000000000') }}"

__docker_stack__jenkins_jcac__agent_swarm_mode: yes

## ref: https://www.jenkins.io/blog/2020/05/11/docker-windows-agents/
#__docker_stack__jenkins_jcac_image_default: "jenkins/jenkins:lts"
__docker_stack__jenkins_jcac_image_default: "{{ docker_stack__registry_endpoint }}/jenkins-docker-jcac:latest"
__docker_stack__jenkins_jcac_image: "{{ docker_stack__jenkins_jcac_image | d(__docker_stack__jenkins_jcac_image_default) }}"

__docker_stack__jenkins_jcac_agent_image_default: "{{ docker_stack__registry_endpoint }}/jenkins-docker-cicd-agent:latest"
__docker_stack__jenkins_jcac_agent_image: "{{ docker_stack__jenkins_agent_image | d(__docker_stack__jenkins_jcac_agent_image_default) }}"

__docker_stack__jenkins_jcac_swarm_agent_image_default: "{{ docker_stack__registry_endpoint }}/jenkins-swarm-agent:latest"
__docker_stack__jenkins_jcac_swarm_agent_image: "{{ docker_stack__jenkins_swarm_agent_image
  | d(__docker_stack__jenkins_jcac_swarm_agent_image_default) }}"

__docker_stack__jenkins_jcac_ldap_host: "{{ docker_stack__jenkins_jcac_ldap_host | d(docker_stack__ldap_host)}}"
__docker_stack__jenkins_jcac_ldap_uri: "{{ docker_stack__jenkins_jcac_ldap_uri | d(docker_stack__ldap_uri) | d(docker_stack__ldap_host) }}"
__docker_stack__jenkins_jcac_ldap_base_dn: "{{ docker_stack__jenkins_jcac_ldap_base_dn | d(docker_stack__ldap_base_dn)}}"

__docker_stack__jenkins_jcac_ldap_bind_user_dn_default: "cn=readonly,{{ __docker_stack__jenkins_jcac_ldap_base_dn
  | d(docker_stack__ldap_user_base_dn) }}"
__docker_stack__jenkins_jcac_ldap_bind_user_dn: "{{ docker_stack__jenkins_jcac_ldap_bind_user_dn
  | d(docker_stack__ldap_bind_user_dn) | d(__docker_stack__jenkins_jcac_ldap_bind_user_dn_default) }}"
__docker_stack__jenkins_jcac_ldap_bind_user_password: "{{ docker_stack__jenkins_jcac_ldap_bind_user_password
  | d(docker_stack__ldap_bind_user_password) }}"

#__docker_stack__jenkins_ssh_private_key: "{{ docker_stack__jenkins_ssh_private_key | d('') }}"
#__docker_stack__jenkins_ssh_public_key: "{{ docker_stack__jenkins_ssh_public_key | d('') }}"

#__docker_stack__jenkins_jcac_data_dir_default: /export/data/jenkins/osimages
#__docker_stack__jenkins_jcac_data_dir_default: /export/data/jenkins
__docker_stack__jenkins_jcac_data_dir_default: /data/datacenter/jenkins
__docker_stack__jenkins_jcac_data_dir: "{{ docker_stack__jenkins_data_dir | d(__docker_stack__jenkins_jcac_data_dir_default) }}"

__docker_stack__jenkins_jcac_pipeline_lib_repo_default: "https://gitea.example.int/infra/pipeline-automation-lib.git"
__docker_stack__jenkins_jcac_pipeline_lib_repo: "{{ docker_stack__jenkins_jcac_pipeline_lib_repo
  | d(__docker_stack__jenkins_jcac_pipeline_lib_repo_default) }}"

__docker_stack__jenkins_jcac_vmware_data_dir_default: /data/datacenter/vmware
__docker_stack__jenkins_jcac_vmware_data_dir: "{{ docker_stack__jenkins_jcac_vmware_data_dir | d(__docker_stack__jenkins_jcac_vmware_data_dir_default) }}"

__docker_stack__jenkins__config_dirs_jcac:
  - path: "{{ __docker_stack__jenkins_jcac_base_dir }}"
  - path: "{{ __docker_stack__jenkins_jcac_base_dir }}/jenkins_home"
  - path: "{{ __docker_stack__jenkins_jcac_base_dir }}/jenkins_home/casc_configs"
  - path: "{{ __docker_stack__jenkins_jcac_data_dir }}"
  - path: "{{ __docker_stack__jenkins_jcac_data_dir }}/osimages"
  - path: "{{ __docker_stack__jenkins_jcac_vmware_data_dir }}"

__docker_stack__jenkins__config_tpls_jcac:
  - src: 'jenkins_jcac/jenkins.env.j2'
    dest: "{{ __docker_stack__jenkins_jcac_base_dir }}/jenkins.env"
  - src: 'jenkins_jcac/jenkins_casc.yml.j2'
    dest: "{{ __docker_stack__jenkins_jcac_base_dir }}/jenkins_home/casc_configs/jenkins.yml"
  - src: 'jenkins_jcac/job_dsl/seedjob.groovy'
    dest: "{{ __docker_stack__jenkins_jcac_base_dir }}/jenkins_home/casc_configs/seedjob.groovy"
  - src: 'jenkins_jcac/config-group.conf.j2'
    dest: "{{ __docker_stack__jenkins_jcac_base_dir }}/group"
  - src: 'jenkins_jcac/config-passwd.conf.j2'
    dest: "{{ __docker_stack__jenkins_jcac_base_dir }}/passwd"

__docker_stack__jenkins__firewalld_ports_jcac:
  - "{{ __docker_stack__jenkins_jcac_agent_tcp_port }}/tcp"
  - "{{ __docker_stack__jenkins_jcac_agent_ssh_port }}/tcp"


#########
## Credential vars
__docker_stack__jenkins_cred_docker_registry_admin_password: "{{ docker_stack__jenkins_cred_docker_registry_admin_password | d('CHANGEME123') }}"

__docker_stack__jenkins_cred_jenkins_admin_user_username: "{{ docker_stack__jenkins_cred_jenkins_admin_user_username | d('admin') }}"
__docker_stack__jenkins_cred_jenkins_admin_user_password: "{{ docker_stack__jenkins_cred_jenkins_admin_user_password | d('CHANGEME123') }}"
__docker_stack__jenkins_cred_jenkins_git_user_password: "{{ docker_stack__jenkins_cred_jenkins_git_user_password | d('CHANGEME123') }}"

__docker_stack__jenkins_cred_ansible_ssh_key: "{{ docker_stack__jenkins_cred_ansible_ssh_key | d('CHANGEME123') }}"
__docker_stack__jenkins_cred_ansible_vault_password: "{{ docker_stack__jenkins_cred_ansible_vault_password | d('CHANGEME123') }}"

__docker_stack__jenkins_cred_ansible_ssh_username: "{{ docker_stack__jenkins_cred_ansible_ssh_username | d('CHANGEME123') }}"
__docker_stack__jenkins_cred_ansible_ssh_password: "{{ docker_stack__jenkins_cred_ansible_ssh_password | d('CHANGEME123') }}"

__docker_stack__jenkins_cred_vsphere_username: "{{ docker_stack__jenkins_cred_vsphere_username | d('CHANGEME123') }}"
__docker_stack__jenkins_cred_vsphere_password: "{{ docker_stack__jenkins_cred_vsphere_password | d('CHANGEME123') }}"

__docker_stack__jenkins_cred_esxi_password: "{{ docker_stack__jenkins_cred_esxi_password | d('CHANGEME123') }}"
__docker_stack__jenkins_cred_bitbucket_ssh_username: "{{ docker_stack__jenkins_cred_bitbucket_ssh_username | d('CHANGEME123') }}"
__docker_stack__jenkins_cred_bitbucket_ssh_private_key: "{{ docker_stack__jenkins_cred_bitbucket_ssh_private_key | d('CHANGEME123') }}"
__docker_stack__jenkins_cred_packer_ssh_password: "{{ docker_stack__jenkins_cred_packer_ssh_password | d('CHANGEME123') }}"
__docker_stack__jenkins_cred_vm_root_password: "{{ docker_stack__jenkins_cred_vm_root_password | d('CHANGEME123') }}"
__docker_stack__jenkins_cred_github_username: "{{ docker_stack__jenkins_cred_github_username | d('CHANGEME123') }}"
__docker_stack__jenkins_cred_github_password: "{{ docker_stack__jenkins_cred_github_password | d('CHANGEME123') }}"

__docker_stack__jenkins_github_repo_seedjob_dsl_default: lj020326/jenkins-docker
__docker_stack__jenkins_github_repo_seedjob_dsl: "{{ docker_stack__jenkins_github_repo_seedjob_dsl
  | d(__docker_stack__jenkins_github_repo_seedjob_dsl_default) }}"


__docker_stack__jenkins__secrets_jcac:
  - name: ldap_username
    value: "{{ __docker_stack__jenkins_jcac_ldap_bind_user_dn }}"
  - name: ldap_password
    value: "{{ __docker_stack__jenkins_jcac_ldap_bind_user_password }}"
  - name: jenkins_admin_username
    value: "{{ __docker_stack__jenkins_cred_jenkins_admin_user_username }}"
  - name: jenkins_admin_password
    value: "{{ __docker_stack__jenkins_cred_jenkins_admin_user_password }}"
  - name: jenkins_git_password
    value: "{{ __docker_stack__jenkins_cred_jenkins_git_user_password }}"
  - name: docker_registry_password
    value: "{{ __docker_stack__jenkins_cred_docker_registry_admin_password }}"
  - name: vsphere_username
    value: "{{ __docker_stack__jenkins_cred_vsphere_username }}"
  - name: vsphere_password
    value: "{{ __docker_stack__jenkins_cred_vsphere_password }}"
  - name: vmware_esxi_password
    value: "{{ __docker_stack__jenkins_cred_esxi_password }}"
  - name: packer_ssh_password
    value: "{{ __docker_stack__jenkins_cred_packer_ssh_password }}"
  - name: ansible_vault_password
    value: "{{ __docker_stack__jenkins_cred_ansible_vault_password }}"
  - name: ansible_ssh_username
    value: "{{ __docker_stack__jenkins_cred_ansible_ssh_username }}"
  - name: ansible_ssh_password
    value: "{{ __docker_stack__jenkins_cred_ansible_ssh_password }}"
  - name: ansible_ssh_private_key
    value: "{{ __docker_stack__jenkins_cred_ansible_ssh_key }}"
  - name: bitbucket_ssh_username
    value: "{{ __docker_stack__jenkins_cred_bitbucket_ssh_username }}"
  - name: bitbucket_ssh_private_key
    value: "{{ __docker_stack__jenkins_cred_bitbucket_ssh_private_key }}"
  - name: github_ssh_username
    value: "{{ __docker_stack__jenkins_cred_github_username }}"
  - name: github_ssh_password
    value: "{{ __docker_stack__jenkins_cred_github_password }}"
  - name: jenkins_agent_username
    value: "{{ __docker_stack__jenkins_jcac__agent_username }}"
  - name: jenkins_agent_password
    value: "{{ __docker_stack__jenkins_jcac__agent_password }}"


#####################
## merge all de-referenced app configs into single composite service config dict for tasks setup to use
## TODO: instead of having this done in each app config, have a single merge/dereference
## done by init-vars.yml using varname lookups
#####################
__docker_stack__appspec__jenkins_jcac:
  dirs: "{{ __docker_stack__jenkins__config_dirs_jcac | d([]) }}"
  files: "{{ __docker_stack__jenkins__config_files_jcac | d([]) }}"
  templates: "{{ __docker_stack__jenkins__config_tpls_jcac | d([]) }}"
  secrets: "{{ __docker_stack__jenkins__secrets_jcac | d({}) }}"
  firewalld_services: "{{ __docker_stack__jenkins__firewalld_services_jcac | d([]) }}"
  firewalld_ports: "{{ __docker_stack__jenkins__firewalld_ports_jcac | d([]) }}"
  networks: "{{ __docker_stack__jenkins__networks_jcac | d({}) }}"
  volumes: "{{ __docker_stack__jenkins__volumes_jcac | d({}) }}"
  docker_services: "{{ __docker_stack__jenkins__services_jcac | d({}) }}"

__docker_stack__traefik__labels_jenkins_jcac_default: "jenkins_jcac"
__docker_stack__traefik__labels_jenkins_jcac: "{{ docker_stack__traefik__labels_jenkins_jcac
  | d(__docker_stack__traefik__labels_jenkins_jcac_default) }}"

__docker_stack__jenkins__services_jcac:

  ## ref: https://github.com/jenkinsci/docker
  ## ref: https://medium.com/swlh/quickstart-ci-with-jenkins-and-docker-in-docker-c3f7174ee9ff
  ## ref: https://github.com/4OH4/jenkins-docker
  ## ref: https://github.com/lj020326/jenkins-docker
  jenkins-jcac:
    image: "{{ __docker_stack__jenkins_jcac_image }}"
    container_name: jenkins-jcac
    restart: "unless-stopped"
#    depends_on:
#      - socket-proxy
    user: "{{ docker_stack__user_uid }}:{{ docker_stack__user_gid }}"
    networks:
      - "{{ docker_stack__traefik_proxy_network }}"
      - socket_proxy
    ports:
      - mode: host
        protocol: tcp
        published: "{{ __docker_stack__jenkins_jcac_http }}"
        target: 8080
      - mode: host
        protocol: tcp
        published: "{{ __docker_stack__jenkins_jcac_agent_port }}"
        target: 9000
#      - "{{ __docker_stack__jenkins_jcac_http }}:8080/tcp"  ## jenkins web server
#      - "{{ __docker_stack__jenkins_jcac_agent_port }}:9000/tcp"
#      command: "--httpsCertificate=/var/lib/jenkins/cert --httpsPrivateKey=/var/lib/jenkins/pk"
    volumes:
      - "{{ __docker_stack__jenkins_jcac_base_dir }}/passwd:/etc/passwd:ro"
      - "{{ __docker_stack__jenkins_jcac_base_dir }}/group:/etc/group:ro"
      - "{{ __docker_stack__jenkins_jcac_base_dir }}/jenkins_home:/var/jenkins_home"
      - "{{ __docker_stack__ca_cert_bundle }}:/etc/ssl/certs/ca-certificates.crt:ro"
      - "{{ __docker_stack__ca_java_keystore }}:/var/lib/jenkins/cacerts"
      - "{{ __docker_stack__jenkins_jcac_data_dir }}:/data"
      - "{{ __docker_stack__jenkins_jcac_vmware_data_dir }}:/vmware"
    env_file:
      - jenkins_jcac/jenkins.env
    secrets:
      - ldap_username
      - ldap_password
      - jenkins_admin_password
      - jenkins_git_password
      - docker_registry_password
      - vsphere_username
      - vsphere_password
      - vmware_esxi_password
      - packer_ssh_password
      - ansible_vault_password
      - ansible_ssh_username
      - ansible_ssh_password
      - ansible_ssh_private_key
      - bitbucket_ssh_username
      - bitbucket_ssh_private_key
      - github_ssh_username
      - github_ssh_password
    deploy:
      #############
      ## Set endpoint_mode to `dnsrr` for container to have local dns access
      ## https://stackoverflow.com/questions/52665442/docker-swarm-host-cannot-resolve-hosts-on-other-nodes
      ## https://docs.docker.com/compose/compose-file/compose-file-v3/#endpoint_mode
      endpoint_mode: dnsrr
      mode: replicated
      placement:
        constraints:
          - node.hostname == {{ __docker_stack__jenkins_jcac_host }}
#          - node.role == manager
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
    labels: "{{ __docker_stack__traefik__labels_jenkins_jcac }}"

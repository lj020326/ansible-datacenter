---

__docker_stack_appspecs__postgres_pgadmin_username: "{{ pgadmin_username | d('pgadmin4@pgadmin.org') }}"
__docker_stack_appspecs__postgres_pgadmin_password: "{{ pgadmin_password | d('admin') }}"
__docker_stack_appspecs__postgres_pgadmin_port: "5050"

__docker_stack_appspecs__postgres_port: 5432
__docker_stack_appspecs__postgres_user: "{{ postgres_user | d('postgres') }}"
__docker_stack_appspecs__postgres_password: "{{ postgres_password | d('password') }}"
__docker_stack_appspecs__postgres_databases: "{{ docker_stack_postgres_databases | d([]) }}"

__docker_stack_appspecs__pgadmin_use_ldap: "{{ docker_stack_pgadmin_config_use_ldap | d(False) }}"

__docker_stack_appspecs__pgadmin_config_default:
  PGADMIN_DEFAULT_EMAIL: "{{ __docker_stack_appspecs__postgres_pgadmin_username }}"
  PGADMIN_DEFAULT_PASSWORD: "{{ __docker_stack_appspecs__postgres_pgadmin_password }}"

## ref: https://www.pgadmin.org/docs/pgadmin4/latest/config_py.html#config-py
## reF: https://www.pgadmin.org/docs/pgadmin4/5.0/enabling_ldap_authentication.html
__docker_stack_appspecs__pgadmin_ldap_config_default:
  PGADMIN_CONFIG_LDAP_SERVER_URI: "{{ docker_stack_pgadmin_config_ldap_server_uri | d('') }}"
  PGADMIN_CONFIG_LDAP_USERNAME_ATTRIBUTE: "uid"
  PGADMIN_CONFIG_LDAP_BASE_DN: "{{ docker_stack_pgadmin_config_ldap_base_dn | d('') }}"
  PGADMIN_CONFIG_LDAP_SEARCH_BASE_DN: "{{ docker_stack_pgadmin_config_ldap_search_base_dn | d('') }}"
  PGADMIN_CONFIG_LDAP_SEARCH_FILTER: "{{ docker_stack_pgadmin_config_ldap_search_filter | d('(cn=*)') }}"

__docker_stack_appspecs__pgadmin_ldap_config: "{{ __docker_stack_appspecs__pgadmin_ldap_config_default if __docker_stack_appspecs__pgadmin_use_ldap else {} }}"

__docker_stack_appspecs__pgadmin_config: "{{ __docker_stack_appspecs__pgadmin_config_default | combine(__docker_stack_appspecs__pgadmin_ldap_config) }}"

#.__docker_stack_appspecs__pgadmin_ldap_config: &tpl__docker_stack_appspecs__pgadmin_ldap_config
#  "{{ __docker_stack_appspecs__pgadmin_ldap_config }}"

docker_stack_appspec_config_dirs__postgres:
  - { path: "{{ docker_stack_dir }}/postgres" }
  - { path: "{{ docker_stack_dir }}/postgres/multiple-dbs" }
  - { path: "{{ docker_stack_dir }}/postgres/config" }
  - { path: "{{ docker_stack_dir }}/postgres/data", mode: "0750"}
  - { path: "{{ docker_stack_dir }}/pgadmin" }
  - { path: "{{ docker_stack_dir }}/pgadmin/data" }
  - { path: "{{ docker_stack_dir }}/pgadmin/config" }
  - { path: "{{ docker_stack_dir }}/pgadmin/log" }
  - { path: "{{ docker_stack_dir }}/pgadmin/log/pgadmin" }

docker_stack_appspec_config_tpls__postgres:
  - { src: 'postgres/config-passwd.conf.j2', dest: "{{ docker_stack_dir }}/postgres/passwd" }
  - { src: 'postgres/config-group.conf.j2', dest: "{{ docker_stack_dir }}/postgres/group" }
  - { src: 'pgadmin/config-passwd.conf.j2', dest: "{{ docker_stack_dir }}/pgadmin/passwd" }
  - { src: 'pgadmin/config-group.conf.j2', dest: "{{ docker_stack_dir }}/pgadmin/group" }

docker_stack_firewalld_appspec_ports__postgres:
  - "{{ __docker_stack_appspecs__postgres_port }}/tcp"

docker_stack_appspec__postgres:
  dirs: "{{ docker_stack_appspec_config_dirs__postgres | d([]) }}"
  files: "{{ docker_stack_appspec_config_files__postgres | d([]) }}"
  templates: "{{ docker_stack_appspec_config_tpls__postgres | d([]) }}"
  firewalld_services: "{{ docker_stack_firewalld_appspec_services__postgres | d([]) }}"
  firewalld_ports: "{{ docker_stack_firewalld_appspec_ports__postgres | d([]) }}"
  docker_services: "{{ docker_stack_appspec_services__postgres | d({}) }}"


__docker_stack_appspecs__traefik_labels_postgres_pgadmin: "{{ docker_stack_appspecs__traefik_labels_postgres_pgadmin
  | d(__docker_stack_appspecs__traefik_labels_postgres_pgadmin_default) }}"

docker_stack_appspec_services__postgres:
  ## ID management stack per:
  ## ref: https://blog.exceptionerror.io/2018/08/29/openldap-keycloak-and-docker/
  ## ref: https://hub.docker.com/_/postgres
  postgres:
    container_name: "postgres"
#      image: postgres
    image: "postgres:11"
    ports:
      - "{{ __docker_stack_appspecs__postgres_port }}:5432"
    restart: "unless-stopped"
    networks:
      - net
    volumes:
      - "{{ docker_stack_dir }}/postgres/passwd:/etc/passwd:ro"
      - "{{ docker_stack_dir }}/postgres/group:/etc/group:ro"
      - "{{ docker_stack_dir }}/postgres/multiple-dbs:/docker-entrypoint-initdb.d"
      - "{{ docker_stack_dir }}/postgres/config:/config"
      - "{{ docker_stack_dir }}/postgres/data:/var/lib/postgresql/data"
#        - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_MULTIPLE_DATABASES: "{{ __docker_stack_appspecs__postgres_databases | join(':') }}"
      POSTGRES_USER: "{{ __docker_stack_appspecs__postgres_user }}"
      POSTGRES_PASSWORD: "{{ __docker_stack_appspecs__postgres_password }}"
#      healthcheck:
#        test: "exit 0"
    ## ref: https://medium.com/@wilson.wilson/manage-docker-registry-auth-with-keycloak-e0b4356cf7d0
    healthcheck:
      test: 'PGPASSWORD="{{ __docker_stack_appspecs__postgres_password }}" psql --host 127.0.0.1 --username {{ __docker_stack_appspecs__postgres_user }} --dbname postgres -c "select 1" ; [ "0" -eq "$$?" ]; echo $$?'
      interval: 30s
      timeout: 10s
      retries: 3

  ## ref: https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html
  ## ref: https://www.pgadmin.org/docs/pgadmin4/latest/config_py.html#config-py
  ## ref: https://github.com/khezen/compose-postgres/blob/master/docker-compose.yml
  ## ref: https://stackoverflow.com/questions/53266285/connecting-pgadmin-to-postgres-in-docker
  ## ref: https://www.bojankomazec.com/2020/02/running-pgadmin-in-docker-container.html
  pgadmin:
    container_name: pgadmin
#    image: "dpage/pgadmin4"
    image: "dpage/pgadmin4:5.0"
    links:
      - postgres
    depends_on:
      - postgres
    user: "{{ docker_stack_user_uid }}:{{ docker_stack_user_gid }}"
    environment: "{{ __docker_stack_appspecs__pgadmin_config }}"
    volumes:
#         - pgadmin:/root/.pgadmin
#      - "{{ docker_stack_dir }}/pgadmin:/root/.pgadmin"
      - "{{ docker_stack_dir }}/pgadmin/passwd:/etc/passwd:ro"
      - "{{ docker_stack_dir }}/pgadmin/group:/etc/group:ro"
#      - "{{ docker_stack_dir }}/pgadmin/config/servers.json:/pgadmin4/servers.json"
      - "{{ docker_stack_dir }}/pgadmin/data:/var/lib/pgadmin"
      - "{{ docker_stack_dir }}/pgadmin/log/pgadmin:/var/log/pgadmin"
    ports:
      - "{{ __docker_stack_appspecs__postgres_pgadmin_port }}:80"
    restart: "unless-stopped"
    networks:
      - "{{ docker_stack_traefik_proxy_network }}"
      - net
    labels: "{{ __docker_stack_appspecs__traefik_labels_postgres_pgadmin }}"

---

__docker_stack__jenkins_stack_dir: "{{ docker_stack__dir | d('/home/user/docker-dirs') }}"
__docker_stack__jenkins_base_dir: "{{ docker_stack__jenkins_dir | d(__docker_stack__jenkins_stack_dir + '/jenkins') }}"
#__docker_stack__jenkins_agent_base_dir: "{{ docker_stack__jenkins_agent_dir | d(__docker_stack__jenkins_stack_dir + '/jenkins_agent') }}"

__docker_stack__jenkins_host: "{{ docker_stack__jenkins_host | d(docker_stack__traefik_host) }}"

__docker_stack__jenkins_http: "{{ docker_stack__jenkins_http | d('10180') }}"

## ref: https://www.jenkins.io/blog/2020/05/11/docker-windows-agents/
## ref: https://support.cloudbees.com/hc/en-us/articles/115001771692-How-to-Create-Permanent-Agents-with-Docker
## ref: https://github.com/jenkinsci/docker-inbound-agent
## ref: https://wiki.tds.tieto.com/display/TDSKB/Executing+Jenkins+jobs+when+only+one+way+network+connection+exists
__docker_stack__jenkins_agent_port: "{{ docker_stack__jenkins_agent_port | d('9000') }}"
__docker_stack__jenkins_agent_tcp_port: "{{ docker_stack__jenkins_tcp_port | d('9000') }}"
__docker_stack__jenkins_agent_ssh_port: "{{ docker_stack__jenkins_ssh_port | d('4444') }}"

__docker_stack__jenkins_mgr_pwd_secret: "{{ docker_stack__jenkins_mgr_pwd_secret | d('00000000000000000000000') }}"

## ref: https://www.jenkins.io/blog/2020/05/11/docker-windows-agents/
#__docker_stack__jenkins_image: "jenkins/jenkins:lts"
__docker_stack__jenkins_image_default: "{{ docker_stack__registry_endpoint }}/jenkins-docker:latest"
__docker_stack__jenkins_image: "{{ docker_stack__jenkins_image | d(__docker_stack__jenkins_image_default) }}"

__docker_stack__jenkins_ldap_host: "{{ docker_stack__jenkins_ldap_host | d('ldap.example.int:389')}}"
__docker_stack__jenkins_ldap_uri: "{{ docker_stack__jenkins_ldap_uri | d(docker_stack__ldap_uri) | d(docker_stack__ldap_host) }}"
__docker_stack__jenkins_ldap_base_dn: "{{ docker_stack__jenkins_ldap_base_dn | d('dc=example,dc=int')}}"

#__docker_stack__jenkins_data_dir_default: /export/data/jenkins/osimages
#__docker_stack__jenkins_data_dir_default: /export/data/jenkins
__docker_stack__jenkins_data_dir_default: /data/datacenter/jenkins
__docker_stack__jenkins_data_dir: "{{ docker_stack__jenkins_data_dir | d(__docker_stack__jenkins_data_dir_default) }}"

__docker_stack__jenkins_vmware_data_dir_default: /data/datacenter/vmware
__docker_stack__jenkins_vmware_data_dir: "{{ docker_stack__jenkins_vmware_data_dir | d(__docker_stack__jenkins_vmware_data_dir_default) }}"

docker_stack__appspec_config_dirs__jenkins:
  - path: "{{ __docker_stack__jenkins_base_dir }}"
  - path: "{{ __docker_stack__jenkins_base_dir }}/jenkins_home"
  - path: "{{ __docker_stack__jenkins_data_dir }}"
  - path: "{{ __docker_stack__jenkins_data_dir }}/osimages"
  - path: "{{ __docker_stack__jenkins_jcac_vmware_data_dir }}"

docker_stack__appspec_config_tpls__jenkins:
  - src: 'jenkins_jcac/config-group.conf.j2'
    dest: "{{ __docker_stack__jenkins_base_dir }}/group"
  - src: 'jenkins_jcac/config-passwd.conf.j2'
    dest: "{{ __docker_stack__jenkins_base_dir }}/passwd"
#  - src: 'jenkins/config-agent-group.conf.j2'
#    dest: "{{ __docker_stack__jenkins_agent_base_dir }}/group"
#  - src: 'jenkins/config-agent-passwd.conf.j2'
#    dest: "{{ __docker_stack__jenkins_agent_base_dir }}/passwd"

docker_stack__firewalld_appspec_ports__jenkins:
  - "{{ __docker_stack__jenkins_agent_tcp_port }}/tcp"
  - "{{ __docker_stack__jenkins_agent_ssh_port }}/tcp"


docker_stack__appspec__jenkins:
  dirs: "{{ docker_stack__appspec_config_dirs__jenkins | d([]) }}"
  files: "{{ docker_stack__appspec_config_files__jenkins | d([]) }}"
  templates: "{{ docker_stack__appspec_config_tpls__jenkins | d([]) }}"
  firewalld_services: "{{ docker_stack__firewalld_appspec_services__jenkins | d([]) }}"
  firewalld_ports: "{{ docker_stack__firewalld_appspec_ports__jenkins | d([]) }}"
  networks: "{{ docker_stack__appspec_networks__jenkins | d({}) }}"
  volumes: "{{ docker_stack__appspec_volumes__jenkins | d({}) }}"
  docker_services: "{{ docker_stack__appspec_services__jenkins | d({}) }}"

__docker_stack__environment__jenkins_default:
  TZ: "{{ docker_stack__timezone }}"
  JENKINS_SLAVE_AGENT_PORT: 9000
  JAVA_OPTS: "-Djava.awt.headless=true -Djavax.net.ssl.trustStore=/var/lib/jenkins/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
#  ## ref: https://github.com/jenkinsci/docker/pull/577
#  PLUGINS_FORCE_UPGRADE: 'true'
#  ## ref: https://github.com/jenkinsci/docker/issues/594
#  ## ref: https://medium.com/@shahmaulikn/install-jenkins-plugins-using-command-line-interface-8df0d0eed349
#  JENKINS_UC_DOWNLOAD: "http://updates.jenkins.io"
#  JENKINS_UC_DOWNLOAD: "http://mirrors.jenkins-ci.org"
#  JENKINS_UC_DOWNLOAD: "http://updates.jenkins-ci.org"
#  JENKINS_UC_DOWNLOAD: "https://mirrors.xmission.com/jenkins/updates/update-center.json"

__docker_stack__environment__jenkins: "{{ docker_stack__environment__jenkins
  | d(__docker_stack__environment__jenkins_default) }}"

__docker_stack__traefik__labels_jenkins: "{{ docker_stack__traefik__labels_jenkins
  | d(__docker_stack__traefik__labels_jenkins_default) }}"

docker_stack__appspec_services__jenkins:

  ## ref: https://github.com/jenkinsci/docker
  ## ref: https://medium.com/swlh/quickstart-ci-with-jenkins-and-docker-in-docker-c3f7174ee9ff
  ## ref: https://github.com/4OH4/jenkins-docker
  ## ref: https://github.com/lj020326/jenkins-docker
  jenkins:
    image: "{{ __docker_stack__jenkins_image }}"
    container_name: jenkins
    restart: "unless-stopped"
#    depends_on:
#      - socket-proxy
    user: "{{ docker_stack__user_uid }}:{{ docker_stack__user_gid }}"
    networks:
      - "{{ docker_stack__traefik_proxy_network }}"
      - socket_proxy
    ports:
      - mode: host
        protocol: tcp
        published: "{{ __docker_stack__jenkins_http }}"
        target: 8080
      - mode: host
        protocol: tcp
        published: "{{ __docker_stack__jenkins_agent_port }}"
        target: 9000
#      - "{{ __docker_stack__jenkins_http }}:8080/tcp"  ## jenkins web server
#      - "{{ __docker_stack__jenkins_agent_port }}:9000/tcp"
#      command: "--httpsCertificate=/var/lib/jenkins/cert --httpsPrivateKey=/var/lib/jenkins/pk"
    volumes:
      - "{{ __docker_stack__jenkins_base_dir }}/passwd:/etc/passwd:ro"
      - "{{ __docker_stack__jenkins_base_dir }}/group:/etc/group:ro"
      - "{{ __docker_stack__jenkins_base_dir }}/jenkins_home:/var/jenkins_home"
#      - "{{ __docker_stack__jenkins_base_dir }}/jenkins_home:/home/jenkins"
      - "{{ __docker_stack__ca_cert_bundle }}:/etc/ssl/certs/ca-certificates.crt:ro"
      - "{{ __docker_stack__ca_java_keystore }}:/var/lib/jenkins/cacerts"
      - "{{ __docker_stack__jenkins_data_dir }}:/data"
      - "{{ __docker_stack__jenkins_vmware_data_dir }}:/vmware"
    environment: "{{ __docker_stack__environment__jenkins }}"
    deploy:
      #############
      ## Set endpoint_mode to `dnsrr` for container to have local dns access
      ## https://stackoverflow.com/questions/52665442/docker-swarm-host-cannot-resolve-hosts-on-other-nodes
      ## https://docs.docker.com/compose/compose-file/compose-file-v3/#endpoint_mode
      endpoint_mode: dnsrr
      mode: replicated
      placement:
        constraints:
          - node.hostname == {{ __docker_stack__jenkins_host }}
#          - node.role == manager
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
    labels: "{{ __docker_stack__traefik__labels_jenkins }}"

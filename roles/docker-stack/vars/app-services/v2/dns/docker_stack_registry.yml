---

docker_stack_appspec_services__registry:
  ## ref: https://docs.docker.com/registry/deploying/#deploy-your-registry-using-a-compose-file
  registry:
    container_name: "{{__docker_stack_appspecs__registry_container_name}}"
    restart: unless-stopped
    image: registry:2
    networks:
      - net
    ports:
      - "{{ __docker_stack_appspecs__registry_host_port }}:{{ __docker_stack_appspecs__registry_container_port }}"
    volumes:
      - "{{ __docker_stack_appspecs__registry_data_path }}:/var/lib/registry"
      - "{{ __docker_stack_appspecs__registry_cert_path }}:/certs"
      - "{{ __docker_stack_appspecs__registry_host_auth_path }}:/auth"
      - "{{ __docker_stack_appspecs__registry_config_path }}/config.yml:/etc/docker/registry/config.yml:ro"
    environment: "{{ __docker_stack_appspecs__registry_env }}"
#    labels:
#      - "traefik.enable=true"
#      # here starts the tls
#      - "traefik.tcp.routers.registry-rtr.rule=HostSNI(`{{ __docker_stack_appspecs__registry_domain }}`)"
#      - "traefik.tcp.routers.registry-rtr.entrypoints=https"
#      - "traefik.tcp.routers.registry-rtr.tls=true"
#      - "traefik.tcp.routers.registry-rtr.tls.passthrough=true"
#      - "traefik.tcp.services.registry-rtr.loadbalancer.server.port={{ __docker_stack_appspecs__registry_container_port }}"


  registry-frontend:
#      hostname: registry-frontend
    container_name: registry-frontend
    restart: unless-stopped
#    image: productionwentdown/docker-registry-frontend-static
    image: konradkleine/docker-registry-frontend:v2
    links:
      - "{{__docker_stack_appspecs__registry_container_name}}:registry"
    networks:
      - "{{ docker_stack_traefik_proxy_network }}"
      - net
#      ports:
#        - "{{ __docker_stack_appspecs__registry_frontend_port }}:443"
    volumes:
      - "{{ __docker_stack_appspecs__registry_cert_path }}/{{ __docker_stack_appspecs__registry_cert }}:/etc/apache2/server.crt:ro"
      - "{{ __docker_stack_appspecs__registry_cert_path }}/{{ __docker_stack_appspecs__registry_certkey }}:/etc/apache2/server.key:ro"
    environment:
      ENV_DOCKER_REGISTRY_HOST: "{{__docker_stack_appspecs__registry_container_name}}"
      ENV_DOCKER_REGISTRY_PORT: "{{ __docker_stack_appspecs__registry_host_port }}"
      ENV_USE_SSL: "yes"
      ENV_DOCKER_REGISTRY_USE_SSL: "1"
      FRONTEND_BROWSE_ONLY_MODE: "false"
      ENV_REGISTRY_PROXY_FQDN: "{{ __docker_stack_appspecs__registry_domain }}"
      ENV_REGISTRY_PROXY_PORT: "443"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.registryfe-rtr.entrypoints=https"
      - "traefik.http.routers.registryfe-rtr.rule=Host(`{{ __docker_stack_appspecs__registry_frontend_fqdn }}`)"
      ## Middlewares
#      - "traefik.http.routers.registryfe-rtr.middlewares=chain-basic-auth@file"
#      - "traefik.http.routers.registryfe-rtr.middlewares=chain-no-auth@file"
#      - "traefik.tcp.routers.registryfe-rtr.middlewares=chain-no-auth-noverify@file"
      ## HTTP Services
      - "traefik.http.routers.registryfe-rtr.service=registryfe-svc"
#      - "traefik.http.services.registryfe-svc.loadbalancer.server.port=80"
      - "traefik.http.services.registryfe-svc.loadbalancer.server.port=443"
      - "traefik.http.services.registryfe-svc.loadbalancer.server.scheme=https"



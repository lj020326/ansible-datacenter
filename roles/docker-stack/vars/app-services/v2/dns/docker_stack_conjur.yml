---

docker_stack_appspec_services__conjur:

  conjur_openssl:
    image: cyberark/conjur
    container_name: conjur_openssl
    entrypoint:
     - openssl
     - req
     - -newkey
     - rsa:2048
     - -days
     - "365"
     - -nodes
     - -x509
     - -config
     - /tmp/conf/tls.conf
     - -extensions
     - v3_ca
     - -keyout
     - /tmp/conf/nginx.key
     - -out
     - /tmp/conf/nginx.crt
    volumes:
     - ./conf/tls/:/tmp/conf

  conjur_bot_app:
    image: cfmanteiga/alpine-bash-curl-jq
    privileged: true
    container_name: conjur_bot_app
    command: tail -F anything
    volumes:
    - ./program.sh:/tmp/program.sh
    restart: on-failure

  conjur_database:
    image: postgres:10.16
    container_name: conjur_postgres_database
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - 8432:5432

  conjur_pgadmin:
#    https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: SuperSecret
    ports:
      - 8081:80

  conjur:
    image: cyberark/conjur
    container_name: conjur_server
    command: server
    environment:
      DATABASE_URL: postgres://postgres@conjur_database/postgres
      CONJUR_DATA_KEY:
      CONJUR_AUTHENTICATORS:
    depends_on:
    - conjur_database
    restart: on-failure
    ports:
      - "{{ __docker_stack_appspecs__conjur_http_port }}:80"

  conjur_proxy:
    image: nginx:1.13.6-alpine
    container_name: conjur_nginx_proxy
    ports:
      - "8443:443"
    volumes:
      - ./conf/:/etc/nginx/conf.d/:ro
      - ./conf/tls/:/etc/nginx/tls/:ro
    depends_on:
    - conjur
    - conjur_openssl
    networks:
      - "{{ docker_stack_traefik_proxy_network }}"
      - net
    restart: on-failure
    labels:
      traefik.enable: true
      traefik.http.routers.conjur.entrypoints: https
      traefik.http.routers.conjur.rule: Host(`conjur.{{ __docker_stack_appspecs__conjur_domain }}`)
      traefik.http.routers.conjur.service: conjur-svc
#      ## HTTP Services
#      traefik.http.services.conjur-svc.loadbalancer.server.port: 80

  conjur_client:
    image: cyberark/conjur-cli:5
    container_name: conjur_client
    depends_on: [ conjur_proxy ]
    entrypoint: sleep
    command: infinity
    volumes:
    - ./conf/policy:/policy

#
#  conjur:
#    container_name: conjur
#    image: "conjur/conjur:latest"
#    depends_on:
#      - postgres
#    environment:
#      USER_UID: "{{ docker_user_uid }}"
#      USER_GID: "{{ docker_user_gid }}"
#      ROOT_URL: "{{ __docker_stack_appspecs__conjur_root_url }}"
#      DOMAIN: "{{ __docker_stack_appspecs__conjur_domain }}"
#      SSH_DOMAIN: "conjur.{{ __docker_stack_appspecs__conjur_domain }}"
#      DB_TYPE: "postgres"
#      DB_HOST: "postgres:{{ __docker_stack_appspecs__conjur_postgres_port }}"
#      DB_NAME: "{{ __docker_stack_appspecs__conjur_postgres_user }}"
#      DB_USER: "{{ __docker_stack_appspecs__conjur_postgres_user }}"
#      DB_PASSWD: "{{ __docker_stack_appspecs__conjur_postgres_password }}"
#      ## ref: https://github.com/go-conjur/conjur/issues/5475#issuecomment-446467498
#      GIT_SSL_NO_VERIFY: "true"
##      restart: always
#    restart: "unless-stopped"
#    networks:
#      - "{{ docker_stack_traefik_proxy_network }}"
#      - net
#    volumes:
#      - "{{ __docker_stack_appspecs__conjur_stack_dir }}/conjur:/data"
##        - "{{ docker_stack_host_ca_bundle }}:/etc/ssl/certs/ca-certificates.crt:ro"
##      - "{{ docker_stack_internal_ssl_cert_dir }}/{{ docker_stack_internal_domain }}.chain.pem:/etc/ssl/certs/ca-certificates.crt:ro"
#      - "{{ ca_cert_bundle }}:/etc/ssl/certs/ca-certificates.crt:ro"
#      - /etc/timezone:/etc/timezone:ro
#      - /etc/localtime:/etc/localtime:ro
#    ports:
#      - "{{ __docker_stack_appspecs__conjur_ssh_port }}:22"
#      - "{{ __docker_stack_appspecs__conjur_http_port }}:3000"
#    labels:
#      traefik.enable: true
#      traefik.http.routers.conjur.entrypoints: https
#      traefik.http.routers.conjur.rule: Host(`conjur.{{ __docker_stack_appspecs__conjur_domain }}`)
#      traefik.http.routers.conjur.service: conjur-svc
#

---


## ref: https://community.traefik.io/t/using-ports-endpoints-for-containers/9386
## ref: https://techexpert.tips/sonarqube/sonarqube-docker-installation/
docker_stack_appspec_services__sonarqube:
  sonar-db:
    image: 'postgres:10'
    restart: unless-stopped
    depends_on:
        - sonarqube
    networks:
      - net
    labels:
      - traefik.enable=false
    volumes:
      - "sonar_psql:/var/lib/postgresql"
      - "sonar_psql_data:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: "{{ __docker_stack_appspecs__sonarqube_db }}"
      POSTGRES_USER: "{{ __docker_stack_appspecs__sonarqube_db_user }}"
      POSTGRES_PASSWORD: "{{ __docker_stack_appspecs__sonarqube_db_password }}"

  sonarqube:
    container_name: sonarqube
    hostname: sonarqube
    image: "{{ __docker_stack_appspecs__sonarqube_image }}"
    networks:
      - "{{ docker_stack_traefik_proxy_network }}"
      - net
    labels:
      traefik.enable: true
      traefik.http.routers.sq.tls: true
      traefik.http.routers.sq.entrypoints: https
#      traefik.http.routers.sq.rule: "Host(`subdomain.domain.com`) && Path(`/sonarqube`)"
      traefik.http.routers.sq.rule: "Host(`sq.{{ docker_stack_internal_domain }}`)"
      traefik.http.services.sq.loadbalancer.server.port: 9000
    environment:
      SONAR_JDBC_URL: "jdbc:postgresql://sonar-db:5432/{{ __docker_stack_appspecs__sonarqube_db }}"
      SONAR_JDBC_USERNAME: "{{ __docker_stack_appspecs__sonarqube_db_user }}"
      SONAR_JDBC_PASSWORD: "{{ __docker_stack_appspecs__sonarqube_db_password }}"
    restart: unless-stopped
    volumes:
      - "sonarqube_data:/opt/sonarqube/data"
      - "sonarqube_extensions:/opt/sonarqube/extensions"
      - "sonarqube_logs:/opt/sonarqube/logs"


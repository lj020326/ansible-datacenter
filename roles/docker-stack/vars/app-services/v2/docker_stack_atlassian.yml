---

## ref: https://github.com/realtarget/traefik2-docker-stack/blob/master/atlassian/docker-compose.yml
docker_stack_appspec_services__atlassian:
  db-devweb:
    restart: always
    container_name: db-devweb
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: PG_PASSWORD
    command: ["-c", "shared_buffers=256MB", "-c", "max_connections=200"]
    volumes:
      - atlassian_postgres:/var/lib/postgresql/data

  adminer:
    image: adminer
    container_name: db_adminer
    restart: always
    expose:
      - "8080"
    networks:
      - "{{ docker_stack_traefik_proxy_network }}
    labels:
      traefik.enable: true
      traefik.http.routers.dbadmin_insecure.entrypoints: web
      traefik.http.routers.dbadmin_insecure.rule: Host(`dbadmin.{{ docker_stack_internal_domain }}`)
      traefik.http.routers.dbadmin_insecure.middlewares: redirect@file

      traefik.http.routers.dbadmin.entrypoints: web-secure
      traefik.http.routers.dbadmin.rule: Host(`dbadmin.{{ docker_stack_internal_domain }}`)
#      traefik.http.routers.dbadmin.tls.certresolver: letsencrypt
      traefik.http.services.dbadmin.loadbalancer.server.port: 8080
      traefik.docker.network: "{{ docker_stack_traefik_proxy_network }}

  crowd:
    image: teamatldocker/crowd
    container_name: crowd
    restart: always
    networks:
      - "{{ docker_stack_traefik_proxy_network }}
    volumes:
      - crowd_data:/var/atlassian/crowd
    links:
      - db-devweb
    expose:
      - "8095"
    environment:
      CROWD_PROXY_NAME: "crowd.{{ docker_stack_internal_domain }}"
      CROWD_PROXY_PORT: 443
      CROWD_PROXY_SCHEME: https
      CROWD_URL: http://localhost:8095
      LOGIN_BASE_URL: http://localhost:8095
      SPLASH_CONTEXT: 
      CROWD_CONTEXT: ROOT
      CROWDID_CONTEXT: 
      OPENID_CLIENT_CONTEXT: 
      DEMO_CONTEXT: 
    labels:
      com.blacklabelops.description: Atlassian Crowd
      com.blacklabelops.service: crowd
      traefik.enable: true
      traefik.http.routers.crowd_insecure.entrypoints: web
      traefik.http.routers.crowd_insecure.rule: Host(`crowd.{{ docker_stack_internal_domain }}`)
      traefik.http.routers.crowd_insecure.middlewares: redirect@file

      traefik.http.routers.crowd.entrypoints: web-secure
      traefik.http.routers.crowd.rule: Host(`crowd.{{ docker_stack_internal_domain }}`)
#      traefik.http.routers.crowd.tls.certresolver: letsencrypt
      traefik.http.services.crowd.loadbalancer.server.port: 8095
      traefik.docker.network: "{{ docker_stack_traefik_proxy_network }}

  jira-software:
    restart: always
    image: atlassian/jira-software
    container_name: jira-software
    environment:
      ATL_PROXY_NAME: "jira.{{ docker_stack_internal_domain }}"
      ATL_PROXY_PORT: 443
      ATL_TOMCAT_SCHEME: https
    expose:
      - "8080"
    links:
      - db-devweb
    volumes:
      - jira_software_data:/var/atlassian/application-data/jira
      - /etc/localtime:/etc/localtime:ro
    networks:
      - "{{ docker_stack_traefik_proxy_network }}
    labels:
      traefik.enable: true
      traefik.http.routers.jira_insecure.entrypoints: web
      traefik.http.routers.jira_insecure.rule: Host(`jira.{{ docker_stack_internal_domain }}`)
      traefik.http.routers.jira_insecure.middlewares: redirect@file

      traefik.http.routers.jira.entrypoints: web-secure
      traefik.http.routers.jira.rule: Host(`jira.{{ docker_stack_internal_domain }}`)
#      traefik.http.routers.jira.tls.certresolver: letsencrypt
      traefik.http.services.jira.loadbalancer.server.port: 8080
      traefik.docker.network: "{{ docker_stack_traefik_proxy_network }}

  confluence:
    restart: always
    image: atlassian/confluence-server:latest
    container_name: confluence
    environment:
      CATALINA_CONNECTOR_PROXYNAME: "confluence.{{ docker_stack_internal_domain }}"
      CATALINA_CONNECTOR_PROXYPORT: 443
      CATALINA_CONNECTOR_SCHEME: https
    expose:
       - "8090"
    links:
      - db-devweb
    volumes:
      - confluence_data:/var/atlassian/application-data/confluence
      - /etc/localtime:/etc/localtime:ro
    networks:
      - "{{ docker_stack_traefik_proxy_network }}
    labels:
      traefik.enable: true
      traefik.http.routers.confluence_insecure.entrypoints: web
      traefik.http.routers.confluence_insecure.rule: Host(`confluence.{{ docker_stack_internal_domain }}`)
      traefik.http.routers.confluence_insecure.middlewares: redirect@file

      traefik.http.routers.confluence.entrypoints: web-secure
      traefik.http.routers.confluence.rule: Host(`confluence.{{ docker_stack_internal_domain }}`)
#      traefik.http.routers.confluence.tls.certresolver: letsencrypt
      traefik.http.services.confluence.loadbalancer.server.port: 8090
      traefik.docker.network: "{{ docker_stack_traefik_proxy_network }}


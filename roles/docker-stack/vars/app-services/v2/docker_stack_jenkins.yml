---

docker_stack_appspec_services__jenkins:
  ## ref: https://github.com/jenkinsci/docker
  ## ref: https://medium.com/swlh/quickstart-ci-with-jenkins-and-docker-in-docker-c3f7174ee9ff
  ## ref: https://github.com/4OH4/jenkins-docker
  ## ref: https://github.com/lj020326/jenkins-docker
  jenkins:
    image: "{{ __docker_stack_appspecs__jenkins_image }}"
    container_name: jenkins
    restart: "unless-stopped"
    depends_on:
      - socket-proxy
    networks:
      - "{{ docker_stack_traefik_proxy_network }}"
      - socket_proxy
    ports:
      - "{{ __docker_stack_appspecs__jenkins_http }}:8080/tcp"  ## jenkins web server
      - "{{ __docker_stack_appspecs__jenkins_agent_port }}:9000/tcp"
#      command: "--httpsCertificate=/var/lib/jenkins/cert --httpsPrivateKey=/var/lib/jenkins/pk"
    volumes:
#        - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ __docker_stack_appspecs__jenkins_base_dir }}/passwd:/etc/passwd:ro"
      - "{{ __docker_stack_appspecs__jenkins_base_dir }}/group:/etc/group:ro"
#      - "{{ __docker_stack_appspecs__jenkins_base_dir }}/jenkins_home:/var/jenkins_home"
      - "{{ __docker_stack_appspecs__jenkins_base_dir }}/jenkins_home:/home/jenkins"
      - "{{ docker_stack_host_ca_bundle }}:/etc/ssl/certs/ca-certificates.crt:ro"
      - "{{ ca_java_keystore }}:/var/lib/jenkins/cacerts"
      - "{{ __docker_stack_appspecs__jenkins_data_dir }}:/data"
      - "{{ docker_stack_vmware_data_dir }}:/vmware"
    user: "{{ docker_user_uid }}:{{ docker_user_gid }}"
    environment:
      TZ: "{{ timezone }}"
      JENKINS_SLAVE_AGENT_PORT: 9000
      JAVA_OPTS: "-Djava.awt.headless=true -Djavax.net.ssl.trustStore=/var/lib/jenkins/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
      ## ref: https://github.com/jenkinsci/docker/pull/577
#        PLUGINS_FORCE_UPGRADE: 'true'
      ## ref: https://github.com/jenkinsci/docker/issues/594
      ## ref: https://medium.com/@shahmaulikn/install-jenkins-plugins-using-command-line-interface-8df0d0eed349
#        JENKINS_UC_DOWNLOAD: "http://updates.jenkins.io"
#        JENKINS_UC_DOWNLOAD: "http://mirrors.jenkins-ci.org"
#        JENKINS_UC_DOWNLOAD: "http://updates.jenkins-ci.org"
#        JENKINS_UC_DOWNLOAD: "https://mirrors.xmission.com/jenkins/updates/update-center.json"
    labels:
      traefik.enable: true
      traefik.http.routers.jenkins.entrypoints: https
      traefik.http.routers.jenkins.rule: Host(`jenkins.{{ docker_stack_internal_domain }}`)
      traefik.http.routers.jenkins_insecure.entrypoints: http
      traefik.http.routers.jenkins_insecure.rule: Host(`jenkins.{{ docker_stack_internal_domain }}`)
      traefik.http.routers.jenkins_insecure.middlewares: https-only@file
      traefik.http.services.jenkins.loadbalancer.server.port: 8080


#  ## JENKINS INBOUNT AGENT #1
#  ## ref: https://github.com/jenkinsci/docker-inbound-agent
#  ## ref: https://github.com/cloudbees/jnlp-slave-with-java-build-tools-dockerfile
#  ## ref: https://wiki.tds.tieto.com/display/TDSKB/Executing+Jenkins+jobs+when+only+one+way+network+connection+exists
#  ## ref: https://stackoverflow.com/questions/58719522/tcpslaveagentlistener-is-invalid-404-not-found
#  jenkins-agent-01:
#    container_name: jenkins-agent-01
#    image: "{{ __docker_stack_appspecs__jenkins_agent_image }}"
#    environment:
#      TZ: "{{ timezone }}"
#      JENKINS_URL: "{{ __docker_stack_appspecs__jenkins_agent_jenkins_url }}"
#      JENKINS_TUNNEL: "{{ __docker_stack_appspecs__jenkins_agent_tunnel }}"
#      JENKINS_AGENT_WORKDIR: "{{ __docker_stack_appspecs__jenkins_agent_workdir }}"
#      JENKINS_SECRET: "{{ __docker_stack_appspecs__jenkins_agent_secret }}"
#      JENKINS_AGENT_NAME: "{{ __docker_stack_appspecs__jenkins_agent_name }}"
#      JAVA_OPTS: "-Djavax.net.ssl.trustStore=/var/lib/jenkins/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
##      DOCKER_HOST: tcp://socket-proxy:2375
#      gid: "{{ docker_user_gid }}"
#      uid: "{{ docker_user_uid }}"
#    networks:
#      - "{{ docker_stack_traefik_proxy_network }}"
#      - socket_proxy
#    ports:
#      - "{{ __docker_stack_appspecs__jenkins_agent_ssh_port }}:4444/tcp"
#    restart: unless-stopped
#    depends_on:
#      - jenkins
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock"
#      - "{{ __docker_stack_appspecs__jenkins_agent_base_dir }}/passwd:/etc/passwd:ro"
#      - "{{ __docker_stack_appspecs__jenkins_agent_base_dir }}/group:/etc/group:ro"
#      - "{{ __docker_stack_appspecs__jenkins_agent_base_dir }}/jenkins_home:/home/jenkins"
#      - "{{ docker_stack_host_ca_bundle }}:/etc/ssl/certs/ca-certificates.crt:ro"
#      - "{{ ca_java_keystore }}:/var/lib/jenkins/cacerts"
##        - /etc/pki/ca-trust/extracted/java/cacerts:/home/jenkins/.cacerts
##        - /export/data/jenkins/osimages:/data
#      - "{{ __docker_stack_appspecs__jenkins_data_dir }}:/data"
#      - "{{ docker_stack_vmware_data_dir }}:/vmware"


  ## JENKINS SWARM AGENT
  ## ref: https://hourperday.wordpress.com/2017/05/17/how-to-cicd-with-chef-cookbooks-and-jenkins-part-three/
  jenkins-worker-01:
    active: no
    container_name: jenkins-worker-01
    image: "{{ __docker_stack_appspecs__jenkins_swarm_image }}"
    privileged: true
    environment:
      TZ: "{{ timezone }}"
      JAVA_OPTS: "-Djavax.net.ssl.trustStore=/var/lib/jenkins/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
      COMMAND_OPTIONS: "-master {{ __docker_stack_appspecs__jenkins_agent_jenkins_url }} -username {{ __docker_stack_appspecs__jenkins_swarm_username }} -password {{ __docker_stack_appspecs__jenkins_swarm_password }} -executors {{ __docker_stack_appspecs__jenkins_swarm_num_executors }}"
#      DOCKER_HOST: tcp://socket-proxy:2375
      gid: "{{ docker_user_gid }}"
      uid: "{{ docker_user_uid }}"
    networks:
      - "{{ docker_stack_traefik_proxy_network }}"
      - socket_proxy
#    ports:
#      - "{{ __docker_stack_appspecs__jenkins_agent_ssh_port }}:4444/tcp"
    restart: unless-stopped
    depends_on:
      - jenkins
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ __docker_stack_appspecs__jenkins_swarm_base_dir }}/passwd:/etc/passwd:ro"
      - "{{ __docker_stack_appspecs__jenkins_swarm_base_dir }}/group:/etc/group:ro"
      - "{{ __docker_stack_appspecs__jenkins_swarm_base_dir }}/jenkins_home:/home/jenkins"
      - "{{ docker_stack_host_ca_bundle }}:/etc/ssl/certs/ca-certificates.crt:ro"
      - "{{ ca_java_keystore }}:/var/lib/jenkins/cacerts"
#        - /etc/pki/ca-trust/extracted/java/cacerts:/home/jenkins/.cacerts
#        - /export/data/jenkins/osimages:/data
      - "{{ __docker_stack_appspecs__jenkins_data_dir }}:/data"
      - "{{ docker_stack_vmware_data_dir }}:/vmware"

---

docker_stack_appspec_services__wordpress:
  wordpress-db:
    container_name: wordpress-db
    # this is the database used by Wordpress
    image: mysql:5.7
    restart: always
    user: "{{ docker_user_uid }}:{{ docker_user_gid }}"
    ports:
      - "{{ __docker_stack_appspecs__wordpress_mysql_port }}:3306"
    networks:
      - net
    environment:
      # Connect WordPrerss to the database
      MYSQL_DATABASE: wordpressdb
      MYSQL_USER: "{{ __docker_stack_appspecs__wordpress_db_user }}"
      MYSQL_PASSWORD: "{{ __docker_stack_appspecs__wordpress_db_password }}"
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      # Persist the database on disk
#      - "./db:/var/lib/mysql"
      - "{{ docker_stack_dir }}/wordpress/db:/var/lib/mysql"

#  wordpress-redis:
#    image: redis:6
#    restart: always
#    ports:
#      - "6379:6379"
#    networks:
#      - net
#    # launch Redis in cache mode with :
#    #  - max memory up to 50% of your RAM if needed (--maxmemory 512mb)
#    #  - deleting oldest data when max memory is reached (--maxmemory-policy allkeys-lru)
#    entrypoint: redis-server --maxmemory 512mb -maxmemory-policy allkeys-lru


  ## ref: https://medium.com/@thibaut.deveraux/a-docker-compose-file-to-install-wordpress-with-a-traefik-reverse-proxy-an-ssl-certificate-and-a-e878c2a03a17
  ## ref: https://serverfault.com/questions/987673/traefik-wordpress-redirecting
  ## ref: https://github.com/docker-library/wordpress/pull/142
  ## ref: https://github.com/moby/moby/issues/8674
  ## ref: https://github.com/moby/moby/issues/38664
  ## ref: https://github.com/moby/moby/issues/8460
  ## ref: https://stackoverflow.com/questions/39329732/specify-sysctl-values-using-docker-compose/41496841
  ## ref: https://hub.docker.com/_/wordpress?tab=tags&page=1&ordering=last_updated
  wordpress:
    container_name: wordpress
    image: "{{ __docker_stack_appspec__wordpress_image }}"
    restart: "unless-stopped"
#    depends_on:
#      - mariadb
    depends_on:
      - wordpress-db
#      - wordpress-redis
    links:
      - wordpress-db:db
#    ports:
#      - "{{ __docker_stack_appspecs__wordpress_http_port }}:80"
    networks:
      - "{{ docker_stack_traefik_proxy_network }}"
      - net
    environment:
      TZ: "{{ timezone }}"
      # Connect wordpress to the database
      WORDPRESS_DB_HOST: "db:{{ __docker_stack_appspecs__wordpress_mysql_port }}"
      WORDPRESS_DB_USER: "{{ __docker_stack_appspecs__wordpress_db_user }}"
      WORDPRESS_DB_PASSWORD: "{{ __docker_stack_appspecs__wordpress_db_password }}"
      WORDPRESS_DB_NAME: wordpressdb
      WORDPRESS_CONFIG_EXTRA: |
              define('WP_SITEURL', '{{ __docker_stack_appspecs__wordpress_siteurl }}');
              define('WP_HOME','{{ __docker_stack_appspecs__wordpress_siteurl }}');
    volumes:
      - "{{ docker_stack_dir }}/wordpress/passwd:/etc/passwd:ro"
      - "{{ docker_stack_dir }}/wordpress/group:/etc/group:ro"
      - "{{ docker_stack_dir }}/wordpress/html:/var/www/html"
    labels:
      traefik.enable: true
      traefik.http.routers.wordpress_insecure.entrypoints: http
      traefik.http.routers.wordpress_insecure.rule: Host(`{{ __docker_stack_appspecs__wordpress_host }}`)
      traefik.http.routers.wordpress_insecure.middlewares: https-only@file
      traefik.http.routers.wordpress.entrypoints: https
      traefik.http.routers.wordpress.rule: Host(`{{ __docker_stack_appspecs__wordpress_host }}`)
#      traefik.http.routers.wordpress.middlewares: sslheaders@file
#      traefik.http.routers.wordpress.middlewares: chain-no-auth@file
      traefik.http.routers.wordpress.middlewares: secured-noauth@file
      ## ref: https://serverfault.com/questions/987673/traefik-wordpress-redirecting
##      traefik.http.services.wordpress.loadbalancer.server.port: 80
#      traefik.http.services.wordpress.loadbalancer.server.port: 443
#      traefik.http.services.wordpress.loadbalancer.server.scheme: https



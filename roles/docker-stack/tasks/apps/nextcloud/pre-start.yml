---

## ref: https://github.com/ReinerNippes/nextcloud_on_docker/blob/master/roles/nextcloud_config/tasks/main.yml
- name: "Docker Stack | nextcloud | pre-start | first setup nextcloud"
  ansible.builtin.shell: >
    {{ __docker_stack__nextcloud__docker_occ_cmd }} maintenance:install 
    --database {{ __docker_stack__nextcloud__db_type }} 
    --database-host {{ __docker_stack__nextcloud__db_host }}
    --database-name {{ __docker_stack__nextcloud__db_name }} 
    --database-user {{ __docker_stack__nextcloud__db_user }} 
    --database-pass {{ __docker_stack__nextcloud__db_passwd }} 
    --admin-user {{ __docker_stack__nextcloud__admin }} 
    --admin-pass {{ __docker_stack__nextcloud__passwd }} 
    --data-dir {{ __docker_stack__nextcloud__data_dir }}
  when: ( not config_php.stat.exists )
  register: __nextcloud_first_setup_nextcloud

- name: "Docker Stack | nextcloud | pre-start | configure nextcloud"
  when: ( __nextcloud_first_setup_nextcloud is changed ) or ( __docker_stack__nextcloud__force_config|default(false) )
  block:
  - name: "Docker Stack | nextcloud | pre-start | set nextcloud system config.php values"
    ansible.builtin.shell: "{{ __docker_stack__nextcloud__docker_occ_cmd }} config:system:set {{ item }}"
    loop: "{{ __docker_stack__nextcloud__system_config }}"

  - name: "Docker Stack | nextcloud | pre-start | set nextcloud mail config.php values"
    when: __docker_stack__nextcloud__configure_mail|d({})|length>0
    ansible.builtin.shell: "{{ __docker_stack__nextcloud__docker_occ_cmd }} config:system:set {{ item }}"
    loop: "{{ __docker_stack__nextcloud__mail_config }}"

  - name: "Docker Stack | nextcloud | pre-start | install {{ item.name }} app"
    ansible.builtin.shell: "{{ __docker_stack__nextcloud__docker_occ_cmd }} app:install {{ item.name }}"
    args:
      creates: '{{ __docker_stack__nextcloud__www_dir }}/apps/{{ item.name }}'
    loop: "{{ __docker_stack__nextcloud__app_config }}"

  - name: "Docker Stack | nextcloud | pre-start | '{{ item.state }} {{ item.name }} app'"
    ansible.builtin.shell: "{{ __docker_stack__nextcloud__docker_occ_cmd }} app:{{ item.state }} {{ item.name }}"
    loop: "{{ __docker_stack__nextcloud__app_config }}"

  - name: "Docker Stack | nextcloud | pre-start | backup jobs, upgrade apps and database tuning"
    ansible.builtin.shell: "{{ __docker_stack__nextcloud__docker_occ_cmd }} {{ item }}"
    loop:
      - background:cron
      - upgrade
      - app:update --all
      - db:add-missing-indices
      - db:convert-filecache-bigint

  - name: "Docker Stack | nextcloud | pre-start | configure nextcloud ldap values"
    when: __docker_stack__nextcloud__configure_ldap|d({})|length>0
    block:
    - name: "Docker Stack | nextcloud | pre-start | configure nextcloud ldap values"
      ansible.builtin.shell: "{{ __docker_stack__nextcloud__docker_occ_cmd }} ldap:create-empty-config -p"
      register: __ldap_config_result

    - name: "Docker Stack | nextcloud | pre-start | Display __ldap_config_result"
      debug:
        var: __ldap_config_result

    - name: "Docker Stack | nextcloud | pre-start | Set __ldap_config_name"
      ansible.builtin.set_fact:
        __ldap_config_name: "{{ __ldap_config_result.stdout }}"

    - name: "Docker Stack | nextcloud | pre-start | configure nextcloud ldap values"
      ansible.builtin.shell: "{{ __docker_stack__nextcloud__docker_occ_cmd }} ldap:set-config {{ __ldap_config_name }} {{ item }}"
      loop: "{{ __docker_stack__nextcloud__ldap_config }}"

    - name: "Docker Stack | nextcloud | pre-start | test ldap config"
      ansible.builtin.shell: "{{ __docker_stack__nextcloud__docker_occ_cmd }} ldap:test-config {{ __docker_stack__nextcloud__ldap_test_user }}"
      register: __ldap_test_config_result

    - name: "Docker Stack | nextcloud | pre-start | Display __ldap_test_config_result"
      debug:
        var: __ldap_test_config_result


- name: "Docker Stack | nextcloud | pre-start | create optimize batch job"
  ansible.builtin.copy:
    dest: /usr/local/bin/nextcloud_optimize.sh
    owner: root
    group: root
    mode: 0750
    content: |
      #!/bin/bash
      docker exec redis redis-cli -a {{ __docker_stack__nextcloud__redis_passwd }} FLUSHALL
      {{ __docker_stack__nextcloud__docker_occ_cmd }} files:scan --all
      {{ __docker_stack__nextcloud__docker_occ_cmd }} files:scan-app-data
      exit 0

- name: "Docker Stack | nextcloud | pre-start | optimize nextcloud cronjob"
  ansible.builtin.cron:
    name: nextcloud optimize
    minute: '15'
    hour:   '01'
    user: root
    job: "/usr/local/bin/nextcloud_optimize.sh > /dev/null 2>&1"

- name: "Docker Stack | nextcloud | pre-start | nextcloud cronjob"
  ansible.builtin.cron:
    name: nextcloud cronjob
    minute: '*/5'
    user: root
    job: "docker exec --user www-data nextcloud php -f cron.php > /dev/null 2>&1"

- name: "Docker Stack | nextcloud | pre-start | run nextcloud cronjob once"
  ansible.builtin.shell: "docker exec --user www-data nextcloud php -f cron.php > /dev/null 2>&1"

- name: "Docker Stack | nextcloud | pre-start | modify .htaccess for card and cal dev"
  block:
  - name: "Docker Stack | nextcloud | pre-start | modifying /opt/nextcloud/www/.htaccess"
    ansible.builtin.shell: >
      sed -i 's+/remote.php/dav/+https://{{ __docker_stack__nextcloud__server_fqdn }}/remote.php/dav/+g' 
          /opt/nextcloud/www/.htaccess
    when:
      - "'fpm' not in __docker_stack__nextcloud__image"

  - name: "Docker Stack | nextcloud | pre-start | updating maintenance htaccess"
    ansible.builtin.shell: "{{ __docker_stack__nextcloud__docker_occ_cmd }} maintenance:update:htaccess"
    when:
      - "'fpm' not in __docker_stack__nextcloud__image"

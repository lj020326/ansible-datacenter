---

- set_fact:
    log_prefix_local: "Docker Stack | Init Vars |"

- name: "{{ log_prefix_local }} Assert docker_stack_action is in supported actions"
  assert:
    that: docker_stack_action in __docker_stack_supported_actions

- name: "{{ log_prefix_local }} Assert either `docker_stack_enable_selfsigned_certs` OR `docker_stack_enable_cacerts` but not both"
  assert:
    that:
      - docker_stack_enable_selfsigned_certs or docker_stack_enable_cacerts
      - not (docker_stack_enable_selfsigned_certs and docker_stack_enable_cacerts)

- name: "{{ log_prefix_local }} Get docker group / user id"
  block:

    ## ref: https://docs.ansible.com/ansible/latest/modules/getent_module.html
    - name: "{{ log_prefix_local }} Get docker group / user info"
      getent:
        key: "{{ docker_stack_user_username }}"
        database: passwd

    - debug:
        var: getent_passwd

    - name: "{{ log_prefix_local }} Get docker group info"
      getent:
        database: group
        split: ':'
        key: docker
    - debug:
        var: getent_group

    - name: "{{ log_prefix_local }} Set docker user info facts"
      set_fact:
        docker_stack_user_uid: "{{ getent_passwd[docker_stack_user_username][1] }}"
        docker_stack_user_gid: "{{ getent_passwd[docker_stack_user_username][2] }}"
        docker_stack_user_home: "{{ getent_passwd[docker_stack_user_username][4] }}"
        docker_group_gid: "{{ getent_group['docker'][1] }}"

  rescue:
    - debug:
        msg: 'Docker user {{ docker_stack_user_username }} not found - add and try again, :-)'

    - name: "{{ log_prefix_local }} Add user(s) to docker group"
      user:
        name: "{{ docker_stack_user_username }}"
        groups: "docker"
        append: true
        gid: "{{ docker_stack_user_gid | d(omit) }}"
        uid: "{{ docker_stack_user_uid | d(omit) }}"

    - getent:
        key: "{{ docker_stack_user_username }}"
        database: passwd

    - name: "{{ log_prefix_local }} Set docker user info facts"
      set_fact:
        docker_stack_user_uid: "{{ getent_passwd[docker_stack_user_username][1] }}"
        docker_stack_user_gid: "{{ getent_passwd[docker_stack_user_username][2] }}"
        docker_stack_user_home: "{{ getent_passwd[docker_stack_user_username][4] }}"

- name: "{{ log_prefix_local }} Display docker_stack_service_configs"
  debug:
     var: docker_stack_service_configs

- name: "{{ log_prefix_local }} Display __docker_stack_service_configs"
  debug:
     var: __docker_stack_service_configs

- name: "{{ log_prefix_local }} Setup docker_stack_proxy_services"
  when: __docker_stack_proxy_services | d([]) | length>0
  block:

  - name: "{{ log_prefix_local }} Display __docker_stack_proxy_services"
    debug:
       var: __docker_stack_proxy_services
       verbosity: 2

  - name: "{{ log_prefix_local }} Set the app proxy services vars"
    include_vars:  "app-services/base/docker_stack_proxy_{{ item }}.yml"
    with_items: "{{ __docker_stack_proxy_services }}"

  - name: "{{ log_prefix_local }} Set the app proxy services vars specific to traefik version"
    include_vars:  "app-services/{{ docker_stack_traefik_version }}/{{ docker_stack_traefik_routing_method }}/docker_stack_proxy_{{ item }}.yml"
    with_items: "{{ __docker_stack_proxy_services }}"

- name: "{{ log_prefix_local }} Set the app services vars"
  include_vars:  "app-services/base/docker_stack_{{ item }}.yml"
  with_items: "{{ __docker_stack_service_configs }}"

- name: "{{ log_prefix_local }} Set the app services vars specific to traefik version"
  include_vars:  "app-services/{{ docker_stack_traefik_version }}/{{ docker_stack_traefik_routing_method }}/docker_stack_{{ item }}.yml"
  with_items: "{{ __docker_stack_service_configs }}"

- name: "{{ log_prefix_local }} Display docker stack info"
  debug:
    msg:
      - "docker_stack_service_route_name={{ docker_stack_service_route_name }}"
      - "docker_stack_internal_root_domain={{ docker_stack_internal_root_domain }}"
      - "docker_stack_internal_domain={{ docker_stack_internal_domain }}"
      - "docker_stack_external_domain={{ docker_stack_external_domain }}"
      - "docker_stack_user_gid={{ docker_stack_user_gid }}"
      - "docker_stack_user_uid={{ docker_stack_user_uid }}"

- name: "{{ log_prefix_local }} Init __docker_stack_app_configs"
  set_fact:
    __docker_stack_app_configs: "{{ docker_stack_app_configs|d({}) }}"

- name: "{{ log_prefix_local }} Combine app varname configs into __docker_stack_app_configs"
  set_fact:
    __docker_stack_app_configs: "{{ __docker_stack_app_configs|d({}) | combine({ item: lookup('vars', q('varnames','^docker_stack_appspec__'+item.replace('-','_')+'$')| first | d('') )|d({}) }) }}"
  loop: "{{ __docker_stack_service_configs }}"

- name: "{{ log_prefix_local }} Init __docker_stack_proxy_configs"
  set_fact:
    __docker_stack_proxy_configs: "{{ docker_stack_proxy_configs|d({}) }}"

- name: "{{ log_prefix_local }} Combine proxy varname configs into __docker_stack_proxy_configs"
  set_fact:
    __docker_stack_proxy_configs: "{{ __docker_stack_proxy_configs|d({}) | combine({ item: lookup('vars', q('varnames','^docker_stack_proxyspec__'+item.replace('-','_')+'$')| first | d('') )|d({}) }) }}"
  loop: "{{ __docker_stack_proxy_services }}"

- name: "{{ log_prefix_local }} Display __docker_stack_app_configs"
  debug:
     var: __docker_stack_app_configs
     verbosity: 3

- name: "{{ log_prefix_local }} Display __docker_stack_proxy_configs"
  debug:
     var: __docker_stack_proxy_configs
     verbosity: 2

- name: "{{ log_prefix_local }} Set docker_stack_proxy_service_configs fact"
  when: __docker_stack_proxy_configs[item].proxy_config | d([]) | length > 0
  set_fact:
    docker_stack_proxy_service_configs: "{{ docker_stack_proxy_service_configs|d({}) | combine(__docker_stack_proxy_configs[item].proxy_config, recursive=True) }}"
  loop: "{{ __docker_stack_proxy_services }}"

- name: "{{ log_prefix_local }} Display docker_stack_proxy_service_configs"
  debug:
     var: docker_stack_proxy_service_configs
     verbosity: 2

- name: "{{ log_prefix_local }} Init __docker_stack_secrets"
  set_fact:
    __docker_stack_secrets: "{{ docker_stack_secrets|d({}) }}"

- name: "{{ log_prefix_local }} Set __docker_stack_secrets"
  when: __docker_stack_app_configs[item].secrets | d([]) | length > 0
  set_fact:
    __docker_stack_secrets: "{{ __docker_stack_secrets|d({}) | combine(__docker_stack_app_configs[item].secrets) }}"
  with_items: "{{ __docker_stack_service_configs }}"

#- name: "{{ log_prefix_local }} Display __docker_stack_secrets"
#  debug:
#     var: __docker_stack_secrets
#     verbosity: 2

- name: "{{ log_prefix_local }} Init __docker_stack_networks"
  set_fact:
    __docker_stack_networks: "{{ docker_stack_networks|d({}) }}"

- name: "{{ log_prefix_local }} Add service networks to __docker_stack_networks"
  when:
    - __docker_stack_app_configs[item].networks is defined
    - __docker_stack_app_configs[item].networks | length > 0
  set_fact:
    __docker_stack_networks: "{{ __docker_stack_networks|d({}) | combine(__docker_stack_app_configs[item].networks) }}"
  with_items: "{{ __docker_stack_service_configs }}"

- name: "{{ log_prefix_local }} Display __docker_stack_networks"
  debug:
     var: __docker_stack_networks
#     verbosity: 2

- name: "{{ log_prefix_local }} Init __docker_stack_volumes fact"
  set_fact:
    __docker_stack_volumes: "{{ docker_stack_volumes|d({}) }}"

- name: "{{ log_prefix_local }} Add service volumes to __docker_stack_volumes"
  when: __docker_stack_app_configs[item].volumes | d([]) | length > 0
  set_fact:
    __docker_stack_volumes: "{{ __docker_stack_volumes|d({}) | combine(__docker_stack_app_configs[item].volumes) }}"
  with_items: "{{ __docker_stack_service_configs }}"

- name: "{{ log_prefix_local }} Display __docker_stack_volumes"
  debug:
     var: __docker_stack_volumes
#     verbosity: 2

- name: "{{ log_prefix_local }} Init __docker_stack_config_dirs"
  set_fact:
    __docker_stack_config_dirs: "{{ docker_stack_config_dirs|d([]) }}"

- name: "{{ log_prefix_local }} Add service config dirs to __docker_stack_config_dirs fact"
  when: __docker_stack_app_configs[item].dirs | d([]) | length > 0
  set_fact:
    __docker_stack_config_dirs: "{{ (__docker_stack_config_dirs|d([]) + __docker_stack_app_configs[item].dirs) | unique }}"
  with_items: "{{ __docker_stack_service_configs }}"

- name: "{{ log_prefix_local }} Display __docker_stack_config_dirs"
  debug:
     var: __docker_stack_config_dirs
#     verbosity: 2

- name: "{{ log_prefix_local }} Init __docker_stack_config_files"
  set_fact:
    __docker_stack_config_files: "{{ docker_stack_config_files|d([]) }}"

- name: "{{ log_prefix_local }} Add service config files to __docker_stack_config_files"
  when: __docker_stack_app_configs[item].files | d([]) | length > 0
  set_fact:
    __docker_stack_config_files: "{{ (__docker_stack_config_files|d([]) + __docker_stack_app_configs[item].files) | unique }}"
  with_items: "{{ __docker_stack_service_configs }}"

- name: "{{ log_prefix_local }} Display __docker_stack_config_files"
  debug:
     var: __docker_stack_config_files
#     verbosity: 2

- name: "{{ log_prefix_local }} Init __docker_stack_config_tpls"
  set_fact:
    __docker_stack_config_tpls: "{{ docker_stack_config_tpls|d([]) }}"

- name: "{{ log_prefix_local }} Add service templates to __docker_stack_config_tpls"
  when: __docker_stack_app_configs[item].templates | d([]) | length > 0
  set_fact:
    __docker_stack_config_tpls: "{{ (__docker_stack_config_tpls|d([]) + __docker_stack_app_configs[item].templates) | unique }}"
  with_items: "{{ __docker_stack_service_configs }}"

- name: "{{ log_prefix_local }} Display __docker_stack_config_tpls"
  debug:
     var: __docker_stack_config_tpls
#     verbosity: 2

- name: "{{ log_prefix_local }} Init __docker_stack_service_configs_tpl"
  set_fact:
    __docker_stack_service_configs_tpl: "{{ docker_stack_service_configs_tpl|d({}) }}"

- name: "{{ log_prefix_local }} Add docker services to __docker_stack_service_configs_tpl fact"
  when: __docker_stack_app_configs[item].docker_services is defined
  set_fact:
    __docker_stack_service_configs_tpl: "{{ __docker_stack_service_configs_tpl|d({}) | combine({item: __docker_stack_app_configs[item].docker_services}) }}"
  with_items: "{{ __docker_stack_service_configs }}"

- name: "{{ log_prefix_local }} Display __docker_stack_service_configs_tpl"
  debug:
     var: __docker_stack_service_configs_tpl
     verbosity: 2

- name: "{{ log_prefix_local }} Init __docker_stack_container_configs"
  set_fact:
    __docker_stack_container_configs: "{{ docker_stack_container_configs|d({}) }}"

- name: "{{ log_prefix_local }} Add service container configs to __docker_stack_container_configs"
  when: __docker_stack_app_configs[item].container_configs | d([]) | length > 0
  set_fact:
    __docker_stack_container_configs: "{{ __docker_stack_container_configs|d({}) | combine({item: __docker_stack_app_configs[item].container_configs}) }}"
  with_items: "{{ __docker_stack_service_configs }}"

- name: "{{ log_prefix_local }} Init __docker_stack_container_config_list"
  set_fact:
    __docker_stack_container_config_list: "{{ docker_stack_container_config_list| d([]) }}"

- name: "{{ log_prefix_local }} Add service container configs to __docker_stack_container_config_list"
  when: item.key in __docker_stack_service_configs_tpl
  set_fact:
    __docker_stack_container_config_list: "{{ __docker_stack_container_config_list| d([]) + [ { 'container_name' : item.key } | combine(item.value) ] }}"
  loop: "{{ __docker_stack_container_configs | dict2items }}"

- name: "{{ log_prefix_local }} Display __docker_stack_container_config_list"
  debug:
     var: docker_stack_container_config_list

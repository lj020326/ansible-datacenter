---

__docker_stack__media_heimdall__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.heimdall.entrypoints=https
  - traefik.http.routers.heimdall.rule=Host(`heimdall.{{ docker_stack__external_domain }}`, `{{ docker_stack__external_domain }}`)
  #  ## Middlewares
  #  ## No Authentication
  #  - "traefik.http.routers.heimdall.middlewares=chain-no-auth@file"
  #  ## Authelia auth
  #  - "traefik.http.routers.heimdall.middlewares=chain-authelia@file"
  # Google OAuth 2.0
  - traefik.http.routers.heimdall.middlewares=chain-oauth@file
#  - "traefik.http.services.heimdall.loadbalancer.server.port=443"
#  - "traefik.http.services.heimdall.loadbalancer.server.scheme=https"

__docker_stack__media_heimdall_int__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.heimdall_int.entrypoints=https
  - traefik.http.routers.heimdall_int.rule=Host(`heimdall.{{ docker_stack__internal_domain }}`)
  #  - "traefik.http.services.heimdall_int.loadbalancer.server.port=443"
  #  - "traefik.http.services.heimdall_int.loadbalancer.server.scheme=https"
  #  - "traefik.http.routers.heimdall_int.middlewares=chain-authelia@file"
  - traefik.http.routers.heimdall_int.middlewares=chain-no-auth@file

__docker_stack__media_transmission__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.transmission.entrypoints=https
  - traefik.http.routers.transmission.rule=Host(`transmission.{{ docker_stack__internal_domain }}`)
  - traefik.http.services.transmission.loadbalancer.server.port=9091

__docker_stack__media_qbittorrent__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.transmission.entrypoints=https
  - traefik.http.routers.transmission.rule=Host(`qbittorrent.{{ docker_stack__internal_domain }}`)
  - traefik.http.services.transmission.loadbalancer.server.port=8168

__docker_stack__media_sabnzbd__traefik_labels_default:
  - traefik.enable=true
  ## HTTP Routers Auth Bypass
  - traefik.http.routers.sabnzbd-rtr-bypass.entrypoints=https
  - traefik.http.routers.sabnzbd-rtr-bypass.rule=Host(`sabnzbd.{{ docker_stack__internal_domain }}`) && Query(`apikey`, `{{ __docker_stack__media__sabnzbd_apikey
    }}`)
  - traefik.http.routers.sabnzbd-rtr-bypass.priority=100
  ## HTTP Routers Auth
  - traefik.http.routers.sabnzbd-rtr.entrypoints=https
  - traefik.http.routers.sabnzbd-rtr.rule=Host(`sabnzbd.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.sabnzbd-rtr.priority=99
  ## Middlewares
  - traefik.http.routers.sabnzbd-rtr-bypass.middlewares=chain-no-auth@file
  #      - "traefik.http.routers.sabnzbd-rtr.middlewares=chain-oauth@file"
  ## HTTP Services
  - traefik.http.routers.sabnzbd-rtr.service=sabnzbd-svc
  - traefik.http.routers.sabnzbd-rtr-bypass.service=sabnzbd-svc
  - traefik.http.services.sabnzbd-svc.loadbalancer.server.port=8080

__docker_stack__media_sonarr__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.sonarr.entrypoints=https
  - traefik.http.routers.sonarr.rule=Host(`sonarr.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.sonarr_insecure.entrypoints=http
  - traefik.http.routers.sonarr_insecure.rule=Host(`sonarr.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.sonarr_insecure.middlewares=https-only@file
  - traefik.http.services.sonarr.loadbalancer.server.port=8989

__docker_stack__media_radarr__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.radarr.entrypoints=https
  - traefik.http.routers.radarr.rule=Host(`radarr.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.radarr_insecure.entrypoints=http
  - traefik.http.routers.radarr_insecure.rule=Host(`radarr.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.radarr_insecure.middlewares=https-only@file
  - traefik.http.services.radarr.loadbalancer.server.port=7878

__docker_stack__media_lidarr__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.lidarr.entrypoints=https
  - traefik.http.routers.lidarr.rule=Host(`lidarr.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.lidarr_insecure.entrypoints=http
  - traefik.http.routers.lidarr_insecure.rule=Host(`lidarr.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.lidarr_insecure.middlewares=https-only@file
  - traefik.http.services.lidarr.loadbalancer.server.port=8686

__docker_stack__media_bazarr__traefik_labels_default:
  - traefik.enable=true
  ## HTTP Routers
  - traefik.http.routers.bazarr-rtr.entrypoints=https
  - traefik.http.routers.bazarr-rtr.rule=Host(`bazarr.{{ docker_stack__internal_domain }}`)
  ## Middlewares
  #  - "traefik.http.routers.bazarr-rtr.middlewares=chain-oauth@file"
  - traefik.http.routers.bazarr-rtr.middlewares=chain-no-auth@file
  ## HTTP Services
  - traefik.http.routers.bazarr-rtr.service=bazarr-svc
  - traefik.http.services.bazarr-svc.loadbalancer.server.port=6767

__docker_stack__media_picard__traefik_labels_default:
  - traefik.enable=true
  ## HTTP Routers
  - traefik.http.routers.picard-rtr.entrypoints=https
  - traefik.http.routers.picard-rtr.rule=Host(`picard.{{ docker_stack__internal_domain }}`)
  ## Middlewares
  #  - "traefik.http.routers.picard-rtr.middlewares=chain-oauth@file"
  - traefik.http.routers.picard-rtr.middlewares=chain-no-auth@file
  ## HTTP Services
  - traefik.http.routers.picard-rtr.service=picard-svc
  - traefik.http.services.picard-svc.loadbalancer.server.port=5800

__docker_stack__media_dupeguru__traefik_labels_default:
  - traefik.enable=true
  ## HTTP Routers
  - traefik.http.routers.dupeguru-rtr.entrypoints=https
  - traefik.http.routers.dupeguru-rtr.rule=Host(`dupeguru.{{ docker_stack__internal_domain }}`)
  ## Middlewares
  #  - "traefik.http.routers.dupeguru-rtr.middlewares=chain-oauth@file"
  - traefik.http.routers.dupeguru-rtr.middlewares=chain-no-auth@file
  ## HTTP Services
  - traefik.http.routers.dupeguru-rtr.service=dupeguru-svc
  - traefik.http.services.dupeguru-svc.loadbalancer.server.port=5800

__docker_stack__media_readarr__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.readarr.entrypoints=https
  - traefik.http.routers.readarr.rule=Host(`readarr.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.readarr_insecure.entrypoints=http
  - traefik.http.routers.readarr_insecure.rule=Host(`readarr.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.readarr_insecure.middlewares=https-only@file
  - traefik.http.services.readarr.loadbalancer.server.port=8787

__docker_stack__media_lazylibrarian__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.lazylibrarian.entrypoints=https
  - traefik.http.routers.lazylibrarian.rule=Host(`lazylibrarian.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.lazylibrarian_insecure.entrypoints=http
  - traefik.http.routers.lazylibrarian_insecure.rule=Host(`lazylibrarian.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.lazylibrarian_insecure.middlewares=https-only@file
  - traefik.http.services.lazylibrarian.loadbalancer.server.port=5299

__docker_stack__media_calibreweb__traefik_labels_default:
  - traefik.enable=true
  ## HTTP Routers Auth
  - traefik.http.routers.calibre-web-rtr.entrypoints=https
  - traefik.http.routers.calibre-web-rtr.rule=Host(`calweb.{{ docker_stack__internal_domain }}`)
  ## Middlewares
  #  - "traefik.http.routers.calibre-web-rtr.middlewares=chain-oauth@file"
  - traefik.http.routers.calibre-web-rtr.middlewares=chain-no-auth@file
  ## HTTP Services
  - traefik.http.routers.calibre-web-rtr.service=calibre-web-svc
  - traefik.http.services.calibre-web-svc.loadbalancer.server.port=8083

__docker_stack__media_calibre__traefik_labels_default:
  - traefik.enable=true
  ## HTTP Routers Auth
  - traefik.http.routers.calibre-rtr.entrypoints=https
  - traefik.http.routers.calibre-rtr.rule=Host(`calibre.{{ docker_stack__internal_domain }}`)
  ## Middlewares
  #  - "traefik.http.routers.calibre-rtr.middlewares=chain-oauth@file"
  - traefik.http.routers.calibre-rtr.middlewares=chain-no-auth@file
  ## HTTP Services
  - traefik.http.routers.calibre-rtr.service=calibre-svc
  - traefik.http.services.calibre-svc.loadbalancer.server.port=8080

__docker_stack__media_airsonic__traefik_labels_default:
  - traefik.enable=true
  ## HTTP Routers
  - traefik.http.routers.airsonic-rtr.entrypoints=https
  - traefik.http.routers.airsonic-rtr.rule=Host(`airsonic.{{ docker_stack__internal_domain }}`)
  ## Middlewares
  - traefik.http.routers.airsonic-rtr.middlewares=chain-no-auth@file
  ## HTTP Services
  - traefik.http.routers.airsonic-rtr.service=airsonic-svc
  - traefik.http.services.airsonic-svc.loadbalancer.server.port=4040

__docker_stack__media_embyms__traefik_labels_default:
  - traefik.enable=true
  ## HTTP Routers
  - traefik.http.routers.embyms-rtr.entrypoints=https
  - traefik.http.routers.embyms-rtr.rule=Host(`emby.{{ docker_stack__internal_domain }}`)
  ## Middlewares
  - traefik.http.routers.embyms-rtr.middlewares=chain-no-auth@file
  ## HTTP Services
  - traefik.http.routers.embyms-rtr.service=embyms-svc
  - traefik.http.services.embyms-svc.loadbalancer.server.port=8096

__docker_stack__media_jellyfin__traefik_labels_default:
  - traefik.enable=true
  ## HTTP Routers
  - traefik.http.routers.jellyfin-rtr.entrypoints=https
  - traefik.http.routers.jellyfin-rtr.rule=Host(`jf.{{ docker_stack__internal_domain }}`)
  ## Middlewares
  - traefik.http.routers.jellyfin-rtr.middlewares=chain-no-auth@file
  ## HTTP Services
  - traefik.http.routers.jellyfin-rtr.service=jellyfin-svc
  - traefik.http.services.jellyfin-svc.loadbalancer.server.port=8096


######### Converters ##########

__docker_stack__media_handbrake__traefik_labels_default:
  - traefik.enable=true
  ## HTTP Routers
  - traefik.http.routers.handbrake-rtr.entrypoints=https
  - traefik.http.routers.handbrake-rtr.rule=Host(`handbrake.{{ docker_stack__internal_domain }}`)
  ## Middlewares
  #  - "traefik.http.routers.handbrake-rtr.middlewares=chain-oauth@file"
  ## HTTP Services
  - traefik.http.routers.handbrake-rtr.service=handbrake-svc
  - traefik.http.services.handbrake-svc.loadbalancer.server.port=5800

__docker_stack__media_mkvtoolnix__traefik_labels_default:
  - traefik.enable=true
  ## HTTP Routers
  - traefik.http.routers.mkvtoolnix-rtr.entrypoints=https
  - traefik.http.routers.mkvtoolnix-rtr.rule=Host(`mkvtoolnix.{{ docker_stack__internal_domain }}`)
  #  ## Middlewares
  #  - "traefik.http.routers.mkvtoolnix-rtr.middlewares=chain-oauth@file"
  ## HTTP Services
  - traefik.http.routers.mkvtoolnix-rtr.service=mkvtoolnix-svc
  - traefik.http.services.mkvtoolnix-svc.loadbalancer.server.port=5800

__docker_stack__media_makemkv__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.makemkv.entrypoints=https
  - traefik.http.routers.makemkv.rule=Host(`makemkv.{{ docker_stack__internal_domain }}`)
  #  - "traefik.http.routers.makemkv_insecure.entrypoints=http"
  #  - "traefik.http.routers.makemkv_insecure.rule=Host(`makemkv.{{ docker_stack__internal_domain }}`)"
  #  - "traefik.http.routers.makemkv_insecure.middlewares=https-only@file"
  - traefik.http.services.makemkv.loadbalancer.server.port=5800

__docker_stack__media_flaresolverr__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.flaresolverr.entrypoints=https
  - traefik.http.routers.flaresolverr.rule=Host(`flaresolverr.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.flaresolverr_insecure.entrypoints=http
  - traefik.http.routers.flaresolverr_insecure.rule=Host(`flaresolverr.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.flaresolverr_insecure.middlewares=https-only@file
  - traefik.http.services.flaresolverr.loadbalancer.server.port=8191

__docker_stack__media_prowlarr__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.prowlarr.entrypoints=https
  - traefik.http.routers.prowlarr.rule=Host(`prowlarr.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.prowlarr_insecure.entrypoints=http
  - traefik.http.routers.prowlarr_insecure.rule=Host(`prowlarr.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.prowlarr_insecure.middlewares=https-only@file
  - traefik.http.services.prowlarr.loadbalancer.server.port=9696

__docker_stack__media_hydra__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.hydra.entrypoints=https
  - traefik.http.routers.hydra.rule=Host(`hydra.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.hydra_insecure.entrypoints=http
  - traefik.http.routers.hydra_insecure.rule=Host(`hydra.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.hydra_insecure.middlewares=https-only@file
  - traefik.http.services.hydra.loadbalancer.server.port=5076

__docker_stack__media_jackett__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.jackett.entrypoints=https
  - traefik.http.routers.jackett.rule=Host(`jackett.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.jackett_insecure.entrypoints=http
  - traefik.http.routers.jackett_insecure.rule=Host(`jackett.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.jackett_insecure.middlewares=https-only@file
  - traefik.http.services.jackett.loadbalancer.server.port=9117

__docker_stack__media_thelounge__traefik_labels_default:
  - traefik.enable=true
  - traefik.http.routers.thelounge.entrypoints=https
  - traefik.http.routers.thelounge.rule=Host(`thelounge.{{ docker_stack__internal_domain }}`)
  - traefik.http.services.thelounge.loadbalancer.server.port=9000

__docker_stack__media_duplicati__traefik_labels_default:
  - traefik.enable=true
  ## HTTP Routers
  - traefik.http.routers.duplicati-rtr.entrypoints=https
  - traefik.http.routers.duplicati-rtr.rule=Host(`duplicati.{{ docker_stack__internal_domain }}`)
  - traefik.http.routers.duplicati-rtr.service=duplicati-svc
  ## Middlewares
  #  - "traefik.http.routers.duplicati-rtr.middlewares=chain-oauth@file"
  - traefik.http.routers.duplicati-rtr.middlewares=chain-no-auth@file
  ## HTTP Services
  - traefik.http.services.duplicati-svc.loadbalancer.server.port=8200

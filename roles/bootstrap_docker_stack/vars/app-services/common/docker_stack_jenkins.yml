---

__docker_stack__jenkins__environment: "{{ docker_stack__jenkins__environment | d(docker_stack__environment) }}"

__docker_stack__jenkins__ansible_tool_python_interpreter_default: "python3"
#__docker_stack__jenkins__ansible_tool_python_interpreter_default: "python3.10"
#__docker_stack__jenkins__ansible_tool_python_interpreter_default: python3.11
#__docker_stack__jenkins__ansible_tool_python_interpreter_default: python3.12
__docker_stack__jenkins__ansible_tool_python_interpreter: "{{ docker_stack__jenkins__ansible_tool_python_interpreter 
  | d(__docker_stack__jenkins__ansible_tool_python_interpreter_default) }}"

__docker_stack__jenkins__package_requirements:
  - "{{ __docker_stack__jenkins__ansible_tool_python_interpreter }}"

__docker_stack__jenkins__stack_dir: "{{ docker_stack__dir | d('/home/user/docker-dirs') }}"
__docker_stack__jenkins__base_dir_default: "{{ __docker_stack__jenkins__stack_dir }}/jenkins"
__docker_stack__jenkins__base_dir: "{{ docker_stack__jenkins__base_dir | d(__docker_stack__jenkins__base_dir_default) }}"

__docker_stack__jenkins__traefik_host_default: jenkins.example.int
__docker_stack__jenkins__host: "{{ docker_stack__jenkins__host | d(docker_stack__jenkins_host) | d(docker_stack__traefik_host) | d(__docker_stack__jenkins__traefik_host_default)
  }}"

__docker_stack__jenkins__agent_base_dir_default: "{{ __docker_stack__jenkins__stack_dir }}/jenkins_agent"
__docker_stack__jenkins__agent_base_dir: "{{ docker_stack__jenkins__agent_base_dir | d(__docker_stack__jenkins__agent_base_dir_default) }}"

__docker_stack__jenkins__http: "{{ docker_stack__jenkins__http | d('10180') }}"

## ref: https://www.jenkins.io/blog/2020/05/11/docker-windows-agents/
## ref: https://support.cloudbees.com/hc/en-us/articles/115001771692-How-to-Create-Permanent-Agents-with-Docker
## ref: https://github.com/jenkinsci/docker-inbound-agent
## ref: https://wiki.tds.tieto.com/display/TDSKB/Executing+Jenkins+jobs+when+only+one+way+network+connection+exists
__docker_stack__jenkins__agent_port: "{{ docker_stack__jenkins__agent_port | d('9000') }}"
__docker_stack__jenkins__agent_tcp_port: "{{ docker_stack__jenkins__tcp_port | d('9000') }}"
__docker_stack__jenkins__agent_ssh_port: "{{ docker_stack__jenkins__ssh_port | d('4444') }}"

__docker_stack__jenkins__agent_tunnel: "{{ __docker_stack__jenkins_endpoint }}:9000"

__docker_stack__jenkins__mgr_pwd_secret: "{{ docker_stack__jenkins__mgr_pwd_secret | d('00000000000000000000000') }}"

__docker_stack__jenkins__agent_username: "{{ docker_stack__jenkins__agent_username | d('00000000000000000000000') }}"
__docker_stack__jenkins__agent_password: "{{ docker_stack__jenkins__agent_password | d('00000000000000000000000') }}"

__docker_stack__jenkins__agent_swarm_mode: true

## ref: https://www.jenkins.io/blog/2020/05/11/docker-windows-agents/
#__docker_stack__jenkins__image: "jenkins/jenkins:lts"
#__docker_stack__jenkins__image_default: "{{ docker_stack__registry_endpoint }}/jenkins-docker:latest"
__docker_stack__jenkins__image_default: "{{ docker_stack__registry_endpoint }}/docker-jenkins-jcac:latest"
#__docker_stack__jenkins__image_default: "{{ docker_stack__registry_endpoint }}/jenkins-docker-jcac:latest"
__docker_stack__jenkins__image: "{{ docker_stack__jenkins__image | d(__docker_stack__jenkins__image_default) }}"

__docker_stack__jenkins__agent_image_default: "{{ docker_stack__registry_endpoint }}/jenkins-docker-cicd-agent:latest"
__docker_stack__jenkins__agent_image: "{{ docker_stack__jenkins__agent_image | d(__docker_stack__jenkins__agent_image_default) }}"

__docker_stack__jenkins__swarm_agent_image_default: "{{ docker_stack__registry_endpoint }}/jenkins-swarm-agent:latest"
__docker_stack__jenkins__swarm_agent_image: "{{ docker_stack__jenkins_swarm_agent_image | d(__docker_stack__jenkins__swarm_agent_image_default) }}"

__docker_stack__jenkins__ldap_host: "{{ docker_stack__jenkins__ldap_host | d('ldap.example.int:389')}}"
__docker_stack__jenkins__ldap_uri: "{{ docker_stack__jenkins__ldap_uri | d(docker_stack__ldap_uri) | d(docker_stack__ldap_host) }}"
__docker_stack__jenkins__ldap_base_dn: "{{ docker_stack__jenkins__ldap_base_dn | d(docker_stack__ldap_base_dn) }}"

__docker_stack__jenkins__ldap_bind_user_dn_default: cn=readonly,{{ __docker_stack__jenkins__ldap_base_dn | d(docker_stack__ldap_user_base_dn) }}
__docker_stack__jenkins__ldap_bind_user_dn: "{{ docker_stack__jenkins__ldap_bind_user_dn | d(docker_stack__ldap_bind_user_dn) | d(__docker_stack__jenkins__ldap_bind_user_dn_default)
  }}"
__docker_stack__jenkins__ldap_bind_user_password: "{{ docker_stack__jenkins__ldap_bind_user_password | d(docker_stack__ldap_bind_user_password) }}"

#__docker_stack__jenkins_ssh_private_key: "{{ docker_stack__jenkins_ssh_private_key | d('') }}"
#__docker_stack__jenkins_ssh_public_key: "{{ docker_stack__jenkins_ssh_public_key | d('') }}"

#__docker_stack__jenkins__data_dir_default: /export/data/jenkins/osimages
#__docker_stack__jenkins__data_dir_default: /export/data/jenkins
__docker_stack__jenkins__data_dir_default: /data/datacenter/jenkins
__docker_stack__jenkins__data_dir: "{{ docker_stack__jenkins__data_dir | d(__docker_stack__jenkins__data_dir_default) }}"

__docker_stack__jenkins__pipeline_lib_repo_default: https://gitea.example.int/infra/pipeline-automation-lib.git
__docker_stack__jenkins__pipeline_lib_repo: "{{ docker_stack__jenkins__pipeline_lib_repo | d(__docker_stack__jenkins__pipeline_lib_repo_default) }}"

__docker_stack__jenkins__vmware_data_dir_default: /data/datacenter/vmware
__docker_stack__jenkins__vmware_data_dir: "{{ docker_stack__jenkins__vmware_data_dir | d(__docker_stack__jenkins__vmware_data_dir_default) }}"

__docker_stack__jenkins__config_dirs:
  - path: "{{ __docker_stack__jenkins__base_dir }}"
  - path: "{{ __docker_stack__jenkins__base_dir }}/jenkins_home"
  - path: "{{ __docker_stack__jenkins__base_dir }}/jenkins_home/casc_configs"
  - path: "{{ __docker_stack__jenkins__data_dir }}"
  - path: "{{ __docker_stack__jenkins__data_dir }}/osimages"
  - path: "{{ __docker_stack__jenkins__vmware_data_dir }}"

__docker_stack__jenkins__config_tpls:
  - src: jenkins/jenkins.env.j2
    dest: "{{ __docker_stack__jenkins__base_dir }}/jenkins.env"
  - src: jenkins/jenkins_casc.yml.j2
    dest: "{{ __docker_stack__jenkins__base_dir }}/jenkins_home/casc_configs/jenkins.yml"
  - src: jenkins/job_dsl/seedjob.groovy
    dest: "{{ __docker_stack__jenkins__base_dir }}/jenkins_home/casc_configs/seedjob.groovy"
    force: true
  - src: jenkins/config-group.conf.j2
    dest: "{{ __docker_stack__jenkins__base_dir }}/group"
  - src: jenkins/config-passwd.conf.j2
    dest: "{{ __docker_stack__jenkins__base_dir }}/passwd"
#  - src: 'jenkins/config-agent-group.conf.j2'
#    dest: "{{ __docker_stack__jenkins__agent_base_dir }}/group"
#  - src: 'jenkins/config-agent-passwd.conf.j2'
#    dest: "{{ __docker_stack__jenkins__agent_base_dir }}/passwd"

__docker_stack__jenkins__firewalld_ports:
  - "{{ __docker_stack__jenkins__agent_tcp_port }}/tcp"
  - "{{ __docker_stack__jenkins__agent_ssh_port }}/tcp"

__docker_stack__jenkins__ansible_venv_libs_default:
  - jmespath
  - netaddr
  - requests
  - requests-credssp
  - pywinrm
  - passlib
  - ruamel.yaml
  - dnspython
  - pytz
  - py
  - pytest
  - pytest-shell-utilities
  - pytest-parallel
  - python-dateutil
  - ansible-lint
  - ansible-lint-junit
  - yamllint
  - yaml-lint-to-junit-xml
  - edgegrid-python
  - defusedxml
  #####################
  ## molecule related requirements
  ##'ansible-compat<4' is required due to https://github.com/ansible-community/molecule/issues/3903
  ## if moving to latest ansible-compat  - we get error "AttributeError: 'Runtime' object has no attribute 'exec'"
  - ansible-compat
  - molecule
  ## installing the molecule docker plugin leads to issue:
  ## "Failed to detect selinux python bindings at"
  #- molecule-plugins[docker]

#__docker_stack__jenkins__ansible_lib_default: "ansible"
## ref: ## ref: https://www.jeffgeerling.com/blog/2024/newer-versions-ansible-dont-work-rhel-8
__docker_stack__jenkins__ansible_lib_default: ansible-core==2.18.4
#__docker_stack__jenkins__ansible_lib_default: ansible-core==2.17.6
#__docker_stack__jenkins__ansible_lib_default: ansible-core==2.16.3

__docker_stack__jenkins__ansible_lib: "{{ docker_stack__jenkins__ansible_lib | d(__docker_stack__jenkins__ansible_lib_default) }}"

__docker_stack__jenkins__ansible_venv_libs: "{{ docker_stack__jenkins__ansible_venv_libs | d(__docker_stack__jenkins__ansible_venv_libs_default) }}"

__docker_stack__jenkins__java_opts_list:
  - -Djenkins.install.runSetupWizard=false
  - -Djava.awt.headless=true
  - -Djavax.net.ssl.trustStore=/var/lib/jenkins/cacerts
  - -Djavax.net.ssl.trustStorePassword={{ __docker_stack__jenkins__cred_java_truststore_password }}

__docker_stack__jenkins__java_opts: "{{ __docker_stack__jenkins__java_opts_list | join(' ') }}"

## ref: https://stackoverflow.com/questions/29539234/system-properties-management
## ref: https://github.com/Checkmarx/kics/blob/master/docs/integrations_jenkins.md
__docker_stack__jenkins__jenkins_java_opts_list:
  - -Dhudson.model.DirectoryBrowserSupport.CSP=\"http://* 'unsafe-inline' 'unsafe-eval'; script-src 'self' http://* 'unsafe-inline' 'unsafe-eval'\"
#  - -Dhudson.model.DirectoryBrowserSupport.CSP=http://* 'unsafe-inline' 'unsafe-eval'; script-src 'self' http://* 'unsafe-inline' 'unsafe-eval'

__docker_stack__jenkins__jenkins_java_opts: "{{ __docker_stack__jenkins__jenkins_java_opts_list | join(' ') }}"

__docker_stack__jenkins__agent_min_num_executors: 4
#__docker_stack__jenkins__agent_num_executors: "{{ docker_stack__jenkins__agent_num_executors | d(4) }}"

## ref: https://plugins.jenkins.io/throttle-concurrents/
__docker_stack__jenkins__throttle_job_properties:
  categories:
    - categoryName: "docker_image_builds"
      maxConcurrentTotal: 8
      maxConcurrentPerNode: 2
#      nodeLabeledPairs:
#      - throttledNodeLabel: "docker"
#        maxConcurrentPerNodeLabeled: 1

## ref: https://stackoverflow.com/questions/39539559/ansible-procesor-count-vs-processor-cores-vs-processor-vcpus
## ref: github.com/ansible/ansible/pull/66569
#__docker_stack__jenkins__agent_num_executors: "{{
#  [ansible_processor_cores|d(1)*2, __docker_stack__jenkins__agent_min_num_executors] | max }}"
#__docker_stack__jenkins__agent_num_executors: "{{
#  [ansible_processor_vcpus|d(1)*2, __docker_stack__jenkins__agent_min_num_executors] | max }}"
__docker_stack__jenkins__agent_num_executors: "{{ 
  [ansible_processor_nproc|d(1)*4, __docker_stack__jenkins__agent_min_num_executors] | max }}"

#########
## Credential vars
__docker_stack__jenkins__cred_jenkins_admin_user_username: "{{ docker_stack__jenkins__cred_jenkins_admin_user_username | d('admin') }}"
__docker_stack__jenkins__cred_jenkins_admin_user_password: "{{ docker_stack__jenkins__cred_jenkins_admin_user_password | d('CHANGEME123') }}"
__docker_stack__jenkins__cred_jenkins_git_user_password: "{{ docker_stack__jenkins__cred_jenkins_git_user_password | d('CHANGEME123') }}"

__docker_stack__jenkins__cred_ansible_ssh_username: "{{ docker_stack__jenkins__cred_ansible_ssh_username | d('CHANGEME123') }}"
__docker_stack__jenkins__cred_ansible_ssh_password: "{{ docker_stack__jenkins__cred_ansible_ssh_password | d('CHANGEME123') }}"

__docker_stack__jenkins__cred_ansible_ssh_key: "{{ docker_stack__jenkins__cred_ansible_ssh_key | d('CHANGEME123') }}"
__docker_stack__jenkins__cred_ansible_vault_password: "{{ docker_stack__jenkins__cred_ansible_vault_password | d('CHANGEME123') }}"

__docker_stack__jenkins__cred_bitbucket_ssh_username: "{{ docker_stack__jenkins__cred_bitbucket_ssh_username | d('CHANGEME123') }}"
__docker_stack__jenkins__cred_bitbucket_ssh_private_key: "{{ docker_stack__jenkins__cred_bitbucket_ssh_private_key | d('CHANGEME123') }}"

## docker registry
__docker_stack__jenkins__cred_docker_registry_admin_username: "{{ docker_stack__jenkins__cred_docker_registry_admin_username | d('admin') }}"
__docker_stack__jenkins__cred_docker_registry_admin_password: "{{ docker_stack__jenkins__cred_docker_registry_admin_password | d('CHANGEME123') }}"

__docker_stack__jenkins__cred_vsphere_username: "{{ docker_stack__jenkins__cred_vsphere_username | d('CHANGEME123') }}"
__docker_stack__jenkins__cred_vsphere_password: "{{ docker_stack__jenkins__cred_vsphere_password | d('CHANGEME123') }}"

__docker_stack__jenkins__cred_esxi_password: "{{ docker_stack__jenkins__cred_esxi_password | d('CHANGEME123') }}"

#__docker_stack__jenkins__cred_packer_user_username_default: packer
__docker_stack__jenkins__cred_packer_user_username_default: osbuild
__docker_stack__jenkins__cred_packer_user_username: "{{ docker_stack__jenkins__cred_packer_user_username | d(__docker_stack__jenkins__cred_packer_user_username_default)
  }}"

#__docker_stack__jenkins__cred_packer_ssh_password: "{{ docker_stack__jenkins__cred_packer_ssh_password | d('CHANGEME123') }}"
__docker_stack__jenkins__cred_packer_ssh_password: "{{ docker_stack__jenkins__cred_packer_ssh_password | d('CHANGEME123') }}"
__docker_stack__jenkins__cred_packer_user_password: "{{ docker_stack__jenkins__cred_packer_user_password | d('CHANGEME123') }}"
__docker_stack__jenkins__cred_packer_user_ssh_public_key: "{{ docker_stack__jenkins__cred_packer_user_ssh_public_key | d('CHANGEME123') }}"

__docker_stack__jenkins__cred_vm_root_password: "{{ docker_stack__jenkins__cred_vm_root_password | d('CHANGEME123') }}"

__docker_stack__jenkins__cred_bitbucket_cloud_oauth_key: "{{ docker_stack__jenkins__cred_bitbucket_cloud_oauth_key | d('CHANGEME123') }}"
__docker_stack__jenkins__cred_bitbucket_cloud_oauth_token: "{{ docker_stack__jenkins__cred_bitbucket_cloud_oauth_token | d('CHANGEME123') }}"

__docker_stack__jenkins__cred_java_truststore_password_default: changeit
__docker_stack__jenkins__cred_java_truststore_password: "{{ docker_stack__jenkins__cred_java_truststore_password | d(__docker_stack__jenkins__cred_java_truststore_password_default)
  }}"

__docker_stack__jenkins__cred_github_username: "{{ docker_stack__jenkins__cred_github_username | d('CHANGEME123') }}"
__docker_stack__jenkins__cred_github_password: "{{ docker_stack__jenkins__cred_github_password | d('CHANGEME123') }}"

__docker_stack__jenkins__secrets:
  - name: ldap_username
    value: "{{ __docker_stack__jenkins__ldap_bind_user_dn }}"
  - name: ldap_password
    value: "{{ __docker_stack__jenkins__ldap_bind_user_password }}"
  - name: jenkins_admin_username
    value: "{{ __docker_stack__jenkins__cred_jenkins_admin_user_username }}"
  - name: jenkins_admin_password
    value: "{{ __docker_stack__jenkins__cred_jenkins_admin_user_password }}"
  - name: jenkins_git_password
    value: "{{ __docker_stack__jenkins__cred_jenkins_git_user_password }}"
  - name: vsphere_username
    value: "{{ __docker_stack__jenkins__cred_vsphere_username }}"
  - name: vsphere_password
    value: "{{ __docker_stack__jenkins__cred_vsphere_password }}"
  - name: vmware_esxi_password
    value: "{{ __docker_stack__jenkins__cred_esxi_password }}"
  - name: packer_user_username
    value: "{{ __docker_stack__jenkins__cred_packer_user_username }}"
  - name: packer_user_password
    value: "{{ __docker_stack__jenkins__cred_packer_user_password }}"
  - name: packer_user_ssh_public_key
    value: "{{ __docker_stack__jenkins__cred_packer_user_ssh_public_key }}"
  - name: ansible_vault_password
    value: "{{ __docker_stack__jenkins__cred_ansible_vault_password }}"
  - name: ansible_ssh_username
    value: "{{ __docker_stack__jenkins__cred_ansible_ssh_username }}"
  - name: ansible_ssh_password
    value: "{{ __docker_stack__jenkins__cred_ansible_ssh_password }}"
  - name: ansible_ssh_private_key
    value: "{{ __docker_stack__jenkins__cred_ansible_ssh_key }}"
  - name: bitbucket_ssh_username
    value: "{{ __docker_stack__jenkins__cred_bitbucket_ssh_username }}"
  - name: bitbucket_ssh_private_key
    value: "{{ __docker_stack__jenkins__cred_bitbucket_ssh_private_key }}"
  - name: bitbucket_cloud_oauth_username
    value: "{{ __docker_stack__jenkins__cred_bitbucket_cloud_oauth_key }}"
  - name: bitbucket_cloud_oauth_password
    value: "{{ __docker_stack__jenkins__cred_bitbucket_cloud_oauth_token }}"
  - name: github_ssh_username
    value: "{{ __docker_stack__jenkins__cred_github_username }}"
  - name: github_ssh_password
    value: "{{ __docker_stack__jenkins__cred_github_password }}"
  - name: jenkins_agent_username
    value: "{{ __docker_stack__jenkins__agent_username }}"
  - name: jenkins_agent_password
    value: "{{ __docker_stack__jenkins__agent_password }}"
  - name: docker_registry_admin_username
    value: "{{ __docker_stack__jenkins__cred_docker_registry_admin_username }}"
  - name: docker_registry_admin_password
    value: "{{ __docker_stack__jenkins__cred_docker_registry_admin_password }}"
  - name: docker_registry_password
    value: "{{ __docker_stack__jenkins__cred_docker_registry_admin_password }}"

docker_stack__jenkins__firewalld_appspec_ports:
  - "{{ __docker_stack__jenkins__agent_tcp_port }}/tcp"
  - "{{ __docker_stack__jenkins__agent_ssh_port }}/tcp"

docker_stack__appspec__jenkins:
  dirs: "{{ __docker_stack__jenkins__config_dirs | d([]) }}"
  files: "{{ __docker_stack__jenkins__config_files | d([]) }}"
  templates: "{{ __docker_stack__jenkins__config_tpls | d([]) }}"
  #  secrets: "{{ __docker_stack__jenkins__secrets | d({}) }}"
  firewalld_services: "{{ __docker_stack__jenkins__firewalld_services | d([]) }}"
  firewalld_ports: "{{ __docker_stack__jenkins__firewalld_ports | d([]) }}"
  networks: "{{ __docker_stack__jenkins__networks | d({}) }}"
  volumes: "{{ __docker_stack__jenkins__volumes | d({}) }}"
  docker_services: "{{ __docker_stack__jenkins__services | d({}) }}"

__docker_stack__jenkins__traefik_labels: "{{ docker_stack__jenkins__traefik_labels | d(__docker_stack__jenkins__traefik_labels_default) }}"

__docker_stack__jenkins__services:

  ## ref: https://github.com/jenkinsci/docker
  ## ref: https://medium.com/swlh/quickstart-ci-with-jenkins-and-docker-in-docker-c3f7174ee9ff
  ## ref: https://github.com/4OH4/jenkins-docker
  ## ref: https://github.com/lj020326/jenkins-docker
  jenkins:
    image: "{{ __docker_stack__jenkins__image }}"
    container_name: jenkins
    restart: unless-stopped
    #    depends_on:
    #      - socket-proxy
    user: "{{ docker_stack__user_uid }}:{{ docker_stack__user_gid }}"
    networks:
      - "{{ docker_stack__network_name__traefik_proxy }}"
      - "{{ docker_stack__network_name__socket_proxy }}"
    ports:
      - mode: "{{ __docker_stack__port_mode }}"
        protocol: tcp
        published: "{{ __docker_stack__jenkins__http }}"
        target: 8080
      - mode: "{{ __docker_stack__port_mode }}"
        protocol: tcp
        published: "{{ __docker_stack__jenkins__agent_port }}"
        target: 9000
    #      - "{{ __docker_stack__jenkins__http }}:8080/tcp"  ## jenkins web server
    #      - "{{ __docker_stack__jenkins__agent_port }}:9000/tcp"
    #      command: "--httpsCertificate=/var/lib/jenkins/cert --httpsPrivateKey=/var/lib/jenkins/pk"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "{{ __docker_stack__ca_cert_bundle }}:/etc/ssl/certs/ca-certificates.crt:ro"
      - "{{ __docker_stack__ca_java_keystore }}:/var/lib/jenkins/cacerts"
      - "{{ __docker_stack__jenkins__base_dir }}/passwd:/etc/passwd:ro"
      - "{{ __docker_stack__jenkins__base_dir }}/group:/etc/group:ro"
      - "{{ __docker_stack__jenkins__base_dir }}/jenkins_home:/var/jenkins_home"
      - "{{ __docker_stack__jenkins__data_dir }}:/data"
      - "{{ __docker_stack__jenkins__vmware_data_dir }}:/vmware"
    env_file:
      - "{{ __docker_stack__jenkins__base_dir }}/jenkins.env"
    #    secrets:
    #      - ldap_username
    #      - ldap_password
    #      - jenkins_admin_username
    #      - jenkins_admin_password
    #      - jenkins_git_password
    #      - vsphere_username
    #      - vsphere_password
    #      - vmware_esxi_password
    #      - packer_user_username
    #      - packer_user_password
    #      - packer_user_ssh_public_key
    #      - ansible_vault_password
    #      - ansible_ssh_username
    #      - ansible_ssh_password
    #      - ansible_ssh_private_key
    #      - bitbucket_ssh_username
    #      - bitbucket_ssh_private_key
    #      - bitbucket_cloud_oauth_username
    #      - bitbucket_cloud_oauth_password
    #      - docker_registry_admin_username
    #      - docker_registry_admin_password
    #      - github_ssh_username
    #      - github_ssh_password
    deploy:
      #############
      ## Set endpoint_mode to `dnsrr` for container to have local dns access
      ## https://stackoverflow.com/questions/52665442/docker-swarm-host-cannot-resolve-hosts-on-other-nodes
      ## https://docs.docker.com/compose/compose-file/compose-file-v3/#endpoint_mode
      endpoint_mode: dnsrr
      mode: replicated
      placement:
        constraints:
          - node.hostname == {{ __docker_stack__jenkins__host }}
      #          - node.role == manager
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        order: stop-first
    labels: "{{ __docker_stack__jenkins__traefik_labels }}"

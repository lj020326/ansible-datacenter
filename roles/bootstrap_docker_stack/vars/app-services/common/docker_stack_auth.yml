---

__docker_stack__auth__stack_dir: "{{ docker_stack__dir | d('/home/user/docker-dirs') }}"

__docker_stack__auth__google_client_id: "{{ docker_stack__auth_google_client_id | d('123456789.apps.googleusercontent.com') }}"
__docker_stack__auth__google_client_secret: "{{ docker_stack__auth_google_client_secret | d('gooaogogoaogogooagoaogoag') }}"

## generate random secret
## openssl rand -hex 16
## or
## ref: https://www.browserling.com/tools/random-string
__docker_stack__auth__oauth_secret: "{{ docker_stack__auth_oauth_secret | d('3cf04360c9731d1f41fe2a8d4b12b05c') }}"

__docker_stack__auth__redis_password: "{{ docker_stack__redis_password | d('passwword') }}"

__docker_stack__auth__whitelist: "{{ docker_stack__auth_allowlist | d(['myemail@email.com']) }}"

__docker_stack__auth__authelia_log_level: "{{ docker_stack__authelia_log_level | d('debug') }}"
__docker_stack__auth__authelia_jwt_secret: "{{ docker_stack__authelia_jwt_secret | d('3615e483f78c6033f84fde66e91c0456') }}"
__docker_stack__auth__authelia_default_redirection_url: "{{ docker_stack__authelia_default_redirection_url | d('https://public.example.com') }}"
__docker_stack__auth__authelia_session_secret: "{{ docker_stack__authelia_session_secret | d('7f13fa0013960e339419424106490a05') }}"
__docker_stack__auth__authelia_domain: "{{ docker_stack__authelia_domain | d('example.com') }}"
__docker_stack__auth__authelia_encryption_key: "{{ docker_stack__authelia_encryption_key | d('3615e483f78c6033f84fde66e91c0456') }}"

##
## Use to create argon2id hash -> https://argon2.online/
## or
## docker run authelia/authelia:latest authelia hash-password YOUR_PASSWORD
##

# Password is 'authelia'
#__docker_stack__auth__authelia_password: "{{ docker_stack__authelia_password | d('$6$rounds=50000$BpLnfgDsc2WD8F2q$Zis.ixdg9s/UOJYrs56b5QEZFiZECu0qZVNsIYxBaNJ7ucIL.nlxVCT5tqh8KHG8X4tlwCFm5r6NTOZZ5qRFN/') }}"
# Password is 'passsw0rd'
__docker_stack__auth__authelia_password: "{{ docker_stack__authelia_password | d('$argon2id$v=19$m=48,t=2,p=6$SWR2NHRmeFdXa2NJRXN0VQ$UYB9BefZ3B1mvvi9sTEGtw') }}"

__docker_stack__auth__authelia_users_default:
  admin:
    displayname: Admin User
    password: "{{ __docker_stack__auth__authelia_password }}"
    email: admin@example.com
    groups:
      - admins
      - dev

__docker_stack__auth__authelia_authentication_backend_default:
  file:
    path: /config/users_database.yml
    password:
      algorithm: argon2id
      iterations: 1
      salt_length: 16
      parallelism: 8
      # blocks this much of the RAM. Tune this.
      memory: 1024

__docker_stack__auth__authelia_access_control_default:
  default_policy: deny
  rules:
    # Rules applied to everyone
    - domain:
        - authelia.example.com
        - public.example.com
      policy: bypass
    - domain: traefik.example.com
      policy: one_factor
    - domain: secure.example.com
      policy: two_factor

__docker_stack__auth__authelia_totp_default:
  issuer: authelia.com
  period: 30
  skew: 1

## ref: https://docs.ibracorp.io/authelia/configuration-files/configuration.yml
#__docker_stack__auth__authelia_notifier_default:
#  disable_startup_check: true
#  smtp:
#    username: test
#    # This secret can also be set using the env variables AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
#    password: password
#    host: mail.example.com
#    port: 25
#    sender: admin@example.com
#    disable_require_tls: true
#    tls:
#      skip_verify: true
#  filesystem:
#    filename: /tmp/authelia/notification.txt

##############
##  - configuration keys 'notifier.smtp.host' and 'notifier.smtp.port' are deprecated in 4.38.0 and has been replaced
##    by 'notifier.smtp.address'
__docker_stack__auth__authelia_notifier_default:
  #  disable_startup_check: true
  smtp:
    username: test
    # This secret can also be set using the env variables AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
    password: password
    address: smtp://mail.example.int:25
    sender: admin@example.com
#    disable_require_tls: true
#    tls:
#      skip_verify: true
#  filesystem:
#    filename: /tmp/authelia/notification.txt

############
## Configuration: session: option 'domain' is deprecated in v4.38.0 and has been replaced by a multi-domain configuration
__docker_stack__auth__authelia_session_default:
  name: authelia_session
  ## This secret can also be set using the env variables AUTHELIA_SESSION_SECRET_FILE
  secret: "{{ __docker_stack__auth__authelia_session_secret }}"
  expiration: 3600 # 1 hour
  inactivity: 300 # 5 minutes
  ## Should match whatever your root protected domain is
  #  domain: "{{ __docker_stack__auth__authelia_domain }}"
  cookies:
    - domain: "{{ __docker_stack__auth__authelia_domain }}"
      name: authelia_session
      authelia_url: https://authelia.{{ __docker_stack__auth__authelia_domain }}
      #      default_redirection_url: "https://www.{{ __docker_stack__auth__authelia_domain }}"
      default_redirection_url: "{{ __docker_stack__auth__authelia_default_redirection_url }}"
      same_site: lax
      inactivity: 5m
      expiration: 1h
      remember_me: 1d

  redis:
    host: redis
    port: 6379
    # This secret can also be set using the env variables AUTHELIA_SESSION_REDIS_PASSWORD_FILE
    # password: authelia
    password: "{{ __docker_stack__auth__redis_password }}"

__docker_stack__auth__authelia_regulation_default:
  max_retries: 10
  find_time: 120
  ban_time: 300

__docker_stack__auth__authelia_storage_default:
  encryption_key: "{{ __docker_stack__auth__authelia_encryption_key }}"
  local:
    path: /config/db.sqlite3

__docker_stack__auth__authelia_users: "{{ docker_stack__authelia_users | d(__docker_stack__auth__authelia_users_default) }}"

__docker_stack__auth__authelia_notifier: "{{ docker_stack__authelia_notifier | d(__docker_stack__auth__authelia_notifier_default) }}"

__docker_stack__auth__authelia_totp: "{{ docker_stack__authelia_totp | d(__docker_stack__auth__authelia_totp_default) }}"

__docker_stack__auth__authelia_authentication_backend: "{{ docker_stack__authelia_authentication_backend | d(__docker_stack__auth__authelia_authentication_backend_default)
  }}"

__docker_stack__auth__authelia_access_control: "{{ docker_stack__authelia_access_control | d(__docker_stack__auth__authelia_access_control_default) }}"

__docker_stack__auth__authelia_session: "{{ docker_stack__authelia_session | d(__docker_stack__auth__authelia_session_default) }}"

__docker_stack__auth__authelia_regulation: "{{ docker_stack__authelia_regulation | d(__docker_stack__auth__authelia_regulation_default) }}"

__docker_stack__auth__authelia_storage: "{{ docker_stack__authelia_storage | d(__docker_stack__auth__authelia_storage_default) }}"

__docker_stack__auth__config_dirs:
  - { path: "{{ __docker_stack__auth__stack_dir }}" }
  - { path: "{{ __docker_stack__auth__stack_dir }}/authelia" }
#  - { path: "{{ __docker_stack__auth__stack_dir }}/authelia/data"}

__docker_stack__auth__config_tpls:
  - { src: authelia/configuration.yml.j2, dest: "{{ __docker_stack__auth__stack_dir }}/authelia/configuration.yml" }
  - { src: authelia/users_database.yml.j2, dest: "{{ __docker_stack__auth__stack_dir }}/authelia/users_database.yml" }

docker_stack__appspec__auth:
  dirs: "{{ __docker_stack__auth__config_dirs | d([]) }}"
  files: "{{ __docker_stack__auth__config_files | d([]) }}"
  templates: "{{ __docker_stack__auth__config_tpls | d([]) }}"
  firewalld_services: "{{ __docker_stack__auth__firewalld_services | d([]) }}"
  firewalld_ports: "{{ __docker_stack__auth__firewalld_ports | d([]) }}"
  networks: "{{ __docker_stack__auth__networks | d({}) }}"
  volumes: "{{ __docker_stack__auth__volumes | d({}) }}"
  docker_services: "{{ __docker_stack__auth__services | d({}) }}"

__docker_stack__auth_oauth__environment: "{{ docker_stack__auth_oauth__environment | d(__docker_stack__auth_oauth__environment_default) }}"

__docker_stack__auth_oauth__traefik_labels: "{{ docker_stack__auth_oauth__traefik_labels | d(__docker_stack__auth_oauth__traefik_labels_default) }}"

__docker_stack__auth_authelia__traefik_labels: "{{ docker_stack__auth_authelia__traefik_labels | d(__docker_stack__auth_authelia__traefik_labels_default) }}"

__docker_stack__auth__services:
  # Google OAuth - Single Sign On using OAuth 2.0
  # https://hub.docker.com/r/thomseddon/traefik-forward-auth
  # https://www.smarthomebeginner.com/google-oauth-with-traefik-docker/
  oauth:
    container_name: oauth
    image: thomseddon/traefik-forward-auth:latest
    # image: thomseddon/traefik-forward-auth:2.1-arm # Use this image with Raspberry Pi
    restart: unless-stopped
    networks:
      - "{{ docker_stack__network_name__traefik_proxy }}"
    security_opt:
      - no-new-privileges=true
    # Allow apps to bypass OAuth. Radarr example below will bypass OAuth if API key is present in the request (eg. from NZB360 mobile app).
    # While this is one way, the recommended way is to bypass authentication using Traefik labels shown in some of the apps later.
    # command: --rule.radarr.action=allow --rule.radarr.rule="Headers(`X-Api-Key`, `$RADARR_API_KEY`)"
    # command: --rule.sabnzbd.action=allow --rule.sabnzbd.rule="HeadersRegexp(`X-Forwarded-Uri`, `$SABNZBD_API_KEY`)"
    environment: "{{ __docker_stack__auth_oauth__environment }}"
    labels: "{{ __docker_stack__auth_oauth__traefik_labels }}"

  # Authelia (Lite) - Self-Hosted Single Sign-On and Two-Factor Authentication
  authelia:
    container_name: authelia
    # Check this before upgrading: https://github.com/authelia/authelia/blob/master/BREAKING.md
    image: authelia/authelia:latest
    restart: unless-stopped
    user: "{{ docker_stack__user_uid }}:{{ docker_stack__user_gid }}"
    depends_on:
      - redis
    networks:
      - "{{ docker_stack__network_name__default }}"
      - "{{ docker_stack__network_name__traefik_proxy }}"
    # ports:
    #   - "9091:9091"
    volumes:
      - "{{ __docker_stack__auth__stack_dir }}/authelia:/config"
    environment:
      TZ: "{{ docker_stack__timezone }}"
    #      AUTHELIA_JWT_SECRET_FILE: /run/secrets/authelia_jwt_secret
    #      AUTHELIA_SESSION_SECRET_FILE: /run/secrets/authelia_session_secret
    #      AUTHELIA_STORAGE_MYSQL_PASSWORD_FILE: /run/secrets/authelia_storage_mysql_password
    #      AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE: /run/secrets/authelia_notifier_smtp_password
    #      AUTHELIA_DUO_API_SECRET_KEY_FILE: /run/secrets/authelia_duo_api_secret_key
    #    secrets:
    #      - authelia_jwt_secret
    #      - authelia_session_secret
    #      - authelia_storage_mysql_password
    #      - authelia_notifier_smtp_password
    #      - authelia_duo_api_secret_key
    labels: "{{ __docker_stack__auth_authelia__traefik_labels_default }}"
    deploy:
      mode: replicated
      placement:
        constraints:
          - node.hostname == {{ __docker_stack__base__traefik_host }}
      #          - node.role == manager
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

---
# tasks file for sbaerlocher.veeam-agent

# Veeam Backup & Replication
- block:
    - name: check if veeam B&R exist
      command: veeamconfig vbrserver list
      register: veeam_vbrserver_list

    ## ref: https://helpcenter.veeam.com/docs/agentforlinux/userguide/manage_vbr_add.html?ver=40
    - name: create veeam B&R
      command: "veeamconfig vbrserver add --name {{ veeam_vbrserver.name }} --address {{ veeam_vbrserver.endpoint }} --login {{ veeam_vbrserver.login }} --domain {{ veeam_vbrserver.domain }} --password {{ veeam_vbrserver.password }}"
      register: veeam_create_repository
      when: veeam_vbrserver.name not in veeam_vbrserver_list.stdout
  when:
    - veeam_vbrserver.name is defined
#    - ansible_os_family == 'Linux'
    - ansible_os_family in ['Debian','RedHat']
  tags:
    - configuration

# Veeam setup repo
- block:
    - name: check if veeam repo exist
      command: veeamconfig repository list
      register: veeam_repository_list

    ## ref: https://helpcenter.veeam.com/docs/agentforlinux/userguide/backup_repo_create_nfs.html?ver=40
    - name: create veeam repo
      command: "veeamconfig repository create --name {{ veeam_repo.name }} --location {{ veeam_repo.path }}"
      register: veeam_create_repository
      when:
        - veeam_repo.name not in veeam_repository_list.stdout
        - veeam_repo.type is not defined

    - name: create veeam repo
      command: "veeamconfig repository create --name {{ veeam_repo.name }} --type {{ veeam_repo.type }} --location {{ veeam_repo.path }}"
      register: veeam_create_repository
      when:
        - veeam_repo.name not in veeam_repository_list.stdout
        - veeam_repo.type is defined

  when:
    - veeam_repo.name is defined
    - ansible_os_family in ['Debian','RedHat']
  tags:
    - configuration

- block:
    - name: load repository list
      command: "veeamconfig repository list"
      register: veeam_repository_list

    - name: load veeam repository name
      set_fact:
        veeam_repository_name: "{{ veeam_repository_list.stdout_lines.1.split(' ').0 | string }}"

    - name: check if veeam job exist
      command: "veeamconfig job list"
      when: ansible_os_family == 'Linux'
      register: veeam_job_list

    ## ref: https://helpcenter.veeam.com/docs/agentforlinux/userguide/backup_job_create_volume-level.html?ver=40
    - name: "create veeam job"
      command: "veeamconfig job create {{ veeam_job.type }} --name {{ veeam_job.name }} --repoName {{ veeam_repo.name }} --maxPoints {{ veeam_job.restopoints }} --backupallsystem"
      register: veeam_create_job
      when:
        - 'veeam_job.name not in veeam_job_list.stdout'
        - veeam_job.backupallsystem|d(no)|bool
        - veeam_job.objects is not defined

    - name: "create veeam job"
      command: "veeamconfig job create {{ veeam_job.type }} --name {{ veeam_job.name }} --repoName {{ veeam_repo.name }} --maxPoints {{ veeam_job.restopoints }} --objects {{ veeam_job.objects }}"
      register: veeam_create_job
      when:
        - 'veeam_job.name not in veeam_job_list.stdout'
        - veeam_job.backupallsystem|d(no)|bool==false
        - veeam_job.objects is defined

    - name: load veeam job info
      command: "veeamconfig job info --name {{ veeam_job.name }}"
      register: veeam_job_info

    - name: load veeam Job id
      set_fact:
        veeam_job_id: "{{ veeam_job_info.stdout_lines.1 | regex_replace('   ID: ', '') | string }}"

    - name: check if veeam schedule exist
      shell: "veeamconfig schedule show --jobId '{{ veeam_job_id }}' 2>/dev/null"
      register: veeam_schedule_show
      ignore_errors: yes

    - name: create veeam schedule
      command: "veeamconfig schedule set --jobId {{ veeam_job_id }} --at {{ veeam_job.at | default('20:00') }} --daily --weekdays-full {{ veeam_job.day | default('Sat') }}"
      when: "'Run automatically: enabled' not in veeam_schedule_show.stdout"

  when: ansible_os_family in ['Debian','RedHat']
  tags:
    - configuration

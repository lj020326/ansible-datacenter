---

- name: "Assert ansible_user not in __bootstrap_linux_users"
  assert:
    that: __bootstrap_linux_users | selectattr('name','equalto', ansible_user) | list | length == 0

- name: Load current passwd info
  getent:
    database: passwd
    split: ":"
  check_mode: false

## ref: https://stackoverflow.com/questions/46515704/how-to-kill-a-running-process-using-ansible
## ref: https://unix.stackexchange.com/questions/85466/how-to-see-process-created-by-specific-user-in-unix-linux
- name: "Get running user processes"
  when: getent_passwd[item.name][1] is defined
  shell: "ps -fu {{ item.name }} | awk '{print $2}' | tail -n +2"
  loop: "{{ __bootstrap_linux_users }}"
  loop_control:
    label: "{{ item.name }}"
  register: running_processes
  ignore_errors: yes

- name: Running processes block
  when: running_processes is defined
  block:

    - name: "Display running_processes"
      debug:
        var: running_processes
    #    verbosity: 2

    - name: "Set process_list"
      set_fact:
        process_list: "{{ running_processes.results | map(attribute='stdout_lines') | d([]) | list | flatten }}"

    - name: "Display process_list"
      debug:
        var: process_list

    - name: "Kill running processes"
      when: item != ''
      shell: "kill {{ item }}"
      with_items: "{{ process_list }}"
      register: shell_cmd
      failed_when: shell_cmd.rc > 0 and not ( shell_cmd.stderr | regex_search(".* No such process") )

    - wait_for:
        path: "/proc/{{ item }}/status"
        state: absent
      with_items: "{{ running_processes.results | map(attribute='stdout_lines') | list }}"
      ignore_errors: yes
      register: killed_processes

    - name: Force kill stuck processes
      shell: "kill -9 {{ item }}"
      with_items: "{{ killed_processes.results | select('failed') | map(attribute='item') | list }}"
      register: shell_cmd
      failed_when: shell_cmd.rc > 0 and not ( shell_cmd.stderr | regex_search(".* - No such process") )

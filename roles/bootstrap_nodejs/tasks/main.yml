---

- name: Load os-version specific variables
  ansible.builtin.include_vars: "{{ lookup('first_found', __os_lookup_params) }}"
  vars:
    __os_lookup_params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "{{ role_path }}/vars"

- name: Run setup-{{ ansible_os_family }}.yml
  ansible.builtin.include_tasks: "setup-{{ ansible_os_family | lower }}.yml"

- name: Define nodejs_install_npm_user
  ansible.builtin.set_fact:
    nodejs_install_npm_user: "{{ ansible_user | default(lookup('env', 'USER')) }}"
  when: nodejs_install_npm_user is not defined

- name: Create npm global directory
  ansible.builtin.file:
    path: "{{ npm_config_prefix }}"
    owner: "{{ nodejs_install_npm_user }}"
    group: "{{ nodejs_install_npm_user }}"
    state: directory
    mode: "0755"

- name: Add npm_config_prefix bin directory to global $PATH.
  ansible.builtin.template:
    src: npm.sh.j2
    dest: /etc/profile.d/npm.sh
    mode: "0644"
  when: nodejs_generate_etc_profile|bool

- name: Ensure npm global packages are installed.
  community.general.npm:
    name: "{{ item.name | default(item) }}"
    version: "{{ item.version | default('latest') }}"
    global: true
    state: latest
  environment:
    NPM_CONFIG_PREFIX: "{{ npm_config_prefix }}"
    NODE_PATH: "{{ npm_config_prefix }}/lib/node_modules"
    NPM_CONFIG_UNSAFE_PERM: "{{ npm_config_unsafe_perm }}"
  loop: "{{ nodejs_npm_global_packages }}"

- name: Install packages defined in a given package.json.
  community.general.npm:
    path: "{{ nodejs_package_json_path }}"
  when: nodejs_package_json_path is defined and nodejs_package_json_path

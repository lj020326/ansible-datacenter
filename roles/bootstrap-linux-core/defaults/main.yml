---

## COMMON CONFIGS
#bootstrap_linux_default_path: /bin:/sbin:/usr/bin:/usr/sbin
#bootstrap_linux_default_path: /bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin
#bootstrap_linux_default_path: /bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
#bootstrap_linux_default_path: /bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
bootstrap_linux_default_path: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
#bootstrap_linux_default_path: ~/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

bootstrap_linux__init_network: no

bootstrap_linux_pip_libs:
  - pyyaml
  - jinja2
#  - netaddr
  - passlib
  - cryptography
  - pyOpenSSL

bootstrap_linux_packages_custom: []

#bootstrap_linux_figurine_force_config: no
bootstrap_linux_figurine_force_config: yes
bootstrap_linux_figurine_name: "$(hostname)"

bootstrap_linux_ansible_ssh_allowed_ips:
  - 127.0.0.1

bootstrap_linux_network_name_servers:
  - 192.168.0.1

#bootstrap_linux_timezone: Etc/UTC
bootstrap_linux_timezone: America/New_York

bootstrap_linux_apt_repositories: []

## hostname
bootstrap_linux_hostname_internal_domain: "example.local"
bootstrap_linux_hostname_hosts_file_location: "/etc/hosts"
bootstrap_linux_hostname_hosts_template: 'hosts.j2'
bootstrap_linux_hostname_hosts_backup: yes

#bootstrap_linux_hostname_name_full: "{{ inventory_hostname }}"
#bootstrap_linux_hostname_name_short: "{{ inventory_bootstrap_linux_hostname_short }}"
#bootstrap_linux_hostname_name_full: "{{ ansible_fqdn }}"
#bootstrap_linux_hostname_name_short: "{{ ansible_hostname }}"

#bootstrap_linux_hostname_name_full: "{{ hostvars[inventory_hostname]['ansible_fqdn'] }}"
#bootstrap_linux_hostname_name_full: "{{ inventory_hostname }}"
bootstrap_linux_hostname_name_full: "{{ inventory_bootstrap_linux_hostname_short }}.{{ bootstrap_linux_hostname_internal_domain }}"
bootstrap_linux_hostname_name_short: "{{ inventory_bootstrap_linux_hostname_short }}"

bootstrap_linux_hostname_hosts:
  - ip: "{{ ansible_default_ipv4.address }}"
    name: "{{ bootstrap_linux_hostname_name_full }}"
    aliases: [ "{{ bootstrap_linux_hostname_name_short }}" ]

## user configs
bootstrap_linux_admin_sudo_groups:
  Debian: sudo
  Ubuntu: sudo
  CentOS: wheel

bootstrap_linux_admin_sudo_group:  "{{ bootstrap_linux_admin_sudo_groups[ansible_distribution] }}"

bootstrap_linux_systemd_sysctl_execstart: "/lib/systemd/systemd-sysctl"
#bootstrap_linux_systemd_sysctl_execstart: "/usr/lib/systemd/systemd-sysctl"

bootstrap_linux__network:
  network:
    version: 2
    renderer: networkd
    ethernets:
      ens160:
        dhcp4: yes
        dhcp6: yes
        ## ref: https://www.oxcrag.net/2019/02/07/creating-a-working-ubuntu-18-04-vmware-template/
        dhcp-identifier: mac
#        set-name: ens192


bootstrap_linux_users: []
#bootstrap_linux_users:
##  - name: deployer
#  - name: ansible
#    system: yes
#    groups: "{{ bootstrap_linux_admin_sudo_group }}"
#    generate_ssh_key: yes
#
#    ## How to use Credentials in AWX playbook
#    ## Using custom credential to store public ssh keys (for now)
#    ## ref: https://groups.google.com/forum/#!topic/awx-project/ce95ooS2sp0
#    ## ref: https://termlen0.github.io/2019/06/08/observations/
#    auth_key: "{{ admin_ssh_public_key }}"
#    hashed_password: "{{ sha512_hashed_admin_password }}"
#    uid: 1001
#    gid: 1001
#
#  - name: administrator
#    system: yes
#    groups: "{{ bootstrap_linux_admin_sudo_group }}"
#    generate_ssh_key: no
#    auth_key: "{{ admin_ssh_public_key }}"
#    ssh_keypair:
#      private: '{{ admin_ssh_private_key }}'
#      public: '{{ admin_ssh_public_key }}'
#    hashed_password: "{{ sha512_hashed_admin_password }}"
#    uid: 1000
#    gid: 1000


bootstrap_linux_backup_script_dir: "/opt/scripts"
bootstrap_linux_fwbackups_dir: "/srv/backups/fwbackups"
bootstrap_linux_backups_dir: "/srv/backups"
bootstrap_linux_backups_log_dir: "/var/log/backups"

bootstrap_linux_backup_script_dirs:
  - { path: "{{ bootstrap_linux_backup_script_dir }}", recurse: yes  }
  - { path: "{{ bootstrap_linux_fwbackups_dir }}", recurse: yes }
  - { path: "{{ bootstrap_linux_backups_dir }}" }
  - { path: "{{ bootstrap_linux_backups_dir }}/records/daily" }
  - { path: "{{ bootstrap_linux_backups_dir }}/records/monthly" }
  - { path: "{{ bootstrap_linux_backups_log_dir }}" }

bootstrap_linux_backup_scripts:
  - { src: 'scripts/backups/run-backups.py', dest: "{{ bootstrap_linux_backup_script_dir }}"}
  - { src: 'scripts/backups/backups.yml', dest: "{{ bootstrap_linux_backup_script_dir }}"}
  - { src: 'scripts/backups/run-daily-backup.sh', dest: "{{ bootstrap_linux_backup_script_dir }}"}
  - { src: 'scripts/backups/run-monthly-backup.sh', dest: "{{ bootstrap_linux_backup_script_dir }}"}
  - { src: 'scripts/backups/job-backup-incremental.sh', dest: "{{ bootstrap_linux_backup_script_dir }}"}
  - { src: 'scripts/backups/rsync-incremental-backup-local', dest: "{{ bootstrap_linux_backup_script_dir }}"}
  - { src: 'scripts/backups/fwbackup.sh', dest: "{{ bootstrap_linux_backup_script_dir }}"}

bootstrap_linux_backup_script_config_tpls:
  - { src: 'scripts/backups.cfg.j2', dest: "/root/.backups.cfg", mode: "0600", backup: yes }
  - { src: 'scripts/fwbackup.conf.j2', dest: "/root/.fwbackup.cfg", mode: "0600", backup: yes }

bootstrap_linux_node_mounts: []
bootstrap_linux_node_mounts_tmpdir:
  - name: "/tmp"
    src: "tmpfs"
    fstype: "tmpfs"
    options: 'size=1G,defaults,noatime,nosuid,nodev,mode=1777'
#    options: 'size=512m,defaults,noatime,nosuid,nodev,mode=1777'
#    options: 'size=2G,defaults,noatime,nosuid,nodev,mode=1777'
bootstrap_linux_node_mounts_additional: []


---

- name: "Install Debian packages"
  when: ansible_os_family == "Debian"
  block:

    - name: Update Debian repositories
      when: apt_repositories|d([])|length>0
      apt_repository:
        repo: "{{ item }}"
        state: present
      loop: "{{ apt_repositories }}"

    - name: Update apt-get repo and cache
      apt:
        update_cache: yes
        force_apt_get: yes
    #    cache_valid_time: 3600

- name: "Install Redhat/Centos packages"
  when: ansible_os_family == "RedHat"
  block:

    - name: "Stat yum repo config files"
      stat:
        path: "/etc/yum.repos.d/{{ item }}.repo"
      loop: "{{ yum_repo_list|d([]) }}"
      register: yum_config_stats

    ## ref: https://techglimpse.com/failed-metadata-repo-appstream-centos-8/
    - name:  if exists, update yum config mirrorlist
      when: item.stat.exists
      lineinfile:
        dest: "{{ item.stat.path }}"
        backrefs: yes
        regexp: '^mirrorlist(.*)'
        line: '#mirrorlist\1'
        backup: yes
      loop: "{{ yum_config_stats.results }}"
      loop_control:
        label: "{{ item.item }}"

    - name:  if exists, update yum config baseurl
      when: item.stat.exists
      lineinfile:
        dest: "{{ item.stat.path }}"
        backrefs: yes
        regexp: '^#baseurl=http://mirror.centos.org(.*)'
        line: 'baseurl=http://vault.centos.org\1'
        backup: yes
      loop: "{{ yum_config_stats.results }}"
      loop_control:
        label: "{{ item.item }}"

    - name: Update yum repo and cache
      yum:
        name: '*'
        state: latest
        update_cache: yes

- name: "get_cert_facts | Set ca_fetch_domains_list"
  set_fact:
    __common_packages: "{{ common_packages|d([]) + common_packages_custom|d([]) | sort | unique }}"

- debug:
    var: __common_packages

- name: Installing Common Packages
  package:
    name: "{{ __common_packages }}"
    state: latest
#    state: present
#    update_cache: yes

- name: Install common pip libs
  when: common_required_pip_libs|d([])|length>0
  pip:
    name: "{{ common_required_pip_libs }}"
    state: present
    extra_args: --user
    executable: "{{ ansible_pip_interpreter }}"

#- name: Install snap packages
#  when: ansible_distribution in ["Debian", "Ubuntu"]
#  snap:
#      name:
#        - core
#        - jq


#ANSIBLE_DC_REPO="~/repos/ansible/ansible-datacenter"
ANSIBLE_DC_REPO="${HOME}/repos/ansible/ansible-datacenter"

## ref: https://github.com/ansible/ansible/issues/33831
#export ANSIBLE_VAULT_PASSWORD_FILE=~/.vault_pass

if [[ -d "${HOME}/repos/pyutils" ]]; then
    PYUTILS_DIR="${HOME}/repos/pyutils"
elif [[ -d "${HOME}/repos/python/pyutils" ]]; then
    PYUTILS_DIR="${HOME}/repos/python/pyutils"
elif [[ -d "/opt/pyutils" ]]; then
    PYUTILS_DIR="/opt/pyutils"
fi

logDebug "PYUTILS_DIR=[${PYUTILS_DIR}]"

export LANG='en_US.utf-8'

export PYTHON2_HOME=/usr/bin
export PYTHON2_BIN_DIR=$PYTHON2_HOME

export PYTHON3_HOME=/usr/bin
export PYTHON3_BIN_DIR=$PYTHON3_HOME

## ref: https://www.jeffgeerling.com/blog/running-ansible-within-windows
#ANSIBLE=/opt/ansible
#export PATH=$PATH:$ANSIBLE/bin
#export PYTHONPATH=$ANSIBLE/lib
#export ANSIBLE_LIBRARY=$ANSIBLE/library

export PYTHON_VERSION="3"

export EDITOR=/usr/local/bin/emacs

if [[ "$platform" =~ ^(MSYS|MINGW64|MINGW32)$ ]]; then
    logInfo "setting env for MSYS/MINGW platform"

    export GIT_SSH=/usr/bin/ssh

#    export CMAKE_C_COMPILER=/c/apps/msys64/mingw64/bin/gcc
#    export CMAKE_CXX_COMPILER=/c/apps/msys64/mingw64/bin/g++
#    export CC=/c/apps/msys64/mingw64/bin/gcc
#    export CXX=/c/apps/msys64/mingw64/bin/g++
    export CMAKE_C_COMPILER=/usr/bin/gcc
    export CMAKE_CXX_COMPILER=/usr/bin/g++

	## always use /usr/bin unless explicitly overridden in shell
#	if [[ "$platform" =~ ^(MINGW64)$ ]]; then
#		export CMAKE_C_COMPILER=/mingw64/bin/gcc
#		export CMAKE_CXX_COMPILER=/mingw64/bin/g++
#	fi
    export CC=${CMAKE_C_COMPILER}
    export CXX=${CMAKE_CXX_COMPILER}

    #export VSCOMMONTOOLS="/c/Program Files (x86)/Microsoft Visual C++ Build Tools"
    #export VSCOMMONTOOLS=`echo "/$VSCOMMONTOOLS" | sed -e 's/\\/\//g' -e 's/://'`
    export VSCOMMONTOOLS_MSYS=$(echo "/$VSCOMMONTOOLS" | sed -e 's/\\/\//g' -e 's/://')

    export WINDOWS_APPS_BINDIR=${HOME}/AppData/Local/Microsoft/WindowsApps

    export PYTHON2_HOME=/usr/bin
    export PYTHON2_BIN_DIR=$PYTHON2_HOME
    export PYTHON2_USER_SCRIPTDIR=${HOME}/AppData/Roaming/Python/Python27/Scripts

    export PYTHON3_HOME=/mingw64/bin
    export PYTHON3_BIN_DIR=$PYTHON3_HOME

    export PYTHON2_HOME_WIN=/c/apps/winpython2.07
    export PYTHON2_BIN_DIR_WIN=${PYTHON2_HOME_WIN}/python-2.7.13.amd64

#    export PYTHON3_HOME_WIN=/c/apps/python37
#    export PYTHON3_BIN_DIR_WIN=$PYTHON3_HOME_WIN/python-3.7.4.amd64
#    export PYTHON3_USER_SCRIPTDIR=${HOME}/AppData/Roaming/Python/Python37/Scripts
    export PYTHON3_HOME_WIN=/c/apps/winpython3.10.20
    export PYTHON3_BIN_DIR_WIN=${PYTHON3_HOME_WIN}/python-3.10.2.amd64
    export PYTHON3_USER_SCRIPTDIR=${PYTHON3_HOME_WIN}/Scripts

    #export MSYS_HOME=/c/apps/msys64
    export MINGW_HOME=/mingw64

    #export JAVA_HOME=/c/apps/java/jre8
#    [[ -z $JAVA_HOME ]] && export JAVA_HOME=/c/apps/Java/jdk1.8.0_231
#    export JAVA_HOME=/c/apps/Java/jdk1.8.0_231
#    export JAVA_HOME=/c/apps/Java/jre1.6
    export JAVA_HOME=/c/apps/Java/jre1.8.0_231
#    export M2_HOME=/c/apps/apache-maven-3.5.2
    export M2_HOME=/c/apps/apache-maven-3.6.3

    export JYTHON_HOME=/c/apps/jython/jython2.7.0
    export MONGODB=/c/apps/mongodb3.3.8

    export CHOCOLATEYINSTALL=/c/ProgramData/Chocolatey
	export SCOOP_HOME=${HOME}/scoop

    export METEORINSTALL=/c/Users/Lee/AppData/Local/.meteor
#    export RUBYINSTALL=/c/apps/Ruby25-x64

#    export EDITOR=/c/apps/notepad++/notepad++.exe
    export EDITOR=/usr/bin/emacs

	DOCKER_HOME="/c/Program Files/Docker/Docker/resources"
	DOCKER_BIN=$DOCKER_HOME/bin

#    export DOCKER_TOOLBOX_INSTALL_PATH="/c/Program Files/Docker Toolbox"
#    export DOCKER_HOME=$DOCKER_TOOLBOX_INSTALL_PATH
#    export DOCKER_VM_IP=192.168.99.102

#    export DOCKER_TLS_VERIFY="1"
#    export DOCKER_HOST="tcp://192.168.99.102:2376"
#    export DOCKER_CERT_PATH="C:\Users\Lee\.docker\machine\machines\default"
#    export DOCKER_MACHINE_NAME="default"
#    export COMPOSE_CONVERT_WINDOWS_PATHS="true"

#    eval $("/c/Program Files/Docker Toolbox/docker-machine.exe" env default)
#    eval $("${DOCKER_TOOLBOX_INSTALL_PATH}/docker-machine.exe" env default)
#    eval $("C:\Program Files\Docker Toolbox\docker-machine.exe" env default)

	export HEROKU_HOME=/c/Program\ Files/Heroku

	## setting POSTGRES DB env
	export PGHOME="/C/Program Files/PostgreSQL/10"
	export PGDATA="/C/Program Files/PostgreSQL/10/data"
	export PGDATABASE=postgres
	export PGUSER=postgres
	export PGPORT=5432
	export PGLOCALEDIR="$PGHOME/share/locale"

	export VAGRANT_HOME="/c/apps/HashiCorp/Vagrant"
	export VAGRANT_DEFAULT_PROVIDER="virtualbox"
	export GOLANG_HOME="/c/apps/Go"
    export GOLANG_LOCAL_HOME="${HOME}/go"

	export POSH_HOME="/c/Windows/System32/WindowsPowerShell/v1.0"
	export DIG_HOME="/c/apps/dig"

    logDebug "setting PATH for MSYS/MINGW platform"
    ## set user path
#    export PATH=/usr/bin:/usr/local/bin
    export PATH=/usr/local/bin:/usr/bin

    if [[ "$platform" =~ ^(MINGW64)$ ]]; then
      export PATH=/usr/local/bin:/mingw64/bin:/usr/bin
    fi

    export PATH+=:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl
    export PATH+=:/c/Windows/system32
    export PATH+=:$WINDOWS_APPS_BINDIR

    export PATH+=:/c/apps/bin
    export PATH+=:"$HOME/bin"
    # export PATH+=:"/c/apps/7-Zip"
    export PATH+=:"$VSCOMMONTOOLS_MSYS"
    #export PATH+=:/c/apps/nvm
    export PATH+=:"$DOCKER_HOME"
    export PATH+=:"$DOCKER_HOME/bin"
#    export PATH+=:"$HEROKU_HOME/bin"
    export PATH+=:"$PGHOME/bin"

    ## java env
    export PATH+=:$JAVA_HOME/bin
    export PATH+=:$M2_HOME/bin

#    export PATH+=:$MONGODB/bin
#    export PATH+=:$JYTHON_HOME/bin

    ## Chocolatey
    export PATH+=:$CHOCOLATEYINSTALL/bin

    ## SCOOP
    ## ref: https://github.com/lukesampson/scoop/wiki
    export PATH+=:${SCOOP_HOME}/shims

    ## METEOR
    export PATH+=:$METEORINSTALL

    export PATH+=:$VAGRANT_HOME/bin
    export PATH+=:$GOLANG_HOME/bin
    export PATH+=:$GOLANG_LOCAL_HOME/bin

    export PATH+=:$POSH_HOME
    export PATH+=:$DIG_HOME/bin

    ## RUBY + JEKYLL + GEM
#    export PATH+=:$RUBYINSTALL/bin

    ## GIT
#    export PATH+=:/c/apps/git/bin
    #export PATH=/c/apps/git/bin:$PATH

    #export PATH+=:~/.minishift/cache/oc/v1.4.1
    export PATH+=:$MINGW_HOME/bin

    ## MINIKUBE
#    export PATH+=:/c/apps/Kubernetes/Minikube

#    export PATH+=:/c/apps/phantomjs-2.1.1-windows/bin

    ## NODE/NPM
    export PATH+=":/c/Program Files/nodejs"
    export PATH+=:./node_modules/.bin
#    export PATH+=:/c/apps/nodejs
#    export PATH="./node_modules/.bin:${PATH}"
  	export PATH+=":/c/Program Files (x86)/Yarn/bin"

    ## NVM
#    export NVM_DIR="$HOME/.nvm"
#    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
    export NVM_DIR="/c/apps/nvm"
    export NVM_HOME="/c/apps/nvm"
    export NVM_SYMLINK="/c/apps/nodejs"

    export PATH+=":${NVM_DIR}"
    export PATH+=":${NVM_SYMLINK}"

	## windows path env:
#	add_winpath '/proc/registry/HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Control/Session Manager/Environment'
#	add_winpath '/proc/registry/HKEY_CURRENT_USER/Environment'

    # logInfo "setting python env"

    ##setenv-python 2
    ##setenv-python 3
#    setenv-python 3WIN
#    export PYTHON_VERSION="3WIN"

elif [[ "${platform}" == *"DARWIN"* ]]; then
    logInfo "setting path for DARWIN env"

    ## ref: https://apple.stackexchange.com/questions/371997/suppressing-the-default-interactive-shell-is-now-zsh-message-in-macos-catalina
    export BASH_SILENCE_DEPRECATION_WARNING=1
    export EDITOR=/usr/local/bin/emacs
    export VSCODE_SETTINGS_DIR="${HOME}/Library/Application\ Support/Code/User"

# 	export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
  	export PATH=/usr/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
    ## ref: https://www.topbug.net/blog/2013/04/14/install-and-use-gnu-command-line-tools-in-mac-os-x/
    export PATH="$(brew --prefix coreutils)/libexec/gnubin:${PATH}"

    ## ref: https://code.visualstudio.com/docs/setup/mac#_alternative-manual-instructions
    export PATH+=":/Applications/Visual Studio Code.app/Contents/Resources/app/bin"

    ## Add Macports
    export MACPORTS_PREFIX="/opt/local"
    export HOMEBREW_PREFIX="/usr/local"
    export PATH="${MACPORTS_PREFIX}/bin:${MACPORTS_PREFIX}/sbin:${PATH}"
    export MANPATH+=":${MACPORTS_PREFIX}/share/man:${HOMEBREW_PREFIX}/opt/coreutils/libexec/gnuman"

    ## ref: https://stackoverflow.com/questions/52509602/cant-compile-c-program-on-a-mac-after-upgrade-to-mojave
    export CPATH=/Library/Developer/CommandLineTools/usr/include/c++/v1

    ## ref: https://emacsformacosx.com/tips
    ## ref: https://stackoverflow.com/questions/23148787/why-emacsclient-cant-find-socket-after-executing-emacs-daemon/26471957
#     export EMACS_SERVER_FILE="~/.emacs.d/server"
#    export EMACS_SERVER_FILE="/tmp/emacs1000"

    export PYTHON3_HOME=/usr/local/bin
    # setenv-python 3

    ## using pyenv
    ## ref: https://opensource.com/article/19/5/python-3-default-mac
    if command -v pyenv 1>/dev/null 2>&1; then
        eval "$(pyenv init -)"
        PATH=$(pyenv root)/shims:$PATH
    fi

else
    logInfo "setting path for LINUX/Other env"

    if [[ $EUID -eq 0 ]]; then
        #export KUBECONFIG=/opt/openshift/openshift.int.config/master/admin.kubeconfig
        # sudo -H cp /etc/kubernetes/admin.conf $HOME/.kube/config
        # sudo -H cp ~/repos/pyutils/k8s/conf/admin.conf $HOME/.kube/config
        export KUBECONFIG=$HOME/.kube/config
    fi
    if [ $HOSTNAME == "openshift.johnson.int" ]; then
	export OPENSHIFT_INSTALL=/opt/openshift
        export CURL_CA_BUNDLE=/opt/openshift/openshift.int.config/master/ca.crt
    fi

    export ANSIBLE_ROLES_PATH=/etc/ansible/roles:~/.ansible/roles

    export KOLLA_HOME=/data/Iaas/OpenStack

    export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

    export PATH+=:$OPENSHIFT_INSTALL

    # setenv-python 3
fi

setenv-python ${PYTHON_VERSION}

logDebug "more PATH env var updates"

if [ -d "${HOME}/bin" ]; then
    export PATH+=":${HOME}/bin"
fi

#logDebug "PATH=${PATH}"

#export PATH+="node_modules/.bin"
export PATH="./node_modules/.bin:${PATH}"

#export PATH+=:.
export PATH=".:${PATH}"

#logDebug "PATH=${PATH}"

###
###  WORK RELATED
###

RH_VM_GUID=746f
RH_VM_HOST="studentvm.kdtfc.example.opentlc.com"
RH_TARGET_HOST="bastion.746f.example.opentlc.com"

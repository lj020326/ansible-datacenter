---

- name: "Init-Vars | Include OS-specific variables."
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "default.yml"

- name: "Init-Vars | Display bootstrap_ntp__var_source"
  debug:
    var: bootstrap_ntp__var_source
    verbosity: 1

- name: "Init-Vars | Display group_names"
  debug:
    var: group_names
    verbosity: 1

- name: "Init-Vars | Display bootstrap_ntp__allow_networks"
  debug:
    var: bootstrap_ntp__allow_networks
    verbosity: 1

- name: "Init-Vars | Display bootstrap_ntp__servers"
  debug:
    var: bootstrap_ntp__servers

- name: "Init-Vars | Set __bootstrap_ntp__servers"
  set_fact:
    __bootstrap_ntp__servers: "{{ bootstrap_ntp__servers | d(bootstrap_ntp__servers_default) }}"

- name: "Init-Vars | Display __bootstrap_ntp__servers"
  debug:
    var: __bootstrap_ntp__servers

- name: "Init-Vars | Display bootstrap_ntp__var_source"
  debug:
    var: bootstrap_ntp__var_source
    verbosity: 1

- name: "Init-Vars | Display bootstrap_ntp__peers"
  when: bootstrap_ntp__peers|d([])|length>0
  debug:
    var: bootstrap_ntp__peers
    verbosity: 1

- name: "Init-Vars | Display bootstrap_ntp__cmdport_disabled"
  debug:
    var: bootstrap_ntp__cmdport_disabled
    verbosity: 1

- name: "Init-Vars | Display bootstrap_ntp__restrict"
  debug:
    var: bootstrap_ntp__restrict
    verbosity: 1

- name: "Init-Vars | Set __bootstrap_ntp__restrict"
  set_fact:
    __bootstrap_ntp__restrict: "{{ bootstrap_ntp__restrict|d([]) }}"

## https://docs.ansible.com/ansible/latest/collections/ansible/utils/docsite/filters_ipaddr.html#filtering-lists
- name: "Init-Vars | Add bootstrap_ntp__allow_networks to __bootstrap_ntp__restrict by converting the CIDR to netmask"
  when: item | ipaddr('net')| d(False) | bool
  set_fact:
    __bootstrap_ntp__restrict: "{{ __bootstrap_ntp__restrict|d([]) + [ item|ipaddr('network') +' mask ' + item|ipaddr('netmask')|string + ' notrust'] }}"
  loop: "{{ bootstrap_ntp__allow_networks }}"

- name: "Init-Vars | Uniquify __bootstrap_ntp__restrict"
  set_fact:
    __bootstrap_ntp__restrict: "{{ __bootstrap_ntp__restrict|d([]) | sort | unique }}"

- name: "Init-Vars | Display __bootstrap_ntp__restrict"
  debug:
    var: __bootstrap_ntp__restrict
    verbosity: 1

- name: "Init-Vars | Set __bootstrap_ntp__allow_networks"
  set_fact:
    __bootstrap_ntp__allow_networks: "{{ bootstrap_ntp__allow_networks|d([]) }}"

## ref: https://docs.ansible.com/ansible/latest/collections/ansible/utils/docsite/filters_ipaddr.html#filtering-lists
- name: "Init-Vars | Add bootstrap_ntp__restrict to __bootstrap_ntp__allow_networks by converting the netmask to CIDR"
  when: item | ipaddr('net')| d(False) | bool
  set_fact:
    __bootstrap_ntp__allow_networks: "{{ __bootstrap_ntp__allow_networks|d([])
      + [ item | regex_replace('(.*) mask ([.0-9]+)\\s?(.*)', '\\1/\\2') | ipaddr('network/prefix') ] }}"
  loop: "{{ bootstrap_ntp__restrict }}"

- name: "Init-Vars | Uniquify __bootstrap_ntp__allow_networks"
  set_fact:
    __bootstrap_ntp__allow_networks: "{{ __bootstrap_ntp__allow_networks|d([]) | sort | unique }}"

- name: "Init-Vars | Display __bootstrap_ntp__allow_networks"
  debug:
    var: __bootstrap_ntp__allow_networks
    verbosity: 1

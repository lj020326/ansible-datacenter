---

- name: Include OS-specific variables.
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "default.yml"

- name: Display bootstrap_ntp_servers
  debug:
    var: bootstrap_ntp_servers

- name: Display bootstrap_ntp_peers
  when: bootstrap_ntp_peers|d([])|length>0
  debug:
    var: bootstrap_ntp_peers

- name: Display bootstrap_ntp_cmdport_disabled
  debug:
    var: bootstrap_ntp_cmdport_disabled

- name: Set the bootstrap_ntp_driftfile variable.
  when: bootstrap_ntp_driftfile is not defined
  set_fact:
    bootstrap_ntp_driftfile: "{{ __bootstrap_ntp_driftfile }}"

- name: Set the bootstrap_ntp_package variable.
  when: bootstrap_ntp_package is not defined
  set_fact:
    bootstrap_ntp_package: "{{ __bootstrap_ntp_package }}"

- name: Set the bootstrap_ntp_config_file variable.
  when: bootstrap_ntp_config_file is not defined
  set_fact:
    bootstrap_ntp_config_file: "{{ __bootstrap_ntp_config_file }}"

- name: Set the bootstrap_ntp_daemon variable.
  when: bootstrap_ntp_daemon is not defined
  set_fact:
    bootstrap_ntp_daemon: "{{ __bootstrap_ntp_daemon }}"

- name: Ensure NTP package is installed.
  package:
    name: "{{ bootstrap_ntp_package }}"
    state: present

- name: Ensure tzdata package is installed (Linux).
  when: ansible_system == "Linux"
  package:
    name: "{{ bootstrap_ntp_tzdata_package }}"
    state: present

- name: Set timezone.
  timezone:
    name: "{{ bootstrap_ntp_timezone }}"
  notify: restart cron

- name: Populate service facts.
  service_facts:

- name: Disable systemd-timesyncd if it's running but ntp is enabled.
  when:
    - bootstrap_ntp_enabled | bool
    - '"systemd-timesyncd.service" in services'
    - services["systemd-timesyncd.service"]["status"] != "not-found"
  service:
    name: systemd-timesyncd.service
    enabled: false
    state: stopped

- name: Ensure NTP is stopped and disabled as configured.
  when: not (bootstrap_ntp_enabled | bool)
  ignore_errors: yes
  service:
    name: "{{ bootstrap_ntp_daemon }}"
    state: stopped
    enabled: false

- name: Generate ntp configuration file.
  when: bootstrap_ntp_manage_config | bool
  template:
    src: "{{ bootstrap_ntp_config_file | basename }}.j2"
    dest: "{{ bootstrap_ntp_config_file }}"
    mode: 0644
    backup: yes
  notify: restart ntp

- name: Ensure NTP is running and enabled as configured.
  when: bootstrap_ntp_enabled | bool
  service:
    name: "{{ bootstrap_ntp_daemon }}"
    state: started
    enabled: true


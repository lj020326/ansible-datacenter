---

- name: "Display group_names"
  debug:
    var: group_names

## https://iautomatelinux.wordpress.com/2019/03/27/ansible-getting-list-of-failed-hosts-and-using-in-a-subsequent-play/
- name: "Ping test via module"
  block:

    ## Since this is a ping test, we do not rely on gathered facts
    ## MUST - so we use static inventory groups to determine ping type
    - name: "Ping test via module ping"
      when: group_names | intersect(['linux','dc_os_linux','vmware_vsphere']) | list | length>0
      action: ping
      register: ping_test
      changed_when: no

    - name: "Ping test via module win_ping"
      when: "'windows' in group_names"
      action: win_ping
      register: winping_test
      changed_when: no

    ## https://docs.ansible.com/ansible/latest/network/user_guide/platform_index.html#settings-by-platform
    ## https://github.com/ansible/ansible/blob/devel/docs/docsite/rst/network/user_guide/platform_index.rst
    ## https://www.reddit.com/r/ansible/comments/9dn5ff/possible_values_for_ansible_network_os/
    - name: "Ping test via module net_ping"
      delegate_to: localhost
      when:
        - ping_test.skipped|d(false) or ping_test.failed|d(false)
        - winping_test.skipped|d(false) or winping_test.failed|d(false)
      net_ping:
        dest: "{{ ansible_host }}"
      register: netping_test
      changed_when: no

    - name: display ping test results
      debug:
        msg:
          - "ping_test={{ ping_test | to_nice_json }}"
          - "winping_test={{ winping_test | to_nice_json }}"
          - "netping_test={{ netping_test | to_nice_json }}"

    - name: "Setting ping_failed[1]"
##      delegate_to: localhost
      connection: local
      when:
        - not item.skipped|d(false)
      set_fact:
        ping_failed: "{{ item.unreachable|d(item.failed)|d(true) }}"
      loop:
        - "{{ ping_test }}"
        - "{{ winping_test }}"
        - "{{ netping_test }}"

  rescue:

    - name: "Additional tests via CLI"
      block:

        - name: ping test via CLI
          delegate_to: localhost
          become: yes
          command: "ping -c 1 -w 2 {{ ansible_host }}"
          register: ping_cli_test
          changed_when: no

        - name: "Setting ping_failed"
          set_fact:
            ping_failed: "{{ ping_cli_test.failed }}"

- name: Set ping_failed
  set_fact:
    ping_failed: "{{ ping_failed|d(true) }}"

- name: Display ping_failed
  debug:
    var: ping_failed

## ref: https://github.com/lj020326/ansible-datacenter/blob/main/docs/ansible-unreachable-host-handling.md
- name: "Preliminary pre-check connection test host info"
  run_once: true
  connection: local
  delegate_to: localhost
  block:

    - name: "Set unreachable_hosts"
      when: hostvars[item].ping_failed|d(true)
      set_fact:
        unreachable_hosts: "{{ unreachable_hosts|d([]) + [item] }}"
      loop: "{{ ansible_play_hosts_all }}"

    - name: "Display pre-check connection info"
      debug:
        msg:
          - "ansible_play_hosts_all={{ ansible_play_hosts_all }}"
          - "ansible_play_hosts={{ ansible_play_hosts }}"
          - "unreachable_hosts={{ unreachable_hosts|d([]) }}"

    - name: "Add unreachable_hosts to group 'node_offline'"
      when: unreachable_hosts|d([])|length>0
      add_host:
        name: "{{ item }}"
        groups: node_offline
      loop: "{{ unreachable_hosts }}"

    - name: "Display nodes in groups['node_offline']"
      debug:
        var: groups['node_offline']

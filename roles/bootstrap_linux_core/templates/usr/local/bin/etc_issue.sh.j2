#!/bin/sh

#Debug
#env > /var/tmp/env-$$; echo x $TERMCAP x $MC_TMPDIR x "$SUDO_COMMAND" x "$-" x "$MY_ETC_ISSUE_FILE" x "$DISPLAY" >> /var/tmp/env-$$

# Ship execution for "sudo"/"screen"/"mc" or if shell is not interactive and ETC_ISSUE_FILE is set to "/etc/issue" (this happens during boot)
[[ $TERMCAP =~ screen ]] || [ -n "$MC_TMPDIR" ] || [ -n "$SUDO_COMMAND" ] || ( [[ ! "$-" =~ "i" ]] && [ "$MY_ETC_ISSUE_FILE" != "/etc/issue" ] ) || [[ "$DISPLAY" =~ ":" ]] && return

#If ETC_ISSUE_FILE is not defined as environment then the output of this script is displayed (used during user login)
#If ETC_ISSUE_FILE is defined as environment then /etc/issue is updated (used during boot) [only root]

TMP_FILE=`mktemp --suffix=_etc_issue`
MY_ETC_ISSUE_FILE="${ETC_ISSUE_FILE:-$TMP_FILE}"

DEV=$(/sbin/ip r | awk '/^default/ { print $5}')

echo > $MY_ETC_ISSUE_FILE
[ $MY_ETC_ISSUE_FILE = "/etc/issue" ] || [ $USER = "root" ] && echo "* Server: $(dmidecode --string system-manufacturer) - $(dmidecode --string system-product-name)" >> $MY_ETC_ISSUE_FILE
grep -q "localhost.localdomain" /proc/sys/kernel/hostname || echo "* Hostname: $(hostname --short), Domain: $(hostname --domain), FQDN: $(hostname --fqdn)" >> $MY_ETC_ISSUE_FILE
[ -z $DEV ] || echo "* IP: $(/sbin/ip route get 1 | awk '{print $NF;exit}'), MAC: $(cat /sys/class/net/$DEV/address), GW: $(/sbin/ip -4 route list 0/0 | head -1 | awk "{ print \$3 }")" >> $MY_ETC_ISSUE_FILE
echo "* OS: $(cat /etc/redhat-release) {{ ansible_architecture }}" >> $MY_ETC_ISSUE_FILE
echo "* CPU: $(grep -i processor /proc/cpuinfo | wc -l) x$(grep 'model name' /proc/cpuinfo | uniq |awk -F":" '{print $2}')" >> $MY_ETC_ISSUE_FILE

if [ -z "$ETC_ISSUE_FILE" ]; then
  uptime=$(</proc/uptime)
  uptime=${uptime%%.*}

  seconds=$(( uptime%60 ))
  minutes=$(( uptime/60%60 ))
  hours=$(( uptime/60/60%24 ))
  days=$(( uptime/60/60/24 ))

{% if ansible_distribution_major_version|int <= 6 %}
  MEM_TOTAL=`free -m | awk '/^Mem:/ { print $2 }'`
  MEM_FREE=`free -m | awk '/^\-\/\+ buffers\/cache:/ { print $4 }'`
{% else %}
  MEM_TOTAL=`free -m | awk '/^Mem:/ { print $2 }'`
  MEM_FREE=`free -m | awk '/^Mem:/ { print $7 }'`
{% endif %}
  MEM_USED=$((MEM_TOTAL-MEM_FREE))
  MEM_USED_PERCENT=$((100-$MEM_FREE*100/$MEM_TOTAL))

  echo "* Uptime: $days days, $hours hours, $minutes minutes, $seconds seconds" >> $MY_ETC_ISSUE_FILE
  echo "* Load: $(awk '{ printf "1min: %s, 5min: %s, 15min: %s",$1,$2,$3; }' /proc/loadavg)" >> $MY_ETC_ISSUE_FILE
  echo "* Mem: Total: ${MEM_TOTAL}MB, Used: ${MEM_USED}MB [${MEM_USED_PERCENT}%], Free: ${MEM_FREE}MB" >> $MY_ETC_ISSUE_FILE
  echo "* /: $(df -h / | awk 'NR==2 { printf "Total: %sB, Used: %sB [%i%], Free: %sB",$2,$3,100-$4*100/$2,$4; }')" >> $MY_ETC_ISSUE_FILE
fi

echo >> $MY_ETC_ISSUE_FILE

if grep -q "localhost.localdomain" /proc/sys/kernel/hostname; then
  {% if ansible_distribution_major_version|int <= 6 %}
  echo "! Change the HOSTNAME in /etc/sysconfig/network" >> $MY_ETC_ISSUE_FILE
  {% else %}
  echo "! Change the hostname by running \"hostnamectl set-hostname myhost.example.com\" !" >> $MY_ETC_ISSUE_FILE
  {% endif %}
  echo "! Please add \"10.0.0.100 myhost.example.com myhost\" to /etc/hosts !" >> $MY_ETC_ISSUE_FILE
  echo >> $MY_ETC_ISSUE_FILE
fi

[ -z "$ETC_ISSUE_FILE" ] && cat $TMP_FILE
rm -f $TMP_FILE

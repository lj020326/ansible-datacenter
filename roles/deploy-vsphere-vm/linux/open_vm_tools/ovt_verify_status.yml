---
# Description:
#   This test case is to verify open-vm-tools status, process status, and service status. If open-vm-tools is installed. open-vm-tools status
# should be installed and running, vmtoolsd processes' should be running and service should be enabled and running.
#
- name: ovt_verify_status
  hosts: localhost
  gather_facts: false
  vars_files:
    - "{{ testing_vars_file | default('../../vars/test.yml') }}"
  tasks:
    - block:
        - ansible.builtin.include_tasks: ../setup/test_setup.yml

        - ansible.builtin.include_tasks: ../../common/skip_test_case.yml
          vars:
            skip_msg: "Skip test case due to VMware tools installed: {{ vmtools_is_installed | default(false) }}"
            skip_reason: "Not Applicable"
          when: vmtools_is_installed is undefined or not vmtools_is_installed

        # Check VMware Tools status is running
        - ansible.builtin.include_tasks: check_vmtools_status.yml
          vars:
            expected_vmtools_status: "running"

        # Set the fact of open-vm-tools processes and services
        - ansible.builtin.include_tasks: ../utils/set_ovt_facts.yml

        # Add user 'vmware' to check vmusr process
        - block:
            - ansible.builtin.include_tasks: ../utils/add_user.yml
              vars:
                os_username: "vmware"

            - ansible.builtin.include_tasks: ../utils/enable_auto_login.yml
              vars:
                autologin_user: "vmware"

            # Reboot to make changes take effect and wait for tools running
            - ansible.builtin.include_tasks: ../utils/reboot.yml
          when: "'open-vm-tools-desktop' in ovt_packages"

        # Check open-vm-tools packages are installed
        - ansible.builtin.include_tasks: check_ovt_package.yml
          vars:
            expected_package_state: "present"
          with_items: "{{ ovt_packages }}"
          loop_control:
            loop_var: package_name
          when: "'Flatcar' not in guest_os_ansible_distribution"

        # Check open-vm-tools processes are running
        - ansible.builtin.include_tasks: ../utils/check_process_status.yml
          vars:
            expected_process_state: "present"
            process_uid: "{{ ovt_process.uid }}"
            process_name: "{{ ovt_process.cmd }}"
          with_items: "{{ ovt_processes }}"
          loop_control:
            loop_var: ovt_process

        # Check open-vm-tools services are running
        - ansible.builtin.include_tasks: ../utils/check_service_status.yml
          vars:
            service_name: "{{ ovt_service }}"
            expected_service_state: "running"
            expected_service_status: "enabled"
      rescue:
        - ansible.builtin.include_tasks: ../../common/test_rescue.yml

---
- name: "Set fact of timestamp"
  ansible.builtin.set_fact:
    new_device_timestamp: "{{ lookup('pipe', 'date +%Y-%m-%d-%H-%M-%S') }}"
- name: "Set fact of new vSwitch and portgroup names"
  ansible.builtin.set_fact:
    new_device_vswitch: "vSwitch{{ new_device_timestamp }}"
    new_device_pg: "vSwitch{{ new_device_timestamp }}_PG"
- include_tasks: ../../common/esxi_add_vswitch.yml
  vars:
    vswitch_name: "{{ new_device_vswitch }}"
- include_tasks: ../../common/esxi_add_portgroup.yml
  vars:
    vswitch_name: "{{ new_device_vswitch }}"
    portgroup_name: "{{ new_device_pg }}"
- name: "Pause 5 seconds after new portgroup added"
  ansible.builtin.pause:
    seconds: 5
  when:
    - new_portgroup is defined
    - new_portgroup.changed

# Add a new pvscsi controller to VM
- include_tasks: ../../common/vm_hot_add_remove_disk_ctrl.yml
  vars:
    disk_controller_ops: "present"
    disk_controller_type: "paravirtual"
- name: "Check add new pvscsi controller config changes"
  ansible.builtin.assert:
    that:
      - disk_controller_facts is defined
      - disk_controller_facts.changed
    fail_msg: "Add new pvscsi controller task result 'changed' is not true."

# Add a new vmxnet3 network adapter to VM
- include_tasks: ../../common/vm_add_network_adapter.yml
  vars:
    adapter_type: "vmxnet3"
    portgroup_name: "{{ new_device_pg }}"
    network_connected: false
    network_start_connected: false
- name: "Check add new network adapter config changes"
  ansible.builtin.assert:
    that:
      - add_adapter is defined
      - add_adapter.changed
    fail_msg: "Add new network adapter task result 'changed' is not true."

# Get new added network adapter MAC address
- name: "Set fact of new added network adapter MAC address"
  ansible.builtin.set_fact:
    new_network_adapter_mac: "{{ (add_adapter.diff.after.keys() | difference(add_adapter.diff.before.keys()))[0] }}"
  when:
    - add_adapter.diff.after.keys() | length == add_adapter.diff.before.keys() | length + 1
- name: "Check getting new network adapter MAC address"
  ansible.builtin.assert:
    that:
      - new_network_adapter_mac is defined
      - new_network_adapter_mac
    fail_msg: "Not get new added network adapter MAC address."

# Get loaded pvscsi and vmxnet3 driver version
- include_tasks: ../utils/win_get_device_driver.yml
  vars:
    win_device_desc_keyword: 'pvscsi'
- name: "Set fact of the loaded pvscsi driver info"
  ansible.builtin.set_fact:
    win_pvscsi_before_uninstall: "{{ win_guest_device_driver }}"

- include_tasks: ../utils/win_get_device_driver.yml
  vars:
    win_device_desc_keyword: 'vmxnet3'
- name: "Set fact of the loaded vmxnet3 driver info"
  ansible.builtin.set_fact:
    win_vmxnet3_before_uninstall: "{{ win_guest_device_driver }}"

# Check no problem device
- include_tasks: ../utils/win_get_problem_device.yml
- name: "Check no problem device listed"
  ansible.builtin.assert:
    that:
      - gos_has_problem_device is defined
      - not gos_has_problem_device
    fail_msg: "Problem devices were found in guest before VMware Tools uninstall, please check listed problem devices: {{ gos_problem_device_list }}"

# Get installed pvscsi and vmxnet3 installers info
- include_tasks: ../utils/win_get_pvscsi_vmxnet3_installers.yml

- name: "Check pvscsi and vmxnet3 driver info retrieved"
  ansible.builtin.assert:
    that:
      - win_pvscsi_before_uninstall | length > 0
      - win_vmxnet3_before_uninstall | length > 0
      - win_pvscsi_vmxnet3_installers.pvscsi is defined
      - win_pvscsi_vmxnet3_installers.pvscsi | length > 0
      - win_pvscsi_vmxnet3_installers.vmxnet3 is defined
      - win_pvscsi_vmxnet3_installers.vmxnet3 | length > 0
    fail_msg: "Not get loaded pvscsi driver info '{{ win_pvscsi_before_uninstall }}', or vmxnet3 driver info '{{ win_vmxnet3_before_uninstall }}', or pvscsi and vmxnet3 installers info '{{ win_pvscsi_vmxnet3_installers }}' before uninstalling VMware Tools."

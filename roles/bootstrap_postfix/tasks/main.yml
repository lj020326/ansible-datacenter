---
- name: Display bootstrap_postfix__debug_host_list
  ansible.builtin.debug:
    var: bootstrap_postfix__debug_host_list

- name: Display bootstrap_postfix__raw_options
  ansible.builtin.debug:
    var: bootstrap_postfix__raw_options

- name: Display key role vars
  ansible.builtin.debug:
    msg:
      - "bootstrap_postfix__default_database_type={{ bootstrap_postfix__default_database_type }}"
      - "bootstrap_postfix__default_database_type={{ bootstrap_postfix__default_database_type }}"
      - "bootstrap_postfix__sender_canonical_maps_database_type={{ bootstrap_postfix__sender_canonical_maps_database_type }}"
      - "bootstrap_postfix__recipient_canonical_maps_database_type={{ bootstrap_postfix__recipient_canonical_maps_database_type }}"
      - "bootstrap_postfix__transport_maps_database_type={{ bootstrap_postfix__transport_maps_database_type }}"
      - "bootstrap_postfix__smtp_header_checks_database_type={{ bootstrap_postfix__smtp_header_checks_database_type }}"
      - "bootstrap_postfix__smtp_generic_maps_database_type={{ bootstrap_postfix__smtp_generic_maps_database_type }}"

- name: Ensure postfix is installed.
  ansible.builtin.package:
    name: "{{ bootstrap_postfix__service_packages }}"
    state: present

## ref: https://www.tecmint.com/find-postfix-mail-server-version-in-linux/
## ref: https://www.howtoforge.com/faq/how-to-find-out-the-postfix-version
- name: Get __postfix_installed_version_info
  ansible.builtin.command: postconf -d mail_version
  register: __postfix_installed_version_info
  changed_when: false

- name: Display __postfix_installed_version_info
  ansible.builtin.debug:
    var: __postfix_installed_version_info

#- name: "Set __postfix_installed_version"
#  ansible.builtin.set_fact:
#    __postfix_installed_version: "{{ __postfix_installed_version_info.stdout | regex_replace('^.* ([0-9\.]+)$', '\\1') }}"

- name: Set __postfix_installed_version
  when:
    - __postfix_installed_version_info.stdout is defined
    - __postfix_installed_version_info.stdout | length > 0
  ansible.builtin.set_fact:
    __postfix_installed_version: "{{ __postfix_installed_version_info.stdout | regex_search('(\\d+(\\.\\d+)+)') }}"

- name: Display __postfix_installed_version
  ansible.builtin.debug:
    var: __postfix_installed_version

- name: Ensure /etc/postfix
  ansible.builtin.file:
    path: /etc/postfix
    state: directory
    mode: "0755"

## ref: https://forum.centos-webpanel.com/updates/postfix-mailserver-not-starting/
- name: Ensure /etc/postfix/postfix-files
  ansible.builtin.file:
    path: /etc/postfix
    state: touch
    mode: "0640"

- name: Find existing postfix hash db files
  ansible.builtin.find:
    paths: /etc/postfix
    patterns: "*.db"
  register: __postfix_hashmap_db_files

- name: Remove old/existing postfix hash db files
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ __postfix_hashmap_db_files.files }}"

- name: Configure mailname
  ansible.builtin.template:
    src: "{{ bootstrap_postfix__mailname_file.lstrip('/') }}.j2"
    dest: "{{ bootstrap_postfix__mailname_file }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ bootstrap_postfix__backup_configs | d(True) | bool }}"
  notify: restart_postfix

- name: Update {{ bootstrap_postfix__main_cf | basename }} configuration file
  ansible.builtin.template:
    src: "{{ bootstrap_postfix__main_cf.lstrip('/') }}.j2"
    dest: "{{ bootstrap_postfix__main_cf }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ bootstrap_postfix__backup_configs | d(True) | bool }}"
  notify: restart_postfix

- name: Update {{ bootstrap_postfix__master_cf | basename }} configuration file
  ansible.builtin.template:
    src: "{{ bootstrap_postfix__master_cf.lstrip('/') }}.j2"
    dest: "{{ bootstrap_postfix__master_cf }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ bootstrap_postfix__backup_configs | d(True) | bool }}"
  notify: restart_postfix

- name: Configure {{ bootstrap_postfix__sasl_passwd_file }}
  when:
    - bootstrap_postfix__relayhost | length
    - bootstrap_postfix__sasl_auth_enable | bool
  changed_when: true
  ansible.builtin.template:
    src: "{{ bootstrap_postfix__sasl_passwd_file.lstrip('/') }}.j2"
    dest: "{{ bootstrap_postfix__sasl_passwd_file }}"
    owner: root
    group: root
    mode: "0600"
    backup: "{{ bootstrap_postfix__backup_configs | d(True) | bool }}"
    force: true
  no_log: "{{ not ansible_check_mode }}"
  notify:
    - postmap_sasl_passwd
    - restart_postfix

- name: Configure {{ bootstrap_postfix__tls_policy_file }}
  when:
    - bootstrap_postfix__relayhost | length
    - bootstrap_postfix__sasl_auth_enable | bool
  changed_when: true
  ansible.builtin.template:
    src: "{{ bootstrap_postfix__tls_policy_file.lstrip('/') }}.j2"
    dest: "{{ bootstrap_postfix__tls_policy_file }}"
    owner: root
    group: root
    mode: "0600"
    backup: "{{ bootstrap_postfix__backup_configs | d(True) | bool }}"
  no_log: "{{ not ansible_check_mode }}"
  notify: restart_postfix

- name: Configure {{ bootstrap_postfix__aliases_file }}
  changed_when: true
  ansible.builtin.template:
    src: "{{ bootstrap_postfix__aliases_file.lstrip('/') }}.j2"
    dest: "{{ bootstrap_postfix__aliases_file }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ bootstrap_postfix__backup_configs | d(True) | bool }}"
    force: true
  notify:
    - new_aliases
    - restart_postfix

- name: Configure {{ bootstrap_postfix__virtual_aliases_file }}
  when: bootstrap_postfix__virtual_aliases|length>0
  vars:
    __bootstrap_postfix__canonical_maps: "{{ bootstrap_postfix__virtual_aliases }}"
  changed_when: true
  ansible.builtin.template:
    src: "{{ bootstrap_postfix__canonical_maps_file.lstrip('/') }}.j2"
    dest: "{{ bootstrap_postfix__virtual_aliases_file }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ bootstrap_postfix__backup_configs | d(True) | bool }}"
    force: true
  notify:
    - new_virtual_aliases
    - restart_postfix

- name: Configure {{ bootstrap_postfix__sender_canonical_maps_file }}
  when: bootstrap_postfix__sender_canonical_maps|length>0
  vars:
    __bootstrap_postfix__canonical_maps: "{{ bootstrap_postfix__sender_canonical_maps }}"
    __bootstrap_postfix__canonical_maps_type: "{{ bootstrap_postfix__sender_canonical_maps_database_type }}"
  changed_when: true
  ansible.builtin.template:
    src: "{{ bootstrap_postfix__canonical_maps_file.lstrip('/') }}.j2"
    dest: "{{ bootstrap_postfix__sender_canonical_maps_file }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ bootstrap_postfix__backup_configs | d(True) | bool }}"
    force: true
  notify:
    - postmap_sender_canonical_maps
    - restart_postfix

- name: Configure {{ bootstrap_postfix__recipient_canonical_maps_file }}
  when: bootstrap_postfix__recipient_canonical_maps|length>0
  vars:
    __bootstrap_postfix__canonical_maps: "{{ bootstrap_postfix__recipient_canonical_maps }}"
  changed_when: true
  ansible.builtin.template:
    src: "{{ bootstrap_postfix__canonical_maps_file.lstrip('/') }}.j2"
    dest: "{{ bootstrap_postfix__recipient_canonical_maps_file }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ bootstrap_postfix__backup_configs | d(True) | bool }}"
    force: true
  notify:
    - postmap_recipient_canonical_maps
    - restart_postfix

- name: Configure {{ bootstrap_postfix__transport_maps_file }}
  when: bootstrap_postfix__transport_maps|length>0
  vars:
    __bootstrap_postfix__canonical_maps: "{{ bootstrap_postfix__transport_maps }}"
  changed_when: true
  ansible.builtin.template:
    src: "{{ bootstrap_postfix__canonical_maps_file.lstrip('/') }}.j2"
    dest: "{{ bootstrap_postfix__transport_maps_file }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ bootstrap_postfix__backup_configs | d(True) | bool }}"
    force: true
  notify:
    - postmap_transport_maps
    - restart_postfix

- name: Configure {{ bootstrap_postfix__sender_dependent_relayhost_maps_file }}
  when: bootstrap_postfix__sender_dependent_relayhost_maps|length>0
  vars:
    __bootstrap_postfix__canonical_maps: "{{ bootstrap_postfix__sender_dependent_relayhost_maps }}"
  changed_when: true
  ansible.builtin.template:
    src: "{{ bootstrap_postfix__canonical_maps_file.lstrip('/') }}.j2"
    dest: "{{ bootstrap_postfix__sender_dependent_relayhost_maps_file }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ bootstrap_postfix__backup_configs | d(True) | bool }}"
    force: true
  notify:
    - postmap_sender_dependent_relayhost_maps
    - restart_postfix

- name: Configure {{ bootstrap_postfix__smtp_generic_maps_file }}
  when: bootstrap_postfix__smtp_generic_maps|length>0
  vars:
    __bootstrap_postfix__canonical_maps: "{{ bootstrap_postfix__smtp_generic_maps }}"
  changed_when: true
  ansible.builtin.template:
    src: "{{ bootstrap_postfix__canonical_maps_file.lstrip('/') }}.j2"
    dest: "{{ bootstrap_postfix__smtp_generic_maps_file }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ bootstrap_postfix__backup_configs | d(True) | bool }}"
  notify:
    - postmap_generic
    - restart_postfix

- name: Configure {{ bootstrap_postfix__smtp_header_checks_file }}
  when: bootstrap_postfix__smtp_header_checks|length>0
  changed_when: true
  ansible.builtin.template:
    src: "{{ bootstrap_postfix__smtp_header_checks_file.lstrip('/') }}.j2"
    dest: "{{ bootstrap_postfix__smtp_header_checks_file }}"
    owner: root
    group: root
    mode: "0644"
    backup: "{{ bootstrap_postfix__backup_configs | d(True) | bool }}"
  notify:
    - restart_postfix

- name: Ensure postfix is started and enabled at boot.
  ansible.builtin.service:
    name: "{{ bootstrap_postfix__service_name }}"
    state: "{{ bootstrap_postfix__service_state }}"
    enabled: "{{ bootstrap_postfix__service_enabled }}"

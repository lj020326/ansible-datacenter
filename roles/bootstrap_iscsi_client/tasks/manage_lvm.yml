---
- name: Printing related variables
  ansible.builtin.debug:
    msg: "{{ item.key }}={{ item.value }}"
  loop:
    - { key: iscsi__logical_volumes, value: "{{ bootstrap_iscsi_client__logical_volumes }}" }
    - { key: iscsi__register_targets, value: "{{ bootstrap_iscsi_client__register_targets }}" }

- name: Unmount filesystems if requested
  ansible.posix.mount:
    name: "{{ item.mount }}"
    src: '{{ "/dev/mapper/" + item.vg + "-" + item.lv }}'
    fstype: "{{ item.fs_type | d(bootstrap_iscsi_client__default_fs_type) }}"
    state: absent
  loop: "{{ bootstrap_iscsi_client__logical_volumes }}"
  when: bootstrap_iscsi_client__logical_volumes|d(False) and item.vg|d() and item.lv|d() and item.size|d() and item.mount|d(False) and (item.state is defined and item.state == 'absent')

- name: Remove Logical Volumes if requested
  community.general.lvol:
    vg: "{{ item.vg }}"
    lv: "{{ item.lv }}"
    size: "{{ item.size }}"
    force: "{{ item.force | d(omit) }}"
    state: absent
  loop: "{{ bootstrap_iscsi_client__logical_volumes }}"
  when: bootstrap_iscsi_client__logical_volumes|d(False) and item.vg|d() and item.lv|d() and item.size|d() and item.state|d() and item.state == 'absent'

- name: Manage LVM Volume Groups
  community.general.lvg:
    vg: "{{ item.item.lvm_vg }}"
    pvs: '{{ item.devicenodes      | join(",") }}'
    state: '{{ item.item.lvm_state   | d("present") }}'
    pesize: "{{ item.item.lvm_pesize  | d(omit) }}"
    force: "{{ item.item.lvm_force   | d(omit) }}"
    vg_options: "{{ item.item.lvm_options | d(omit) }}"
  loop: "{{ __iscsi__register_targets.results }}"
  when:
    - __iscsi__register_targets|d(False)
    - __iscsi__register_targets.results|d()
    - item.devicenodes|d()
    - item.item.lvm_vg|d()

- name: Manage LVM Logical Volumes
  community.general.lvol:
    vg: "{{ item.vg }}"
    lv: "{{ item.lv }}"
    size: "{{ item.size }}"
    force: "{{ item.force | d(omit) }}"
    state: present
  loop: "{{ bootstrap_iscsi_client__logical_volumes }}"
  when:
    - bootstrap_iscsi_client__logical_volumes|d(False)
    - item.vg|d()
    - item.lv|d()
    - item.size|d()
    - (item.state is undefined or item.state != 'absent')

- name: Manage filesystems
  community.general.filesystem:
    dev: '{{ "/dev/mapper/" + item.vg + "-" + item.lv }}'
    fstype: "{{ item.fs_type  | d(bootstrap_iscsi_client__default_fs_type) }}"
    force: "{{ item.fs_force | d(omit) }}"
    opts: "{{ item.fs_opts  | d(omit) }}"
  loop: "{{ bootstrap_iscsi_client__logical_volumes }}"
  when:
    - bootstrap_iscsi_client__logical_volumes|d(False)
    - item.vg|d()
    - item.lv|d()
    - item.size|d()
    - item.mount|d()
    - (item.state is undefined or item.state != 'absent')
    - (item.fs is undefined or item.fs|d()) or item.fs|d()))

- name: Manage mount points
  ansible.posix.mount:
    name: "{{ item.mount }}"
    src: '{{ "/dev/mapper/" + item.vg + "-" + item.lv }}'
    fstype: "{{ item.fs_type      | d(bootstrap_iscsi_client__default_fs_type) }}"
    opts: "{{ item.mount_opts   | d(bootstrap_iscsi_client__default_mount_options) }}"
    state: '{{ item.mount_state  | d("mounted") }}'
    dump: "{{ item.mount_dump   | d(omit) }}"
    passno: "{{ item.mount_passno | d(omit) }}"
    fstab: "{{ item.mount_fstab  | d(omit) }}"
  loop: "{{ bootstrap_iscsi_client__logical_volumes }}"
  when:
    - bootstrap_iscsi_client__logical_volumes|d(False)
    - item.vg|d()
    - item.lv|d()
    - item.size|d()
    - item.mount|d(False)
    - (item.state is undefined or item.state != 'absent')

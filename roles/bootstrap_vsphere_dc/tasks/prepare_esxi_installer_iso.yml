---
- name: Get file stat for {{ bootstrap_vsphere_dc__vcenter_repo_dir }}/{{ bootstrap_vsphere_dc__esx_custom_iso }}
  ansible.builtin.stat:
    path: "{{ bootstrap_vsphere_dc__vcenter_repo_dir }}/{{ bootstrap_vsphere_dc__esx_custom_iso }}"
  register: __iso_file

- name: prepare_esxi_installer_iso | Create custom ISO
  when: not __iso_file.stat.exists|bool
  block:
    - name: prepare_esxi_installer_iso | Ensure xorriso is intalled
      ansible.builtin.package:
        name: xorriso
        state: present

    - name: prepare_esxi_installer_iso | Create temporary ESX ISO Directory
      ansible.builtin.file:
        path: "{{bootstrap_vsphere_dc__vcenter_install_tmp_dir}}/ESX"
        state: directory
        mode: "0755"

    - name: prepare_esxi_installer_iso | Fix permissions on {{bootstrap_vsphere_dc__vcenter_install_tmp_dir}}/ESX
      ansible.builtin.file:
        path: "{{bootstrap_vsphere_dc__vcenter_install_tmp_dir}}/ESX"
        mode: +w

    - name: prepare_esxi_installer_iso | Extract ISO image
      ansible.builtin.command: >
        xorriso -ecma119_map lowercase -osirrox on
        -indev {{ bootstrap_vsphere_dc__vcenter_repo_dir }}/{{ bootstrap_vsphere_dc__esx_iso }}
        -extract /
        {{bootstrap_vsphere_dc__vcenter_install_tmp_dir}}/ESX
      changed_when: false

    - name: prepare_esxi_installer_iso | Update permissions on {{bootstrap_vsphere_dc__vcenter_install_tmp_dir}}/ESX
      ansible.builtin.file:
        path: "{{bootstrap_vsphere_dc__vcenter_install_tmp_dir}}/ESX"
        ## ref: https://superuser.com/questions/1024677/ansible-how-to-recursively-set-directory-and-file-permissions
        mode: u=rwX,g=rX,o=rX

    - name: prepare_esxi_installer_iso | Edit boot.cfg for pre 6.7
      ansible.builtin.replace:
        dest: "{{bootstrap_vsphere_dc__vcenter_install_tmp_dir}}/ESX/boot.cfg"
        regexp: kernelopt=runweasel
        replace: kernelopt=ks=cdrom:/KS.CFG

    - name: prepare_esxi_installer_iso | Edit boot.cfg for post 6.7
      ansible.builtin.replace:
        dest: "{{bootstrap_vsphere_dc__vcenter_install_tmp_dir}}/ESX/boot.cfg"
        regexp: kernelopt=cdromBoot runweasel
        replace: kernelopt=cdromBoot ks=cdrom:/KS.CFG

    - name: prepare_esxi_installer_iso | Create empty KS file
      ansible.builtin.file:
        path: "{{bootstrap_vsphere_dc__vcenter_install_tmp_dir}}/ESX/KS.CFG"
        state: touch
        mode: "0644"

    - name: prepare_esxi_installer_iso | Update KS file
      ansible.builtin.blockinfile:
        path: "{{bootstrap_vsphere_dc__vcenter_install_tmp_dir}}/ESX/KS.CFG"
        block: |
          vmaccepteula
          rootpw --iscrypted {{nested_host_credentials.password | password_hash('sha512',65534 | random(seed=bootstrap_vsphere_dc__vsphere_deploy_iso_hash_seed) | string) }}
          install --firstdisk --overwritevmfs --novmfsondisk
          network --bootproto=dhcp --device=vmnic0 --addvmportgroup=0
          reboot

          %firstboot --interpreter=busybox
          vim-cmd hostsvc/enable_ssh
          vim-cmd hostsvc/start_ssh
          vim-cmd hostsvc/enable_esx_shell
          vim-cmd hostsvc/start_esx_shell

    - name: prepare_esxi_installer_iso | Burn an ISO image
      ansible.builtin.command: >
        xorrisofs -relaxed-filenames -J -R
        -o {{ bootstrap_vsphere_dc__vcenter_repo_dir }}/{{bootstrap_vsphere_dc__esx_custom_iso}}
        -b isolinux.bin -c boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table
        {{bootstrap_vsphere_dc__vcenter_install_tmp_dir}}/ESX/
      args:
        chdir: "{{bootstrap_vsphere_dc__vcenter_install_tmp_dir}}/ESX/"
      changed_when: false

    - name: prepare_esxi_installer_iso | Update permissions on {{ bootstrap_vsphere_dc__vcenter_repo_dir }}/{{ bootstrap_vsphere_dc__esx_custom_iso }}
      ansible.builtin.file:
        path: "{{ bootstrap_vsphere_dc__vcenter_repo_dir }}/{{ bootstrap_vsphere_dc__esx_custom_iso }}"
        mode: "755"

    - name: prepare_esxi_installer_iso | Fix permissions before delete on {{bootstrap_vsphere_dc__vcenter_install_tmp_dir}}/ESX
      ansible.builtin.file:
        path: "{{bootstrap_vsphere_dc__vcenter_install_tmp_dir}}/ESX"
        mode: +w
        recurse: true

    - name: prepare_esxi_installer_iso | Clean ESX ISO Directory
      ansible.builtin.file:
        path: "{{ bootstrap_vsphere_dc__vcenter_install_tmp_dir }}/ESX/"
        state: absent

    - name: prepare_esxi_installer_iso | Delete ISO file on a datastore at {{ bootstrap_vsphere_dc__vcenter_iso_dir }}/{{ bootstrap_vsphere_dc__esx_custom_iso }}
      ignore_errors: true # noqa: ignore-errors
      community.vmware.vsphere_file:
        hostname: "{{ bootstrap_vsphere_dc__nested_vcenter.hostname }}"
        username: "{{ bootstrap_vsphere_dc__nested_vcenter.username }}"
        password: "{{ bootstrap_vsphere_dc__nested_vcenter.password }}"
        validate_certs: false
        datacenter: "{{ bootstrap_vsphere_dc__nested_vcenter.datacenter }}"
        datastore: "{{ bootstrap_vsphere_dc__nested_vcenter.datastore }}"
        path: "{{ bootstrap_vsphere_dc__vcenter_iso_dir }}/{{ bootstrap_vsphere_dc__esx_custom_iso }}"
        state: absent

- name: prepare_esxi_installer_iso | Upload the ISO to the Datastore
  community.vmware.vsphere_copy:
    hostname: "{{ bootstrap_vsphere_dc__nested_vcenter.hostname }}"
    username: "{{ bootstrap_vsphere_dc__nested_vcenter.username }}"
    password: "{{ bootstrap_vsphere_dc__nested_vcenter.password }}"
    datacenter: "{{ bootstrap_vsphere_dc__nested_vcenter.datacenter }}"
    validate_certs: false
    datastore: "{{ bootstrap_vsphere_dc__nested_vcenter.datastore }}"
    path: "{{ bootstrap_vsphere_dc__vcenter_iso_dir }}/{{ bootstrap_vsphere_dc__esx_custom_iso }}"
    src: "{{ bootstrap_vsphere_dc__vcenter_repo_dir }}/{{ bootstrap_vsphere_dc__esx_custom_iso }}"

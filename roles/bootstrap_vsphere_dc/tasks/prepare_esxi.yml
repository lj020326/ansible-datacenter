---

- name: Display __esx_hosts_by_name.values()
  ansible.builtin.debug:
    var: __esx_hosts_by_name.values()
    verbosity: 1

- name: Configure VMware vSwitch
  community.vmware.vmware_vswitch:
    hostname: "{{ item.0.hostname }}"
    username: "{{ bootstrap_vsphere_dc__vsphere_credentials[item.0.hostname].username | d(esxi_username) }}"
    password: "{{ bootstrap_vsphere_dc__vsphere_credentials[item.0.hostname].password | d(esxi_password) }}"
    validate_certs: false
    esxi_hostname: "{{ item.0.hostname }}"
    switch: "{{ item.1.switch_name }}"
    nics: "{{ item.1.nics }}"
    teaming: "{{ item.1.teaming | d(omit) }}"
    mtu: "{{ item.1.mtu }}"
#  loop: "{{ bootstrap_vsphere_dc__vcenter_physical_esx_hosts | subelements('switches', { 'skip_missing': true }) }}"
#  loop: "{{ bootstrap_vsphere_dc__vcenter_esx_hosts | subelements('switches', { 'skip_missing': true }) }}"
  loop: "{{ __esx_hosts_by_name.values() | list | subelements('switches', { 'skip_missing': true }) }}"

- name: prepare_esxi | Create physical ESX port groups
  #  when: bootstrap_vsphere_dc__vcenter_ip  ==  vc_mng.ip
  community.vmware.vmware_portgroup:
    hostname: "{{ item.0.hostname }}"
    username: "{{ bootstrap_vsphere_dc__vsphere_credentials[item.0.hostname].username }}"
    password: "{{ bootstrap_vsphere_dc__vsphere_credentials[item.0.hostname].password }}"
    validate_certs: false
    esxi_hostname: "{{ item.0.hostname }}"
    switch_name: "{{ item.1.switch_name }}"
    portgroup_name: "{{ item.1.portgroup_name }}"
    vlan_id: "{{ item.1.vlan_id }}"
    network_policy: "{{ item.1.network_policy }}"
#  loop: "{{ bootstrap_vsphere_dc__vcenter_physical_esx_hosts | subelements('portgroups', { 'skip_missing': true }) }}"
#  loop: "{{ bootstrap_vsphere_dc__vcenter_esx_hosts | subelements('portgroups', { 'skip_missing': true }) }}"
  loop: "{{ __esx_hosts_by_name.values() | list | subelements('portgroups', { 'skip_missing': true }) }}"
#  no_log: true

## ref: https://docs.ansible.com/ansible/latest/collections/community/vmware/vmware_host_dns_module.html#ansible-collections-community-vmware-vmware-host-dns-module
- name: prepare_esxi | Configure DNS for an ESXi host
  community.vmware.vmware_host_dns:
    hostname: "{{ item.hostname }}"
    username: "{{ bootstrap_vsphere_dc__vsphere_credentials[item.hostname].username }}"
    password: "{{ bootstrap_vsphere_dc__vsphere_credentials[item.hostname].password }}"
    validate_certs: false
    type: "{{ item.network_type | d('dhcp') }}"
    device: "{{ item.network_device | d('vmk0') }}"
    host_name: "{{ item.hostname }}"
    domain: "{{ item.dns_domain }}"
    dns_servers: "{{ item.dns_servers }}"
    search_domains: "{{ item.search_domains }}"
  loop: "{{ __esx_hosts_by_name.values() }}"
#  loop: "{{ bootstrap_vsphere_dc__vcenter_physical_esx_hosts }}"
#  loop: "{{ bootstrap_vsphere_dc__vcenter_esx_hosts }}"
#  with_nested:
#    - "{{ bootstrap_vsphere_dc__vcenter_physical_esx_defaults }}"
#    - "{{ __esx_hosts_by_name.values() }}"

- name: Mount NFS datastores
  community.vmware.vmware_host_datastore:
    hostname: "{{ item.0.hostname }}"
    username: "{{ bootstrap_vsphere_dc__vsphere_credentials[item.0.hostname].username }}"
    password: "{{ bootstrap_vsphere_dc__vsphere_credentials[item.0.hostname].password }}"
    validate_certs: false
    esxi_hostname: "{{ item.0.hostname }}"
    datastore_name: "{{ item.1.name }}"
    datastore_type: "{{ item.1.type }}"
    nfs_server: "{{ item.1.server }}"
    nfs_path: "{{ item.1.path }}"
    nfs_ro: false
    state: present
  loop: "{{ __esx_hosts_by_name.values() | list | subelements('datastores', { 'skip_missing': true }) }}"
#  with_nested:
#    - "{{ vmware_host_datastores }}"
#    - "{{ bootstrap_vsphere_dc__vcenter_physical_esx_hosts }}"
#    - "{{ bootstrap_vsphere_dc__vcenter_esx_hosts }}"

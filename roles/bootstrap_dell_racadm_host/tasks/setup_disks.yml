---
- name: Install mdadm and xfsprogs packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: installed
  loop:
    - mdadm
    - xfsprogs

- name: Check if RAID0 device exists
  changed_when: false
  ansible.builtin.command: /usr/sbin/mdadm --detail /dev/md0
  register: md0_result
  ignore_errors: true

- name: Create RAID0 device
  when: md0_result|failed
  changed_when: false
  ansible.builtin.command: |
    mdadm --create --verbose {{ raid_device }} --chunk=256 --level=0 --name=data \
      --raid-devices={{ ssd_devices|length }} {{ ssd_devices|join(' ') }}

- name: Create filesystem
  when: md0_result|failed
  community.general.filesystem:
    fstype: xfs
    dev: "{{ raid_device }}"
    opts: -K

- name: Create mountpoint
  when: md0_result|failed
  ansible.builtin.file:
    path: "{{ raid_mountpoint }}"
    state: directory
    mode: "0644"

- name: Mount RAID
  when: md0_result|failed
  ansible.posix.mount:
    name: "{{ raid_mountpoint }}"
    src: "{{ raid_device }}"
    fstype: xfs
    state: mounted
    passno: 2
    opts: defaults,nofail,discard

- name: Build udev rules for physical SSDs
  when: md0_result|failed
  ansible.builtin.lineinfile:
    dest: /etc/udev/rules.d/99-ssd.rules
    create: true
    line: SUBSYSTEM=="block", ACTION=="add|change", KERNEL=="{{ item | regex_replace('^/dev/(.*)$', '\1') }}", ATTR{bdi/read_ahead_kb}="8", ATTR{queue/scheduler}="noop"
    #    line: 'SUBSYSTEM=="block", ACTION=="add|change", KERNEL=="{{ item | regex_replace('^/dev/(.*)$', '\\1') }}", ATTR{bdi/read_ahead_kb}="8", ATTR{queue/scheduler}="noop"'
    mode: "0644"
  loop: "{{ ssd_devices }}"

- name: Build udev rules for RAID device
  when: md0_result|failed
  ansible.builtin.lineinfile:
    dest: /etc/udev/rules.d/99-ssd.rules
    create: true
    line: SUBSYSTEM=="block", ACTION=="add|change", KERNEL=="{{ raid_device | regex_replace('^/dev/(.*)$', '\1') }}", ATTR{bdi/read_ahead_kb}="8"
    #    line: 'SUBSYSTEM=="block", ACTION=="add|change", KERNEL=="{{ raid_device | regex_replace('^/dev/(.*)$', '\\1') }}", ATTR{bdi/read_ahead_kb}="8"'
    mode: "0644"

- name: Reload udev rules
  changed_when: false
  ansible.builtin.shell: udevadm control --reload-rules && udevadm trigger

- name: Display md0_result.stdout_lines
  when: md0_result|succeeded
  ansible.builtin.debug:
    var: md0_result.stdout_lines


log_prefix_bashenv=".bash_env"

echo "${log_prefix_bashenv} setting environment vars"

#export ADD_GNUTOOLS_BASH_PATH=0

export NETWORK_INTERNAL_DOMAIN="johnson.int"

## ref: https://github.com/ansible/ansible/issues/33831
#export ANSIBLE_VAULT_PASSWORD_FILE=~/.vault_pass

export ANSIBLE_DEVELOPER_REPO="${HOME}/repos/ansible/ansible-developer"
export ANSIBLE_DATACENTER_REPO="${HOME}/repos/ansible/ansible-datacenter"

## ref: https://dw.exitstatus0.com/doku.php?id=wiki:systemd_user_service#troubleshooting
## ref: https://askubuntu.com/questions/1458082/how-to-debug-failed-to-connect-to-bus-no-such-file-or-directory-systemctl-u
export XDG_RUNTIME_DIR=/run/user/$(id -u)
export DBUS_SESSION_BUS_ADDRESS="unix:path=${XDG_RUNTIME_DIR}/bus"

## if using public repo
#export DEVENV_INSTALL_REMOTE_SCRIPT="https://raw.githubusercontent.com/lj020326/ansible-developer/main/install.sh"
## if using internal repo
export DEVENV_INSTALL_REMOTE_SCRIPT="https://raw.githubusercontent.com/lj020326/ansible-developer/main/install-ansibledev-pvt.sh"

export LANG='en_US.utf-8'

export PYTHON2_HOME=/usr/bin
export PYTHON2_BIN_DIR=$PYTHON2_HOME

export PYTHON3_HOME=/usr/bin
export PYTHON3_BIN_DIR=$PYTHON3_HOME

## ref: https://www.jeffgeerling.com/blog/running-ansible-within-windows
#ANSIBLE=/opt/ansible
#export PATH=$PATH:$ANSIBLE/bin
#export PYTHONPATH=$ANSIBLE/lib
#export ANSIBLE_LIBRARY=$ANSIBLE/library

export DOCKER_REGISTRY_INTERNAL="media.${NETWORK_INTERNAL_DOMAIN}:5000"

export MOLECULE_IMAGE_NAMESPACE="media.${NETWORK_INTERNAL_DOMAIN}:5000"
export EDITOR=/usr/local/bin/emacs

export PYTHON_VERSION="3"
export TEST_PYTHON_VERSION="3.10"

SSH_KEY_GITHUB=~/.ssh/id_rsa

## ref: https://pythonspeed.com/articles/docker-buildkit/
export DOCKER_BUILDKIT=1

#export ANSIBLE_ROLES_PATH=/etc/ansible/roles:~/.ansible/roles
#export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

if [[ $EUID -eq 0 ]]; then
    #export KUBECONFIG=/opt/openshift/openshift.int.config/master/admin.kubeconfig
    # sudo -H cp /etc/kubernetes/admin.conf $HOME/.kube/config
    # sudo -H cp ~/repos/pyutils/k8s/conf/admin.conf $HOME/.kube/config
    export KUBECONFIG=$HOME/.kube/config
fi
#if [ "${HOSTNAME}" == "openshift.${NETWORK_INTERNAL_DOMAIN}" ]; then
#    export OPENSHIFT_INSTALL=/opt/openshift
#    export CURL_CA_BUNDLE=/opt/openshift/openshift.int.config/master/ca.crt
#fi

export ANSIBLE_ROLES_PATH=/etc/ansible/roles:~/.ansible/roles

export KOLLA_HOME=/data/Iaas/OpenStack

export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

export PATH+=:$OPENSHIFT_INSTALL

echo "${log_prefix_bashenv} more PATH env var updates"

if [ -d "${HOME}/.pyenv/bin" ]; then
  PYENV_ROOT="${HOME}/.pyenv"
elif [ -d "${HOME}/.pyenv/pyenv-win/bin" ]; then
  PYENV_ROOT="${HOME}/.pyenv/pyenv-win"
fi
if [ -n "${PYENV_ROOT}" ]; then
  PYENV_BIN_DIR="${PYENV_ROOT}/bin"
  echo "${log_prefix_bashenv} adding ${PYENV_BIN_DIR} into PATH"
  export PATH="${PYENV_BIN_DIR}:$PATH"
fi

## using pyenv
## ref: https://opensource.com/article/19/5/python-3-default-mac
## https://realpython.com/intro-to-pyenv/
if command -v pyenv 1>/dev/null 2>&1; then
    echo "${log_prefix_bashenv} source $(pyenv root)/shims into PATH"
    export PATH="$(pyenv root)/shims:$PATH"

    ## ref: https://stackoverflow.com/questions/58679742/set-default-python-with-pyenv
    eval "$(pyenv init -)"
    if command -v pyenv-virtualenv-init 1>/dev/null 2>&1; then
      ## https://stackoverflow.com/questions/62532807/pyenv-no-such-command-virtualenv
      ## brew install pyenv-virtualenv
      eval "$(pyenv virtualenv-init -)";
    fi

    ## ref: https://stackoverflow.com/questions/40684543/how-to-make-python-use-ca-certificates-from-mac-os-truststore
    CERT_PATH=$(python -m certifi)
    export SSL_CERT_FILE=${CERT_PATH}
    export SSL_CERT_DIR=$(dirname "${CERT_PATH}")
    export REQUESTS_CA_BUNDLE=${CERT_PATH}
fi

if [ -d "${HOME}/bin" ]; then
    export PATH="${HOME}/bin:${PATH}"
fi
if [ -d "${HOME}/.local/bin" ]; then
    export PATH="${HOME}/.local/bin:${PATH}"
fi

export PATH=".:${PATH}"

echo "${log_prefix_bashenv} PATH=${PATH}"

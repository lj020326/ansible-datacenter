---
- name: remove unused repositories
  ansible.builtin.file:
    name: /etc/yum.repos.d/{{ item }}.repo
    state: absent
  loop:
    - CentOS-Debuginfo
    - CentOS-Media
    - CentOS-Vault
  when: harden_os_linux__security_packages_clean | bool

- name: get yum-repository-files
  ansible.builtin.shell: find /etc/yum.repos.d/ -type f -name *.repo
  changed_when: false
  register: yum_repos

- name: Set __yum_repo_list
  ansible.builtin.set_fact:
    __yum_repo_list:
      - /etc/yum.conf
      - /etc/dnf/dnf.conf
      - "{{ yum_repos.stdout_lines| default([]) }}" # noqa deprecated-bare-vars
      - /etc/yum/pluginconf.d/rhnplugin.conf

# for the 'default([])' see here:
# https://github.com/dev-sec/ansible-os-hardening/issues/99 and
# https://stackoverflow.com/questions/37067827/ansible-deprecation-warning-for-undefined-variable-despite-when-clause
#
# failed_when is needed because by default replace module will fail if the file doesn't exists.
# status.rc is only defined if an error occurred and only error code (rc) 257 will be ignored.
# All other errors will still be raised.
- name: activate gpg-check for config files
  ansible.builtin.replace:
    dest: "{{ item }}"
    regexp: "^\\s*gpgcheck: 0"
    replace: "gpgcheck: 1"
  register: status
  failed_when:
    - status.rc is defined
    - status.rc not in [0,257]
  loop: "{{ __yum_repo_list | flatten }}"

- name: remove deprecated or insecure packages | package-01 - package-09
  when: harden_os_linux__security_packages_clean | bool
  ansible.builtin.package:
    name: "{{ harden_os_linux__security_packages_list }}"
    state: absent

---
# These tasks needs to update the same file
# Because multiple tasks are run in parallel, data can go missing
# We need to either run this in serial, or
# Run this once only, on one host with a lookup for all other hosts
# Because serial is messy and requires custom plays, I'm doing the latter
# Thus, while this should be run against the kvmhost host, the task out show as being against one of your guests
- name: Remove guests from /etc/hosts
  ansible.builtin.blockinfile:
    create: true
    state: absent
    path: /etc/hosts
    marker: "# {mark} {{ hostvars[item]['inventory_hostname'] }} managed by virt_infra Ansible playbook"
    mode: "0644"
  become: true
  delegate_to: "{{ bootstrap_kvm_infra__kvm_host }}"
  when:
    - hostvars[item]['bootstrap_kvm_infra__state'] | default(bootstrap_kvm_infra__state) == "undefined"
  loop: "{{ play_hosts }}"
  run_once: true

- name: Remove guests from SSH known_hosts
  ansible.builtin.blockinfile:
    create: true
    mode: "0600"
    state: absent
    path: "{{ lookup('env','HOME') }}/.ssh/known_hosts"
    marker: "# {mark} {{ hostvars[item]['inventory_hostname'] }} managed by virt_infra Ansible playbook"
  become: false
  delegate_to: "{{ bootstrap_kvm_infra__kvm_host }}"
  when:
    - hostvars[item]['bootstrap_kvm_infra__state'] | default(bootstrap_kvm_infra__state) == "undefined"
  loop: "{{ play_hosts }}"
  run_once: true

- name: Remove guests from SSH config
  ansible.builtin.blockinfile:
    create: true
    mode: "0600"
    state: absent
    path: "{{ lookup('env','HOME') }}/.ssh/config"
    marker: "# {mark} {{ hostvars[item]['inventory_hostname'] }} managed by virt_infra Ansible playbook"
  become: false
  delegate_to: "{{ bootstrap_kvm_infra__kvm_host }}"
  when:
    - hostvars[item]['bootstrap_kvm_infra__state'] | default(bootstrap_kvm_infra__state) == "undefined"
  loop: "{{ play_hosts }}"
  run_once: true

---

__docker_stack__supported_actions:
  - setup
  - start
  - restart
  - stop
  - up
  - down

docker_stack__environment: DEV

docker_stack__action: 'setup'
docker_stack__swarm_mode: no
docker_stack__swarm_manager: false
#docker_stack__swarm_leader_host: leader.example.int

docker_stack__setup_external_site: no
docker_stack__enable_cert_resolver: no

##################
## NOTE: the following 2 ca vars get overridden by vars/os_distribution/*.yml
__docker_stack__ca_cert_bundle_default: "/etc/pki/tls/certs/ca-bundle.crt"
#__docker_stack__ca_cert_bundle_default: "/etc/ssl/certs/ca-certificates.crt"
__docker_stack__ca_java_keystore_default: /etc/pki/ca-trust/extracted/java/cacerts

__docker_stack__ca_cert_bundle: "{{ docker_stack__ca_cert_bundle | d(__docker_stack__ca_cert_bundle_default) }}"
__docker_stack__ca_java_keystore: "{{ docker_stack__ca_java_keystore | d(__docker_stack__ca_java_keystore_default) }}"

#################
## log prefixes
__docker_stack__log_prefix__init_vars: "Docker Stack | Init Vars |"
__docker_stack__log_prefix__app_config: "Docker Stack | Setup App Configs |"
__docker_stack__log_prefix__service_config: "Docker Stack | Setup Service Configs |"
__docker_stack__log_prefix__run_compose: "Docker Stack | Run Compose |"
__docker_stack__log_prefix__setup_cacert: "Docker Stack | Setup CA Certs |"
__docker_stack__log_prefix__self_signed_cert: "Docker Stack | Setup Self-Signed Certs |"
__docker_stack__log_prefix__container_config: "Docker Stack | Setup Container Configs |"
__docker_stack__log_prefix__restart_daemon: "Docker Stack | Restart Docker Daemon |"
__docker_stack__log_prefix__handle_service_exc: "Docker Stack | Handle Service Config Exception |"



#############
### This is the key role input dictionary used
#############
docker_stack__service_groups: []
#docker_stack__service_groups:
#  - name: base
#    source: role

#docker_stack__traefik_routing_method: dns
docker_stack__traefik_routing_method: path

docker_stack__proxy_services: []

#docker_stack__traefik_version: v1
docker_stack__traefik_version: v2

docker_stack__traefik_http: 80
docker_stack__traefik_https: 443
docker_stack__traefik_https_suffix: "{{ ':' + docker_stack__traefik_https|string if docker_stack__traefik_https|string != '443' else '' }}"

docker_stack__traefik_ssh: 2022

docker_stack__acme_http_challenge_proxy_port: 8980

docker_stack__enable_cacerts: no
docker_stack__enable_selfsigned_certs: yes

docker_stack__setup_registry: no
docker_stack__setup_admin_scripts: yes
docker_stack__setup_systemd_service: yes

docker_stack__compose_stack_name: docker_stack
docker_stack__compose_stack_compose_file: "{{ docker_stack__dir }}/docker-compose.yml"
docker_stack__compose_stack_prune: yes
docker_stack__compose_stack_resolve_image: changed

docker_stack__compose_http_timeout: 120

######################
######################
docker_stack__run_services: yes
#docker_stack__run_services: no
#docker_stack__restart_service: no
docker_stack__restart_service: yes

docker_stack__traefik_proxy_network: "traefik_public"

docker_stack__networks: {}

docker_stack__volumes: {}

docker_stack__configs: {}

#####################
## container user
docker_stack__user_username: container-user
docker_stack__user_password: container-user
docker_stack__user_group: container-user

#docker_stack__user_username: docker-user
#docker_stack__user_password: docker-user
#docker_stack__user_group: docker-user

#docker_stack__docker_group_gid: 497
docker_stack__docker_group_gid: 991

docker_stack__container_user_home: /var/internaluser
docker_stack__user_home: "/home/{{ docker_stack__user_username }}"

docker_stack__config_users_passwd: |
  {{ docker_stack__user_username }}:x:{{ docker_stack__user_uid }}:{{ docker_stack__user_gid }}::{{ docker_stack__container_user_home }}:/bin/bash

docker_stack__config_users_group: |
  {{ docker_stack__user_username }}:x:{{ docker_stack__user_gid }}:

## docker stack vars
docker_stack__dir: "{{ docker_stack__user_home }}/docker"
docker_stack__compose_file: "{{ docker_stack__dir }}/docker-compose.yml"
docker_stack__remove_orphans: yes

docker_stack__ca_root_cn: "ca-root"

docker_stack__acme_email: "admin@example.int"

docker_stack__internal_root_domain: "example.int"
docker_stack__external_root_domain: "example.com"

docker_stack__service_route_name: "{{ inventory_hostname_short }}"
#docker_stack__internal_domain: "{{ inventory_hostname }}.{{ docker_stack__internal_root_domain }}"
#docker_stack__external_domain: "{{ inventory_hostname }}.{{ docker_stack__external_root_domain }}"
docker_stack__internal_domain: "{{ docker_stack__service_route_name }}.{{ docker_stack__internal_root_domain }}"
docker_stack__external_domain: "{{ docker_stack__service_route_name }}.{{ docker_stack__external_root_domain }}"
#docker_stack__external_domain: "{{ docker_stack__external_root_domain }}"

docker_stack__enable_external_route: no

## SSL settings
docker_stack__internal_ssl_cert_dir: /usr/local/ssl/certs
docker_stack__internal_ssl_certkey_dir: /usr/local/ssl/private
#docker_stack__internal_ssl_certkey_dir: "/etc/ssl/private"
#docker_stack__internal_ssl_cert_dir: "/etc/ssl/crt"

#docker_stack__ssl_internal_cacert_file: "ca.{{ docker_stack__internal_root_domain }}.pem"
docker_stack__ssl_internal_root_cacert_file: "ca.{{ docker_stack__internal_root_domain }}.pem"
docker_stack__ssl_internal_cacert_file: "ca.{{ docker_stack__internal_domain }}.pem"

#docker_stack__ssl_internal_cert_file: "{{ hostname_name_full }}.pem"
#docker_stack__ssl_internal_cert_file: "{{ docker_stack__internal_domain }}.chain.pem"
docker_stack__ssl_internal_cert_file: "{{ docker_stack__internal_domain }}.pem"
docker_stack__ssl_internal_csr_file: "{{ docker_stack__internal_domain }}.csr"

#docker_stack__ssl_internal_privatekey_file: "{{ hostname_name_full }}-key.pem"
docker_stack__ssl_internal_privatekey_file: "{{ docker_stack__internal_domain }}-key.pem"

docker_stack__external_ssl_cert_dir: "{{ docker_stack__dir }}/shared/certs"
docker_stack__external_ssl_certkey_dir: "{{ docker_stack__dir }}/shared/certs"

docker_stack__ssl_external_cert_file: "{{ docker_stack__external_domain }}.pem"
docker_stack__ssl_external_privatekey_file: "{{ docker_stack__external_domain }}-key.pem"

docker_stack__script_dir: "/opt/scripts"

docker_stack__jenkins_vmware_data_dir: /export/data/vmware

docker_stack__api_port: "2375"

docker_stack__app_config_dirs: {}

docker_stack__config_dirs: []

docker_stack__app_config_tpls: {}

docker_stack__app_config_files: {}

docker_stack__config_files: []

docker_stack__script_dirs:
  - path: "{{ docker_stack__script_dir }}"
    recurse: yes

#docker_stack__scripts: []
docker_stack__scripts:
  - src: 'files/scripts/deploy-stack.sh'
    dest: "{{ docker_stack__dir }}/deploy-stack.sh"
  - src: 'files/scripts/docker-image-sync.sh'
    dest: "{{ docker_stack__dir }}/docker-image-sync.sh"
  - src: 'files/scripts/docker-image-pull-curl.sh'
    dest: "{{ docker_stack__dir }}/docker-image-pull-curl.sh"
#  - src: 'files/mono_image/entrypoint.sh'
#    dest: "{{ docker_stack__script_dir }}/mono-entrypoint.sh"

docker_stack__service_templates:
  - src: 'compose.env.j2'
    dest: "{{ __docker_stack__base__stack_dir }}/.env"
  - src: 'docker-compose.yml.j2'
    dest: "{{ __docker_stack__base__stack_dir }}/docker-compose.yml"

docker_stack__proxy_service_templates:
  - src: "traefik/rules/proxy-services.yml.j2"
    dest: "{{ __docker_stack__base__traefik_dir }}/rules/proxy-services.yml"

docker_stack__script_config_tpls: []

docker_stack__email_from: "admin@example.com"
docker_stack__email_to: "admin@example.com"
docker_stack__email_default_suffix: "@example.com"

docker_stack__email_admin_address: "admin@example.com"

docker_stack__smtp: "mail.example.int"

docker_stack__firewalld_enabled: yes

docker_stack__firewalld_services: []

docker_stack__firewalld_app_services: {}

docker_stack__firewalld_app_ports: {}

#overwrite_configs: yes
## used from setting up registry service instance
#docker_stack__registry_service_name: "registry"
docker_stack__registry_service_domain: "{{ docker_stack__internal_domain }}"

## set registry endpoint namespace
## defaults to use docker hub endpoint namespace at `lj020326`
#docker_stack__registry_endpoint: "example.int:5000"
docker_stack__registry_endpoint: "lj020326"
#docker_stack__registry_url: "https://{{ docker_stack__registry_endpoint }}/v2/"

docker_stack__registry_login: no
docker_stack__registry_username: user
docker_stack__registry_password: password

docker_stack__service_group_configs_tpl: {}

docker_stack__config_tpls: []

docker_stack__container_configs: {}

######
## base docker stack configs
######

docker_stack__timezone: "America/New_York"


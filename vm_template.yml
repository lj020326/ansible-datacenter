---

- name: "Gather facts for all hosts to apply OS specific group vars for them"
  tags: always
  hosts: all
  become: yes
  connection: local
  tasks:
    - name: Classify hosts depending on their OS distribution
      group_by:
        key: os_{{ ansible_facts['distribution']|d('Unknown') }}
    - name: Classify hosts depending on their OS distribution-version
      group_by:
        key: os_{{ ansible_facts['distribution']|d('Unknown') }}_{{ ansible_facts['distribution_major_version']|d('Unknown') }}
    - name: Print env var debug information
      debug:
        msg:
#          - "ansible_host={{ ansible_host }}"
#          - "ansible_hostname={{ ansible_hostname | d('') }}"
#          - "ansible_fqdn={{ ansible_fqdn | d('') }}"
#          - "ansible_default_ipv4.address={{ ansible_default_ipv4.address | d(ansible_all_ipv4_addresses[0]) | d('') }}"
#          - "ansible_os_family={{ ansible_os_family | d('unknown') }}"
#          - "ansible_distribution={{ ansible_distribution | d('unknown') }}"
#          - "ansible_distribution_release={{ ansible_distribution_release | d('unknown') }}"
#          - "ansible_distribution_major_version={{ ansible_distribution_major_version | d('unknown') }}"
#          - "ansible_python_interpreter={{ ansible_python_interpreter | d('unknown') }}"
#          - "ansible_pip_interpreter={{ ansible_pip_interpreter | d('unknown') }}"
          - "inventory_hostname={{ inventory_hostname | d('unknown') }}"
          - "inventory_hostname_short={{ inventory_hostname_short | d('unknown') }}"
          - "internal_subdomain={{ internal_subdomain | d('') }}"
          - "internal_domain={{ internal_domain | d('unknown') }}"
          - "netbase__hostname={{ netbase__hostname }}"
          - "ansible_host={{ ansible_host }}"
          - "ansible_hostname={{ ansible_hostname | d('') }}"
          - "ansible_fqdn={{ ansible_fqdn | d('') }}"
          - "ansible_default_ipv4.address={{ ansible_default_ipv4.address | d(ansible_all_ipv4_addresses[0]) | d('') }}"
          - "ansible_os_family={{ ansible_os_family | d('unknown') }}"
          - "ansible_distribution={{ ansible_distribution | d('unknown') }}"
          - "ansible_distribution_release={{ ansible_distribution_release | d('unknown') }}"
          - "ansible_distribution_major_version={{ ansible_distribution_major_version | d('unknown') }}"
          - "ansible_python_interpreter={{ ansible_python_interpreter | d('unknown') }}"
          - "ansible_pip_interpreter={{ ansible_pip_interpreter | d('unknown') }}"
          - "group_names={{ group_names | d('') }}"
          - "ntp_servers={{ ntp_servers | d('') }}"
          - "docker_stack_external_domain={{ docker_stack_external_domain | d('') }}"
          - "docker_stack_internal_domain={{ docker_stack_internal_domain | d('') }}"
          - "ca_domain={{ ca_domain | d('unknown') }}"
          - "ca_domains_hosted={{ ca_domains_hosted | d('') }}"
          - "ca_keyring_certs_dir={{ ca_keyring_certs_dir }}"
          - "ca_domains_dynamic={{ ca_domains_dynamic | to_nice_json }}"
          - "ca_service_routes_list={{ ca_service_routes_list | to_nice_json }}"
          - "ca_intermediate_certs_config={{ ca_intermediate_certs_config | to_nice_json }}"
          - "ca_intermediate_certs_list_dynamic={{ ca_intermediate_certs_list_dynamic | to_nice_json }}"
          - "ca_intermediate_certs_list={{ ca_intermediate_certs_list | to_nice_json }}"
          - "ca_internal_domains_dynamic={{ ca_internal_domains_dynamic | to_nice_json }}"
          - "ca_routes_dynamic={{ ca_routes_dynamic | to_nice_json }}"
      tags: debug_ansible_env

- name: "Bootstrap linux on vm template"
  hosts: all
  become: yes
  connection: local
  vars_files:
    - vars/secrets.yml
  roles:
    - role: bootstrap-linux

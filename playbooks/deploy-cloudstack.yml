---
## ref: https://docs.ansible.com/ansible/latest/user_guide/playbooks_best_practices.html
## ref: https://grokbase.com/t/gg/ansible-project/149c6gcb6f/is-there-a-way-to-dynamically-target-subsets-of-an-inventory-group-based-on-facts
## ref: https://github.com/ansible/ansible/issues/20360
- name: Gather facts for all hosts to apply OS specific group vars for them
  tags: always
  #  hosts: all
  hosts: compute_node
  become: true
  #  become_method: sudo
  #  become_user: root
  remote_user: "{{ bootstrap_user }}"
  vars_files:
    - vars/vault.yml
  tasks:
    - name: Classify hosts depending on their OS distribution
      ansible.builtin.group_by:
        key: os_{{ ansible_facts['distribution'] }}

    - name: Print env var debug information
      ansible.builtin.debug:
        var: ansible_python_interpreter
      tags: debug_ansible_env

## Debugging purposes: print all internal variables
## ref: https://gryzli.info/2017/12/21/ansible-debug-print-variables/
- name: "Debug: Print all internal variables"
  #  hosts: localhost
  #  hosts: all
  hosts: compute_node
  tags:
    - debug-env-vars
  tasks:
    - name: Print env var debug information
      vars:
        msg: |
          Environment Variables ("environment"):
          --------------------------------
          {{ environment | to_nice_json }}
      ansible.builtin.debug:
        msg: "{{ msg.split('\n') }}"
      tags: debug_info

- name: Install Apache Cloudstack Compute
  tags:
    - cloudstack-compute
  hosts:
    - cloudstack_compute
  become: true
  #  become_method: sudo
  vars_files:
    - vars/vault.yml
  roles:
    - role: bootstrap_cloudstack

- name: Install Apache Cloudstack Master
  tags:
    - cloudstack-master
  hosts: cloudstack_master
  become: true
  #  become_method: sudo
  #  become_user: root
  vars_files:
    - vars/vault.yml
  roles:
    - role: bootstrap_cloudstack
    - role: bootstrap_cloudstack_master

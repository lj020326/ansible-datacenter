---
all:
  children:
    ansible_controller:
      children:
        control_node: {}
    ansible_localhost: {}
    apply_common_groups:
      children:
        #############
        ## NOTES:
        ## 1) The 'apply_common_groups_(machine|os|networks)_' set of group_vars uses a structured sub-directory approach similar to the one
        ##    documented here:
        ##    https://github.com/lj020326/ansible-inventory-file-examples/tree/develop-lj/tests/ansible-groupvars-examples#example-4
        ##
        ## 2) The `apply_common_groups` role must first be run to obtain/derive the following group_var defined variables:
        ##
        ##      - dc_machine_type
        ##      - dc_os_family
        ##      - dc_os_family_shortname
        ##      - dc_os_distribution
        ##      - dc_os_dist_version
        ##
        #############
        apply_common_groups_machine:
          children:
            apply_common_groups_machine_type_baremetal: {}
            apply_common_groups_machine_type_linux_container: {}
            apply_common_groups_machine_type_vm: {}
        apply_common_groups_os:
          children:
            apply_common_groups_os_esxi: {}
            apply_common_groups_os_linux:
              children:
                apply_common_groups_os_linux_centos: {}
                apply_common_groups_os_linux_rhel: {}
                os_linux: {}
            apply_common_groups_os_vcenter: {}
            apply_common_groups_os_windows:
              children:
                apply_common_groups_os_windows_desktop_10: {}
                apply_common_groups_os_windows_desktop_11: {}
                apply_common_groups_os_windows_server_2016_standard: {}
                apply_common_groups_os_windows_server_2019_standard: {}
                apply_common_groups_os_windows_server_2022_standard: {}
                os_windows: {}
        apply_common_groups_systemd:
          children:
            apply_common_groups_systemd_not_running: {}
            apply_common_groups_systemd_running: {}
    backup_server:
      children:
        control_node: {}
    ca_domain:
      children:
        ca_domain_int_dettonville: {}
        ca_domain_int_johnson: {}
    ca_domain_int_dettonville:
      children:
        vm_template: {}
        vmware_physical_esx_host: {}
        vmware_vm: {}
        vmware_vsphere: {}
    ca_domain_int_johnson:
      children:
        os_baremetal_linux: {}
        os_baremetal_windows: {}
    ca_keystore:
      children:
        ca_keystore_dev: {}
        ca_keystore_prod: {}
        ca_keystore_qa: {}
    cert_node:
      children:
        ca_domain: {}
    chef_inspec:
      children:
        cicd_node: {}
    cicd_node:
      children:
        cicd_node_dev: {}
        cicd_node_prod: {}
        cicd_node_qa: {}
    cloudstack_cluster:
      children:
        cloudstack_compute: {}
        cloudstack_controller: {}
    control_node:
      children:
        control_node_dev: {}
        control_node_prod: {}
        control_node_qa: {}
    control_node_primary:
      children:
        control_node_primary_baremetal: {}
        control_node_primary_vm: {}
    control_node_primary_baremetal: {}
    control_node_primary_vm: {}
    #    dc_os_centos:
    #      children:
    #        dc_os_centos_7: {}
    #        dc_os_centos_8: {}
    #    dc_os_debian:
    #      children:
    #        dc_os_debian_10: {}
    #        dc_os_debian_11: {}
    #        dc_os_debian_9: {}
    #    dc_os_esxi:
    #      children:
    #        vmware_esx_host: {}
    #    os_linux:
    #      children:
    #        dc_os_centos: {}
    #        dc_os_debian: {}
    #        dc_os_redhat: {}
    #        dc_os_ubuntu: {}
    #        os_linux: {}
    #    dc_os_redhat:
    #      children:
    #        dc_os_redhat_7: {}
    #        dc_os_redhat_8: {}
    #    dc_os_ubuntu:
    #      children:
    #        dc_os_ubuntu_18: {}
    #        dc_os_ubuntu_20: {}
    #        dc_os_ubuntu_22: {}
    #    dc_os_vcenter:
    #      children:
    #        vmware_vcenter: {}
    #    os_windows:
    #      children:
    #        os_windows: {}
    dell_idrac_hosts:
      children:
        dell_idrac_hosts_dev: {}
        dell_idrac_hosts_prod: {}
        dell_idrac_hosts_qa: {}
    dhcp_client_mac_interface:
      children:
        network_switch: {}
        vmware_vm_dhcp: {}
    dhcp_hosts:
      children:
        vmware_linux_ip_dhcp: {}
    docker:
      children:
        docker_stack: {}
        vm_template_linux: {}
        vmware_vm: {}
    docker_awx_node:
      children:
        control_node: {}
    docker_image_builder: {}
    docker_registry:
      children:
        docker_registry_dev: {}
        docker_registry_prod: {}
        docker_registry_qa: {}
    docker_stack:
      children:
        docker_stack_admin: {}
        docker_stack_auth: {}
        docker_stack_control: {}
        docker_stack_env:
          children:
            docker_stack_env_dev:
              children:
                docker_stack_jenkins_controller_dev: {}
                docker_stack_jenkins_jcac_dev: {}
            docker_stack_env_prod:
              children:
                docker_stack_jenkins_controller_prod: {}
                docker_stack_jenkins_jcac_prod: {}
            docker_stack_env_qa:
              children:
                docker_stack_jenkins_controller_qa: {}
                docker_stack_jenkins_jcac_qa: {}
        docker_stack_jenkins: {}
        docker_stack_media: {}
        docker_stack_ml: {}
        docker_stack_openldap: {}
        docker_stack_samba: {}
    docker_stack_admin:
      children:
        docker_stack_admin_dev: {}
        docker_stack_admin_prod: {}
        docker_stack_admin_qa: {}
    docker_stack_auth:
      children:
        control_node: {}
    docker_stack_control:
      children:
        control_node: {}
    docker_stack_domain:
      children:
        docker_stack_domain_dettonville: {}
        docker_stack_domain_johnson: {}
    docker_stack_domain_dettonville:
      children:
        docker_stack_domain_dettonville_dev: {}
        docker_stack_domain_dettonville_prod: {}
        docker_stack_domain_dettonville_qa: {}
    docker_stack_domain_johnson:
      children:
        docker_stack_domain_johnson_dev: {}
        docker_stack_domain_johnson_prod: {}
        docker_stack_domain_johnson_qa: {}
    docker_stack_jenkins:
      children:
        docker_stack_jenkins_agent: {}
        docker_stack_jenkins_controller: {}
        docker_stack_jenkins_jcac: {}
    docker_stack_jenkins_agent:
      children:
        docker_stack_jenkins_agent_dev: {}
        docker_stack_jenkins_agent_prod: {}
        docker_stack_jenkins_agent_qa: {}
    docker_stack_jenkins_controller:
      children:
        docker_stack_jenkins_controller_dev: {}
        docker_stack_jenkins_controller_prod: {}
        docker_stack_jenkins_controller_qa: {}
    #    docker_stack_jenkins_controller:
    ##      children:
    ##        control_node: {}
    docker_stack_jenkins_jcac:
      children:
        docker_stack_jenkins_jcac_dev: {}
        docker_stack_jenkins_jcac_prod: {}
        docker_stack_jenkins_jcac_qa: {}
    docker_stack_media:
      children:
        docker_stack_media_dev: {}
        docker_stack_media_prod: {}
        docker_stack_media_qa: {}
    docker_stack_openldap:
      children:
        docker_stack_openldap_dev: {}
        docker_stack_openldap_prod: {}
        docker_stack_openldap_qa: {}
    docker_stack_samba:
      children:
        docker_stack_samba_dev: {}
        docker_stack_samba_prod: {}
        docker_stack_samba_qa: {}
    docker_swarm:
      children:
        docker_swarm_leader: {}
        docker_swarm_manager: {}
        docker_swarm_worker: {}
    docker_swarm_admin:
      children:
        docker_swarm_leader_admin: {}
        docker_swarm_manager_admin: {}
        docker_swarm_worker_admin: {}
    # NOTE: There can only be 1 `swarm_leader` per cluster
    docker_swarm_control:
      children:
        docker_swarm_leader_control: {}
        docker_swarm_manager_control: {}
        docker_swarm_worker_control: {}
    docker_swarm_leader:
      children:
        docker_swarm_leader_admin: {}
        docker_swarm_leader_control: {}
    docker_swarm_leader_admin:
      children:
        docker_swarm_leader_admin_dev: {}
        docker_swarm_leader_admin_prod: {}
        docker_swarm_leader_admin_qa: {}
    # NOTE: There can only be 1 `swarm_leader` per cluster
    docker_swarm_leader_control:
      children:
        docker_swarm_leader_control_dev: {}
        docker_swarm_leader_control_prod: {}
        docker_swarm_leader_control_qa: {}
    docker_swarm_manager:
      children:
        docker_swarm_manager_admin: {}
        docker_swarm_manager_control: {}
    docker_swarm_manager_admin:
      children:
        docker_swarm_manager_admin_dev: {}
        docker_swarm_manager_admin_prod: {}
        docker_swarm_manager_admin_qa: {}
    docker_swarm_worker:
      children:
        docker_swarm_worker_admin: {}
        docker_swarm_worker_control: {}
    docker_swarm_worker_admin:
      children:
        docker_swarm_worker_admin_dev: {}
        docker_swarm_worker_admin_prod: {}
        docker_swarm_worker_admin_qa: {}
    docker_swarm_worker_control:
      children:
        docker_swarm_worker_control_dev: {}
        docker_swarm_worker_control_prod: {}
        docker_swarm_worker_control_qa: {}
    esxi:
      children:
        vmware_vm: {}
    etcd:
      children:
        etcd_dev: {}
        etcd_prod: {}
        etcd_qa: {}
    firewall_zone:
      children:
        firewall_zone_docker:
          children:
            docker: {}
        firewall_zone_internal:
          children:
            os_linux: {}
    fog_server: {}
    iscsi_client:
      children:
        control_node: {}
    jenkins_agent:
      children:
        cicd_node: {}
        docker_stack_jenkins_controller: {}
        docker_stack_jenkins_jcac: {}
        jenkins_agent_dev: {}
        jenkins_agent_jcac: {}
        jenkins_agent_prod: {}
        jenkins_agent_qa: {}
    jenkins_controller:
      children:
        jenkins_controller_baremetal: {}
        jenkins_controller_vm: {}
    jenkins_controller_baremetal:
      children:
        control_node_primary_baremetal: {}
    jenkins_controller_vm: {}
    k8s_cluster:
      children:
        kube_controller: {}
        kube_node: {}
    kube_controller:
      children:
        kube_controller_dev: {}
        kube_controller_prod: {}
        kube_controller_qa: {}
    kvm_host: {}
    kvm_infra:
      children:
        kvm_host: {}
    ldap_client:
      children:
        os_linux: {}
    ldap_server:
      children:
        ldap_server_dev: {}
        ldap_server_prod: {}
        ldap_server_qa: {}
    linux_ip_dhcp:
      children:
        baremetal_dhcp: {}
        vmware_vm_dhcp: {}
    linux_ip_static:
      children:
        vmware_linux_ip_static: {}
    local: {}
    machine_baremetal:
      children:
        os_baremetal_linux: {}
        os_baremetal_windows: {}
        vmware_physical_esx_host: {}
    machine_vm:
      children:
        vmware_nested_esx: {}
        vmware_vm: {}
    mergerfs: {}
    nameserver:
      children:
        nameserver_controller: {}
        nameserver_replica: {}
    nameserver_controller:
      children:
        bind_controller: {}
        dhcp_primary: {}
    nameserver_replica:
      children:
        bind_replica: {}
        dhcp_replica: {}
    network_switch: {}
    nfs_service:
      children:
        os_linux: {}
    nginx_service: {}
    node_offline:
      children:
        node_offline_dev: {}
        node_offline_prod: {}
        node_offline_qa: {}
    ntp_network:
      children:
        os_linux: {}
        #        ntp_server: {}
    ntp_server:
      children:
        ntp_server_dev: {}
        ntp_server_prod: {}
        ntp_server_qa: {}
    openstack:
      children:
        openstack_compute: {}
        openstack_control: {}
        openstack_deployment: {}
        openstack_monitoring: {}
        openstack_network: {}
        openstack_storage: {}
    openstack_kolla_node:
      children:
        openstack_kolla_node_dev: {}
        openstack_kolla_node_prod: {}
        openstack_kolla_node_qa: {}
    os_baremetal:
      children:
        machine_baremetal: {}
    os_baremetal_linux:
      children:
        os_baremetal_linux_dev: {}
        os_baremetal_linux_prod: {}
        os_baremetal_linux_qa: {}
    os_baremetal_windows:
      children:
        os_baremetal_windows_dev: {}
        os_baremetal_windows_prod: {}
        os_baremetal_windows_qa: {}
    os_linux:
      children:
        #        apply_common_groups_os_linux: {}
        molecule_docker_linux: {}
        os_baremetal_linux: {}
        vmware_vm_linux: {}
    os_windows:
      children:
        #        apply_common_groups_os_windows: {}
        os_windows_dev:
          children:
            os_baremetal_windows_dev: {}
            vmware_vm_windows_dev: {}
        os_windows_prod:
          children:
            os_baremetal_windows_prod: {}
            vmware_vm_windows_prod: {}
        os_windows_qa:
          children:
            os_baremetal_windows_qa: {}
            vmware_vm_windows_qa: {}
    postfix_network:
      children:
        os_linux: {}
        postfix_server: {}
    postfix_server:
      children:
        control_node: {}
    proxmox:
      children:
        proxmox_dev: {}
        proxmox_prod: {}
        proxmox_qa: {}
    step_ca_cli:
      children:
        os_linux: {}
    stepca_certs:
      children:
        machine_vm: {}
        vm_template: {}
    tower_control_node: {}
    veeam_agent:
      children:
        machine_baremetal: {}
    ###################################
    ## DO NOT REMOVE PLACEHOLDER GROUP
    ##   dynamic group with group_vars
    ##   applied by bootstrap_vm_template.yml
    vm_template:
      children:
        vm_template_linux: {}
        vm_template_windows: {}
        #    vm_template: {}
    vmware_control_node:
      children:
        control_node_primary_baremetal: {}
        #        control_node: {}
    vmware_esx_host:
      children:
        vmware_physical_esx_host: {}
    vmware_flavor:
      children:
        vmware_flavor_large: {}
        vmware_flavor_medium: {}
        vmware_flavor_small: {}
    vmware_image_linux:
      children:
        vmware_image_centos:
          children:
            vmware_image_centos_7: {}
            vmware_image_centos_8: {}
            vmware_image_centos_9: {}
        vmware_image_redhat:
          children:
            vmware_image_redhat_7: {}
            vmware_image_redhat_8: {}
            vmware_image_redhat_9: {}
        vmware_image_ubuntu:
          children:
            vmware_image_ubuntu_20: {}
            vmware_image_ubuntu_22: {}
    vmware_image_windows:
      children:
        vmware_image_windows_2012: {}
        vmware_image_windows_2019: {}
    vmware_new_vm_linux: {}
    vmware_new_vm_windows: {}
    vmware_physical_esx_host: {}
    vmware_vcenter: {}
    vmware_vm:
      children:
        vmware_appliance: {}
        vmware_vm_linux: {}
        vmware_vm_windows: {}
        #        vmware_flavor_large: {}
        #        vmware_flavor_medium: {}
        #        vmware_flavor_small: {}
    vmware_vm_dhcp:
      children:
        vmware_linux_ip_dhcp: {}
    vmware_vm_linux:
      children:
        vmware_image_centos_7: {}
        vmware_image_centos_8: {}
        vmware_image_debian_10: {}
        vmware_image_debian_11: {}
        vmware_image_debian_9: {}
        vmware_image_redhat_7: {}
        vmware_image_redhat_8: {}
        vmware_image_ubuntu_18: {}
        vmware_image_ubuntu_20: {}
        vmware_image_ubuntu_22: {}
    vmware_vm_windows:
      children:
        vmware_image_windows_2012: {}
        vmware_image_windows_2016: {}
        vmware_image_windows_2019: {}
    vmware_vsphere:
      children:
        vmware_esx_host: {}
        vmware_nested_esx: {}
        vmware_vcenter: {}
    vmware_windows_ip_dhcp: {}
    vsphere_control_node:
      children:
        control_node_primary_baremetal: {}
        #        control_node: {}

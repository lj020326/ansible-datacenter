
[local]
localhost ansible_connection=local
localhost ansible_host=127.0.0.1 ansible_connection=local

[step_ca_cli:children]
linux_server_node

#[step_ca_server]
##control01

[control_node]
#control01
vcontrol01

[ca_keyring:children]
control_node

[jenkins_master:children]
control_node

[cicd_node:children]
control_node

[cicd_node]
admin01
admin02

[chef_inspec:children]
cicd_node

[jenkins_agent:children]
cicd_node

[cert_node:children]
ca_domain

[stepca_certs:children]
server_vm

[server_node_offline]

[server_node:children]
server_baremetal
vmware_vm

[server_vm:children]
vmware_vm
#vmware_vcenter
vmware_nested_esx

[ca_domain:children]
ca_domain_int_dettonville
ca_domain_int_johnson

[ca_domain_int_johnson:children]
vmware_ubuntu20_int_johnson
vmware_centos8_int_johnson
#vmware_vm_dhcp
#vmware_physical_esx_host
#vmware_vsphere

[ca_domain_int_johnson]
#control01
vcontrol01
media01

[ca_domain_int_dettonville]
#control01
vcontrol01

[ca_domain_int_dettonville:children]
#server_vm
vmware_ubuntu20_dhcp_int_dettonville
vmware_physical_esx_host
vmware_vsphere

[vmware_ubuntu20_int_johnson:children]
vmware_ubuntu20_dhcp_int_johnson

[vmware_centos8_int_johnson:children]
vmware_centos8_dhcp_int_johnson


[dhcp_hosts:children]
vmware_vm_dhcp

#[ca_docker_domain_int_dettonville]
#vcontrol01

[nameserver:children]
ns_master
ns_slave

[ns_master:children]
bind_master
dhcp_master

[ns_slave:children]
bind_slave
dhcp_slave

[linux_ip_dhcp:children]
vmware_vm_dhcp

[linux_ip_static:children]
vmware_linux_ip_static
#vmware_physical_esx_host
#vmware_vcenter
#vmware_vsphere

[linux_ip_static]
#control01
media01

[kvm_host]
#control01

[bind_master:children]
control_node

[dhcp_master]

[bind_slave]
#admin02

[dhcp_slave]

[mergerfs]
#nas01
#nas02

[linux_server_node:children]
linux_server_baremetal
vmware_vm_linux

#[server_baremetal:children]
#vmware_physical_esx_host

[server_baremetal:children]
linux_server_baremetal

[linux_server_baremetal]
#control01
media01

[veeam_agent:children]
server_baremetal

#[control_plane_certificate:children]
#server_baremetal

[proxmox]
#control01
proxmox01

[vmware_guest_auto]

## book: hands-on enterprise automation
[deploy_vm:children]
vmware_vm

[vmware_vsphere:children]
vmware_esx_host
vmware_vcenter
vmware_nested_esx

[vmware_esx_host:children]
vmware_physical_esx_host
vmware_nested_esx

[vmware_physical_esx_host]
esx00
#esx01
#esx02

[vmware_vcenter]
vcenter
#vcsa

[vmware_nested_esx]
vesxi01
vesxi02

[vm_template]

[vmware_vm:children]
vmware_vm_linux
vmware_vm_windows

[vmware_vm_linux:children]
vmware_linux_ip_dhcp
vmware_linux_ip_static

[vmware_vm_linux]

[vmware_linux_ip_static]
vcontrol01

[vmware_linux_ip_dhcp:children]
vmware_centos8_dhcp
vmware_ubuntu20_dhcp

[vmware_centos8_dhcp:children]
vmware_centos8_dhcp_int_johnson

## https://docs.ansible.com/ansible/latest/user_guide/intro_patterns.html#using-group-position-in-patterns
## https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html#adding-ranges-of-hosts
[vmware_ubuntu20_dhcp:children]
vmware_ubuntu20_dhcp_int_johnson
vmware_ubuntu20_dhcp_int_dettonville




[vmware_centos8_dhcp_int_johnson]
vmc08-[01:02]

[vmware_flavor_centos8_small]
vmc08-[01:02]

[vmware_flavor_ubuntu20_small]
admin01
admin02
admin03
vmu20-[01:03]

[vmware_ubuntu20_dhcp_int_johnson]
admin01
admin02
admin03
vmu20-[01:03]

[vmware_ubuntu20_dhcp_int_dettonville]
#vcontrol01
#nas01
#nas02
#oscontrol01
#proxmox01
#kube01

[vmware_vm_windows]


[esxi:children]
vmware_vm

[vmware_vm_dhcp:children]
vmware_centos8_dhcp
vmware_ubuntu20_dhcp

[vmware_vm_dhcp]

[docker:children]
docker_stack

[docker]
#nas02

[docker_registry]
#admin01
#admin02
#vcontrol01
media01

[kickstart]
admin01

[deploy_vsphere_dc:children]
control_node

[deploy_vm_node:children]
control_node

[dhcp_client_mac_interface:children]
vmware_vm_dhcp
network_switch

[network_switch]
powerconnect01


[fog_server]

[ldap_client:children]
#server_node
linux_server_node

[nfs_service:children]
linux_server_node

#[nfs_service]
#control01
#admin01
#admin02
#nas02
##oscontrol01
##proxmox01
##kube01

[ntp_client:children]
linux_server_node

[samba_client]

[backup_server:children]
control_node

#[backup_server:children]
#docker_control_node

[postfix_server:children]
control_node

[postfix_server]
media01
#admin01
#admin02

[postfix_client:children]
#linux_server_node:!postfix_server
linux_server_node

[iscsi_client:children]
control_node

[docker_image_builder:children]
control_node

[docker_stack:children]
docker_control_node
docker_admin_node
docker_media_node
docker_ml_node

[docker_control_node:children]
control_node

[docker_admin_node]
admin01
admin02

[docker_samba_node]
#nas01
#nas02

[docker_media_node]
media01

[docker_awx_node:children]
control_node

[docker_ml_node]
#algo

[docker_cobbler_node]


[openstack_kolla_node]
admin01

[nginx_service]
#nginx
#admin2
admin01
admin02

[ansible_controller:children]
control_node

[cobbler_native]
;kube

[solrcloud]
#algo

[zookeeper]
#algo
#oscontroller01

## ref: https://ilhicas.com/2018/08/25/Docker-and-ansible-example.html
## ref: https://devops.stackexchange.com/questions/4440/applying-ansible-playbook-to-a-docker-container-on-a-remote-host
## ref: https://stackoverflow.com/questions/32878795/run-command-inside-of-docker-container-using-ansible/41626257#41626257
[cobbler_container]
#cobbler ansible_connection=docker ansible_docker_extra_args="-H=tcp://media01.johnson.int:2376"
#cobbler ansible_connection=docker ansible_user=root ansible_docker_extra_args="-H tcp://admin2.johnson.local:2376" ansible_python_interpreter=/usr/bin/python
#cobbler ansible_connection=docker ansible_user=root ansible_docker_extra_args="-H tcp://admin.johnson.local:2376" ansible_python_interpreter=/usr/bin/python

#[pki-server]
#admin

## ref: https://linoxide.com/containers/install-kubernetesk8s-cluster-ansible-based-tool-kubespray/
[k8s_cluster:children]
kube_master
kube_node

[kube_master]
#oscontroller01
#admin01
kube01

[kube_node]
#node02

[etcd]
#oscontroller01
#admin01
#node02
kube01

[cloudstack_cluster:children]
cloudstack_master
cloudstack_compute

[cloudstack_master]
#oscontroller01
#node01
admin01

[cloudstack_compute]
#node02

## cert-auth

#[cert_node:children]
#ca_root_node
#swarm

#[swarm:children]
#swarm-managers
#swarm-workers

#[swarm-managers]
#swarm-mgr01 cname=swarm-mgr01 ssl_cert=swarm-mgr01-cert.pem ssl_key=swarm-mgr01-priv-key.pem

#[swarm-workers]
#swarm-node01 cname=swarm-node01 ssl_cert=swarm-node01-cert.pem ssl_key=swarm-node01-priv-key.pem
#swarm-node02 cname=swarm-node02 ssl_cert=swarm-node02-cert.pem ssl_key=swarm-node02-priv-key.pem

## something

#################################
## openstack
#################################

[openstack:children]
openstack_control
openstack_network
openstack_compute
openstack_storage
openstack_monitoring
openstack_deployment

# These initial groups are the only groups required to be modified. The
# additional groups are for more control of the environment.
[openstack_control]
#oscontrol01

[openstack_network]
#oscontrol01

[openstack_compute]
#oscontrol01

[openstack_storage]
#oscontrol01

[openstack_monitoring]
#oscontrol01

[openstack_deployment]
#oscontrol01


#[r620_servers]
#10.231.9.46 idrac_racname=r60208c03-bmc model=620

#[r730_servers]
#10.231.9.40 idrac_racname=r60212c12-bmc model=730

[dell_idrac_hosts]
#esx01-idrac
esx02-idrac
node01-idrac

[idrac_syslog]
;10.231.9.11
;10.231.9.12

[idrac_syslog:vars]
;idrac_syslog_server1=log.encore-oam.com
;ansible_ssh_pass=****
;ansible_ssh_user=root

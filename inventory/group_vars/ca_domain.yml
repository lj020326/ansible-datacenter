---

ca_root_cn: "ca-root"

#ca_domain: "{{ internal_root_domain }}"
ca_domain: "{{ internal_domain }}"

stepca_svc_user: step

ca_common_name: "{{ hostname_name_full }}"
ca_signer_common_name: "ca.{{ ca_domain }}"
ca_signer_domain_name: "{{ ca_domain }}"
#ca_signer_domain_name: "{{ ('.').join(ca_signer_common_name.split('.')[1::]) }}"
ca_signerName: "{{ 'ca.' + ('.').join(ca_signer_domain_name.split('.')[1::]) if ca_signer_domain_name.split('.')|count>2 else ca_root_cn }}"
ca_country: US
ca_state: "New Jersey"
ca_locality: "Trenton"
ca_organization: "Example Internal"
ca_organizationalUnit: "Research & Technology"
ca_email: "admin@{{ ca_signer_domain_name }}"
#ca_csr_profile: "domain"
#ca_csr_profile: "intermediate_ca"

ca_cert_info:
  commonName: "{{ ca_signer_common_name }}"
  domainName: "{{ ca_signer_domain_name }}"
  signerName: "{{ ca_signerName }}"
  country: "{{ ca_country }}"
  state: "{{ ca_state }}"
  locality: "{{ ca_locality }}"
  organization: "{{ ca_organization }}"
  organizationalUnit: "{{ ca_organizationalUnit }}"
  email: "{{ ca_email }}"


###
### moved from all.yml
###
debug_cacerts: no

stepca_hostname_full: "{{ hostname_name_full }}"
deployca_hostname_full: "{{ hostname_name_full }}"

ca_domains_hosted: []

#stepca_host_url: "https://stepca.admin.{{ internal_root_domain }}/"
stepca_host_url: "https://stepca.admin.dettonville.int/"
stepca_root_ca_fingerprint: avkagkskgkkakgkkakg0099sbiskksgskl99bisjbjskgllslggskk

stepca_acme_http_challenge_proxy_port: 80

cacert_keyring_inventory_hostname: "{{ groups['ca_keyring'][0] | d(cacert_keyring_host_default) }}"

ca_keyring_repo_url: "ssh://git@gitea.admin.{{ control_plane_domain }}:2222/infra/cacerts.git"
#cacert_keyring_host: "{{ cacert_keyring_inventory_hostname }}"
#cacert_keyring_host: "{{ hostvars[groups['ca_keyring'][0]]['ansible_host'] | d(cacert_keyring_host_default) }}"
cacert_keyring_host: "{{ hostvars[cacert_keyring_inventory_hostname]['ansible_host'] }}"
#cacert_keyring_host: "{{ hostvars[cacert_keyring_inventory_hostname]['ansible_default_ipv4']['address'] | d(hostvars[host]['ansible_all_ipv4_addresses'][0]) }}"

#cacert_keyring_host_default: control01
cacert_keyring_host_default: vcontrol01

# where to deploy the finalized cert files to on the ansible control node
ca_keyring_base_dir: "{{ '~/pki' | expanduser }}"
ca_keyring_certs_dir: "{{ ca_keyring_base_dir }}/certs"
ca_keyring_keys_dir: "{{ ca_keyring_base_dir }}/keys"

ca_intermediate_certs_config:
  dettonville.int:
    commonName: "ca.dettonville.int"
    domainName: "dettonville.int"
    signerName: "{{ ca_root_cn }}"
    country: US
    state: "New York"
    locality: "NYC"
    organization: "Dettonville Internal"
    organizationalUnit: "Research & Technology"
    email: "admin@dettonville.int"

  johnson.int:
    commonName: "ca.johnson.int"
    domainName: "johnson.int"
    signerName: "{{ ca_root_cn }}"
    country: US
    state: "New York"
    locality: "CSH"
    organization: "Johnsonville Internal"
    organizationalUnit: "Mostly Impractical"
    email: "admin@johnson.int"
#    ca_csr_profile: "domain"
#    ca_csr_profile: "intermediate_ca"

ca_internal_domains_dynamic: "{{ groups['ca_domain'] | map('extract', hostvars, ['internal_domain']) | select('defined') | unique }}"
#ca_domains_dynamic: "{{ groups['ca_domain'] | map('extract', hostvars, ['internal_domain', 'docker_stack_internal_domain']) | select('defined') | unique }}"
ca_routes_dynamic: "{{ groups['ca_domain'] | map('extract', hostvars, ['ca_service_route']) | select('defined') | unique | d([]) }}"

ca_domains_dynamic: "{{ ca_internal_domains_dynamic|d([]) + ca_routes_dynamic|d([]) }}"

ca_intermediate_certs_list_dynamic: |
  [
    {% for domain in ca_domains_dynamic %}
    {% if domain not in ca_intermediate_certs_config %}
    {
      'commonName': "ca.{{ domain }}",
      'domainName': "{{ domain }}",
      'signerName': "{{ 'ca.' + ('.').join(domain.split('.')[1::]) if domain.split('.')|count>2 else ca_root_cn }}"
    },
    {% endif %}
    {% endfor %}
  ]

#ca_intermediate_certs_list: "{{ ca_intermediate_certs_list_static + ca_intermediate_certs_list_dynamic }}"
ca_intermediate_certs_list: "{{ ca_intermediate_certs_config.values() | d([]) | list + ca_intermediate_certs_list_dynamic }}"

#stepca_root_list: "{{ ca_intermediate_certs_list_static }}"

ca_service_routes_list: |
  [
    {% for domain in ca_routes_dynamic %}
    {
      'route': "{{ domain }}",
      'signerName': "ca.{{ domain }}"
    },
    {% endfor %}
  ]


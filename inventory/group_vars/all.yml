---

#tags_excluded_from_ping_test: []
tags_excluded_from_ping_test:
  - deploy-vsphere-dc
#  - deploy-vm

## ref: https://stackoverflow.com/questions/62701036/filter-out-elements-from-list-if-matching-multiple-patterns
run_tags_included_ping_test: "{{ ansible_run_tags | reject('match', '(' +  tags_excluded_from_ping_test | join('|') + ')') | list }}"
run_tags_excluded_ping_test: "{{ ansible_run_tags | intersect(run_tags_included_ping_test) }}"
run_tags_do_not_include_excluded_tags: "{{ run_tags_excluded_ping_test|length==0 }}"

host_key_checking: no

#ansible_user: root
ansible_user: "ansible"
ansible_ssh_user: "{{ ansible_user }}"
bootstrap_user: "{{ ansible_user }}"
#ansible_debug_mode: yes

external_root_domain: "dettonville.org"
external_domain: "dettonville.org"

control_plane_domain: "johnson.int"
internal_root_domain: "johnson.int"

internal_subdomain: "{{ dc_environment|d('') | upper }}"
internal_domain: "{{ internal_subdomain }}.{{ internal_root_domain }}"
#internal_domain: "{{ internal_root_domain }}"
#internal_parent_domain: "{{ ('.').join(internal_domain.split('.')[1::]) }}"

hostname_internal_domain: "{{ internal_domain }}"
hostname_name_full: "{{ inventory_hostname_short }}.{{ hostname_internal_domain }}"
hostname_name_short: "{{ inventory_hostname_short }}"

netbase__hostname: "{{ hostname_name_full if (inventory_hostname.split('.')[0] not in ['localhost','127']) else inventory_hostname }}"

## keep this out of all.yml for the molecule docker provisioner testing
#ansible_host: "{{ netbase__hostname }}"

## ref: https://en.wikipedia.org/wiki/IPv4
## ref: http://www.steves-internet-guide.com/ipv4-basics/
## ref: https://docs.oracle.com/cd/E19683-01/806-4075/ipref-1/index.html
gateway_ipv4_subnet_1_2: "10.0"
gateway_ipv4: "{{ gateway_ipv4_subnet_1_2 }}.0.1"
gateway_ipv4_network: "{{ gateway_ipv4_subnet_1_2 }}.0.0"
gateway_ipv4_net_cidr: 8
gateway_ipv4_network_cidr: "{{ gateway_ipv4_subnet_1_2 }}.0.0/{{ gateway_ipv4_net_cidr }}"
#gateway_ipv4_netmask: "255.0.0.0"
gateway_ipv4_netmask: "{{ gateway_ipv4_network_cidr | ansible.utils.ipaddr('netmask') }}"

## DNS related
dns_domain: "{{ internal_domain }}"
dns_search_domains:
  - johnson.int
  - dettonville.int

dns_nameservers:
  - "{{ gateway_ipv4 }}"


timezone: "America/New_York"

email: "admin@dettonville.org"
email_from: "{{ email }}"
email_to: "{{ email }}"

ldap_config_password: "password"
ldap_admin_password: "password"
ldap_readonly_user_password: "foobar123"

#ldap_internal_domain: "johnson.int"
#ldap_internal_base_dn: "dc=johnson,dc=int"
ldap_internal_domain: "{{ internal_domain }}"
ldap_internal_base_dn: "dc={{ ldap_internal_domain.split('.')[-2] }},dc={{ ldap_internal_domain.split('.')[-1] }}"

ldap_internal_search_base_dn: "ou=users,{{ ldap_internal_base_dn }}"
ldap_internal_host: "ldap.{{ ldap_internal_domain }}:389"
ldap_internal_uri: "ldap://{{ ldap_internal_host }}"

# if smb_ldap_uri not empty, use ldap (to be defined in eg. "SMBDC" group)
ldap_admindn: "cn=admin,{{ ldap_internal_base_dn }}"
ldap_adminpw: "{{ ldap_admin_password }}"

# if smb_ldap_uri not empty, use ldap (to be defined in eg. "SMBDC" group)
smb_ldap_admindn: "{{ ldap_admindn }}"
smb_ldap_adminpw: "{{ ldap_admin_password }}"

ldap_internal:
  ldap_organisation: "Johnsonville LLC"
  ldap_domain: "{{ ldap_internal_domain }}"
  ldap_base_dn: "{{ ldap_internal_base_dn }}"
  ldap_admin_password: "{{ ldap_admin_password }}"
  ldap_readonly_user: "true"
  ldap_readonly_user_username: "readonly"
  ldap_readonly_user_password: "{{ ldap_readonly_user_password }}"
  ldap_config_password: "{{ ldap_config_password }}"

ldap_external:
  ldap_organisation: "Dettonville LLC"
  ldap_domain: "{{ external_domain }}"
  ldap_base_dn: "dc=dettonville,dc=org"
  ldap_admin_password: "{{ ldap_admin_password }}"
  ldap_readonly_user: "true"
  ldap_readonly_user_username: "readonly"
  ldap_readonly_user_password: "{{ ldap_readonly_user_password }}"
  ldap_config_password: "{{ ldap_config_password }}"

ca_root:
  domainName: "{{ ca_root_cn }}"
  commonName: "{{ ca_root_cn }}"
  country: "US"
  state: "New York"
  locality: "New York"
  organization: "Dettonville LLC"
  organizationalUnit: "Research"
  email: "admin@dettonville.org"

ca_root_cn: "ca-root"

pki_caroot_cert: "{{ ca_root_cn }}.pem"
pki_caroot_key: "{{ ca_root_cn }}-key.pem"

trust_ca_cert_extension: "pem"

report_inventory_facts_git_repo_endpoint: "gitea.admin.dettonville.int:2222/infra/report-inventory-facts.git"
#report_inventory_facts_git_repo_endpoint: "gitea.admin.dettonville.int/infra/report-inventory-facts.git"
report_inventory_facts_git_repo_branch: "main"
report_inventory_facts_git_repo_url_scheme: "ssh"

report_inventory_facts_inventory_source: "{{ dc_environment | upper }}"

#report_inventory_facts_git_repo_user: ansible
#report_inventory_facts_git_repo_url_scheme: "https"
#report_inventory_facts_git_repo_token: "fasdgasgdf"

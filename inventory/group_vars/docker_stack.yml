---

docker_stack__service_groups__base:
  - name: base
    source: role

docker_stack__python_docker_interpreter: "{{ ansible_python_docker_interpreter }}"

registry_domain: "{{ control_plane_domain }}"

ca_service_route: "{{ docker_stack__internal_domain }}"

bind_aliases:
  - "{{ docker_stack__service_route_name if docker_stack__service_route_name != inventory_hostname_short else '' }}"

ca_domains_hosted:
  - "{{ docker_stack__internal_domain }}"

#docker_stack__user_username: "adminuser"
#docker_stack__user_group: "adminuser"

docker_stack__dir: "{{ docker_stack__user_home }}/docker"

#docker_stack__admin_jobs: []

#nfs_exports:
#  - "/srv      192.168.0.0/255.255.0.0(ro,fsid=0,async,nohide,no_subtree_check,crossmnt)"

# docker_stack__service_groups: []

################################
## NOTE: You need the following ports open to traffic to and from each Docker host participating on an overlay network:
## Reference:
##   https://www.digitalocean.com/community/tutorials/how-to-configure-the-linux-firewall-for-docker-swarm-on-centos-7
##   https://stackoverflow.com/questions/52665442/docker-swarm-host-cannot-resolve-hosts-on-other-nodes
firewalld_ports__docker:
  - "2376/tcp"
  - "2377/tcp"
  - "4789/udp"
  - "7946/tcp"

#time_server: 0.pool.ntp.org
#time_server: 192.168.0.1
time_server: "{{ gateway_ipv4_subnet_1_2 }}.0.1"

#docker_stack__run_services: no
#docker_stack__traefik_version: v1
#docker_stack__traefik_certprovider_qa: yes

docker_stack__script_dir: "/opt/scripts"

#docker_stack__enable_external_route: yes

docker_stack__http_username: "{{ vault__docker_stack__http_username | d('') }}"
docker_stack__http_password: "{{ vault__docker_stack__http_password | d('') }}"

docker_stack__enable_selfsigned_certs: no
docker_stack__enable_cacerts: yes

#docker_stack__ca_cert_bundle: "{{ ca_cert_bundle }}"
#docker_stack__ca_java_keystore: "{{ ca_java_keystore }}"

docker_stack__mysql_root_password: "{{ vault__docker_stack__mysql_root_password | d('') }}"
docker_stack__grafana_admin_password: "{{ vault__docker_stack__grafana_admin_password | d('') }}"

############
## LDAP
############
docker_stack__ldap_domain: "{{ docker_stack__internal_root_domain }}"
#docker_stack__ldap_domain: "{{ control_plane_domain }}"

docker_stack__ldap_host: "ldap.{{ docker_stack__ldap_domain }}"
docker_stack__ldap_port: "389"
docker_stack__ldap_endpoint: "{{ docker_stack__ldap_host }}:{{ docker_stack__ldap_port }}"
docker_stack__ldap_uri: "ldap://{{ docker_stack__ldap_endpoint }}"

docker_stack__ldap_domain_parts: |
  [
    {% for domain in docker_stack__ldap_domain | split('.') %}
    "dc={{ domain }}",
    {% endfor %}
  ]

docker_stack__ldap_base_dn: "{{ docker_stack__ldap_domain_parts | join(',') }}"
#docker_stack__ldap_base_dn: "{{ ldap_internal_base_dn }}"
docker_stack__ldap_user_base_dn: "ou=users,{{ docker_stack__ldap_base_dn }}"
docker_stack__ldap_group_base_dn: "ou=groups,{{ docker_stack__ldap_base_dn }}"
#docker_stack__ldap_user_base_dn: "{{ ldap_internal_user_search_base_dn }}"
#docker_stack__ldap_search_user_dn: "{{ ldap_internal_search_user_dn }}"

docker_stack__ldap_root_password: "{{ ldap_root_password | d('password') }}"
docker_stack__ldap_admin_password: "{{ ldap_admin_password | d('password') }}"
docker_stack__ldap_config_password: "{{ ldap_config_password | d('passsword') }}"
docker_stack__ldap_bind_user_username: "readonly"
docker_stack__ldap_bind_user_password: "{{ ldap_readonly_password }}"
#docker_stack__ldap_search_user_password: "{{ ldap_search_user_password }}"

#docker_stack__ldap_user_root_samba_nt_password: "{{ vault__ldap_domain_users['root'].sambaNTPassword }}"
#docker_stack__ldap_user_root_password: "{{ vault__ldap_domain_users['root'].ssha_password }}"

############
## STEPCA
############
stepca_root_ca_fingerprint: "{{ vault__stepca_root_ca_fingerprint | d('') }}"
docker_stepca_enc_key: "{{ vault__docker_stepca_enc_key | d('') }}"

docker_stack__redis_password: "{{ vault__docker_stack__redis_password | d('') }}"

docker_stack__gitea_lfs_jwt_secret: "{{ vault__docker_stack__gitea_lfs_jwt_secret | d('') }}"
docker_stack__gitea_secret_key: "{{ vault__docker_stack__gitea_secret_key | d('') }}"
docker_stack__gitea_internal_token: "{{ vault__docker_stack__gitea_internal_token | d('') }}"
docker_stack__gitea_oauth_jwt_secret: "{{ vault__docker_stack__gitea_oauth_jwt_secret | d('') }}"

docker_stack__healthchecks_email_su_password: "{{ vault__docker_stack__healthchecks_email_su_password | d('') }}"

docker_stack__keycloak_user: "{{ vault__docker_stack__keycloak_user | d('') }}"
docker_stack__keycloak_password: "{{ vault__docker_stack__keycloak_password | d('') }}"

docker_stack__wordpress_db_password: "{{ vault__docker_stack__wordpress_db_password | d('') }}"

docker_stack__jenkins_mgr_pwd_secret: "{{ vault__docker_stack__jenkins_mgr_pwd_secret | d('') }}"
#docker_stack__jenkins_agent_secret: "{{ vault__docker_stack__jenkins_agent_secret | d('') }}"
docker_stack__jenkins_agent_secret: "{{ vault__docker_stack__jenkins_agent_secrets[inventory_hostname] | d('') }}"

docker_stack__jenkins_swarm_username: "{{ jenkins_agent_username }}"
docker_stack__jenkins_swarm_password: "{{ vault__jenkins_agent_password }}"

docker_stack__keycloak_postgres_user: keycloak
docker_stack__keycloak_postgres_password: "{{ vault__docker_stack__keycloak_postgres_password }}"

docker_stack__gitea_postgres_password: "{{ vault__docker_stack__gitea_postgres_password }}"

docker_stack__vnc_passwd: "{{ vault__docker_stack__vnc_passwd }}"

docker_stack__jenkins_vmware_data_dir: /data/datacenter/vmware

docker_stack__service_route_name: "{{ inventory_hostname_short }}"

docker_stack__internal_ssl_cert_dir: "{{ cacert_local_cert_dir }}"
docker_stack__internal_ssl_certkey_dir: "{{ cacert_local_key_dir }}"

docker_stack__stepca_ca_name: "stepca.{{ docker_stack__internal_domain }}"

docker_stack__smtp_address: "mail.johnson.int"
docker_stack__smtp_port: 25

docker_stack__archiva_smtp_host: "{{ docker_stack__smtp_address }}"

docker_stack__gitlab_smtp_address: "{{ docker_stack__smtp_address }}"
docker_stack__gitlab_smtp_port: "{{ docker_stack__smtp_port }}"

docker_stack__email_from: "admin@dettonville.org"
docker_stack__email_to: "admin@dettonville.org"
docker_stack__email_default_suffix: "@dettonville.org"

docker_stack__email_admin_address: "admin+jenkins@dettonville.com"


docker_stack__healthchecks_site_name: "Dettonville HealthChecks"
docker_stack__healthchecks_default_from_email: "{{ docker_stack__email_from }}"
docker_stack__healthchecks_email_host: "{{ docker_stack__smtp_address }}"
docker_stack__healthchecks_email_port: "{{ docker_stack__smtp_port }}"
docker_stack__healthchecks_email_su_email: "{{ docker_stack__email_to }}"

docker_stack__pgadmin_config_use_ldap: yes

docker_stack__pgadmin_config_ldap_server_uri: "{{ ldap_internal_host }}"
docker_stack__pgadmin_config_ldap_base_dn: "{{ ldap_internal_base_dn }}"
docker_stack__pgadmin_config_ldap_search_base_dn: "{{ ldap_internal_user_search_base_dn }}"
#docker_stack__pgadmin_config_ldap_search_filter: "(cn=*)"
docker_stack__pgadmin_config_ldap_search_filter: "(objectClass=user)"

stepca_acme_http_challenge_proxy_port: 8980
docker_stack__acme_http_challenge_proxy_port: "{{ stepca_acme_http_challenge_proxy_port }}"

#docker_stack__compose_http_timeout: 120
docker_stack__compose_http_timeout: 240

docker_source_images: []

##########
## stepca
##########

#docker_stack__stepca_image: "media.johnson.int:5000/docker-stepca:latest"

##########
## other
##########
docker_stack__vmware_data_dir: /data/datacenter/vmware

##########
## registry
##########
docker_registry_login: yes

#docker_stack__registry_url: "https://{{ docker_stack__registry_endpoint }}/v2/"

docker_stack__registry_login: yes

docker_stack__registry_name: "{{ docker_stack__internal_domain }}"
docker_stack__registry_endpoint: "{{ docker_registry }}"

docker_stack__registry_username: "{{ docker_registry_username }}"
docker_stack__registry_password: "{{ docker_registry_password }}"

docker_stack__registry_service_common_name: "{{ docker_stack__internal_domain }}"
docker_stack__registry_users: "{{ registry_users }}"


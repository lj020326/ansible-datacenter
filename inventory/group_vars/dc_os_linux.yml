---
#ansible_user: ansible

#ansible_password: "{{ ansible_password__linux }}"

#python_target_dist: "3.7"
#python_major_version: "{{ python_target_dist.split('.')[0] }}"
#
##python_dists:
##  - version: 3.6
###    major_version: 3
##  - version: 2.7
###    major_version: 2

os_python2_interpreter: "/usr/bin/python2"
os_python3_interpreter: "/usr/bin/python3"
os_pip2_bin: "/usr/bin/pip2"
os_pip3_bin: "/usr/bin/pip3"

os_python_interpreter: "{{ os_python3_interpreter }}"
os_pip_bin: "{{ os_pip3_bin }}"

ping_test__module: 'ping'

ansible_python_interpreter: "{{ os_python_interpreter }}"
ansible_pip_executable: "{{ os_pip_bin }}"

bootstrap_linux_package_pip_executable: "{{ ansible_pip_executable }}"

### https://github.com/nickjj/ansible-docker
#ansible_python_docker_interpreter: "/usr/bin/env python-docker"
#ansible_python_docker_interpreter: "/usr/local/bin/python-docker"

ansible_python_docker_venv: "/usr/local/lib/docker/virtualenv"
ansible_python_docker_interpreter: "{{ ansible_python_docker_venv }}/bin/python"

openstack_venv_path: "/opt/openstack"
ansible_openstack_python_interpreter: "{{ openstack_venv_path  }}/bin/python"

#gateway_ipv4_net_cidr: 16
#gateway_ipv4_net_cidr: 8

bootstrap_linux_core__dns_domain: "{{ dns_domain }}"
bootstrap_linux_core__dns_search_domains: "{{ dns_search_domains }}"
bootstrap_linux_core__hostname_internal_domain: "{{ internal_domain }}"
bootstrap_linux_core__hostname_name_full: "{{ inventory_hostname_short }}.{{ hostname_internal_domain }}"
bootstrap_linux_core__hostname_name_short: "{{ inventory_hostname_short }}"

bootstrap_linux_core__network_name_servers: "{{ dns_nameservers }}"

cacerts_keystore_cert_dir: /etc/ssl/certs
cacerts_keystore_dir: /etc/ssl/private

cacert_local_cert_dir: /usr/local/ssl/certs
cacert_local_key_dir: /usr/local/ssl/private

deploy_cacerts__trust_ca_cacert_dir: "{{ trust_ca_cacert_dir }}"
deploy_cacerts__trust_ca_update_trust_cmd: "{{ trust_ca_update_trust_cmd }}"
deploy_cacerts__ca_java_keystore: "{{ ca_java_keystore }}"

## OS VM provisioned user used to initially bootstrap OS admin users
#bootstrap_user: root
#bootstrap_user: administrator
#bootstrap_user: packer

bootstrap_linux_user_creds: "{{ vault__user_credentials | d({}) }}"

bootstrap_linux_ansible_username: "{{ ansible_user }}"
#bootstrap_linux_ansible_authorized_public_sshkey: "{{ '~/.ssh/id_rsa.pub' | expanduser }}"
bootstrap_linux_ansible_authorized_public_sshkey: "{{ ansible_ssh_public_key }}"

bootstrap_linux_core__timezone: America/New_York

cacert_repo_email: "ansible@dettonville.org"

#harden_linux_os_auditd_max_log_file_action: keep_logs
harden_linux_os_auditd_max_log_file_action: rotate

logrotate_applications:
  - name: audit
    definitions:
      - logs:
          - "/var/log/audit/*.log"
        options:
#          - su user group
          - rotate 4
          - daily
#          - weekly
          - missingok
          - notifempty
  - name: mail
    definitions:
      - logs:
        -  "/var/log/mail.*.log"
        options:
          - daily
          - size 25M
          - rotate 4
          - missingok
          - compress
          - delaycompress
          - copytruncate


timezone: "America/New_York"

## ansible-harden-linux
#harden_linux_os_login_defs_enabled: yes
#harden_linux_cron_enabled: yes
#harden_linux_os_auditd_enabled: yes
#harden_linux_sysctl_enabled: yes

#harden_linux_os_auth_pw_max_age: 99999
#harden_linux_os_auth_pw_min_age: 0


## SSHD configs
## https://www.ssh.com/ssh/sshd_config/
## https://github.com/willshersystems/ansible-sshd
## https://gist.github.com/cmavr8/eb4a9e596bd0e3e85f97d907de288c54
## https://www.veeam.com/kb2061
## https://gist.github.com/cmavr8/eb4a9e596bd0e3e85f97d907de288c54
sshd:
  AcceptEnv: LANG LC_*
  AuthorizedKeysFile: .ssh/authorized_keys
  ChallengeResponseAuthentication: no
  Ciphers: aes256-gcm@openssh.com,aes128-ctr,aes192-ctr,aes256-ctr
  GSSAPIAuthentication: yes
  GSSAPICleanupCredentials: no
  KexAlgorithms: curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512,diffie-hellman-group14-sha256,diffie-hellman-group-exchange-sha256,diffie-hellman-group1-sha1
  MACs: hmac-sha2-256,hmac-sha2-512,hmac-sha1
  PasswordAuthentication: yes
#  Banner: /etc/issue
  PrintMotd: no
#  Subsystem: "sftp {{ '/usr/libexec/openssh/sftp-server' if ansible_os_family=='RedHat' else '/usr/lib/openssh/sftp-server' }}"
  SyslogFacility: AUTHPRIV
  UseDNS: no
  UsePAM: yes
#  UsePrivilegeSeparation: sandbox
  X11Forwarding: yes

  ## use LDAP ssh public key
  ## ref: http://pig.made-it.com/ldap-openssh.html#29273
  AuthorizedKeysCommand: /usr/local/bin/fetchSSHKeysFromLDAP
  AuthorizedKeysCommandUser: nobody
#  AuthorizedKeysCommandRunAs root

## DO NOT USE 'ansible_user_uid/gid' as variable name since it is a special variable
ansible_user__userid: "400"
ansible_user__groupid: "400"

admin_user_name: "administrator"
admin_user_uid: "500"
admin_user_gid: "500"

#container_user_name: "container-user"
##container_user_uid: "1100"
##container_user_gid: "1100"
#container_user_uid: "1102"
#container_user_gid: "1102"

linux_user_admin_sudo_groups:
  debian: sudo
  redhat: wheel

linux_user_admin_sudo_group:  "{{ linux_user_admin_sudo_groups[ ansible_os_family|lower ] }}"

bootstrap_linux_root_user:
  name: root
  homedir: /root
  generate_ssh_key: no
  setup_bashenv: no
  hashed_password: "{{ sha512_hashed_root_password }}"

bootstrap_ansible_user:
  name: ansible
  system: yes
  shell: /bin/bash
  groups: "{{ linux_user_admin_sudo_group }}"
  generate_ssh_key: no
  uid: "{{ ansible_user__userid }}"
  gid: "{{ ansible_user__groupid }}"
  password_valid_days: 99999

## ref: https://unix.stackexchange.com/questions/343445/user-id-less-than-1000-on-centos-7
bootstrap_linux_system_users:
  - "{{ bootstrap_ansible_user }}"
  - name: "{{ admin_user_name }}"
    system: yes
    shell: /bin/bash
    groups: "{{ linux_user_admin_sudo_group }}"
    generate_ssh_key: no
    uid: "{{ admin_user_uid }}"
    gid: "{{ admin_user_gid }}"
    password_valid_days: 99999


## users to create on linux machine (excluding the ansible provisioning user)
bootstrap_linux_user_list: "{{ bootstrap_linux_system_users }}"


harden_linux_sysctl_overwrite:
  ## if docker/k8s, enable ipv4 forwarding
  # Enable IPv4 traffic forwarding.
  net.ipv4.ip_forward: 1

  ## ref: https://bbs.archlinux.org/viewtopic.php?id=141144
#  net.ipv6.ip_forward: 0

  ## ref: https://wwwx.cs.unc.edu/~sparkst/howto/network_tuning.php
  net.core.rmem_default: 65536
  net.core.wmem_default: 65536

  ## ref: https://www.cyberciti.biz/faq/linux-tcp-tuning/
  ##  The default value of rmem_max and wmem_max is about 128 KB in most Linux distributions,
  ##  which may be enough for a low-latency general purpose network environment or for apps such as DNS / Web server.
  ##  However, if the latency is large, the default size might be too small.
  ## Please note that the following settings going to increase memory usage on your server.
#  net.core.rmem_max: 8388608
#  net.core.wmem_max: 8388608
  net.core.wmem_max: 12582912
  net.core.rmem_max: 12582912

  ##  You also need to set minimum size, initial size, and maximum size in bytes:
  net.ipv4.tcp_rmem: '10240 87380 12582912'
  net.ipv4.tcp_wmem: '10240 87380 12582912'
  net.ipv4.tcp_mem: '12582912 12582912 12582912'

  ## Turn on window scaling which can be an option to enlarge the transfer window:
  net.ipv4.tcp_window_scaling: 1

  ## Enable select acknowledgments:
  net.ipv4.tcp_sack: 1

  ## By default, TCP saves various connection metrics in the route cache when the connection closes,
  ## so that connections established in the near future can use these to set initial conditions.
  ## Usually, this increases overall performance, but may sometimes cause performance degradation.
  ## If set, TCP will not cache metrics on closing connections.
  net.ipv4.tcp_no_metrics_save: 1

  ## Set maximum number of packets, queued on the INPUT side, when the interface receives packets faster than kernel can process them.
  net.core.netdev_max_backlog: 5000



#
#bootstrap_linux_core__network:
#  network:
#    version: 2
#    renderer: networkd
#    ethernets:
#      ens192:
#        dhcp4: yes
#        dhcp6: no
##        ## ref: https://www.oxcrag.net/2019/02/07/creating-a-working-ubuntu-18-04-vmware-template/
##        dhcp-identifier: mac
#        set-name: ens192
#


### bootstrap-node
### bootstrap-awstats
#awstats_enabled: no
##awstats_domain: "dettonville.org"
#awstats_domain: "johnson.local"
#apache_vhosts_awstats:
#  - {servername: "localhost", serveradmin: "admin@dettonville.org", documentroot: "/usr/lib/cgi-bin"}

### IPA
### ref: https://github.com/nathancurry/homelab.ansible/tree/master
#searchdomain: 'dettonville.int'
#
#ipaserver_domain: 'dettonville.int'
#ipaserver_realm: 'DETTONVILLE.INT'
#ipaserver_forwarders:
#  - 192.168.30.2
#  - 192.168.30.3
#ipaserver_no_reverse: false
#ipaserver_setup_dns: yes
#
#ipaclient_domain: 'dettonville.int'
#ipaclient_no_ntp: 'yes'
#
#freeipa_server: 'ipa1.dettonville.int'
#

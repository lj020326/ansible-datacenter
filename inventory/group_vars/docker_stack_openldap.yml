---

docker_stack_service_groups__openldap:
  - openldap

###########
## openldap config
###########

## ldap domain users
docker_stack_ldap_domain_sid_root: "{{ vault__ldap_domain_sid_root }}"
docker_stack_ldap_domain_group_sid_root: "S-1-5-32"
docker_stack_ldap_admins_gid_number: 500
docker_stack_ldap_users_gid_number: 502

docker_stack_ldap_user_media_uid: "media"
docker_stack_ldap_user_media_uid_number: 10003
docker_stack_ldap_user_media_gid_number: 995

docker_stack_ldap_domain_guests_gid_number: 511
docker_stack_ldap_domain_users_gid_number: 513
docker_stack_ldap_domain_admins_gid_number: 512
#docker_stack_ldap_domain_admins_gid_number: 544
docker_stack_ldap_domain_computers_gid_number: 515

docker_stack_ldap_domain_account_operators_gid_number: 548
docker_stack_ldap_domain_print_operators_gid_number: 550
docker_stack_ldap_domain_backup_operators_gid_number: 551
docker_stack_ldap_domain_replicators_gid_number: 552

docker_stack_ldap_domain_guests_group_sid: "{{ docker_stack_ldap_domain_sid_root }}-{{ docker_stack_ldap_domain_guests_gid_number }}"
docker_stack_ldap_domain_users_group_sid: "{{ docker_stack_ldap_domain_sid_root }}-{{ docker_stack_ldap_domain_users_gid_number }}"
#docker_stack_ldap_domain_admins_group_sid: "{{ docker_stack_ldap_domain_group_sid_root }}-{{ docker_stack_ldap_domain_admins_gid_number }}"
docker_stack_ldap_domain_admins_group_sid: "{{ docker_stack_ldap_domain_sid_root }}-{{ docker_stack_ldap_domain_admins_gid_number }}"
docker_stack_ldap_domain_computers_group_sid: "{{ docker_stack_ldap_domain_sid_root }}-{{ docker_stack_ldap_domain_computers_gid_number }}"
docker_stack_ldap_domain_print_operators_group_sid: "{{ docker_stack_ldap_domain_group_sid_root }}-{{ docker_stack_ldap_domain_print_operators_gid_number }}"
docker_stack_ldap_domain_backup_operators_group_sid: "{{ docker_stack_ldap_domain_group_sid_root }}-{{ docker_stack_ldap_domain_backup_operators_gid_number }}"
docker_stack_ldap_domain_account_operators_group_sid: "{{ docker_stack_ldap_domain_group_sid_root }}-{{ docker_stack_ldap_domain_account_operators_gid_number }}"
docker_stack_ldap_domain_replicators_group_sid: "{{ docker_stack_ldap_domain_group_sid_root }}-{{ docker_stack_ldap_domain_replicators_gid_number }}"

#docker_stack_ldap_samba_user_primary_group_sid: "{{ docker_stack_ldap_domain_sid_root }}-2005"
docker_stack_ldap_samba_guest_user_primary_group_sid: "{{ docker_stack_ldap_domain_sid_root }}-2014"
#docker_stack_ldap_samba_admin_sid: "{{ docker_stack_ldap_domain_sid_root }}-500"

docker_stack_ldap_domain_ou_map:
  groups: {}
  users: {}
  hosts: {}
  computers: {}
  Idmap: {}
  SUDOers: {}
  teams:
    parent_ou: "ou=groups"
  infra:
    parent_ou: "ou=teams,ou=groups"
  app123:
    parent_ou: "ou=teams,ou=groups"
  cloudusers:
    parent_ou: "ou=groups"
  applications:
    parent_ou: "ou=groups"
  jenkins:
    parent_ou: "ou=applications,ou=groups"
  django:
    parent_ou: "ou=applications,ou=groups"

docker_stack_ldap_base_user_map:
  search:
    description: LDAP read only user
    ssha_password: "{{ vault__ldap_base_user_search_password_ssha }}"

docker_stack_ldap_domain_user_map_public:
  root:
    uid_number: 0
    gid_number: 500
    homedir: /root
  netadmin:
    uid_number: 10000
    object_class_list:
      - top
      - inetOrgPerson
      - posixAccount
      - sambaSamAccount
      - shadowAccount
      - ldapPublicKey
    gecos: netadmin
    given_name: netadmin
    samba:
      primary_group_sid: "{{ docker_stack_ldap_domain_admins_group_sid }}"
#      sid: "{{ docker_stack_ldap_samba_admin_sid }}"
  admin:
    uid_number: 10004
    gid_number: "{{ docker_stack_ldap_domain_admins_gid_number }}"
    object_class_list:
      - top
      - sambaSamAccount
      - posixAccount
      - inetOrgPerson
      - organizationalPerson
      - person
    mail: admin@epgtec.com
    samba:
      primary_group_sid: "{{ docker_stack_ldap_domain_admins_group_sid }}"
  smbguest:
    username: smbguest
    uid_number: 10002
    object_class_list:
      - top
      - sambaSamAccount
      - posixAccount
      - inetOrgPerson
      - organizationalPerson
      - person
      - shadowAccount
    homedir: /nonexistent
    samba:
      primary_group_sid: "{{ docker_stack_ldap_domain_users_group_sid }}"
      sid: "{{ docker_stack_ldap_samba_guest_user_primary_group_sid }}"
  nobody:
    username: nobody
    uid_number: 65534
    gid_number: 514
    object_class_list:
      - top
      - inetOrgPerson
      - organizationalPerson
      - person
      - posixAccount
      - sambaSamAccount
      - shadowAccount
    homedir: /nonexistent
    login_shell: /bin/false
    samba:
      primary_group_sid: "{{ docker_stack_ldap_samba_guest_user_primary_group_sid }}"
      account_flags: "[NUD        ]"
  media:
    username: media
    uid_number: "{{ docker_stack_ldap_user_media_uid_number }}"
    gid_number: "{{ docker_stack_ldap_user_media_gid_number }}"
    object_class_list:
      - top
      - inetOrgPerson
      - posixAccount
      - shadowAccount
  ljohnson:
    username: ljohnson
    uid_number: 10100
    gid_number: "{{ docker_stack_ldap_users_gid_number }}"
    object_class_list:
      - top
      - inetOrgPerson
      - posixAccount
      - sambaSamAccount
      - shadowAccount
      - ldapPublicKey
      - organizationalPerson
      - person
    cn: Lee Johnson
    given_name: Lee
    sn: Johnson
    display_name: Lee Johnson
    initials: LJ
    mail: lee.james.johnson@gmail.com
    samba:
      primary_group_sid: "{{ docker_stack_ldap_domain_users_group_sid }}"
  testuser_infra_admin01:
    username: testuser_infra_admin01
    gid_number: "{{ docker_stack_ldap_users_gid_number }}"
    cn: TestUser-InfraAdmin01
    given_name: TestUserInfraAdmin01
    sn: InfraAdmin01
    display_name: TestUser-InfraAdmin01
    initials: TUIA01
    mail: testuser_infra_admin01@dettonville.org
    ssha_password: "{{ vault__ldap_test_user_ssha_password }}"
    samba:
      primary_group_sid: "{{ docker_stack_ldap_domain_users_group_sid }}"
      nt_password: "{{ vault__ldap_test_user_nt_password }}"
  testuser_infra_dev01:
    username: testuser_infra_dev01
    gid_number: "{{ docker_stack_ldap_users_gid_number }}"
    cn: TestUser-InfraDev01
    given_name: TestUserInfraDeveloper01
    sn: InfraDev01
    display_name: TestUser-InfraDeveloper01
    initials: TUID01
    mail: testuser_infra_dev01@dettonville.org
    ssha_password: "{{ vault__ldap_test_user_ssha_password }}"
    samba:
      primary_group_sid: "{{ docker_stack_ldap_domain_users_group_sid }}"
      nt_password: "{{ vault__ldap_test_user_nt_password }}"
  testuser_infra_dev02:
    username: testuser_infra_dev02
    gid_number: "{{ docker_stack_ldap_users_gid_number }}"
    cn: TestUser-InfraDev02
    given_name: TestUserInfraDeveloper02
    sn: InfraDev02
    display_name: TestUser-InfraDeveloper02
    initials: TUID02
    mail: testuser_infra_dev02@dettonville.org
    ssha_password: "{{ vault__ldap_test_user_ssha_password }}"
    samba:
      primary_group_sid: "{{ docker_stack_ldap_domain_users_group_sid }}"
      nt_password: "{{ vault__ldap_test_user_nt_password }}"
  testuser_infra_product01:
    username: testuser_infra_product01
    gid_number: "{{ docker_stack_ldap_users_gid_number }}"
    cn: TestUser-InfraProduct01
    given_name: TestUserInfraProduct01
    sn: InfraProduct01
    display_name: TestUser-InfraProduct01
    initials: TUIP01
    mail: testuser_infra_product01@dettonville.org
    ssha_password: "{{ vault__ldap_test_user_ssha_password }}"
    samba:
      primary_group_sid: "{{ docker_stack_ldap_domain_users_group_sid }}"
      nt_password: "{{ vault__ldap_test_user_nt_password }}"
  testuser_infra_product02:
    username: testuser_infra_product02
    gid_number: "{{ docker_stack_ldap_users_gid_number }}"
    cn: TestUser-InfraProduct02
    given_name: TestUserInfraProduct02
    sn: InfraProduct02
    display_name: TestUser-InfraProduct02
    initials: TUIP02
    mail: testuser_infra_product02@dettonville.org
    ssha_password: "{{ vault__ldap_test_user_ssha_password }}"
    samba:
      primary_group_sid: "{{ docker_stack_ldap_domain_users_group_sid }}"
      nt_password: "{{ vault__ldap_test_user_nt_password }}"
  testuser_app123_admin01:
    username: testuser_app123_admin01
    gid_number: "{{ docker_stack_ldap_users_gid_number }}"
    cn: TestUser-App123Admin01
    given_name: TestUserApp123Admin01
    sn: App123Admin01
    display_name: TestUser-App123Admin01
    initials: TUA123A01
    mail: testuser_app123_admin01@dettonville.org
    ssha_password: "{{ vault__ldap_test_user_ssha_password }}"
    samba:
      primary_group_sid: "{{ docker_stack_ldap_domain_users_group_sid }}"
      nt_password: "{{ vault__ldap_test_user_nt_password }}"
  testuser_app123_dev01:
    username: testuser_app123_dev01
    gid_number: "{{ docker_stack_ldap_users_gid_number }}"
    cn: TestUser-App123Dev01
    given_name: TestUserApp123Developer01
    sn: App123Dev01
    display_name: TestUser-App123Developer01
    initials: TUA123D01
    mail: testuser_app123_dev01@dettonville.org
    ssha_password: "{{ vault__ldap_test_user_ssha_password }}"
    samba:
      primary_group_sid: "{{ docker_stack_ldap_domain_users_group_sid }}"
      nt_password: "{{ vault__ldap_test_user_nt_password }}"
  testuser_app123_dev02:
    username: testuser_app123_dev02
    gid_number: "{{ docker_stack_ldap_users_gid_number }}"
    cn: TestUser-App123Dev02
    given_name: TestUserApp123Developer02
    sn: App123Dev02
    display_name: TestUser-App123Developer02
    initials: TUA123D02
    mail: testuser_app123_dev02@dettonville.org
    ssha_password: "{{ vault__ldap_test_user_ssha_password }}"
    samba:
      primary_group_sid: "{{ docker_stack_ldap_domain_users_group_sid }}"
      nt_password: "{{ vault__ldap_test_user_nt_password }}"
  testuser_app123_product01:
    username: testuser_app123_product01
    gid_number: "{{ docker_stack_ldap_users_gid_number }}"
    cn: TestUser-App123Product01
    given_name: TestUserApp123Product01
    sn: App123Product01
    display_name: TestUser-App123Product01
    initials: TUA123P01
    mail: testuser_app123_product01@dettonville.org
    ssha_password: "{{ vault__ldap_test_user_ssha_password }}"
    samba:
      primary_group_sid: "{{ docker_stack_ldap_domain_users_group_sid }}"
      nt_password: "{{ vault__ldap_test_user_nt_password }}"
  testuser_app123_product02:
    username: testuser_app123_product02
    gid_number: "{{ docker_stack_ldap_users_gid_number }}"
    cn: TestUser-App123Product02
    given_name: TestUserApp123Product02
    sn: App123Product02
    display_name: TestUser-App123Product02
    initials: TUA123P02
    mail: testuser_app123_product02@dettonville.org
    ssha_password: "{{ vault__ldap_test_user_ssha_password }}"
    samba:
      primary_group_sid: "{{ docker_stack_ldap_domain_users_group_sid }}"
      nt_password: "{{ vault__ldap_test_user_nt_password }}"


docker_stack_ldap_domain_user_map: "{{ docker_stack_ldap_domain_user_map_public | combine(vault__ldap_domain_user_map|d({}), recursive=True) }}"

docker_stack_ldap_domain_group_map_public:
  admins:
    gid_number: "{{ docker_stack_ldap_admins_gid_number }}"
#    object_class_list:
#      - top
#      - posixGroup
    memberUidList:
      - netadmin
      - admin
#      - administrator
#      - ansible
  users:
    gid_number: "{{ docker_stack_ldap_users_gid_number }}"
#    object_class_list:
#      - top
#      - posixGroup
  wheel:
    gid_number: 504
    memberUidList:
      - netadmin
      - admin
#      - administrator
  irc:
    gid_number: 505

#  Administrators:
#    gid_number: "{{ docker_stack_ldap_domain_admins_gid_number }}"
#    description: Domain Members can fully administer the computer/sambaDomainName
#    display_name: Administrators
#    object_class_list:
#      - top
#      - posixGroup
#      - sambaGroupMapping
#    memberUidList:
#      - administrator
#    samba:
#      sid: "{{ docker_stack_ldap_domain_admins_group_sid }}"
#      group_type: 4

  Domain Computers:
    gid_number: "{{ docker_stack_ldap_domain_computers_gid_number }}"
    description: Domain Computers accounts
    display_name: Domain Computers
    object_class_list:
      - top
      - posixGroup
      - sambaGroupMapping
    samba:
      sid: "{{ docker_stack_ldap_domain_computers_group_sid }}"

  Domain Guests:
    gid_number: "{{ docker_stack_ldap_domain_guests_gid_number }}"
    display_name: Domain Guests
    description: Domain Guests Users
    object_class_list:
      - top
      - posixGroup
      - sambaGroupMapping
    samba:
      sid: "{{ docker_stack_ldap_domain_guests_group_sid }}"

  Domain Admins:
    gid_number: "{{ docker_stack_ldap_domain_admins_gid_number }}"
    display_name: Domain Admins
    description: Domain Administrators
    object_class_list:
      - top
      - posixGroup
      - sambaGroupMapping
    memberUidList:
      - netadmin
      - admin
#      - administrator
#      - ansible
#    samba: {}
    samba:
      sid: "{{ docker_stack_ldap_domain_admins_group_sid }}"
#      group_type: 4

  Domain Users:
    gid_number: "{{ docker_stack_ldap_domain_users_gid_number }}"
    display_name: Domain Users
    description: Domain Users
    object_class_list:
      - top
      - posixGroup
      - sambaGroupMapping
    memberUidList:
      - ljohnson
    samba:
      sid: "{{ docker_stack_ldap_domain_users_group_sid }}"
      users:
        - ljohnson

  Print Operators:
    gid_number: "{{ docker_stack_ldap_domain_print_operators_gid_number }}"
    description: Domain Print Operators
    display_name: Print Operators
    object_class_list:
      - top
      - posixGroup
      - sambaGroupMapping
    samba:
      group_type: 4
      sid: "{{ docker_stack_ldap_domain_print_operators_group_sid }}"

  Backup Operators:
    gid_number: "{{ docker_stack_ldap_domain_backup_operators_gid_number }}"
    description: Domain Members can bypass file security to back up files
    display_name: Backup Operators
    object_class_list:
      - top
      - posixGroup
      - sambaGroupMapping
    samba:
      group_type: 4
      sid: "{{ docker_stack_ldap_domain_backup_operators_group_sid }}"

  Account Operators:
    gid_number: "{{ docker_stack_ldap_domain_account_operators_gid_number }}"
    description: Domain Users to manipulate users accounts
    display_name: Account Operators
    object_class_list:
      - top
      - posixGroup
      - sambaGroupMapping
    samba:
      group_type: 4
      sid: "{{ docker_stack_ldap_domain_account_operators_group_sid }}"

  Replicators:
    gid_number: "{{ docker_stack_ldap_domain_replicators_gid_number }}"
    description: Domain Group Supports file replication in a sambaDomainName
    display_name: Replicators
    object_class_list:
      - top
      - posixGroup
      - sambaGroupMapping
    memberUidList:
      - netadmin
      - admin
      - media
#      - administrator
    samba:
      group_type: 4
      sid: "{{ docker_stack_ldap_domain_replicators_group_sid }}"

  sudo.defaults:
    cn: "defaults"
    parent_ou: "ou=SUDOers"
    description: "Default sudoOption's go here"
    object_class_list:
      - top
      - sudoRole
    sudo:
      sudoOptions:
        - env_reset
        - mail_badpass
        - secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      sudoOrder: 1

  sudo.root:
    cn: "root"
    parent_ou: "ou=SUDOers"
    object_class_list:
      - top
      - sudoRole
    sudo:
      sudoCommand: ALL
      sudoHost: ALL
      sudoOrder: 2
      sudoRunAsGroup: ALL
      sudoRunAsUser: ALL
      sudoUser: root

  sudo:
    cn: "%sudo"
    parent_ou: "ou=SUDOers"
    object_class_list:
      - top
      - sudoRole
    sudo:
      sudoCommand: ALL
      sudoHost: ALL
      sudoOrder: 4
      sudoRunAsGroup: ALL
      sudoRunAsUser: ALL
      sudoUser: "%sudo"

  sudo.admin:
    cn: "%admin"
    parent_ou: "ou=SUDOers"
    object_class_list:
      - top
      - sudoRole
    sudo:
      sudoCommand: ALL
      sudoHost: ALL
      sudoOrder: 3
      sudoRunAsUser: ALL
      sudoUser: "%admin"

  sudo.wheel:
    cn: "%wheel"
    parent_ou: "ou=SUDOers"
    object_class_list:
      - top
      - sudoRole
    sudo:
      sudoCommand: ALL
      sudoHost: ALL
      sudoOrder: 3
      sudoRunAsUser: ALL
      sudoUser: "%wheel"

  sudo.www-data:
    cn: "www-data"
    parent_ou: "ou=SUDOers"
    object_class_list:
      - top
      - sudoRole
    sudo:
      sudoOptions:
        - "!authenticate"
      sudoCommand: ALL
      sudoHost: ALL
      sudoOrder: 6
      sudoRunAsUser: ALL
      sudoUser: www-data

  smbguest:
    gid_number: 10002
    object_class_list:
      - top
      - posixGroup
      - sambaGroupMapping
    samba: {}
  smbuser:
    gid_number: 10001
    object_class_list:
      - top
      - posixGroup
      - sambaGroupMapping
    memberUidList:
      - media
      - ljohnson
      - jjohnson
      - rjohnson
      - ajohnson
      - testuser_infra_dev01
    samba:
      groups:
        - Domain Users
  smbadmin:
    gid_number: 10003
    object_class_list:
      - top
      - posixGroup
      - sambaGroupMapping
    memberUidList:
      - netadmin
      - admin
#      - administrator
#      - root
    samba:
      users:
        - admin
      groups:
        - Domain Admins
#        - Administrators

  media:
    gid_number: "{{ docker_stack_ldap_user_media_gid_number }}"
    object_class_list:
      - top
      - posixGroup
    memberUidList:
      - netadmin
      - admin
#      - administrator
      - media

  ###################
  ## TEAMS
  ###################

  ## INFRA - core infrastructure team
  teams.infra-admin:
    cn: infra-admin
    parent_ou: "ou=infra,ou=teams,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - ljohnson
      - testuser_infra_admin01
  teams.infra-dev:
    cn: infra-dev
    parent_ou: "ou=infra,ou=teams,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - testuser_infra_dev01
      - testuser_infra_dev02
  teams.infra-product:
    cn: infra-product
    parent_ou: "ou=infra,ou=teams,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - testuser_infra_product01
      - testuser_infra_product02

  ## JENKINS admin users and INFRA team users
  jenkins.admin:
    cn: admin
    parent_ou: "ou=jenkins,ou=applications,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - netadmin
      - admin
      - ljohnson
  jenkins.infra-admin:
    cn: infra-admin
    parent_ou: "ou=jenkins,ou=applications,ou=groups"
    object_class_list:
      - top
      - groupOfURLs
    memberURL: "ldap:///{{ docker_stack_ldap_user_base_dn }}??one?(memberof=cn=infra-admin,ou=infra,ou=teams,{{ docker_stack_ldap_group_base_dn }})"
  jenkins.infra-dev:
    cn: infra-dev
    parent_ou: "ou=jenkins,ou=applications,ou=groups"
    object_class_list:
      - top
      - groupOfURLs
    memberURL: "ldap:///{{ docker_stack_ldap_user_base_dn }}??one?(memberof=cn=infra-dev,ou=infra,ou=teams,{{ docker_stack_ldap_group_base_dn }})"
  jenkins.infra-product:
    cn: infra-product
    parent_ou: "ou=jenkins,ou=applications,ou=groups"
    object_class_list:
      - top
      - groupOfURLs
    memberURL: "ldap:///{{ docker_stack_ldap_user_base_dn }}??one?(memberof=cn=infra-product,ou=infra,ou=teams,{{ docker_stack_ldap_group_base_dn }})"

  ## APP123 - Middleware App123 team
  teams.app123-admin:
    cn: app123-admin
    parent_ou: "ou=app123,ou=teams,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - ljohnson
      - testuser_app123_admin01
  teams.app123-dev:
    cn: app123-dev
    parent_ou: "ou=app123,ou=teams,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - testuser_app123_dev01
      - testuser_app123_dev02
  teams.app123-product:
    cn: app123-product
    parent_ou: "ou=app123,ou=teams,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - testuser_app123_product01
      - testuser_app123_product02

  ## JENKINS - APP123 team users
  jenkins.app123-admin:
    cn: app123-admin
    parent_ou: "ou=jenkins,ou=applications,ou=groups"
    object_class_list:
      - top
      - groupOfURLs
    memberURL: "ldap:///{{ docker_stack_ldap_user_base_dn }}??one?(memberof=cn=app123-admin,ou=app123,ou=teams,{{ docker_stack_ldap_group_base_dn }})"
  jenkins.app123-dev:
    cn: app123-dev
    parent_ou: "ou=jenkins,ou=applications,ou=groups"
    object_class_list:
      - top
      - groupOfURLs
    memberURL: "ldap:///{{ docker_stack_ldap_user_base_dn }}??one?(memberof=cn=app123-dev,ou=app123,ou=teams,{{ docker_stack_ldap_group_base_dn }})"
  jenkins.app123-product:
    cn: app123-product
    parent_ou: "ou=jenkins,ou=applications,ou=groups"
    object_class_list:
      - top
      - groupOfURLs
    memberURL: "ldap:///{{ docker_stack_ldap_user_base_dn }}??one?(memberof=cn=app123-product,ou=app123,ou=teams,{{ docker_stack_ldap_group_base_dn }})"

  ## DJANGO app dev team
  staff.django:
    cn: staff
    parent_ou: "ou=django,ou=applications,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - ljohnson
      - jjohnson
      - testuser_infra_dev01
  epgblog.django:
    cn: epgblog
    parent_ou: "ou=django,ou=applications,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - ljohnson
      - jjohnson
      - testuser_infra_dev01
  superuser.django:
    cn: superuser
    parent_ou: "ou=django,ou=applications,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - netadmin
      - admin
      - ljohnson
      - jjohnson
      - testuser_infra_dev01

  ###################
  ## Cloud user groups
  ###################
  admin.cloudusers:
    cn: admin
    parent_ou: "ou=cloudusers,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - netadmin
      - admin
#      - administrator
      - ljohnson
  family.cloudusers:
    cn: family
    parent_ou: "ou=cloudusers,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - ljohnson
      - jjohnson
      - rjohnson
      - ajohnson
      - testuser_infra_dev01
  epgblog.cloudusers:
    cn: epgblog
    parent_ou: "ou=cloudusers,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - admin
#      - administrator
      - ljohnson
      - jjohnson
      - testuser_infra_dev01
  nextcloud.cloudusers:
    cn: nextcloud
    parent_ou: "ou=cloudusers,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - ljohnson
      - jjohnson
      - rjohnson
      - ajohnson
      - testuser_infra_dev01
  superuser.cloudusers:
    cn: superuser
    parent_ou: "ou=cloudusers,ou=groups"
    object_class_list:
      - top
      - groupOfNames
    memberDnList:
      - netadmin
      - admin
      - ljohnson
      - jjohnson
      - testuser_infra_dev01
  test-samba:
#    gid_number: 10000
    display_name: test
    object_class_list:
      - posixGroup
      - sambaGroupMapping
    samba:
      users:
        - ljohnson
        - testuser_infra_dev01
        - testuser_infra_dev02

docker_stack_ldap_domain_group_map: "{{ docker_stack_ldap_domain_group_map_public
  | combine(vault__ldap_domain_group_map|d({}), recursive=True) }}"

##########
## ldap domain hosts
##########
#docker_stack_ldap_domain_host_list: "{{ groups['ldap_managed_host'] | d([]) }}"
#docker_stack_ldap_domain_host_list: "{{ groups['ca_domain_int_dettonville'] | d([]) }}"
docker_stack_ldap_domain_host_list: "{{ groups['ca_domain_int_johnson'] | d([]) }}"

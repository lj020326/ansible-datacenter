---

############
## DNS related vars
############
dns_domain: "{{ internal_domain }}"
dns_search_domains:
  - johnson.int
  - dettonville.int

dns_nameservers:
  - "{{ gateway_ipv4 }}"

#############
## machine ip
#############
apply_common_groups__dns_servers: "{{ dns_nameservers }}"
dc_dns_servers: "{{ dns_nameservers }}"

## ref: https://ansible-collections.github.io/community.dns/branch/main/lookup_lookup.html
dc_machine_dns_ipv4: "{{ 
  query('community.dns.lookup', 
        inventory_hostname, 
        server=dc_dns_servers,
        nxdomain_handling='empty') | first }}"

dc_machine_address_list_ipv4: "{{
    ansible_facts.all_ipv4_addresses
    | d(ansible_facts|json_query('interfaces[*].ipv4.address'))
    | d([]) | unique }}"

##dc_machine_ipv4_default: "{{ ansible_default_ipv4.address|d(ansible_all_ipv4_addresses | first }}"
dc_machine_ipv4: "{{ ansible_default_ipv4.address 
  | d(dc_machine_dns_ipv4) | d(dc_machine_address_list_ipv4 | first) }}"
dc_machine_ip: "{{ dc_machine_ipv4 }}"


############
## Ansible vars
############

host_key_checking: no

#ansible_user: root
ansible_user: "ansible"
ansible_ssh_user: "{{ ansible_user }}"
#ansible_debug_mode: yes

############
## common vars
############

bootstrap_user: "{{ ansible_user }}"

nfs_primary_host: diskstation01.johnson.int
nfs_primary_share: /volume1/data

nfs_backup_host: diskstation01.johnson.int
nfs_backup_share: /volume2/backups

nfs_media_host: "media01.johnson.int"
nfs_media_share: "/export/media"


#####################
## vaulted vars
#####################
ansible_password__linux: "{{ vault__ansible_password__linux | d('') }}"
ansible_password__windows: "{{ vault__ansible_password__windows | d('') }}"
ansible_ssh_private_key: "{{ vault__ansible_ssh_private_key | d('') }}"
ansible_ssh_public_key: "{{ vault__ansible_ssh_public_key | d('') }}"
admin_ssh_private_key: "{{ vault__admin_ssh_private_key | d('') }}"
admin_ssh_public_key: "{{ vault__admin_ssh_public_key | d('') }}"

docker_stack__cloudflare_email: "{{ vault__cloudflare_email | d('') }}"
docker_stack__cloudflare_apikey: "{{ vault__cloudflare_apikey | d('') }}"

sha512_hashed_root_password: "{{ vault__sha512_hashed_root_password | d('') }}"

bootstrap_user_password: "{{ vault__bootstrap_user_password | d('') }}"
bootstrap_linux_user_hash_seed: "{{ vault__bootstrap_linux_user_hash_seed | d('') }}"
bootstrap_linux_docker_user_hash_seed: "{{ vault__bootstrap_linux_docker_user_hash_seed | d('') }}"
vsphere_deploy_iso_hash_seed: "{{ vault__vsphere_deploy_iso_hash_seed | d('') }}"
sha512_hashed_packer_password: "{{ vault__sha512_hashed_packer_password | d('') }}"
harden_linux__os_grub_secure_boot: "{{ vault__harden_linux_os_grub_secure_boot | d('') }}"
bind_admin_password: "{{ vault__bind_admin_password | d('') }}"
bind_tsig_keys_secret: "{{ vault__bind_tsig_keys_secret | d('') }}"
awx_admin_password: "{{ vault__awx_admin_password | d('') }}"
veeam_agent_password: "{{ vault__veeam_agent_password | d('') }}"
git_ssh_private_keyfile: "{{ vault__git_ssh_private_keyfile | d('') }}"
git_ssh_public_keyfile: "{{ vault__git_ssh_public_keyfile | d('') }}"
openstack_ssh_public_key_file: "{{ vault__openstack_ssh_public_key_file | d('') }}"
smtp_relay_username: "{{ vault__smtp_relay_username | d('') }}"
smtp_relay_password: "{{ vault__smtp_relay_password | d('') }}"
bootstrap_postfix__recipient_target: "{{ vault__postfix_recipient_target | d('') }}"
registry_username: "{{ vault__registry_username | d('') }}"
registry_password: "{{ vault__registry_password | d('') }}"
registry_users: "{{ vault__registry_users | d('') }}"
admin_password: "{{ vault__admin_password | d('') }}"
mysql_root_password: "{{ vault__mysql_root_password | d('') }}"


postgres_user: "{{ vault__postgres_user | d('') }}"
postgres_password: "{{ vault__postgres_password }}"
pgadmin_password: "{{ vault__pgadmin_password }}"

vm_image_pwd: "{{ vault__vm_image_pwd }}"
vm_image_sudo_pwd: "{{ vault__vm_image_sudo_pwd }}"

pxe_vm_admin_pwd: "{{ vault__pxe_vm_admin_pwd }}"

bind_tsig_keys:
  - name: rndc-key
    algorithm: hmac-md5
    secret: "{{ bind_tsig_keys_secret }}"

############
## Ansible PING test exclude tags
############

##tags_excluded_from_ping_test: []
tags_excluded_from_ping_test:
  - bootstrap-ansible-user
  - deploy-vm
  - deploy-vsphere-dc
  - bootstrap-user
  - bootstrap-vmware-esxi

## ref: https://stackoverflow.com/questions/62701036/filter-out-elements-from-list-if-matching-multiple-patterns
run_tags_included_ping_test: "{{ ansible_run_tags | reject('match', '(' +  tags_excluded_from_ping_test | join('|') + ')') | list }}"
run_tags_excluded_ping_test: "{{ ansible_run_tags | intersect(tags_excluded_from_ping_test) }}"
ping_exclude: "{{ run_tags_excluded_ping_test|length==ansible_run_tags|length }}"

apply_os_groups_exclude: "{{ ping_exclude }}"

############
## Domain vars
############

external_root_domain: "dettonville.org"
internal_root_domain: "johnson.int"
#service_route_external_root_domain: "dettonville.org"
service_route_external_root_domain: "dettonville.cloud"
external_domain: "{{ external_root_domain }}"

control_planes:
  baremetal: "johnson.int"
  vmware: "dettonville.int"

control_plane_domain: "{{ control_planes.baremetal }}"
control_plane_domain_vm: "{{ control_planes.vmware }}"

internal_subdomain: "{{ dc_environment|d('') | upper }}"
internal_domain: "{{ internal_root_domain if internal_subdomain|d('')=='' else internal_subdomain + '.' + internal_root_domain }}"
#internal_parent_domain: "{{ ('.').join(internal_domain.split('.')[1::]) }}"

############
## Network vars
############
hostname_internal_domain: "{{ internal_domain }}"
hostname_name_full: "{{ inventory_hostname_short }}.{{ hostname_internal_domain }}"
hostname_name_short: "{{ inventory_hostname_short }}"

netbase__hostname: "{{ hostname_name_full if (inventory_hostname.split('.')[0] not in ['localhost','127']) else inventory_hostname }}"

## keep this out of all.yml for the molecule docker provisioner testing
#ansible_host: "{{ netbase__hostname }}"

############
## Gateway related vars
############

## ref: https://en.wikipedia.org/wiki/IPv4
## ref: http://www.steves-internet-guide.com/ipv4-basics/
## ref: https://docs.oracle.com/cd/E19683-01/806-4075/ipref-1/index.html
gateway_ipv4_subnet_1_2: "10.0"
gateway_ipv4: "{{ gateway_ipv4_subnet_1_2 }}.0.1"
gateway_ipv4_subnet: "{{ gateway_ipv4_subnet_1_2 }}.0.0"
gateway_ipv4_net_cidr: 8
gateway_ipv4_network_cidr: "{{ gateway_ipv4_subnet }}/{{ gateway_ipv4_net_cidr }}"
#gateway_ipv4_netmask: "255.0.0.0"
gateway_ipv4_netmask: "{{ gateway_ipv4_network_cidr | ansible.utils.ipaddr('netmask') }}"

############
## LDAP host vars
############
ldap_host_uid_number: "{{ (range(1000, 9999) | random(seed=inventory_hostname))|int + 50000 }}"
ldap_host_config:
  uid_number: "{{ ldap_host_uid_number }}"
  gid_number: 515

############
## LDAP vars
############

ldap_root_password: "{{ vault__ldap_root_password }}"
ldap_config_password: "{{ vault__ldap_config_password }}"
ldap_admin_password: "{{ vault__ldap_admin_password }}"
ldap_readonly_password: "{{ vault__ldap_readonly_password }}"

#ldap_internal_domain: "johnson.int"
ldap_internal_domain: "{{ internal_domain }}"

ldap_internal_domain_parts: |
  [
    {% for domain in ldap_internal_domain.split('.') %}
    "dc={{ domain }}",
    {% endfor %}
  ]

#ldap_internal_base_dn: "dc=johnson,dc=int"
#ldap_internal_base_dn: "dc={{ ldap_internal_domain.split('.')[-2] }},dc={{ ldap_internal_domain.split('.')[-1] }}"
ldap_internal_base_dn: "{{ ldap_internal_domain_parts | join(',') }}"

ldap_internal_user_search_base_dn: "ou=users,{{ ldap_internal_base_dn }}"
ldap_internal_search_user_dn: "cn=search,{{ ldap_internal_base_dn }}"
ldap_search_user_password: "{{ vault__ldap_base_users['search'].ssha_password }}"

ldap_internal_host: "ldap.{{ ldap_internal_domain }}:389"
ldap_internal_uri: "ldap://{{ ldap_internal_host }}"

ldap_admin_dn: "cn=admin,{{ ldap_internal_base_dn }}"
ldap_admin_pw: "{{ ldap_admin_password }}"

ldap_readonly_username: "readonly"

ldap_internal_organisation: "Johnsonville LLC"

ldap_external_organisation: "Dettonville LLC"
ldap_external_domain: "{{ external_domain }}"
ldap_external_base_dn: "dc=dettonville,dc=org"

ldap_internal:
  ldap_organisation: "{{ ldap_internal_organisation }}"
  ldap_domain: "{{ ldap_internal_domain }}"
  ldap_base_dn: "{{ ldap_internal_base_dn }}"
  ldap_admin_password: "{{ ldap_admin_password }}"
  ldap_readonly_user: "true"
  ldap_readonly_username: "readonly"
  ldap_readonly_password: "{{ ldap_readonly_password }}"
  ldap_config_password: "{{ ldap_config_password }}"

ldap_external:
  ldap_organisation: "{{ ldap_external_organisation }}"
  ldap_domain: "{{ ldap_external_domain }}"
  ldap_base_dn: "{{ ldap_external_base_dn }}"
  ldap_admin_password: "{{ ldap_admin_password }}"
  ldap_readonly_user: "true"
  ldap_readonly_username: "{{ ldap_readonly_username }}"
  ldap_readonly_password: "{{ ldap_readonly_password }}"
  ldap_config_password: "{{ ldap_config_password }}"

ldap_domain: "{{ ldap_internal_domain }}"
ldap_host: "ldap.{{ ldap_domain }}"
ldap_port: "389"
ldap_endpoint: "{{ ldap_host }}:{{ldap_port}}"
ldap_uri: "ldap://{{ ldap_endpoint }}"


############
## Samba (SMB) vars
############
samba_domain: JOHNSON.INT
samba_data_path: /data
samba_server: samba.johnson.int
samba_mail_domain: dettonville.org

# user to join domain
samba_join_user: admin
samba_join_passwd: "{{ ldap_admin_password }}"

### if smb_ldap_uri not empty, use ldap (to be defined in eg. "SMBDC" group)
##smb_ldap_admin_dn: "cn=admin,{{ ldap_internal.ldap_base_dn }}"
#smb_ldap_admin_dn: "{{ ldap_admin_dn }}"
#smb_ldap_admin_pw: "{{ ldap_admin_password }}"
#
#smb_ldap_uri: "ldap://ldap.{{ smb_domain }}"
##smb_ldap_uri: "ldap://{{ hostvars[groups['ldap_server'][0]]['inventory_hostname'].{{ smb_domain }}"
##smb_ldap_suffix: "dc=johnson,dc=int"
#smb_ldap_suffix: "dc={{ internal_domain.split('.')[-2] }},dc={{ internal_domain.split('.')[-1] }}"
#smb_ldap_group_suffix: 'ou=groups'
#smb_ldap_user_suffix: 'ou=users'
#smb_ldap_machine_suffix: 'ou=computers'
#smb_ldap_idmap_suffix: "ou=Idmap"
#smb_ldap_replication_sleep: 2000
#smb_ldap_ssl: 'off'
#smb_ldap_passwd_sync: 'Yes'
#
##smb_group_shares:
##  - name: "netlogon"
###    path: "/shares/netlogon"
##    path: "/srv/storage/netlogon"
##    cifs: True
##    smbparms:
##      guest ok: yes
##      read only: yes
##      valid users: "@smbadmin, @smbuser"
##      comment: "Netlogon service"
###      root preexec: "/my/script/mknetlogon %U %G %I"
#
#smb_group_shares:
#  - name: "data"
#    path: "/data"
#    cifs: True
#    smbparms:
#      valid users: "root @users @admin @smbuser @smbguest @smbadmin @administrator"
#      public: "yes"
#      guest ok: "yes"
#      force group: "smbguest"
#      force directory mode: "775"
#      force create mode: "775"
#      write list: "root @users @admin @smbuser @smbguest @smbadmin @administrator"
#      writeable: "yes"
#      create mode: "0777"
#      directory mode: "0777"

############
## Certificate Authority (CA) vars
############
ca_root:
  domainName: "{{ ca_root_cn }}"
  commonName: "{{ ca_root_cn }}"
  country: "US"
  state: "New York"
  locality: "New York"
  organization: "Dettonville LLC"
  organizationalUnit: "Research"
  email: "admin@dettonville.org"

ca_root_cn: "ca-root"

pki_caroot_cert: "{{ ca_root_cn }}.pem"
pki_caroot_key: "{{ ca_root_cn }}-key.pem"

trust_ca_cert_extension: "pem"


############
## email
############

email: "admin@dettonville.org"
email_from: "{{ email }}"
email_to: "{{ email }}"

############
## other
############

timezone: "America/New_York"

report_inventory_facts_git_ssh_private_key: "{{ vault__report_inventory_facts_git_ssh_private_key }}"
report_inventory_facts_git_repo_endpoint: "gitea.admin.dettonville.int:2222/infra/report-inventory-facts.git"
#report_inventory_facts_git_repo_endpoint: "gitea.admin.dettonville.int/infra/report-inventory-facts.git"
report_inventory_facts_git_repo_branch: "main"
report_inventory_facts_git_repo_url_scheme: "ssh"

#report_inventory_facts_inventory_source: "{{ dc_environment | upper }}/{{ os_family | d(ansible_os_family) | replace('dc_os_','') | d('unknown') | upper }}"
report_inventory_facts_inventory_source: "{{ dc_environment | upper }}"

#report_inventory_facts_git_repo_user: ansible
#report_inventory_facts_git_repo_url_scheme: "https"
#report_inventory_facts_git_repo_token: "fasdgasgdf"
